bug_report_id,bug_report_desc,bug_report_time
MODE-1882,"Getting a stream for the content of an external file accessed through federation throws an exception unless the binary value is present in the internal binary store.

The UrlBinaryValue created by FileSystemConnector (when getNode(""jcr:content"") is called on the nt:file node) has the total partition size rather than the file size.",2013/04/04 11:12 AM
MODE-1880,"Creating a federated node of primary type nt:file and adding binary content results in a file of zero length on disk.

May affect earlier versions - sorry, haven't checked.",2013/04/04 4:38 AM
MODE-1878,"Given the following CND file:

{code:none}
<jcr='http://www.jcp.org/jcr/1.0'>
<nt='http://www.jcp.org/jcr/nt/1.0'>
<inf='http://www.example.com/test'>

[inf:patient] > mix:versionable, nt:hierarchyNode
+ * (inf:patientId) COPY
+ * (inf:section) SNS COPY 
- inf:masterId (STRING) mandatory COPY
- inf:masterNs (STRING) mandatory COPY


/**
 * A section node is a named container of either episodes or documents.
 */
[inf:section] > nt:hierarchyNode orderable 
- inf:name (STRING) mandatory COPY
+ * (nt:hierarchyNode) SNS VERSION 

[inf:patientId]
- inf:name (STRING) mandatory COPY
{code}

the following algorithm should be allowed, but ModeShape incorrectly throws an exception:

# create an inf:patient node (with any mandatory properties)
# create one or more inf:section nodes (with any mandatory properties)
# save
# create another inf:section node (with any mandatory properties)

The last step causes the following exception:

{code}
javax.jcr.ItemExistsException: A node definition that allows same name siblings could not be found for the node ""{}section"" in workspace ""default""
	at org.modeshape.jcr.JcrSession$JcrPreSave.processAfterLocking(JcrSession.java:1914)
	at org.modeshape.jcr.cache.document.WritableSessionCache.runPreSaveAfterLocking(WritableSessionCache.java:479)
	at org.modeshape.jcr.cache.document.WritableSessionCache.save(WritableSessionCache.java:540)
	at org.modeshape.jcr.JcrSession.save(JcrSession.java:986)
	at ...
{code}

Note that the ""inf:patient"" node definition must have two residual child node definitions (one of type ""inf:patientId"" and the other of ""inf:section"") in order for this test to fail. If the ""inf:patientId"" child node definition is removed, then it works fine.
",2013/04/02 6:59 PM
MODE-1876,"When attempting to open a repository with +1M indexed nodes, with indexing rebuild-upon-startup=""if_missing"" (the default), an OOM is encountered. This is with ISPN eviction strategy=""LIRS"" max-entries=""50"", and Java heap  4GB. 

This appears to be the result of the logic in {{org.modeshape.jcr.RepositoryQueryManager.reindexContent(boolean, boolean)}}, which first reads the IDs of all 1M indexed node IDs into memory, and then crawls the entire repository in search of un-indexed nodes.

I suspect that {{rebuild-upon-startup=""always""}} would also fail, although I have not tried it.

Also, note that in line 214 of {{RepositoryQueryManager.java}}, the entire contents of {{excludedKeysFromIndexing}} is logged (to debug). With millions of indexed nodes, this results in millions of IDs printed to the log, which is not desirable.


",2013/04/02 12:12 PM
MODE-1871,"Just noticed this mis-typed message text

{code}
Caused by: javax.jcr.nodetype.ConstraintViolationException: The prrimary type of a node cannot be abstract, like ""inf:section""
	at org.modeshape.jcr.AbstractJcrNode.validateChildNodeDefinition(AbstractJcrNode.java:1173)
	at org.modeshape.jcr.AbstractJcrNode.addChildNode(AbstractJcrNode.java:1045)
	at org.modeshape.jcr.AbstractJcrNode.addNode(AbstractJcrNode.java:1001)
	at org.modeshape.jcr.AbstractJcrNode.addNode(AbstractJcrNode.java:931)
	at org.modeshape.jcr.AbstractJcrNode.addNode(AbstractJcrNode.java:107)
	at au.com.infomedix.jcrloadtest.jcrserver.utils.JaxbNodeTransformer.toJcrNode(JaxbNodeTransformer.java:98) [classes:]
{code}",2013/04/02 12:20 AM
MODE-1865,"I have the test case that can demonstrate it, to be attached in a pull request. Since Doc IDs are assigned at random, the test case tries to cause the bug to happen by creating enough documents to trigger the bug.

Things work just fine if the limit is set to > 1.

The root cause is the query hint isExists being pushed down to the LHS and RHS of JOINs.",2013/03/22 9:06 PM
MODE-1859,"I am trying to create and delete a repository as part of an automated build deployment step but it doesn't seem to be able to delete the repository again after creation. The first deletion fails. A second attempt succeeds but a subsequent attempt to create a new repository fails. Stopping and starting the JBoss server at this point reverts back to a stable state and you can create the repository again.
  
The create-repository script is:
 
{noformat}
connect
batch
/subsystem=modeshape/repository=cpf4:add()
run-batch
{noformat}
  
and the delete-repository script is:
 
{noformat}
connect
batch
/subsystem=modeshape/repository=cpf4:remove
run-batch
{noformat}
 
Short output of the problem errors is:
 
{noformat}
09:47:29,700 INFO  [org.jboss.as.controller] (management-handler-thread - 2) JBAS014774: Service status report
JBAS014775:    New missing/unsatisfied dependencies:
      service jboss.modeshape.cpf4.data (missing) dependents: [service jboss.modeshape.cpf4.binaries, service jboss.modeshape.cpf4.indexes]
      service jboss.modeshape.cpf4.repository (missing) dependents: [service jboss.modeshape.cpf4.repository.reference-factory]


Failed to execute batch: undefined
silvercat% diff standalone/configuration/standalone-modeshape.xml standalone/configuration/standalone-modeshape.xml.bak
231d230
<             <repository name=""cpf4""/>
silvercat% bin/jboss-cli.sh --file=../delete_repository.cli
#1 /subsystem=modeshape/repository=cpf4:remove
The batch executed successfully.
silvercat% diff standalone/configuration/standalone-modeshape.xml standalone/configuration/standalone-modeshape.xml.bak
silvercat% bin/jboss-cli.sh --file=../create_repository.cli
#1 /subsystem=modeshape/repository=cpf4:add()
09:47:56,379 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 4) JBAS014612: Operation (""add"") failed - address: ([
    (""subsystem"" => ""modeshape""),
    (""repository"" => ""cpf4"")
]): org.jboss.msc.service.DuplicateServiceException: Service jboss.modeshape.cpf4.repository.reference-factory is already registered
{noformat}


See forum article for more details",2013/03/18 8:27 AM
MODE-1854,"When creating nodes under explicit JTA transaction, it took much more time to save compared to non transaction.
When query functionality is disabled, the time spent in both cases are almost identical (In my real case, the transaction case even run a little bit faster than non transaction case). Therefore, I think it should be a Hibernate Search/Lucence integration issue.

*See attached profile data for details*
In the non-transaction case, there are *8* [Lucene Merge Thread] threads created.
However, in the transaction case, there are *89* [Lucene Merge Thread] threads created which almost ten times than previous case.",2013/03/13 5:58 AM
MODE-1853,"This seems to only happen in a clustered environment.

{code}
Caused by: javax.jcr.RepositoryException: java.lang.ClassCastException: org.infinispan.schematic.internal.document.ArrayEditor cannot be cast to org.infinispan.schematic.internal.document.BasicArray
[Server:server-one] 	at org.modeshape.jcr.JcrSession.save(JcrSession.java:1003) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	... 130 more
[Server:server-one] Caused by: java.lang.ClassCastException: org.infinispan.schematic.internal.document.ArrayEditor cannot be cast to org.infinispan.schematic.internal.document.BasicArray
[Server:server-one] 	at org.infinispan.schematic.internal.document.DocumentEditor.editable(DocumentEditor.java:588) [modeshape-schematic-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.infinispan.schematic.internal.document.DocumentEditor.getArray(DocumentEditor.java:210) [modeshape-schematic-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.modeshape.jcr.cache.document.DocumentTranslator.insertChildren(DocumentTranslator.java:849) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.modeshape.jcr.cache.document.DocumentTranslator.changeChildren(DocumentTranslator.java:768) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.modeshape.jcr.cache.document.WritableSessionCache.persistChanges(WritableSessionCache.java:985) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.modeshape.jcr.cache.document.WritableSessionCache.save(WritableSessionCache.java:543) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	at org.modeshape.jcr.JcrSession.save(JcrSession.java:986) [modeshape-jcr-3.2-SNAPSHOT.jar:3.2-SNAPSHOT]
[Server:server-one] 	... 131 more
[Server:server-one] 
{code}",2013/03/11 9:36 PM
MODE-1848,"The existing Image sequencer, among the list of accepted mime-types, incorrectly includes the ""tiff"" mime-type, that isn't really supported by the metadata extractor.

We should remove it from the list of supported mime-types for now.",2013/03/07 4:16 AM
MODE-1844,"Inside {{RepositoryCache}} we currently have a flag named {{initializingRepository}} which was introduced so that multiple repository nodes can be synchronized within a cluster.

This flag is set to true only the 1st time a repository starts up (i.e. does a fresh start). 

However, the following scenario may occur (in a local, non-clustered setup):
- a repository starts up for the 1st time. The logic within {{RepositoryCache#init}} writes the document which contains the init data directly to the persistent store (without any transactions)
- between {{RepositoryCache#init}} and the {{completeInitialization()}} method (which writes the {{REPOSITORY_INITIALIZED_AT_FIELD_NAME}} field) something unexpected occurs, causing the latter method to *never* be invoked and therefore the field never written
- the repository is restarted, but
 a) it sees the REPOSITORY_INFO_KEY document (which was written directly to the persistent store the 1st time)
 b) it *cannot find* the {{REPOSITORY_INITIALIZED_AT_FIELD_NAME}} field

In other words, it interprets the information as being in cluster and another node performing the initialization. Therefore, it enters into a waiting state (10 minutes) at the end of which it will crash because no one writes the {{REPOSITORY_INITIALIZED_AT_FIELD_NAME}} field.

I've seen this occur when working with the AS7 kit, in case an integration test fails during Repository init: unless I perform a ""mvn clean"" - to remove the stored documents from the FS, the repository hangs and eventually crashes on restart.
",2013/03/06 3:24 AM
MODE-1834,"enter folder, run:

mvn install
mvn exec:java -Djava.net.preferIPv4Stack=true 
pres 'l' and enter

My program is trying to create new workspace, and then there's a execption like that:

java.lang.IllegalStateException: This is a tx cache!
	at org.infinispan.context.TransactionalInvocationContextContainer.createInvocationContext(TransactionalInvocationContextContainer.java:80)
	at org.infinispan.context.TransactionalInvocationContextContainer.createInvocationContext(TransactionalInvocationContextContainer.java:75)
	at org.infinispan.CacheImpl.getInvocationContextForWrite(CacheImpl.java:418)
	at org.infinispan.CacheImpl.lock(CacheImpl.java:502)
	at org.infinispan.DecoratedCache.lock(DecoratedCache.java:134)
	at org.infinispan.schematic.internal.SchematicEntryProxy.getDeltaValueForWrite(SchematicEntryProxy.java:173)
	at org.infinispan.schematic.internal.SchematicEntryProxy.editDocumentContent(SchematicEntryProxy.java:287)
	at org.modeshape.jcr.cache.RepositoryCache.refreshWorkspaces(RepositoryCache.java:408)
	at org.modeshape.jcr.cache.RepositoryCache.createWorkspace(RepositoryCache.java:707)
	at org.modeshape.jcr.JcrWorkspace.createWorkspace(JcrWorkspace.java:662)
	at org.modeshape.example.filesystem.ModeShapeExample.createWorkspaceIfNotExists(ModeShapeExample.java:129)
	at org.modeshape.example.filesystem.ModeShapeExample.main(ModeShapeExample.java:70)



and configuration is for sure good - Randall Hauch wrote it himself.
If you comment:

createWorkspaceIfNotExists(repository,""1142"");
session = repository.login(""1142"");

and put:

session = repository.login(""default"");


everything works great
",2013/02/28 6:28 AM
MODE-1830,"When running in cluster mode, no matter what kind of storage is used (file system, infinispan), modeshape instance doesn't see changes made by other instances until it writes something to storage.

Steps to reproduce:


Download attachment from post:
https://community.jboss.org/message/798947#798947

run main from:
org.modeshape.example.filesystem.ModeShapeExample

with parameters:
-Djava.net.PrefferIPv4Stack=true -Dlog4j.configFile=log4j.properties

Start two instances, in separate console windows.

pres 'l' then enter in both consoles, you should see that there are only two inintial nodes.

add some nodes in  window 1, by pressing ie. 'x' then enter

switch to window 2, pres l then enter for listing, and you still see only 2 nodes.

press 'x' in window 2, and it suddenly sees changes from window 1 + new node, but window 1 doesn't see changes made in window 2.

 ",2013/02/26 9:00 AM
MODE-1821,"Refer to: https://community.jboss.org/thread/221483?tstart=0 for more background.

Essentially two threads trying to write to a node that doesn't allow SNS would succeed and SNS nodes would be created which results in a CVE when read (since it can't determine the proper type for the node anymore).

Test-case created in my github repository with the test showing the failure. It works properly when serialized but not so when running in parallel.

https://github.com/panghy/modeshape/commit/4d268ee8369a052fc329e72dc9c4ac33e258e211",2013/02/19 9:50 PM
MODE-1819,"*_UPDATED: This is not restricted to EJB scenarios, and can be replicated in a JavaSE environment when using a real transaction manager and user transactions. The title and description were updated to reflect this._*

The following bit of code works when not using user transactions, but it fails when using a user transaction:

{code:java}
    public static void moveDocument(Session session, String nodeName)
                      throws Exception
    {
        Node section = session.getRootNode().addNode(nodeName, ""inf:section"");
        section.setProperty(""inf:name"", nodeName);

        section.addNode(""temppath"", ""inf:document"");
        session.save();

        String srcAbsPath  = ""/""+nodeName+""/temppath"";
        String destAbsPath = ""/""+nodeName+""/20130104"";

        session.move(srcAbsPath, destAbsPath);
        
        NodeIterator nitr = section.getNodes();

        System.err.println(""Child Nodes of ""+nodeName+"" are:"");
        while(nitr.hasNext())
        {
            Node n = nitr.nextNode();
            System.err.println(""  Node: "" + n.getName());
        }
        session.save();
    }
{code}

Output from the three cases is:

{code}
12:44:40,498 ERROR [stderr] (http--127.0.0.1-8080-2) Child Nodes of TestOutOfContainer are:
12:44:40,499 ERROR [stderr] (http--127.0.0.1-8080-2)   Node: 20130104
12:44:40,642 ERROR [stderr] (http--127.0.0.1-8080-2) Child Nodes of TestInEjbNoTx are:
12:44:40,643 ERROR [stderr] (http--127.0.0.1-8080-2)   Node: 20130104
12:44:40,717 ERROR [stderr] (http--127.0.0.1-8080-2) Child Nodes of TestInEjbWithTx are:
12:44:40,717 ERROR [stderr] (http--127.0.0.1-8080-2)   Node: temppath
{code}

which looks like the move has not occurred or is not visible within the current transaction when present. 

In the third case the session.save() call results in the following exception:

{code}
javax.jcr.InvalidItemStateException: This session tried to save changes to node with key 'Cannot locate child node: 81513257505d641ceb9861-4917-44b1-972f-c444331ee943 within parent: 81513257505d64/', but it was removed by another session.
	at org.modeshape.jcr.JcrSession.save(JcrSession.java:985)
	at au.com.infomedix.modeshapetest.AppTest.moveDocument(AppTest.java:158)
	at au.com.infomedix.modeshapetest.AppBean.testMethodWithTx(AppBean.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptorFactory$ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptorFactory.java:72)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:374)
	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:127)
	at org.jboss.as.weld.ejb.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:135)
	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.WeavedInterceptor.processInvocation(WeavedInterceptor.java:53)
	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:36)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:82)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:21)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:53)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:228)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:304)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:190)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:59)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:32)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.as.ee.component.TCCLInterceptor.processInvocation(TCCLInterceptor.java:45)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:165)
	at org.jboss.as.ee.component.ViewDescription$1.processInvocation(ViewDescription.java:173)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:288)
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:61)
	at org.jboss.as.ee.component.ProxyInvocationHandler.invoke(ProxyInvocationHandler.java:72)
	at au.com.infomedix.modeshapetest.AppBean$$$view1.testMethodWithTx(Unknown Source)
	at au.com.infomedix.modeshapetest.AppTest.testSessionMoveDocumentInEJBWithTx(AppTest.java:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
	at org.jboss.arquillian.junit.Arquillian$6$1.invoke(Arquillian.java:270)
	at org.jboss.arquillian.container.test.impl.execution.LocalTestExecuter.execute(LocalTestExecuter.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:115)
	at org.jboss.arquillian.core.impl.EventImpl.fire(EventImpl.java:67)
	at org.jboss.arquillian.container.test.impl.execution.ContainerTestExecuter.execute(ContainerTestExecuter.java:38)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.invokeObservers(EventContextImpl.java:99)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:81)
	at org.jboss.arquillian.test.impl.TestContextHandler.createTestContext(TestContextHandler.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.test.impl.TestContextHandler.createClassContext(TestContextHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.test.impl.TestContextHandler.createSuiteContext(TestContextHandler.java:60)
	at sun.reflect.GeneratedMethodAccessor61.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.arquillian.core.impl.ObserverImpl.invoke(ObserverImpl.java:94)
	at org.jboss.arquillian.core.impl.EventContextImpl.proceed(EventContextImpl.java:88)
	at org.jboss.arquillian.core.impl.ManagerImpl.fire(ManagerImpl.java:135)
	at org.jboss.arquillian.test.impl.EventTestRunnerAdaptor.test(EventTestRunnerAdaptor.java:111)
	at org.jboss.arquillian.junit.Arquillian$6.evaluate(Arquillian.java:263)
	at org.jboss.arquillian.junit.Arquillian$4.evaluate(Arquillian.java:226)
	at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:314)
	at org.jboss.arquillian.junit.Arquillian.access$100(Arquillian.java:46)
	at org.jboss.arquillian.junit.Arquillian$5.evaluate(Arquillian.java:240)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
	at org.jboss.arquillian.junit.Arquillian$2.evaluate(Arquillian.java:185)
	at org.jboss.arquillian.junit.Arquillian.multiExecute(Arquillian.java:314)
	at org.jboss.arquillian.junit.Arquillian.access$100(Arquillian.java:46)
	at org.jboss.arquillian.junit.Arquillian$3.evaluate(Arquillian.java:199)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.jboss.arquillian.junit.Arquillian.run(Arquillian.java:147)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.jboss.arquillian.junit.container.JUnitTestRunner.execute(JUnitTestRunner.java:65)
	at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.executeTest(ServletTestRunner.java:160)
	at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.execute(ServletTestRunner.java:126)
	at org.jboss.arquillian.protocol.servlet.runner.ServletTestRunner.doGet(ServletTestRunner.java:90)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:734)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:847)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248)
	at org.jboss.weld.servlet.ConversationPropagationFilter.doFilter(ConversationPropagationFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:280)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161)
	at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.modeshape.jcr.cache.NodeNotFoundInParentException: Cannot locate child node: 81513257505d641ceb9861-4917-44b1-972f-c444331ee943 within parent: 81513257505d64/
	at org.modeshape.jcr.cache.document.LazyCachedNode.parentReferenceToSelf(LazyCachedNode.java:214)
	at org.modeshape.jcr.cache.document.LazyCachedNode.getSegment(LazyCachedNode.java:252)
	at org.modeshape.jcr.cache.document.LazyCachedNode.getPath(LazyCachedNode.java:278)
	at org.modeshape.jcr.cache.PathCache.getPath(PathCache.java:49)
	at org.modeshape.jcr.cache.document.LazyCachedNode.getPath(LazyCachedNode.java:277)
	at org.modeshape.jcr.cache.PathCache.getPath(PathCache.java:49)
	at org.modeshape.jcr.cache.document.WritableSessionCache.persistChanges(WritableSessionCache.java:974)
	at org.modeshape.jcr.cache.document.WritableSessionCache.save(WritableSessionCache.java:517)
	at org.modeshape.jcr.JcrSession.save(JcrSession.java:978)
	... 141 more
{code}

I'll attach an arquillian test case that shows the problem.
",2013/02/17 8:54 PM
MODE-1816,"Create node using POST method fails when request data contains jcr:mixinTypes=""..."" after attributes it declares. Below is sample curl which fails, quark:contact doesn't allow to insert any attributes, so quarkmix:contactPostalAddress must be mixed to store street name:

{noformat}
curl -XPOST -HContent-type:application/json --data ""{\""quark:type\"":\""POSTAL_ADDRESS\"",\""jcr:title\"":\""Address\"",\""quark:street\"":\""The Street\"",\""jcr:mixinTypes\"":[\""quarkmix:contactPostalAddress\""],\""jcr:primaryType\"":\""quark:contact\""}"" http://localhost:8080/modeshape-rest/myrepo/default/items/foo
{noformat}

And valid one - same except jcr:mixinTypes has been moved before mentioned attributes it declares - creates node without any problem:

{noformat}
curl -XPOST -HContent-type:application/json --data ""{\""quark:type\"":\""POSTAL_ADDRESS\"",\""jcr:title\"":\""Address\"",\""jcr:mixinTypes\"":[\""quarkmix:contactPostalAddress\""],\""quark:street\"":\""The Street\"",\""jcr:primaryType\"":\""quark:contact\""}"" http://localhost:8080/modeshape-rest/myrepo/default/items/foo
{noformat}

Mixin is defined as:

{noformat}
[quarkmix:contactPostalAddress] mixin
	- quark:street (STRING) COPY
	- quark:streetNumber (STRING) COPY
	- quark:apartment (STRING) COPY
	- quark:zipCode (STRING) COPY
	- quark:city (STRING) COPY
	- quark:province (STRING) COPY
	- quark:country (STRING) COPY
{noformat}

Best regards.",2013/02/14 9:37 AM
MODE-1807,"When attempting to register the attached CND file, the following exception is raised:

{code}

java.lang.NullPointerException
	at org.modeshape.jcr.RepositoryNodeTypeManager$NodeTypes.validate(RepositoryNodeTypeManager.java:2524)
	at org.modeshape.jcr.RepositoryNodeTypeManager$NodeTypes.validate(RepositoryNodeTypeManager.java:2420)
	at org.modeshape.jcr.RepositoryNodeTypeManager.registerNodeTypes(RepositoryNodeTypeManager.java:500)
	at org.modeshape.jcr.JcrNodeTypeManager.registerNodeTypes(JcrNodeTypeManager.java:519)
	at org.modeshape.jcr.JcrNodeTypeManager.registerNodeTypes(JcrNodeTypeManager.java:898)
	at org.modeshape.jcr.JcrRepositoryTest.shouldRegisterCustomCNDFile(JcrRepositoryTest.java:824)
{code}",2013/02/12 5:49 AM
MODE-1806,"When creating external projections (either via initial configuration or via the {{FederationManager}}), these are stored in an in-memory map inside the {{Connectors}} class. These mappings are then persisted in the repository (in the /jcr:system) only when the repository shuts down. 

On the other hand, federated segments are created and stored on the federated nodes immediately after the {{createProjection}} call.  

This means that for a repository that has not been ""orderly shutdown"", the following corruption happens:
* there are federated nodes (internal nodes) in the repository which have federated segments in their document structure
* there aren't any projections stored in the system area

The above 2 together with the fix for MODE-1798 means that when a repository restarts, an exception will be thrown.

We should fix both those problems:
* projections should be stored in the system area immediately after the {{createProjection}} call
* when attempting to create a preconfigured projection, if there is an internal or federated node at that path, only a warning should be logged.

",2013/02/12 2:01 AM
MODE-1805,"It does not appear that queries/indexing can be disabled in the AS7 kit. The JSON Schema allows this via the ""query/enabled=false"" behavior, but this is not currently an option in the AS7 subsystem schema.",2013/02/11 6:07 PM
MODE-1802,"Subject for issue:
{code}
Node root = session.getNode(""/fs"");
Node folder1 = root.addNode(""test"", ""nt:folder"");
System.out.println(folder1.getIdentifier());
session.save();
Node folder2 = root.getNode(""test"");
System.out.println(folder2.getIdentifier());
{code}

Result:
{quote}
94dd693eaa9871//test
94dd693eaa9871/test
{quote}

Execution of issue code on current state of project:
{code}
Caused by: java.lang.NullPointerException
	at org.modeshape.connector.filesystem.FileSystemConnector.idFor(FileSystemConnector.java:308)
	at org.modeshape.connector.filesystem.FileSystemConnector.updateDocument(FileSystemConnector.java:557)
{code}
",2013/02/08 12:19 PM
MODE-1795,"When importing a XML file (using the Session.importXML() method) that declares a default namespace (xmlns=""URI""), you get the following error:

{code}
    javax.jcr.RepositoryException: Prefix  is already permanently mapped
{code}

This makes sense since JCR always creates a JCR namespace identified by the empty prefix. And according to the JCR specs:

{quote}
For each XML namespace declaration with prefix P and URI U:
a. If the namespace registry already contains a mapping of some prefix P' to U (where P' may or may not be equal to P) then the namespace registry is left unchanged.""
{quote}

The code should discover that the default namespace does not match a registered namespace and it should therefore register it and use this for the XML default namespace rather than throw the exception.",2013/02/06 1:09 PM
MODE-1794,"Infinispan is attempting to serialize the {{InfinispanBinaryStore}} instance, when it should not.

{code:none}
15:49:01,853 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@5d15e8
    in object org.infinispan.commands.read.MapReduceCommand@887982c9
15:53:59,558 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@1600256
    in object org.infinispan.commands.read.MapReduceCommand@e2e2578
15:58:59,555 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@6fe8a8
    in object org.infinispan.commands.read.MapReduceCommand@d194cc81
16:03:59,556 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@c9a1b0
    in object org.infinispan.commands.read.MapReduceCommand@3b6daf71
16:08:59,555 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@14e4f10
    in object org.infinispan.commands.read.MapReduceCommand@db86e950
16:13:59,554 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@d6882a
    in object org.infinispan.commands.read.MapReduceCommand@826f1a15
16:18:59,554 ERROR [JcrRepository] Error during background garbage collection: Could not invoke MapReduce task on remote nodes
org.infinispan.CacheException: Could not invoke MapReduce task on remote nodes
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:244)
    at org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore.removeValuesUnusedLongerThan(InfinispanBinaryStore.java:321)
    at org.modeshape.jcr.JcrRepository$RunningState.cleanUpBinaryValues(JcrRepository.java:1665)
    at org.modeshape.jcr.JcrRepository.cleanUp(JcrRepository.java:880)
    at org.modeshape.jcr.ModeShapeEngine$GarbageCollectionTask.run(ModeShapeEngine.java:135)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
    at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.infinispan.CacheException: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.util.Util.rewrapAsCacheException(Util.java:524)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:168)
    at org.infinispan.remoting.transport.jgroups.JGroupsTransport.invokeRemotely(JGroupsTransport.java:478)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:148)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:169)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:219)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:206)
    at org.infinispan.remoting.rpc.RpcManagerImpl.invokeRemotely(RpcManagerImpl.java:201)
    at org.infinispan.distexec.mapreduce.MapReduceTask.execute(MapReduceTask.java:240)
    ... 13 more
Caused by: java.lang.RuntimeException: Failure to marshal argument(s)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.marshallCall(CommandAwareRpcDispatcher.java:247)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.processSingleCall(CommandAwareRpcDispatcher.java:262)
    at org.infinispan.remoting.transport.jgroups.CommandAwareRpcDispatcher.invokeRemoteCommand(CommandAwareRpcDispatcher.java:163)
    ... 20 more
Caused by: org.infinispan.marshall.NotSerializableException: org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore
Caused by: an exception which occurred:
    in field this$0
    in object org.modeshape.jcr.value.binary.infinispan.InfinispanBinaryStore$2@1eb9805
    in object org.infinispan.commands.read.MapReduceCommand@ca5521a1
{code}",2013/02/06 11:21 AM
MODE-1790,"It looks like the temporary file (used for hashing to get an identifier) is not cleaned up in the InfinispanBinaryStore:

https://github.com/ModeShape/modeshape/blob/master/modeshape-jcr/src/main/java/org/modeshape/jcr/value/binary/infinispan/InfinispanBinaryStore.java#L192

(Or, if it is cleaned up, it isn't until the process terminates, which is undesirable too)",2013/02/05 10:49 AM
MODE-1786,"
repository-config-schema.json has section for storage:
{code}
	...
 ""binaryStorage"" : {

	...
        ""url"" : {
                 ""type"" : ""string"",
                 ""description"" : ""The URL to be used to establish the database connection."",
                 ""required"" : true,
                },
        },
{code}
But in org.modeshape.jcr.RepositoryConfiguration was read ""connectionURL"" param:
{code}

 		public static final String CONNECTION_URL = ""connectionURL"";
		...

		public AbstractBinaryStore getBinaryStore() throws Exception {
	          ...
	            } else if (type.equalsIgnoreCase(""database"")) {
                String driverClass = binaryStorage.getString(FieldName.JDBC_DRIVER_CLASS);
                String connectionURL = binaryStorage.getString(FieldName.CONNECTION_URL);
		...
		
{code}

So as result :
{code}
javax.jcr.RepositoryException: Error while starting 'FederatedRepository' repository: org.modeshape.jcr.value.binary.BinaryStoreException: java.sql.SQLException: The url cannot be null
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:613)
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:580)
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:149)
	at org.modeshape.example.filesystem.ModeShapeExample.main(ModeShapeExample.java:64)
Caused by: java.lang.RuntimeException: org.modeshape.jcr.value.binary.BinaryStoreException: java.sql.SQLException: The url cannot be null
	at org.modeshape.jcr.value.binary.DatabaseBinaryStore.start(DatabaseBinaryStore.java:222)
	at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:1071)
	at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:966)
	at org.modeshape.jcr.JcrRepository.doStart(JcrRepository.java:354)
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:611)
	... 3 more
Caused by: org.modeshape.jcr.value.binary.BinaryStoreException: java.sql.SQLException: The url cannot be null
	at org.modeshape.jcr.value.binary.DatabaseBinaryStore.connect(DatabaseBinaryStore.java:332)Shutting down engine ...

	at org.modeshape.jcr.value.binary.DatabaseBinaryStore.start(DatabaseBinaryStore.java:208)
	... 7 more
Caused by: java.sql.SQLException: The url cannot be null
	at java.sql.DriverManager.getConnection(DriverManager.java:554)
	at java.sql.DriverManager.getConnection(DriverManager.java:185)
	at org.modeshape.jcr.value.binary.DatabaseBinaryStore.connect(DatabaseBinaryStore.java:330)
	... 8 more
{code}
",2013/02/04 9:00 AM
MODE-1785,"We currently have 2 options for the query {{rebuildUponStartup}} setting: {{always}} and {{if_missing}}.

It seems that if set to {{always}}, with the default index storage (RAM), when the repository re-starts the indexes aren't rebuilt.",2013/02/04 5:17 AM
MODE-1783,"Property constraints are not checked every time Node.setProperty is called. It seems that it is only checked if the property did not exist already.

This leads to nodes that violate property constraints being persisted. But when the property is retrieved at a later point, it then throws ConstraintViolationException.",2013/02/01 7:23 AM
MODE-1772,"UPDATE: I've changed the title to reflect the actual problem. Creating a node within a projection causes the node identifier to be a generated UUID. In this case, the file system connector is not capable of handling such nodes. IMO, the generation of the node key should be delegated to the DocumentStore (though this is a relatively big change).

Here is Ivan's original description:
----

I went to modeshape-examples/modeshape-filesystem-store-example and configured example with federation and here is how  https://github.com/vasilievip/modeshape-examples/tree/federation2

When I run main method - I see issue #1 which is configuration parsing and known issue: see MODE-1765
{code}
javax.jcr.RepositoryException: Error while starting 'FederatedRepository' repository: No match found
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:613)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:580)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:149)
          at org.modeshape.example.filesystem.ModeShapeExample.main(ModeShapeExample.java:59)
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
          at java.lang.reflect.Method.invoke(Method.java:601)
          at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
Caused by: java.lang.IllegalStateException: No match found
          at java.util.regex.Matcher.group(Matcher.java:485)
          at org.modeshape.jcr.RepositoryConfiguration$Federation$ProjectionConfiguration.<init>(RepositoryConfiguration.java:2004)
          at org.modeshape.jcr.RepositoryConfiguration$Federation.getProjections(RepositoryConfiguration.java:1969)
          at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:1053)
          at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:966)
          at org.modeshape.jcr.JcrRepository.doStart(JcrRepository.java:354)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:611)
          ... 8 more
{code}
When I run unit test - I see issue #2 which is UUID in filestore and subject for this bug.",2013/01/23 3:54 PM
MODE-1765,"I installed modeshape-3.1.0.Final-jbossas-71-dist.zip into an AS I installed from jboss-as-7.1.1.Final.zip. I ran the server using this command: 

./standalone.sh -c=standalone-modeshape.xml.

Here is the first error from the log:

13:23:26,497 ERROR [org.modeshape.jcr.JcrRepositoryFactory] (MSC service thread 1-1) The 'preconfiguredRepository' repository in the ModeShape engine in JNDI at 'jcr' is not running or has been shutdown.

I will attach logs.",2013/01/21 3:16 PM
MODE-1762,"Some sequencers (e.g. like the image sequencer) may not always be closing the binary value's InputStream, resulting in an unreleased read lock on the binary value.",2013/01/21 11:16 AM
MODE-1760,"In modeshape-jca there is a dependency on ironjacamar-deployers-fungal. Test scoped dependencies should not be needed to compile standard code in src/main/java - if this dependency is commented out then a lot of code modeshape-jca/src/main/java/org/modeshape/jca/ fails to compile.

Should 

{code:xml}
        <dependency>
            <groupId>org.jboss.spec.javax.resource</groupId>
            <artifactId>jboss-connector-api_1.6_spec</artifactId>
            <version>1.0.1.Final</version>
        </dependency>
{code}

be added as an explicit dependency?
",2013/01/19 5:03 PM
MODE-1746,"It is possible for multiple threads to deadlock after concurrently create a session, modify several nodes, and save the session. For example, assume that two nodes, A and B, exist. Then if thread 1 sets a property on A then a property on B, while thread 2 uses its session to set a property on B then a property on A, the two threads will deadlock. If Infinispan is configured with deadlock detection, then after the configured amount of time (e.g., 10 seconds is the default) one of the threads will fail with a {{org.infinispan.util.concurrent.TimeoutException}} while the other may succeed.",2013/01/08 1:46 PM
MODE-1745,"We are still having some issues. I am not sure if it is related to the previous issue or not. The problem occurs when we start up two separate servers. When the second server comes up, it appears that the repository from the first server gets corrupted. I have attached another sample application that will exhibit the behavior. The class for the new sample app is com.pb.spring.Main and it takes an integer as a command line input as well as setting up the aspectj weaver. The main difference here is that we are using the atomikos transaction manager.

To run this, just execute one instance with ‘1’ as the command line value and let it run up until it starts looping and reading/creating nodes. Then start the second instance using ‘2’ as the command line value. It will need to run for a couple of minutes before you see the issue. If you look at the time stamps you can see that it appears to be happening on transactional boundaries.

Here is an example command line without the classpath since it is pretty long:

java -XX:MaxPermSize=192m -javaagent:aspectjweaver-1.7.1.jar -classpath ... com.pb.spring.Main 1

Here is the stack trace we are seeing:

{code}
Exception in thread ""main"" java.lang.NullPointerException
                at org.modeshape.jcr.JcrSession.cachedNode(JcrSession.java:524)
                at org.modeshape.jcr.JcrSession.node(JcrSession.java:547)
                at org.modeshape.jcr.AbstractJcrNode.getNode(AbstractJcrNode.java:772)
                at org.modeshape.jcr.AbstractJcrNode.getNode(AbstractJcrNode.java:107)
                at com.pb.spring.Main.readNode(Main.java:40)
                at com.pb.spring.Main.main(Main.java:82)
                at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
                at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
                at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
                at java.lang.reflect.Method.invoke(Method.java:597)
                at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
{code}
",2013/01/08 10:32 AM
MODE-1740,"I see NullPointerException during creation of workspace entity. After debugging I found that apache provided bean validation library used by hibernate on Websphere 8. Exception occurred on preInsert() phase, when BeanValidationEventListener#validate was called.
This exception happends because org.apache.bval.jsr303.GroupValidationContextImpl uses HashMap to execute some validation operations and WorksapaceEntity has hashCode() implementation which assumes that id is not null:
{code}return id.hashCode(){code},  but on preInsert phase id is null.
I see that NodeEntity has ID declared as ""long"" primitive, but WorkspaceEntity, NamespaceEntity and ChangeLogEntity has ID declared as ""Long"" wrapper.
Also there is DNA_CHANGELOG, DNA_WORKSPACES and DNA_NAMESPACES old table names.",2012/12/20 11:46 AM
MODE-1734,"When operating concurrent clients that create lots of nodes, not all nodes are properly saved. There are no problems when using a single client.

We have a created a test web app that receives json as data and saves that json as nodes and node properties. We have reproduced the problem both with infinspan configured with file cache and berkeley db cache. We have reproduced it both with infinispan configured to use OPTIMISTIC and PESSIMISTIC locking mode with a berkeley db cache.

See the comments for the details.",2012/12/10 4:16 AM
MODE-1731,"Under certain situations, {{AbstractJcrNode}} attempts to create a {{JcrSingleValuedProperty}} object when the property definition is multi-valued.

I ran into this when implementing the Git connector. The {{FederatedDocumentWriter.addProperty(...)}} methods that take an array of values will create an {{SingleValuedProperty}} object even when there is only one value; this is due to the assertions and documentation in the {{MultiValuedProperty}} class that there must be at least 2 values. So when a connector adds a property that has a multi-valued definition but only a single value, a {{SingleValuedProperty}} is used. Then, in {{AbstractJcrNode.createJcrProperty(...)}} method, the number of values is used to determine whether to create a {{JcrSingleValuedProperty}} or a {{JcrMultiValuedProperty}}, even though that same method has already determined the applicable property definition that knows whether it is multi-valued. 

(Note that the property definition is found by looking at the number of values. If the property is single-valued and only a multi-valued definition can be found, then the multi-valued definition will be used.)

Therefore, the {{AbstractJcrNode.createJcrProperty(...)}} method should use the property definition's knowledge about being multi-valued to determine whether to create a {{JcrSingleValuedProperty}} object or {{JcrMultiValuedProperty}} object.

I suspect this hasn't really been a problem because with 3.0.0 and 3.0.1, the values stored in Infinispan always matched the multiplicity of the definition. However, in 3.1 we now have connectors that are producing their own {{Document}} representations, and the multiplicity of the property may not match that of the definition.",2012/12/05 3:03 PM
MODE-1722,"Create a CND file with the following:

{code:none}
[myNodeType] > nt:hierarchyNode
 - path (uri) mandatory
{code}

Then go check the required type of the ""path"" property of this new node type (e.g. using {{modeshape-rest}}). The type of the ""path"" property is of ""String"" and not ""URI"".

A brief browse through the source of {{CndImporter.parsePropertyType}} method reveals the following:

{{PropertyTypeUtil.jcrPropertyTypeFor}} converts URI type into STRING, whereas the reverse conversion method {{modePropertyTypeFor}} converts it correctly from JCR's URI to Modeshape's URI enum value.

This seems like the method has not been updated to support the new ""URI"" property type for JCR 2.0.",2012/11/29 12:04 PM
MODE-1717,"Initialisation of a new repository seems to fail if the initialisation occurs within a running transaction. Running 
{noformat}
mvn clean test -Dtest=org.modeshape.test.integration.StatelessRepositoryProviderIntegrationTest
{noformat}
 in integration/modeshape-jbossas-integration-tests will show the problem. 

There are more details in the linked forum article.
",2012/11/22 6:15 AM
MODE-1693,"A JDBC configuration without transactions configured fails with a null pointer exception. 

{code}
javax.jcr.RepositoryException: Error while starting 'DataRepository' repository: null
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:611)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:568)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:147)
          at au.com.infomedix.notransaction.TransactionTest.simpleAccess(TransactionTest.java:76)
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
          at java.lang.reflect.Method.invoke(Method.java:597)
          at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
          at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
          at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
          at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
          at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
          at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
          at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
          at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
          at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
          at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
          at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
          at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
          at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
          at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.NullPointerException
          at org.modeshape.jcr.txn.SynchronizedTransactions.begin(SynchronizedTransactions.java:60)
          at org.modeshape.jcr.cache.document.WritableSessionCache.save(WritableSessionCache.java:362)
          at org.modeshape.jcr.cache.document.WritableSessionCache.save(WritableSessionCache.java:337)
          at org.modeshape.jcr.cache.RepositoryCache.<init>(RepositoryCache.java:174)
          at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:1069)
          at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:960)
          at org.modeshape.jcr.JcrRepository.doStart(JcrRepository.java:352)
          at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:609)
          ... 29 more{code}

See the forum reference for details and a test case.
",2012/10/29 7:55 AM
MODE-1691,"The repository configuration JSON Schema defines a field for only the JNDI name of the JDBC DataSource, even though the RepositoryConfiguration actually allows alternative properties for the driver classname, username, url, and password.

This should be an easy fix.",2012/10/24 12:57 PM
MODE-1690,"When AS7 is configured with a custom authentication provider, upon server start-up the provider seems to be ignored(removed) from the XML configuration.",2012/10/23 10:35 AM
MODE-1687,"When importing CND files into a repository at startup, any custom namespaces are ignored from those files.",2012/10/22 10:47 AM
MODE-1685,"I have the following simple test case for this problem:

1) Create NodeA
2) Create NodeB
3) Create NodeB/Rel with reference property pointing to Node A
4) session.save()
5) Delete NodeB (should delete all its children + refs?)
6) session.save()
7) Delete NodeA (should be ok to do if B was deleted)
8) session.save() ==> results in Referential Integrity Error

It seems that the reference from the property in NodeB/Rel is not deleted when NodeB is deleted.",2012/10/18 12:59 PM
MODE-1679,Trying to do a JOIN using a multi-value reference property as part of the join condition.  Will attach a Maven project that illustrates the problem.,2012/10/15 2:28 PM
MODE-1674,"The repository restore feature does not appear to be working. The existing {{RepositoryRestoreTest}} isn't helping, because it does not assert anything meaningful in the restore repository, on the restored content.

This can be reproduced with the following steps:
* change RepositoryRestoreTest so that some simple data structure is used (e.g. io/cars-system-view.xml)
* after checking that the restore operation did not have any problems, assert that the actual content is in the repository/ws on which the restore was performed",2012/10/12 3:37 AM
MODE-1670,"The changes made for MODE-1613, seem to be causing a memory leak inside LazyCachedNode causing nodes from the workspace cache to not be collected by the GC.

One possible explanation is the following: the {{parentReferenceToSelfParent}} is a {{CachedNode}} reference, which, in the case of a parent - child relationship, would cause the parent to still be referenceable even after being evicted/removed from the cache, as long as at least one of the referencing children is still cached.",2012/10/09 4:08 AM
MODE-1665,"AS7-4784 committed a month ago has removed the method setAlternates (amongst others) from the Builder class in {{controller/src/main/java/org/jboss/as/controller/SimpleListAttributeDefinition.java}} and this method is referenced from {{deploy/jbossas/modeshape-jbossas-subsystem/src/main/java/org/modeshape/jboss/subsystem/MappedListAttributeDefinition.java}}. 

After having built/installed the latest jboss-as-7.2.0.Alpha1-SNAPSHOT, building ModeShape with the ""as72"" profile using

{code}
mvn clean install -s settings.xml -Pintegration,as72
{code} 
 
results in a compilation error:
 
{code}
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:2.3.2:compile (default-compile) on project modeshape-jbossas-subsystem: Compilation failure
[ERROR] /users/bwallis/InfoMedix/JBoss/ModeShape/workspace/modeshape-src/modeshape/deploy/jbossas/modeshape-jbossas-subsystem/src/main/java/org/modeshape/jboss/subsystem/MappedListAttributeDefinition.java:[408,19] cannot find symbol
[ERROR] symbol  : method setAlternates(java.lang.String[])
[ERROR] location: class org.jboss.as.controller.SimpleListAttributeDefinition.Builder
{code} 

The method {{setAlternates(String[])}} is now on the superclass of Builder and is renamed to {{setAlternatives(String[])}}.",2012/10/04 9:06 AM
MODE-1663,"According to the JCR spec (3.7.5.2), if a node is of a custom type and that type is a sub-type of {{mix:referenceable}}, the {{jcr:uuid}} property should be present when that node is created.",2012/10/04 4:06 AM
MODE-1659,"The new v2 REST API does not seem to return same name siblings. I have:
   /node
   /node[2]

The v1 REST API returns:

{noformat}
GET http://localhost:8080/modeshape-rest/v1/sample/default/items

{
  ""properties"": {
    ""jcr:primaryType"": ""mode:root"",
    ""jcr:uuid"": ""81513257505d64/""
  },
  ""children"": [
    ""jcr:system"",
    ""node"",
    ""node[2]""
  ]
}
{noformat}

However v2 returns:

{noformat}
GET http://localhost:8080/modeshape-rest/sample/default/items

{
  ""self"": ""http://localhost:8080/modeshape-rest/sample/default/items/"",
  ""up"": ""http://localhost:8080/modeshape-rest/sample"",
  ""jcr:primaryType"": ""{http://www.modeshape.org/1.0}root"",
  ""jcr:uuid"": ""81513257505d64/"",
  ""children"": {
    ""jcr:system"": {
      ""self"": ""http://localhost:8080/modeshape-rest/sample/default/items/jcr:system"",
      ""up"": ""http://localhost:8080/modeshape-rest/sample/default/items/""
    },
    ""node"": {
      ""self"": ""http://localhost:8080/modeshape-rest/sample/default/items/node[2]"",
      ""up"": ""http://localhost:8080/modeshape-rest/sample/default/items/""
    }
  }
}

{noformat}

",2012/10/02 6:24 PM
MODE-1655,"ModeShape currently allows registering node types with prefixes that are not valid JCR names, and thus is not as strict as it needs to be. For example, if a namespace is registered with the prefix {{foo:}} (including the trailing colon character), then the prefix is stored but then ModeShape produces an error when re-starting the repository:

{code}
13:52:32,290 ERROR Node types were read from the system content, and appear to be inconsistent or invalid: S-RAMP-Repository
org.modeshape.jcr.value.ValueFormatException: Error converting ""sramp:"" from String to a Name
	at org.modeshape.jcr.value.basic.NameValueFactory.create(NameValueFactory.java:126)
	at org.modeshape.jcr.value.basic.NameValueFactory.create(NameValueFactory.java:55)
	at org.modeshape.jcr.cache.document.DocumentTranslator.childReferenceFrom(DocumentTranslator.java:805)
	at org.modeshape.jcr.cache.document.DocumentTranslator.getChildReferences(DocumentTranslator.java:744)
	at org.modeshape.jcr.cache.document.LazyCachedNode.getChildReferences(LazyCachedNode.java:370)
	at org.modeshape.jcr.SystemContent.readAllNamespaces(SystemContent.java:648)
	at org.modeshape.jcr.SystemNamespaceRegistry.refreshFromSystem(SystemNamespaceRegistry.java:83)
	at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:1083)
	at org.modeshape.jcr.JcrRepository$RunningState.<init>(JcrRepository.java:959)
	at org.modeshape.jcr.JcrRepository.doStart(JcrRepository.java:352)
	at org.modeshape.jcr.JcrRepository.start(JcrRepository.java:277)
	at org.modeshape.jcr.JcrRepositoryFactory.getRepositoryFromConfigFile(JcrRepositoryFactory.java:369)
	at org.modeshape.jcr.JcrRepositoryFactory.getRepository(JcrRepositoryFactory.java:219)
	at org.modeshape.jcr.JcrRepositoryFactory.getRepository(JcrRepositoryFactory.java:204)
{code}",2012/10/02 2:54 PM
MODE-1631,"The changes made in MODE-1621 neglected to change the dependent code in the {{modeshape-performance-tests}} module. Please correct this as soon as possible.

(The normal and integration builds do not compile or run the tests in this module, but it will be included in the ""{{performance}}"" profile. However, I suggest running a normal integration build and then manually running '{{mvn clean install}}' on this module.)",2012/09/11 10:39 PM
MODE-1628,"{{JcrConfiguration.storeTo}} method generates not valid xml.
Reading this xml using {{JcrConfiguration.loadFrom}} method changes the file.",2012/09/11 3:38 AM
MODE-1623,"Creating a small tree of nodes from multiple threads causes corruption of a repository that is persisted using the JPA based store. I could not reproduce it using an in-memory store (didn't try a file based one).

See the forum reference for details and code.

*UPDATE:* Brian [reports|https://community.jboss.org/message/759324#759324] that it could not be reproduced with a repository that uses a disk store.",2012/09/06 7:21 PM
MODE-1622,"We have some bootstrap code that sets up sequences (longs stored in properties).

In MS 2.8 this worked, in MS 3 Beta3 it throws an exception if the node path does not exist.

Code:

{code:java}
session.propertyExists(""/some/random/nonexisting/path/to/property"")
{code}

Would return false in MS 2.8, but throws the following exception in MS3 B3:

{code}
java.lang.RuntimeException
Error obtaining root

javax.jcr.PathNotFoundException
No node exists at path '/some/random/nonexisting/path/to' in workspace ""default""

        org.modeshape.jcr.JcrSession.cachedNode(JcrSession.java:509)
        org.modeshape.jcr.JcrSession.cachedNode(JcrSession.java:494)
        org.modeshape.jcr.JcrSession.propertyExists(JcrSession.java:796)
        d.b.t.c.pages.Index.getTestProp(Index.java:63) 
{code}",2012/09/06 3:52 PM
MODE-1619,"I'm trying to unpublish a file from the repository using rest api. 
I checked that the FileNode.getUrl method returns correct url to node (see attached file: ResearchController.removeNode) and the node exists.
I also checked that local file (which I pass to the unpublish method) is created.

Using method ResearchController.createNode I can create a node, but I can't remove any one.",2012/09/05 11:04 AM
MODE-1617,"After creating a workspace in a persistent repository via {{workspace.createWorkspace}} and restarting that repository, the newly created workspace cannot be located and therefore {{session.login(workspaceName)}} fails.",2012/09/05 3:44 AM
MODE-1616,"After recent (unrelated?) changes, several tests in {{ConfigurationTest}} have begun failing on some platforms:

{code}-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.modeshape.test.integration.ConfigurationTest
java.lang.NullPointerException
	at org.hsqldb.scriptio.ScriptWriterText.writeDeleteStatement(Unknown Source)
	at org.hsqldb.persist.Log.writeDeleteStatement(Unknown Source)
	at org.hsqldb.persist.Logger.writeDeleteStatement(Unknown Source)
	at org.hsqldb.Table.deleteNoCheck(Unknown Source)
	at org.hsqldb.Table.deleteNoRefCheck(Unknown Source)
	at org.hsqldb.Table.delete(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.executeDeleteStatement(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.executeImpl(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.execute(Unknown Source)
	at org.hsqldb.Session.sqlExecute(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.jdbcPreparedStatement.executeUpdate(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
	at org.hibernate.hql.ast.exec.BasicExecutor.execute(BasicExecutor.java:101)
	at org.hibernate.hql.ast.QueryTranslatorImpl.executeUpdate(QueryTranslatorImpl.java:421)
	at org.hibernate.engine.query.HQLQueryPlan.performExecuteUpdate(HQLQueryPlan.java:283)
	at org.hibernate.impl.SessionImpl.executeUpdate(SessionImpl.java:1278)
	at org.hibernate.impl.QueryImpl.executeUpdate(QueryImpl.java:117)
	at org.hibernate.ejb.QueryImpl.internalExecuteUpdate(QueryImpl.java:183)
	at org.hibernate.ejb.AbstractQueryImpl.executeUpdate(AbstractQueryImpl.java:99)
	at org.modeshape.connector.store.jpa.model.simple.SubgraphQuery.create(SubgraphQuery.java:95)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaRepository$Workspace.removeUuidReference(SimpleJpaRepository.java:418)
	at org.modeshape.graph.connector.map.AbstractMapWorkspace.removeNode(AbstractMapWorkspace.java:268)
	at org.modeshape.graph.connector.map.MapRequestProcessor.process(MapRequestProcessor.java:282)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:250)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:363)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:235)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnection.execute(SimpleJpaConnection.java:133)
	at org.modeshape.graph.connector.RepositoryConnectionPool$ConnectionWrapper.execute(RepositoryConnectionPool.java:1124)
	at org.modeshape.graph.Graph.execute(Graph.java:288)
	at org.modeshape.graph.Graph$Batch.execute(Graph.java:4970)
	at org.modeshape.jcr.RepositoryNodeTypeManager.registerNodeTypes(RepositoryNodeTypeManager.java:1826)
	at org.modeshape.jcr.RepositoryNodeTypeManager.registerNodeTypes(RepositoryNodeTypeManager.java:1922)
	at org.modeshape.jcr.JcrEngine.doCreateJcrRepository(JcrEngine.java:682)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:900)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:883)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
java.lang.NullPointerException
	at org.hsqldb.scriptio.ScriptWriterText.writeRow(Unknown Source)
	at org.hsqldb.scriptio.ScriptWriterText.writeInsertStatement(Unknown Source)
	at org.hsqldb.persist.Log.writeInsertStatement(Unknown Source)
	at org.hsqldb.persist.Logger.writeInsertStatement(Unknown Source)
	at org.hsqldb.Table.insertNoCheck(Unknown Source)
	at org.hsqldb.Table.insertRow(Unknown Source)
	at org.hsqldb.Table.insert(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.executeInsertValuesStatement(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.executeImpl(Unknown Source)
	at org.hsqldb.CompiledStatementExecutor.execute(Unknown Source)
	at org.hsqldb.Session.sqlExecute(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	at org.hsqldb.jdbc.jdbcPreparedStatement.executeUpdate(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
	at org.hibernate.id.insert.AbstractSelectingDelegate.performInsert(AbstractSelectingDelegate.java:57)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2329)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:2836)
	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:71)
	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:268)
	at org.hibernate.event.def.AbstractSaveEventListener.performSaveOrReplicate(AbstractSaveEventListener.java:321)
	at org.hibernate.event.def.AbstractSaveEventListener.performSave(AbstractSaveEventListener.java:204)
	at org.hibernate.event.def.AbstractSaveEventListener.saveWithGeneratedId(AbstractSaveEventListener.java:130)
	at org.hibernate.ejb.event.EJB3PersistEventListener.saveWithGeneratedId(EJB3PersistEventListener.java:69)
	at org.hibernate.event.def.DefaultPersistEventListener.entityIsTransient(DefaultPersistEventListener.java:179)
	at org.hibernate.event.def.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:135)
	at org.hibernate.event.def.DefaultPersistEventListener.onPersist(DefaultPersistEventListener.java:61)
	at org.hibernate.impl.SessionImpl.firePersist(SessionImpl.java:800)
	at org.hibernate.impl.SessionImpl.persist(SessionImpl.java:774)
	at org.hibernate.impl.SessionImpl.persist(SessionImpl.java:778)
	at org.hibernate.ejb.AbstractEntityManagerImpl.persist(AbstractEntityManagerImpl.java:668)
	at org.modeshape.connector.store.jpa.model.simple.SubgraphQuery.create(SubgraphQuery.java:66)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaRepository$Workspace.getBranch(SimpleJpaRepository.java:502)
	at org.modeshape.connector.store.jpa.model.simple.SimpleRequestProcessor.process(SimpleRequestProcessor.java:63)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:291)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:363)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:235)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnection.execute(SimpleJpaConnection.java:133)
	at org.modeshape.graph.connector.RepositoryConnectionPool$ConnectionWrapper.execute(RepositoryConnectionPool.java:1124)
	at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:223)
	at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:212)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Tests run: 11, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 166.127 sec <<< FAILURE!

Results :

Tests in error: 
  shouldStartWithEdsConfigurationAndRestart(org.modeshape.test.integration.ConfigurationTest): Error starting the ""eds"" repository (check the configuration): Error starting the ""eds"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: could not execute update query
  shouldReadNodeTypesUponRestartUsingJpaConnector(org.modeshape.test.integration.ConfigurationTest): Error starting the ""Repo"" repository (check the configuration): Error starting the ""Repo"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: Cannot open connection

Tests run: 11, Failures: 0, Errors: 2, Skipped: 0
{code}

where the JUnit test output shows:

{code}
-------------------------------------------------------------------------------
Test set: org.modeshape.test.integration.ConfigurationTest
-------------------------------------------------------------------------------
Tests run: 11, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 143.434 sec <<< FAILURE!
shouldStartWithEdsConfigurationAndRestart(org.modeshape.test.integration.ConfigurationTest)  Time elapsed: 40.179 sec  <<< ERROR!
javax.jcr.RepositoryException: Error starting the ""eds"" repository (check the configuration): Error starting the ""eds"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: could not execute update query
	at org.modeshape.jcr.JcrEngine$JcrRepositoryHolder.getRepository(JcrEngine.java:825)
	at org.modeshape.jcr.JcrEngine.getRepository(JcrEngine.java:380)
	at org.modeshape.test.integration.ConfigurationTest.shouldStartWithEdsConfigurationAndRestart(ConfigurationTest.java:281)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: javax.jcr.RepositoryException: Error starting the ""eds"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: could not execute update query
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:911)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:883)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: could not execute update query
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1235)
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1168)
	at org.hibernate.ejb.AbstractEntityManagerImpl.throwPersistenceException(AbstractEntityManagerImpl.java:1245)
	at org.hibernate.ejb.AbstractQueryImpl.executeUpdate(AbstractQueryImpl.java:108)
	at org.modeshape.connector.store.jpa.model.simple.SubgraphQuery.create(SubgraphQuery.java:95)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaRepository$Workspace.removeUuidReference(SimpleJpaRepository.java:418)
	at org.modeshape.graph.connector.map.AbstractMapWorkspace.removeNode(AbstractMapWorkspace.java:268)
	at org.modeshape.graph.connector.map.MapRequestProcessor.process(MapRequestProcessor.java:282)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:250)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:363)
	at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:235)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnection.execute(SimpleJpaConnection.java:133)
	at org.modeshape.graph.connector.RepositoryConnectionPool$ConnectionWrapper.execute(RepositoryConnectionPool.java:1124)
	at org.modeshape.graph.Graph.execute(Graph.java:288)
	at org.modeshape.graph.Graph$Batch.execute(Graph.java:4970)
	at org.modeshape.jcr.RepositoryNodeTypeManager.registerNodeTypes(RepositoryNodeTypeManager.java:1826)
	at org.modeshape.jcr.RepositoryNodeTypeManager.registerNodeTypes(RepositoryNodeTypeManager.java:1922)
	at org.modeshape.jcr.JcrEngine.doCreateJcrRepository(JcrEngine.java:682)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:900)
	... 6 more
Caused by: org.hibernate.exception.GenericJDBCException: could not execute update query
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.hql.ast.exec.BasicExecutor.execute(BasicExecutor.java:110)
	at org.hibernate.hql.ast.QueryTranslatorImpl.executeUpdate(QueryTranslatorImpl.java:421)
	at org.hibernate.engine.query.HQLQueryPlan.performExecuteUpdate(HQLQueryPlan.java:283)
	at org.hibernate.impl.SessionImpl.executeUpdate(SessionImpl.java:1278)
	at org.hibernate.impl.QueryImpl.executeUpdate(QueryImpl.java:117)
	at org.hibernate.ejb.QueryImpl.internalExecuteUpdate(QueryImpl.java:183)
	at org.hibernate.ejb.AbstractQueryImpl.executeUpdate(AbstractQueryImpl.java:99)
	... 21 more
Caused by: java.sql.SQLException: S1000 General error java.lang.NullPointerException in statement [delete from MODE_SUBGRAPH_NODES where QUERY_ID=?]
	at org.hsqldb.jdbc.Util.throwError(Unknown Source)
	at org.hsqldb.jdbc.jdbcPreparedStatement.executeUpdate(Unknown Source)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeUpdate(NewProxyPreparedStatement.java:105)
	at org.hibernate.hql.ast.exec.BasicExecutor.execute(BasicExecutor.java:101)
	... 27 more
shouldReadNodeTypesUponRestartUsingJpaConnector(org.modeshape.test.integration.ConfigurationTest)  Time elapsed: 87.255 sec  <<< ERROR!
javax.jcr.RepositoryException: Error starting the ""Repo"" repository (check the configuration): Error starting the ""Repo"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: Cannot open connection
	at org.modeshape.jcr.JcrEngine$JcrRepositoryHolder.getRepository(JcrEngine.java:825)
	at org.modeshape.jcr.JcrEngine.getRepository(JcrEngine.java:380)
	at org.modeshape.test.integration.ConfigurationTest.startEngineThenShutdownThenRestartAndTestForNodeTypes(ConfigurationTest.java:398)
	at org.modeshape.test.integration.ConfigurationTest.shouldReadNodeTypesUponRestartUsingJpaConnector(ConfigurationTest.java:370)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:123)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:164)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:110)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:175)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcessWhenForked(SurefireStarter.java:107)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:68)
Caused by: javax.jcr.RepositoryException: Error starting the ""Repo"" repository (check the configuration): org.hibernate.exception.GenericJDBCException: Cannot open connection
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:911)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:883)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Cannot open connection
	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1235)
	at org.hibernate.ejb.AbstractEntityManagerImpl.find(AbstractEntityManagerImpl.java:631)
	at org.hibernate.ejb.AbstractEntityManagerImpl.find(AbstractEntityManagerImpl.java:585)
	at org.modeshape.connector.store.jpa.util.StoreOptions.getOption(StoreOptions.java:107)
	at org.modeshape.connector.store.jpa.util.StoreOptions.getRootNodeUuid(StoreOptions.java:54)
	at org.modeshape.connector.store.jpa.JpaSource.getConnection(JpaSource.java:1344)
	at org.modeshape.graph.connector.RepositoryConnectionPool.newWrappedConnection(RepositoryConnectionPool.java:975)
	at org.modeshape.graph.connector.RepositoryConnectionPool.getConnection(RepositoryConnectionPool.java:831)
	at org.modeshape.repository.RepositoryLibrary.createConnection(RepositoryLibrary.java:566)
	at org.modeshape.jcr.JcrRepository.<init>(JcrRepository.java:714)
	at org.modeshape.jcr.JcrEngine.doCreateJcrRepository(JcrEngine.java:607)
	at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:900)
	... 6 more
Caused by: org.hibernate.exception.GenericJDBCException: Cannot open connection
	at org.hibernate.exception.SQLStateConverter.handledNonSpecificException(SQLStateConverter.java:140)
	at org.hibernate.exception.SQLStateConverter.convert(SQLStateConverter.java:128)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:66)
	at org.hibernate.exception.JDBCExceptionHelper.convert(JDBCExceptionHelper.java:52)
	at org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:449)
	at org.hibernate.jdbc.ConnectionManager.getConnection(ConnectionManager.java:167)
	at org.hibernate.jdbc.AbstractBatcher.prepareQueryStatement(AbstractBatcher.java:161)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1596)
	at org.hibernate.loader.Loader.doQuery(Loader.java:717)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:270)
	at org.hibernate.loader.Loader.loadEntity(Loader.java:1933)
	at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:86)
	at org.hibernate.loader.entity.AbstractEntityLoader.load(AbstractEntityLoader.java:76)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3270)
	at org.hibernate.event.def.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:496)
	at org.hibernate.event.def.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:477)
	at org.hibernate.event.def.DefaultLoadEventListener.load(DefaultLoadEventListener.java:227)
	at org.hibernate.event.def.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:285)
	at org.hibernate.event.def.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:152)
	at org.hibernate.impl.SessionImpl.fireLoad(SessionImpl.java:1080)
	at org.hibernate.impl.SessionImpl.get(SessionImpl.java:997)
	at org.hibernate.impl.SessionImpl.get(SessionImpl.java:990)
	at org.hibernate.ejb.AbstractEntityManagerImpl.find(AbstractEntityManagerImpl.java:610)
	... 16 more
Caused by: java.sql.SQLException: Connections could not be acquired from the underlying database!
	at com.mchange.v2.sql.SqlUtils.toSQLException(SqlUtils.java:106)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:529)
	at com.mchange.v2.c3p0.impl.AbstractPoolBackedDataSource.getConnection(AbstractPoolBackedDataSource.java:128)
	at org.hibernate.connection.C3P0ConnectionProvider.getConnection(C3P0ConnectionProvider.java:78)
	at org.hibernate.jdbc.ConnectionManager.openConnection(ConnectionManager.java:446)
	... 34 more
Caused by: com.mchange.v2.resourcepool.CannotAcquireResourceException: A ResourcePool could not acquire a resource from its primary factory or source.
	at com.mchange.v2.resourcepool.BasicResourcePool.awaitAvailable(BasicResourcePool.java:1319)
	at com.mchange.v2.resourcepool.BasicResourcePool.prelimCheckoutResource(BasicResourcePool.java:557)
	at com.mchange.v2.resourcepool.BasicResourcePool.checkoutResource(BasicResourcePool.java:477)
	at com.mchange.v2.c3p0.impl.C3P0PooledConnectionPool.checkoutPooledConnection(C3P0PooledConnectionPool.java:525)
	... 37 more
{code}",2012/09/04 3:01 PM
MODE-1615,"Each workspace cache is currently a simple concurrent map, and because it is shared by multiple sessions it is never cleared nor its contents removed. This is obviously a problem that needs to be addressed.

Perhaps the easiest way to do this is to use an in-memory Infinispan cache for each workspace cache, where the Infinispan cache has no cache store, limited  numbers of entries, with a LRU or LIRS eviction strategy and possibly even a lifespan limit. (Not sure how/whether to expose these settings in the repository configuration; probably a good idea to better support deployment on various sized machines and custom tuning.)",2012/09/04 1:54 PM
MODE-1614,"org.modeshape.jcr.value.binary.BinaryStoreValueFactory in 

215: public BinaryValue create(byte[] value) and 
229: public BinaryValue create(InputStream stream)

are throwing ValueFormatException(Object value,PropertyType) but have the cause exception as the 1st parameter which should be the value. 

They should be including the cause exception as a third parameter to 
ValueFormatException(Object value,
 PropertyType targetType,Throwable cause)

Not sure what you can pass as the value in this case though since it is a stream.

",2012/09/03 7:38 AM
MODE-1613,"During high load/volume testing the repository gets into a state where a node can be located via its ID (getNodeByIdentifier) but if you get the path from that node and look that up (getNode) you get a PathNotFoundException. 

See the forum reference for details.",2012/09/01 7:56 PM
MODE-1607,"Some of the changes to the AS7 subsystem from MODE-1554 included changing the scopes of some dependencies from 'compile' to 'provided'. While that was technically the correct thing to do (because they really should be 'provided'), this change resulted in breaking the JavaDoc builds. For example, running the following command:

{code}
mvn clean install -Passembly
{code}

produces the JavaDoc (as part of the {{modeshape-distribution}} module), but resulted in errors similar to:

{code}
...
[ERROR] /Users/rhauch/dev/java/modeshape/fork-git/modeshape-distribution/target/distro-javadoc-sources/modeshape-jbossas-subsystem-3.0-SNAPSHOT-sources/org/modeshape/jboss/subsystem/ModelAttributes.java:400: cannot find symbol
[ERROR] symbol  : class ModelNode
[ERROR] location: class org.modeshape.jboss.subsystem.ModelAttributes
[ERROR] .setDefaultValue(new ModelNode().set(IndexingMode.SYNC.toString()))
[ERROR] ^
...
{code}

where {{ModelNode}} is {{org.jboss.dmr.ModelNode}} from the ""{{org.jboss:jboss-dmr}}"" Maven artifact, which is brought in as a dependency of the ""{{org.jboss.as:jboss-as-controller}}"" artifact that ModeShape uses with a scope of ""provided"".

As a result, we are not able to build the release artifacts and release Beta3.
",2012/08/23 11:56 AM
MODE-1605,"There have been a number of changes and improvements in AS7.2 compared with AS7.1.1.Final, and these improvements are proving to be essential (see MODE-1587). Unfortunately, an official stable release of JBoss AS7.2 hasn't been issued (it's current on 7.2.0.Alpha1-SNAPSHOT only, and distributions have to be built locally), so ModeShape cannot switch from 7.1 to 7.2. 

Note that it is not possible to simply install ModeShape's kit for AS7.1 into an AS7.2 installation: there are a number of changes w/r/t Infinispan and Hibernate that affect the modules. Therefore, to make usage in 7.2 easier, ModeShape should provide an interim kit that allows for easy installation of the ModeShape subsystem into AS7.2.

For example, when attempting to deploy the ModeShape kit for AS7.1 into a snapshot of AS7.2.0, the following problems were encountered:

{code}
09:37:18,766 INFO  [org.jboss.modules] JBoss Modules version 1.1.3.GA
09:37:19,026 INFO  [org.jboss.msc] JBoss MSC version 1.0.2.GA
09:37:19,100 INFO  [org.jboss.as] JBAS015899: JBoss AS 7.2.0.Alpha1-SNAPSHOT ""Steropes"" starting
09:37:20,221 ERROR [org.jboss.as.controller.management-operation] JBAS014612: Operation (""parallel-extension-add"") failed - address: ([]): java.lang.RuntimeException: JBAS014670: Failed initializing module org.modeshape
          at org.jboss.as.controller.extension.ParallelExtensionAddHandler$1.execute(ParallelExtensionAddHandler.java:99) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.AbstractOperationContext.executeStep(AbstractOperationContext.java:397) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.AbstractOperationContext.doCompleteStep(AbstractOperationContext.java:284) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.AbstractOperationContext.completeStep(AbstractOperationContext.java:211) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.ModelControllerImpl.boot(ModelControllerImpl.java:156) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.AbstractControllerService.boot(AbstractControllerService.java:191) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.server.ServerService.boot(ServerService.java:314) [jboss-as-server-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.server.ServerService.boot(ServerService.java:289) [jboss-as-server-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.AbstractControllerService$1.run(AbstractControllerService.java:156) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at java.lang.Thread.run(Thread.java:680) [classes.jar:1.6.0_33]
Caused by: java.util.concurrent.ExecutionException: java.lang.NoSuchMethodError: org.jboss.as.controller.SimpleListAttributeDefinition$Builder.<init>(Ljava/lang/String;Lorg/jboss/as/controller/SimpleAttributeDefinition;)V
          at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:222) [classes.jar:1.6.0_33]
          at java.util.concurrent.FutureTask.get(FutureTask.java:83) [classes.jar:1.6.0_33]
          at org.jboss.as.controller.extension.ParallelExtensionAddHandler$1.execute(ParallelExtensionAddHandler.java:91) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          ... 9 more
Caused by: java.lang.NoSuchMethodError: org.jboss.as.controller.SimpleListAttributeDefinition$Builder.<init>(Ljava/lang/String;Lorg/jboss/as/controller/SimpleAttributeDefinition;)V
          at org.modeshape.jboss.subsystem.MappedListAttributeDefinition$Builder.<init>(MappedListAttributeDefinition.java:388)
          at org.modeshape.jboss.subsystem.MappedListAttributeDefinition$Builder.of(MappedListAttributeDefinition.java:393)
          at org.modeshape.jboss.subsystem.ModelAttributes.<clinit>(ModelAttributes.java:149)
          at org.modeshape.jboss.subsystem.RepositoryWriteAttributeHandler.<init>(RepositoryWriteAttributeHandler.java:40)
          at org.modeshape.jboss.subsystem.RepositoryWriteAttributeHandler.<clinit>(RepositoryWriteAttributeHandler.java:37)
          at org.modeshape.jboss.subsystem.ModeShapeExtension.initialize(ModeShapeExtension.java:85)
          at org.jboss.as.controller.extension.ExtensionAddHandler.initializeExtension(ExtensionAddHandler.java:97) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.extension.ParallelExtensionAddHandler$ExtensionInitializeTask.call(ParallelExtensionAddHandler.java:127) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at org.jboss.as.controller.extension.ParallelExtensionAddHandler$ExtensionInitializeTask.call(ParallelExtensionAddHandler.java:113) [jboss-as-controller-7.2.0.Alpha1-SNAPSHOT.jar:7.2.0.Alpha1-SNAPSHOT]
          at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303) [classes.jar:1.6.0_33]
          at java.util.concurrent.FutureTask.run(FutureTask.java:138) [classes.jar:1.6.0_33]
          at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886) [classes.jar:1.6.0_33]
          at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908) [classes.jar:1.6.0_33]
          at java.lang.Thread.run(Thread.java:680) [classes.jar:1.6.0_33]
          at org.jboss.threads.JBossThread.run(JBossThread.java:122) [jboss-threads-2.0.0.GA.jar:2.0.0.GA]

09:37:20,232 FATAL [org.jboss.as.server] JBAS015957: Server boot has failed in an unrecoverable manner; exiting. See previous messages for details.
09:37:20,245 INFO  [org.jboss.as] JBAS015950: JBoss AS 7.2.0.Alpha1-SNAPSHOT ""Steropes"" stopped in 6ms
{code}

Even though AS7.2.0.Alpha1 is not even ready, we still should try to do everything we can to keep the kit ready to run in AS7.2.0",2012/08/22 8:32 AM
MODE-1602,"When new node type definitions are registered, they are written to the persistent cache. When the repository is restarted, the node types are read back in to create the NodeType instances. The node type's primary item name is written to persistent storage, but not read.",2012/08/20 10:08 PM
MODE-1600,"After the addition of the ISPN binary store, the overall build time (clean install) on my machine (Windows 7 x64, JDK 1.6.0_29) went up by about 2_30 minutes. Looking at the test logs both on my machine an on an OS-X machine, there are two problems:

1) an error reported in the following gist(which doesn't cause a test failure however): https://gist.github.com/f6f6b6ed1e760af974a5
2) the default configuration of JGroups is not optimal (and takes too long a time) for a local test suite, judging both from the previous link and the following: https://gist.github.com/3403853",2012/08/20 9:11 AM
MODE-1599,"The JCR TCK test {{org.apache.jackrabbit.test.api.query.qom.ColumnTest#testExpandColumnsForNodeType}} method performs this query:

{code:sql}
SELECT s.* FROM [nt:unstructured] AS s
{code}

and then attempts to check that the results include columns for each non-residual and single-valued property definition. ""{{jcr:primaryType}}"" is one such single-valued and non-residual property definition, but the test expects the column name to include the source and be named ""{{s.jcr:primaryType}}"" even though the query includes just a single source.

(This was not found earlier because the test was excluded due to [JCR-3313|https://issues.apache.org/jira/browse/JCR-3313]; see MODE-1396.",2012/08/16 11:19 AM
MODE-1592,"Working on MODE-1582, I've noticed that there is, in the 2.x branch, a test suite {{ShareableNodesTest}} which has not been ported to 3.x

After porting it to 3.x and changing the repository startup procedure, the test suite has 5 failures and 1 error. 

We should investigate if these expose potential problems with the current shareable nodes implementation, or the tests themselves need updating ",2012/08/03 10:28 AM
MODE-1582,"Binary values are exported as Base64 string when exporting a document view. When importing such a view, the values aren't decoded back and the binary value that is created will contain, de facto, the Base64 string, instead of the real binary value.",2012/07/31 7:12 PM
MODE-1572,"As per jcr spec, whenever a system view is being exported and there are non-binary properties which contain illegal xml characters, they should be exported as: {{xsd:base64Binary}}

However, the ""xsd"" prefix is just a hint :
{quote}
The namespace mappings for xsi and xsd are added to the exported XML document so that the xsi:type attribute is within their scope. 
The namespace declarations required are xmlns:xsd=“http://www.w3.org/2001/XMLSchema” and xmlns:xsi=“http://www.w3.org/2001/XMLSchemainstance”. 

Note that the prefixes representing these two namespaces need not be literally “xsd” and “xsi”. Any two prefixes are permitted as long as the corresponding
namespace declarations are changed accordingly.
{quote}

Currently, when exporting, we're hardcoding the ""xsd"" & ""xsi"" prefixes (regardless of what the namespaces uris are mapped to) and when importing, we're not really looking for the {{xsd:base64Binary}} type to decode from Base64. However, we are looking for {{xs:base64Binary}}, due to MODE-1026.",2012/07/25 6:31 AM
MODE-1570,"If enabling the preferIpv6 profile, the org.modeshape.jcr.bus.ClusteredRepositoryChangeBusTest#shouldSendChangeSetThroughRealJGroupsCluster fails.",2012/07/24 7:41 AM
MODE-1568,"After the fix for MODE-1555, a new bug was introduced through which Surefire ignores our preferIpv4 and preferIpv6 settings. 

This causes the unit tests that use JGroups (e.g. clustered bus tests) to fail.",2012/07/24 7:19 AM
MODE-1562,"This causing jvm to keep handlers and may cause issues.

Correct implementation may be:
{code}
    public long getResourceLength(Node node) 
           throws RepositoryException, IOException {
        InputStream is = null;
        long size = 0;
        int bytesRead;
        byte[] buff = new byte[255];
        try {
            is = getResourceContent(node);
            while (-1 != (bytesRead = is.read(buff, 0, 255))) {
                size += bytesRead;
            }
        } finally {
            if (is != null) {
                try {
                    is.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
        return size;
    }
{code}",2012/07/18 10:54 AM
MODE-1556,"Using a criteria such as ""{{<> 3}}"" (that is, ""not equal to"" some literal value) on numeric fields does not return the correct results.",2012/07/13 3:46 PM
MODE-1553,"When working with referenceable nodes, the jcr:uuid property is not stored as a node property and therefore cannot be searched after, if a subsequent update has been performed on the node's properties.

Consider the following scenario:

1. create a referenceable node N with some properties & save
2. execute a search against N.[jcr:uuid]
3. update some of the properties of the referenceable node & save
4. execute the same search as 2.

The effect is that the search at 2 is successful while the search at 4 is not.

The reason is that when first creating the transient node, the actual graph CreateNodeRequest contains among the node properties the jcr:uuid property, which gets indexed by the lucene indexer.

After the update is performed (effectively an UpdatePropertiesRequest is processed), because the jcr:uuid was not stored as a property when the first save was executed, the lucene indexer does not get this property anymore and therefore does not store it in the document (document which gets created anew each time)
",2012/07/12 7:04 AM
MODE-1552,"Consider the case where a node N1 is shared to another node N2, and where a session is used to change the descendants of N1, but then {{Node.save()}} is called on one of the ancestors of N2. In this case, the save operation does not
save the changes to the descendants of N1. Of course, the changes are still in the transient state of the session and will be saved upon the next {{Session.save()}} (so no information is lost nor is the persisted state corrupted in any way). For details, see the {{testModifyDescendantAndSave()}} and {{testModifyDescendantAndRemoveShareAndSave()}} tests in the {{ShareableNodeTest}} in the TCK.

Note that {{Node.save()}} has been deprecated in JCR 2.0, so the workaround is to simply call {{Session.save()}}.",2012/07/10 6:43 PM
MODE-1550,"The query

{code:sql}
select * from [nt:base] where ischildnode('/')
{code}

and equivalent QOM query return no results (should return at least {{/jcr:system}}). The query

{code:sql}
select * from [nt:base] where ischildnode('/jcr:system')
{code}

only returns {{/jcr:/system/mode:locks}}, but not {{jcr:nodeTypes}}, {{jcr:versionStorage}}, {{mode:namespaces}}

May be related to or duplicate of MODE-1469?",2012/07/09 8:55 PM
MODE-1549,"It was an oversight that support for this ""not-equal-to"" operator was not included with the rest of JCR-SQL2. 

(Note that we already support the non-standard ""\!="" operator, so we should be able to pretty easily add support for another operator with equivalent semantics. However, we should convert the non-standard ""!="" to the standard ""<>"" in all queries.)",2012/07/05 9:32 AM
MODE-1547,"When FTS is enabled and text extractors are configured, and when those extractors extract text for a Binary property, the extracted text cannot be searched after using full-text-search.

The tests which expose this behavior (and are ignored currently) are:
* org.modeshape.extractor.tika.TikaTextExtractorRepositoryTest
* org.modeshape.test.integration.TikaTextExtractorIntegrationTest",2012/07/03 7:22 AM
MODE-1546,"NPE encountered when invoking an SQL2 query via the REST service, while an asynchronous EJB, with BMT, is updating the repository. Specifically, it appears that the EJB is executing either Session.save() or UserTransaction.commit() when the exception is encountered. If the EJB is not executing save() or commit(), but doing other things, the query works correctly.

The exception is below:

{code:none}
17:02:19,826 ERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/modeshape-rest].[Resteasy]] (http-localhost-127.0.0.1-8080-1) Servlet.service() for servlet Resteasy threw exception: org.jboss.resteasy.spi.UnhandledException: java.lang.NullPointerException
    at org.jboss.resteasy.core.SynchronousDispatcher.handleApplicationException(SynchronousDispatcher.java:340) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.handleException(SynchronousDispatcher.java:214) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.handleInvokerException(SynchronousDispatcher.java:190) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:540) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:502) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:119) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.plugins.server.servlet.ServletContainerDispatcher.service(ServletContainerDispatcher.java:208) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:55) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:50) [resteasy-jaxrs-2.3.2.Final.jar:]
    at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final]
    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:489) [jbossweb-7.0.13.Final.jar:]
    at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.1.1.Final.jar:7.1.1.Final]
    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.13.Final.jar:]
    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.13.Final.jar:]
    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.13.Final.jar:]
    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671) [jbossweb-7.0.13.Final.jar:]
    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930) [jbossweb-7.0.13.Final.jar:]
    at java.lang.Thread.run(Thread.java:662) [rt.jar:1.6.0_27]
Caused by: java.lang.NullPointerException
    at org.modeshape.jcr.cache.document.LazyCachedNode.getSegment(LazyCachedNode.java:172) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.cache.document.LazyCachedNode.getPath(LazyCachedNode.java:181) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.cache.PathCache.getPath(PathCache.java:45) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.lucene.basic.BasicTupleCollector.doCollect(BasicTupleCollector.java:187) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.lucene.LuceneQueryEngine$TupleCollector.collect(LuceneQueryEngine.java:378) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:281)
    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:581)
    at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:383)
    at org.modeshape.jcr.query.lucene.LuceneQueryEngine$LuceneAccessQuery.execute(LuceneQueryEngine.java:314) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.process.QueryProcessor.execute(QueryProcessor.java:96) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.process.QueryEngine.execute(QueryEngine.java:140) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.lucene.LuceneQueryEngine$1.getResults(LuceneQueryEngine.java:149) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.jcr.query.JcrQuery.execute(JcrQuery.java:119) [modeshape-jcr-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.web.jcr.rest.QueryHandler.postItem(QueryHandler.java:78) [modeshape-web-jcr-rest-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at org.modeshape.web.jcr.rest.JcrResources.postJcrSql2Query(JcrResources.java:441) [modeshape-web-jcr-rest-3.0.0.Alpha6.jar:3.0.0.Alpha6]
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) [rt.jar:1.6.0_27]
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39) [rt.jar:1.6.0_27]
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) [rt.jar:1.6.0_27]
    at java.lang.reflect.Method.invoke(Method.java:597) [rt.jar:1.6.0_27]
    at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:155) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.ResourceMethod.invokeOnTarget(ResourceMethod.java:257) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:222) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:211) [resteasy-jaxrs-2.3.2.Final.jar:]
    at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:525) [resteasy-jaxrs-2.3.2.Final.jar:]
    ... 20 more
{code}",2012/06/30 6:09 PM
MODE-1537,Using a Stateless Session Bean (SLSB) with Bean Managed Transactions (BMT) to create nodes (using multiple transactions) results in only the nodes created with the first transaction being visible; the nodes created in subsequent transactions are not visible until the server is restarted.,2012/06/25 10:49 AM
MODE-1526,"Using the AS7 kit, creating & saving some nodes, restarting the server and attempting to read those nodes, doesn't yield any results.

Our current AS7 configuration uses ISPN cache managers which persist the data on disk, so somehow the information cannot be retrieved after a restart.",2012/06/21 9:45 AM
MODE-1525,"addNode(""er:gp"") fails with error:

{code:none}
javax.jcr.nodetype.ConstraintViolationException: Unable to determine a valid node definition for the node ""/inf:documentGroup/er:gp"" in workspace ""default"" of ""Document Store Repository""
{code}

See forum post and attached schema and testcase for details",2012/06/20 4:51 PM
MODE-1521,"In AS7, each sequencer is added to the repository configuration via the Editor framework, but this is not properly working when multiple sequencers are being added at the same time.",2012/06/19 12:15 PM
MODE-1515,"We recently (for Alpha5) changed the AS7 kit to move the sequencer JARs (which were intended to be the 'jar-with-dependencies' artifact) into the 'org.modeshape' (slot=main) module. However, this creates other issues, primarily that all of the sequencers' 3rd-party dependencies are exposed to the rest of ModeShape; any clashes in the libraries would cause a problem. Therefore, we need to go back to the Alpha4-style AS7 kit that had a separate module for each sequencer (see the [Alpha4 AS7 assembly descriptor|https://github.com/ModeShape/modeshape/blob/modeshape-3.0.0.Alpha4/deploy/jbossas/assembly/kit-as7.xml#L31] and the old [sequencer module.xml files|https://github.com/ModeShape/modeshape/tree/modeshape-3.0.0.Alpha4/deploy/jbossas/kit/jboss-as7/modules/org/modeshape/sequencer]).

There are some fixes that need to be done to what we had in Alpah4, however:

* Each sequencer module need to be dependent upon the ""javax.jcr"" module, the ""org.modeshape.jcr.api"" module, and a new ""org.modeshape.common"" module.
* The ""org.modeshape"" module needs to be dependent upon all of the ModeShape-provided sequencer modules.
* Each sequencer module needs to include all 3rd-party transitive dependencies (that is, all dependencies except those from ModeShape and JCR). That likely means the [""fileSet"" used in Alpha4's AS7 assembly descriptor|https://github.com/ModeShape/modeshape/blob/modeshape-3.0.0.Alpha4/deploy/jbossas/assembly/kit-as7.xml#L31] will likely need to be replaced with ""dependencySet"" (with some exclusions).
",2012/06/14 3:58 PM
MODE-1512,"A lucene lock file write.lock is left in the index directory after shutdown JcrEngine, it prevents more updates after restart JcrEngine. Below is the error:

{code:none}
Jun 11, 2012 1:22:00 PM org.hibernate.search.exception.impl.LogErrorHandler handleException
ERROR: HSEARCH000058: Exception occurred org.apache.lucene.store.LockObtainFailedException: Lock obtain timed out: SimpleFSLock@\dev\index\nodeinfo\write.lock
Primary Failure:
    Entity org.modeshape.jcr.query.lucene.basic.NodeInfo  Id 07c17757505d64f99f7a54-dff5-4fa6-b97f-a0f9e18baf16  Work Type  org.hibernate.search.backend.UpdateLuceneWork
Subsequent failures:
    Entity org.modeshape.jcr.query.lucene.basic.NodeInfo  Id 07c17757505d641aa38eb1-de6f-400b-933c-3ea343de9466  Work Type  org.hibernate.search.backend.AddLuceneWork
    Entity org.modeshape.jcr.query.lucene.basic.NodeInfo  Id 07c17757505d6409a0d17a-8902-40d7-9b22-289827d5fdff  Work Type  org.hibernate.search.backend.AddLuceneWork

org.apache.lucene.store.LockObtainFailedException: Lock obtain timed out: SimpleFSLock@\dev\index\nodeinfo\write.lock
    at org.apache.lucene.store.Lock.obtain(Lock.java:84)
    at org.apache.lucene.index.IndexWriter.<init>(IndexWriter.java:1108)
    at org.hibernate.search.backend.impl.lucene.IndexWriterHolder.createNewIndexWriter(IndexWriterHolder.java:127)
    at org.hibernate.search.backend.impl.lucene.IndexWriterHolder.getIndexWriter(IndexWriterHolder.java:102)
    at org.hibernate.search.backend.impl.lucene.AbstractWorkspaceImpl.getIndexWriter(AbstractWorkspaceImpl.java:119)
    at org.hibernate.search.backend.impl.lucene.LuceneBackendQueueTask.applyUpdates(LuceneBackendQueueTask.java:99)
    at org.hibernate.search.backend.impl.lucene.LuceneBackendQueueTask.run(LuceneBackendQueueTask.java:67)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Jun 11, 2012 1:22:00 PM org.hibernate.search.backend.impl.lucene.LuceneBackendQueueTask applyUpdates
ERROR: HSEARCH000072: Couldn't open the IndexWriter because of previous error: operation skipped, index ouf of sync!
{code}",2012/06/12 11:16 PM
MODE-1502,"When sequencing a Microsoft Office document which does not have a thumbnail (or whose thumbnail cannot be extracted by POI) the sequencer fails with:
{code}
org.modeshape.repository.sequencer.SequencerException: java.lang.IllegalArgumentException: The bytes argument may not be null
	at org.modeshape.repository.sequencer.StreamSequencerAdapter.execute(StreamSequencerAdapter.java:198)
	at org.modeshape.repository.sequencer.SequencingService.processChange(SequencingService.java:498)
	at org.modeshape.repository.sequencer.SequencingService$RepositoryObserver$1.run(SequencingService.java:666)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.IllegalArgumentException: The bytes argument may not be null
	at org.modeshape.common.util.CheckArg.isNotNull(CheckArg.java:387)
	at org.modeshape.graph.property.basic.InMemoryBinary.<init>(InMemoryBinary.java:49)
	at org.modeshape.graph.property.basic.InMemoryBinaryValueFactory.create(InMemoryBinaryValueFactory.java:50)
	at org.modeshape.graph.property.basic.InMemoryBinaryValueFactory.create(InMemoryBinaryValueFactory.java:38)
	at org.modeshape.sequencer.msoffice.MSOfficeMetadataSequencer.recordMetadata(MSOfficeMetadataSequencer.java:202)
	at org.modeshape.sequencer.msoffice.MSOfficeMetadataSequencer.sequence(MSOfficeMetadataSequencer.java:143)
	at org.modeshape.repository.sequencer.StreamSequencerAdapter.execute(StreamSequencerAdapter.java:180)
	... 5 more

javax.jcr.PathNotFoundException: Unable to find ""{}sequenced""; lowest existing path is ""/""
	at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:840)
	at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:703)
	at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:96)
	at org.modeshape.test.integration.sequencer.MSOfficeSequencerIntegrationTest.uploadAndAssertSequencedNode(MSOfficeSequencerIntegrationTest.java:92)
	at org.modeshape.test.integration.sequencer.MSOfficeSequencerIntegrationTest.shouldSequenceDoc(MSOfficeSequencerIntegrationTest.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:76)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:182)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)
{code}",2012/06/05 5:52 AM
MODE-1501,"The Repository.login is working fine for the REST client, but within a @javax.ejb.Singleton bean, the login could not be performed. A NullPointerException is thrown during the initialization of RepositoryCache (L:135). I tried to initialize the repository within a @PostConstruct method.

I debugged the code a little bit: Triggered by the REST client (RepositoryManager of example) we have the following (working) scenario in class RepositoryCache (constructor):
* Line 119: Get root node (1.) of system workspace
* root node's child reference is null, so a new one is created and saved at line 128
* the root node's child reference (2.) is looked up again at line 130
* root node (1.) and root node (2.) are different object references
* the systemRef in line 131 is resolved to a valid ChildReference
* -> the repository session is created

Triggered by the @javax.ejb.Singleton bean (@PostConstruct) the scenario in RepositoryCache changes to:
* Line 119: Get root node (1.) of system workspace
* root node's child reference is null, so a new one is created and saved at line 128
* the root node's child reference (2.) is looked up again at line 130
* root node (1.) and root node (2.) are *THE SAME* object references
* the systemRef in line 131 is resolved to null
* -> a NullPointerException occurs at line 135

Used in a non-startup bean, the repository can be obtained successfully as described for the REST client. There is a different behavior between Startup and ""normal"" execution. Might be a transaction problem, regarding to system.save() and re-lookup of root node?

See forum https://community.jboss.org/message/739667 for the problem thread.

",2012/06/04 11:08 AM
MODE-1496,"When a query contains a SELECT clause with a wildcard in it (e.g., ""{{SELECT * ...}}"" or ""{{SELECT s.* ...}}"", the columns in the tabular results are to be named ""{{selectorName.propertyName}}"" (see Section 6.7.39 of the JSR-283 specification). ModeShape doesn't follow this requirement.

The ""{{ColumnTest.testExpandColumnsForNodeType}}"" TCK test method verifies this behavior, but ModeShape doesn't pass the test because of JCR-3313.",2012/05/31 11:49 AM
MODE-1494," sramp:contentType=""application/xsd"" should probably be sramp:contentType=""application/xml""",2012/05/30 9:21 AM
MODE-1490,"In Modeshape 3.0-Alpha4 calling orderBefore on a checked-out node multiple times causes a hang in org.modeshape.jcr.cache.document.AbstractChildReferences from lines 119 - 128 unless each call is followed by save().

It also fails on Modeshape 2.7, but throws an Exception (""No item exists at path {}Child 0 in workspace ""workspace1"""")

This code runs fine on Jackrabbit 1.6 and 2.3.

You have my permission to include the attached tests in your test suite if you find them useful.

The following test will exercise the bug:

{code:java}
package com.mom.jcrperf.tests;

import javax.jcr.Node;
import javax.jcr.NodeIterator;
import javax.jcr.RepositoryException;
import javax.jcr.Session;

/**
 * Measure the speed of reordering child nodes.
 * 
 * Create 10 parents Give each one 100 children Reorder the children in reverse
 * order
 */
public class ReorderChildNodesTest extends PerformanceTest {

     private static final int PARENT_COUNT = 10;
     private static final int CHILD_COUNT = 100;

     private Session session;

     private Node node;

     private String bigProperty = ""this is a nice big string"";

     public void beforeSuite() throws RepositoryException {

          for (int i = 0; i < 8; i++) {
               bigProperty = bigProperty + bigProperty + i;
          }

          session = getRepository().login(getCredentials());
          node = session.getRootNode().addNode(""testnode"", ""nt:unstructured"");
          for (int i = 0; i < PARENT_COUNT; i++) {

               Node parent = node.addNode(""node"" + i, ""nt:unstructured"");
               parent.addMixin(""mix:versionable"");
               parent.setProperty(""prop_"" + i, bigProperty + i);
               
               session.save();
               
               parent.checkout();

               for (int j = 0; j < CHILD_COUNT; j++) {
                    Node child = parent.addNode(""Child "" + j, ""nt:unstructured"");
                    child.addMixin(""mix:versionable"");
                    child.setProperty(""prop_"" + j, bigProperty + j);
               }
               parent.save();
               parent.checkin();
          }
          session.save();
     }

     public void beforeTest() throws RepositoryException {
          //
     }

     public void runTest() throws Exception {

          for (NodeIterator i = node.getNodes(); i.hasNext();) {

               Node parent = i.nextNode();
               parent.checkout();
               
               int kid = 0;

               for (NodeIterator j = parent.getNodes(); j.hasNext();) {
                    Node child = j.nextNode();
                    parent.orderBefore(""Child "" + kid, ""Child 0"");
                    kid++;
               }
               parent.save(); // !!!! Moving this code up into the loop eliminates the problem !!!!
               parent.checkin();
          }
          session.save();
     }

     public void afterTest() throws RepositoryException {
          session.save();
     }

     public void afterSuite() throws RepositoryException {
          session.getRootNode().getNode(""testnode"").remove();
          session.save();
          session.logout();
     }

}
{code}",2012/05/29 10:50 AM
MODE-1483,"After remove nodes from repository still remain files ""file_name.modeshape"" with content:

modeint:nodeDefinition (string) ""{httpwww.modeshape.org1.0}root//{httpwww.jcp.orgjcrnt1.0}base""

To reproduce this issue run RepositoryClientTest test. After succesfully test execution in ""fileSystemSource/fileSystemWorkspace"" directory remain file ""test.file.modeshape"". ",2012/05/15 9:02 AM
MODE-1480,The ModeShape subsystem for AS7 does not currently allow configuration of the JGroups channel used for the repository's event channel.,2012/05/09 2:10 PM
MODE-1479,"Attempting to apply a change to the path expressions for a sequencer in the configuration of a running repository results in the following exception:

{code:none}
java.lang.NullPointerException
	at org.infinispan.schematic.internal.delta.PutOperation.replay(PutOperation.java:82) [modeshape-schematic-3.0-SNAPSHOT.jar:3.0-SNAPSHOT]
	at org.infinispan.schematic.Schematic$EditorImpl.apply(Schematic.java:322) [modeshape-schematic-3.0-SNAPSHOT.jar:3.0-SNAPSHOT]
	at org.infinispan.schematic.Schematic$EditorImpl.apply(Schematic.java:306) [modeshape-schematic-3.0-SNAPSHOT.jar:3.0-SNAPSHOT]
	at org.modeshape.jcr.RepositoryConfiguration.validate(RepositoryConfiguration.java:1601) [modeshape-jcr-3.0-SNAPSHOT.jar:3.0-SNAPSHOT]
	at org.modeshape.jcr.JcrEngine.update(JcrEngine.java:600) [modeshape-jcr-3.0-SNAPSHOT.jar:3.0-SNAPSHOT]
{code}

",2012/05/09 11:37 AM
MODE-1475,"The result of Query Object Model containing multiple JOINs delivers a wrong result resp. nodes of a wrong type.
Moreover if a Query Object Model create with a column which is created via Query Object Model Factory whereby prameter name and column name are null, the execution of QOM fails.
See code sample in attachment.",2012/05/04 10:15 AM
MODE-1469,"The issue is exposed by the tck tests: SQLPathTest#testChildAxisRoot

The test scenario involves using a readonly session and executing the following query:  SELECT * FROM nt:base WHERE jcr:path LIKE '/%' AND NOT jcr:path LIKE '/%/%'. The results are asserted against session.getRootNode.getNodes().

The result is that only ""/"" (mode:root) is found, instead of /testroot and /jcr:system. Using a directory to store the indexes and looking with Luke at the indexed content, it does appear as if the above mentioned paths aren't stored in any document.",2012/04/20 10:23 AM
MODE-1468,"This issue is exposed by the TCK tests (org.apache.jackrabbit.test.api.query.qom.*) and is related to the fact that QueryObjectModel.getStatement doesn't get converted to a SQL2 statement in the case of queryManager.createQuery(qomQuery.getStatement(), Query.JCR_SQL2)",2012/04/20 10:14 AM
MODE-1466,"When sequencing an xsd the sequencer is not using the user who uploaded the file but instead it uses '<modeshape-worker>'

{code:xml}
...
     - xmlns:xsd=""http://www.w3.org/2001/XMLSchema""
     purchaseOrder jcr:primaryType=xs:elementDeclaration jcr:uuid=21b9f143-1bf5-4aad-af94-1f59bd03f606
       - jcr:baseVersion=3fe918a317f1e7805270ac-c409-4465-b0e7-be978cdac8e6
       - jcr:created=2012-04-19T13:46:14.208-04:00
       - jcr:createdBy=""<modeshape-worker>""
...
{code}",2012/04/19 2:15 PM
MODE-1456,"The current node.remove implementation doesn't support some JCR required validations. To name a few:
* removing mandatory nodes should throw ConstraintViolationException
* removing a node already deleted in another session should throw InvalidItemStateException on save

All of these are ""exposed"" when running the tck tests.

Implementation notes:

Due to the way the cache is changed on remove, imo we have a major problem when working with a couple of sessions (single threaded) and removing a node from one of them which is referenced in the other prior to the removal. When the session which removes the node is saved, that node is removed from the document and the workspace cache, which makes it impossible for the other session (which now has a ""stale node"") to do anything with it because it won't find it anymore. I've added a TODO in the part of the code where this should be handled. 

The above mentioned problem, causes all sorts of weird side effects: e.g. the path of the node cannot be correctly determined (because its parent can't be determined) and defaults to the root path.
",2012/04/06 8:46 AM
MODE-1455,"We need to implement the node cloning functionality, for a hierarchy of nodes, in order for the node.update method to work.",2012/04/06 4:05 AM
MODE-1453,"We need to implement the mechanism for handling (adding/removing) node references. A few implementation points:

* atm there are 2 methods: addReferrer and removeRefferrer on the MutableCachedNode  interface, but they aren't used
* the original idea was to update the AbstractJcrNode #set/remove property methods and manage references from there, but this is not viable in the context of transactions and multiple threads
* given the above, the correct place to implement this, probably is WritableSessionCache#persistChanges, since the DocumentTranslator does have enough information about the properties, to be able to tell whether they are reference properties or not (the runtime value of the properties should be a Reference instance)
* also, to handle the case when multiple properties reference the same node, we probably need a referenceCount field which would be used to check whether a reference actually needs removing or not",2012/04/04 10:04 AM
MODE-1451,"Iteration over providers _starts_ with anonymousProvider even if there is a custom provider.

This means if an anonymousProvider with empty ACL value is specified in the config, a non-null result will get returned by org.modeshape.jcr.security.AuthenticationProviders.authenticate().

Therefore configuration is fragile, in that you need to either use custom OR anonymous, and specifying <anonymousUserRoles jcr:primaryType=""mode:option""  mode:value="""" /> causes the custom provider to be ignored (commenting out fixes the problem).

I believe the code that populates the providers array should push the anonymous provider to the bottom.  I think this can be done in org.modeshape.jcr.JcrRepository constructor (line 984: // Set up any custom AuthenticationProvider classes ...) by moving that statement block to run before anonymousprovider (line 962), however there is also an issue where if no anonymousProvider is specified in the config, one seems to get created anyway (with 'admin' privileges) so it doesn't look like it is possible to actually authenticate _as_ the user, and therefore any custom SecurityContext is never used.

Removes ambiguity in configuration: I discovered if I commented out the anonymous provider then the 'null' result moves onto custom, but I'd expect Modeshape to try custom _then_ anonymous before throwing a login exception.

Could be documented but think having custom read/write + anonymous readonly access is a feature Modeshape should provide, and I believe this prevents that from happening.

",2012/03/30 7:26 AM
MODE-1450,Importing the attached XML file into a workspace fails with a javax.jcr.version.VersionException (see attached for full stack trace),2012/03/29 7:40 AM
MODE-1442,"The 'admin' username does not have the 'admin' role in the JBoss AS kit; see [this line|https://github.com/ModeShape/modeshape/blob/modeshape-2.8.0.Final/deploy/jbossas/kit/conf/props/modeshape-roles.properties#L2]. The line should be:

{code}
admin=connect,readonly,readwrite,admin
{code}",2012/03/26 9:00 AM
MODE-1436,"When running the org.modeshape.jcr.bus.ClusteredRepositoryChangeBusTest test, JGroups uses the ""default"" configuration (nothing explicit). This causes to it, in certain cases, to pick an IP the wrong IP address (e.g. public facing VPN address) when starting the local clusters.

Ideally, it should always use the loopback interface to avoid these problems",2012/03/22 9:16 AM
MODE-1431,"According to forum discussion it looks like Modeshape JCR 2.8 is not able to load the correct logger bundle for default Locale en_US.

{noformat}
10:35:10,153 INFO  [org.modeshape.jcr.RepositoryQueryManager] (modeshape-start-repo-4-thread-1) <Problems were encountered while localizing internationalization class org.modeshape.jcr.JcrI18n to locale ""en_US"" >
{noformat}

This doesn't have any affect on the Jcr Repository itself under read/write/query operations.
",2012/03/17 6:51 AM
MODE-1424,"When running the integration tests using ""clean install"", the org.modeshape.test.integration.sequencer.ddl.DdlSequencer2IntegrationTest hangs because of a deadlock during the indexing process.
Attached are several thread-dump, from various point in time.",2012/03/16 10:53 AM
MODE-1423,"Excpetion on login to a s3 backed repository :  

{code}
2:38:04,970 ERROR ISPN000136: Execution error
org.infinispan.marshall.NotSerializableException: org.infinispan.schematic.internal.SchematicEntryLiteral
Caused by: an exception which occurred:
	in object org.infinispan.schematic.internal.SchematicEntryLiteral@16365c90
	in object org.infinispan.container.entries.ImmortalCacheEntry@5cb0a022
	in object org.infinispan.loaders.bucket.Bucket@64135f0a
javax.jcr.RepositoryException: Error while starting 'RPC-Repository' repository: org.infinispan.schematic.internal.SchematicEntryLiteral

	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:557)
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:524)
	at org.modeshape.jcr.JcrRepository.login(JcrRepository.java:138)
{code}",2012/03/16 7:39 AM
MODE-1422,"2 nodes are created, node 1 & 2. Then node 1 is set to reference node 2, and vice versa. Then the session is saved. Afterwards, node 1 is retrieved by it's uuid, all references to node 1 are searched and each reference (the 1 reference from node 2 to node 1) is removed. After this, node 1 is removed and the session is saved.

If this is done, the test runs successfully.

If we create a 3rd node at the very beginning, but avoid creating references from/to this node, we get a javax.jcr.ReferentialIntegrityException.
Even if we create the 3rd node, but don't create a reference from node 2 to 1, the problem also can not be reproduced.



",2012/03/16 5:28 AM
MODE-1421,"Using a JPA connector, with the standard HSQLDB configuration, executing the following test crashes with: 

{code}
    @Test
    public void removeItemAfterRegisteringSessionNamespace() throws Exception {
        NamespaceRegistry namespaceRegistry = session.getWorkspace().getNamespaceRegistry();
        namespaceRegistry.registerNamespace(""rh"", ""http://www.redhat.com"");
        session.setNamespacePrefix(""rh"", ""http://www.redhat.com"");

        assertNotNull(namespaceRegistry.getURI(""rh""));
        Node rootNode = session.getRootNode();
        rootNode.addNode(""folder"", ""nt:folder"");
        session.save();
        
        session.removeItem(""/folder"");
        session.save();
    }
{code}

{code} org.modeshape.graph.query.parse.InvalidQueryException: The view references a non-existant column 'jcr:score' in '__ALLNODES__' {code}

The full stacktrace is attached.",2012/03/13 7:58 AM
MODE-1418,"I am experiencing unexpected results when using CONTAINS() in JCR-SQL2 queries, and when using Modeshape Search queries.

I believe that I am doing everything correctly, if not please let me know.",2012/03/11 3:45 PM
MODE-1417,"When the {{JsonRestClient.publish(...)}} method is called with a {{true}} value for ""{{versionable}}"", the JsonRestClient method creates a {{FileNode}} object that only sets the '{{jcr:mixinTypes}}' property to '{{mix:versionable}}' _on the ""{{jcr:content}}"" child node. It needs to instead make the '{{nt:file}}' node versionable instead, and have the ""{{jcr:content}}"" child node be versioned via the (default) OPV value of {{COPY}}.

Basically, [lines 117-119|https://github.com/ModeShape/modeshape/blob/d17316ffd1eb83cc2811f66204ddd58c1b0c9ff1/web/modeshape-web-jcr-rest-client/src/main/java/org/modeshape/web/jcr/rest/client/json/FileNode.java#L117] need to move after [line 103|https://github.com/ModeShape/modeshape/blob/d17316ffd1eb83cc2811f66204ddd58c1b0c9ff1/web/modeshape-web-jcr-rest-client/src/main/java/org/modeshape/web/jcr/rest/client/json/FileNode.java#L103].",2012/03/10 10:21 AM
MODE-1414,"Sequencing a project that contains a model with a model annotation on the model itself (not sure when this happens in the Designer) may cause a NullPointerException:

{code}
2012-03-05 14:49:31,124 ERROR [org.modeshape.repository.sequencer.SequencingService (modeshape-1-thread-9) Problem(s) while sequencer Teiid VDB Sequencer is sequencing node default=></{}files/{}oracle_func/{}func.vdb/{http://www.jcp.org/jcr/1.0}content && [{http://www.modeshape.org/1.0}uuid = 2ee08b6a-54a9-4efb-8833-6a71ab437c25]>
2012-03-05 14:49:33,061 ERROR [org.modeshape.repository.sequencer.SequencingService] (modeshape-1-thread-9) Error reading VDB file ""/files/oracle_func/func.vdb/jcr:content"": null
2012-03-05 14:49:33,795 ERROR [org.modeshape.repository.sequencer.SequencingService] (modeshape-1-thread-10) Error while sequencer Teiid Model Sequencer is sequencing node default=></{}files/{}oracle_func/{}oraclev.xmi/{http://www.jcp.org/jcr/1.0}content && [{http://www.modeshape.org/1.0}uuid = eb45d45a-a977-49ec-ac53-00b31627b4a4]>
org.modeshape.repository.sequencer.SequencerException: java.lang.NullPointerException
	at org.modeshape.repository.sequencer.StreamSequencerAdapter.execute(StreamSequencerAdapter.java:198)
	at org.modeshape.repository.sequencer.SequencingService.processChange(SequencingService.java:498)
	at org.modeshape.repository.sequencer.SequencingService$RepositoryObserver$1.run(SequencingService.java:666)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(UnknownSource)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(UnknownSource)
	at java.lang.Thread.run(Unknown Source) Caused by: java.lang.NullPointerException
	at org.modeshape.sequencer.teiid.XmiGraphReader.references(XmiGraphReader.java:459)
	at org.modeshape.sequencer.teiid.XmiModelReader$AnnotationHandler.process(XmiModelReader.java:723)
	at org.modeshape.sequencer.teiid.XmiModelReader.processObject(XmiModelReader.java:373)
	at org.modeshape.sequencer.teiid.XmiModelReader.writePhase1(XmiModelReader.java:227)
	at org.modeshape.sequencer.teiid.XmiModelReader.write(XmiModelReader.java:186)
	at org.modeshape.sequencer.teiid.ModelSequencer.sequence(ModelSequencer.java:149)
	at org.modeshape.repository.sequencer.StreamSequencerAdapter.execute(StreamSequencerAdapter.java:180)
	... 5 more
{code}",2012/03/06 12:46 PM
MODE-1413,"Similar to https://issues.jboss.org/browse/MODE-1251, the same change has to be done for 2.8.1",2012/03/06 9:49 AM
MODE-1408,"Changing/registering a namespace with the namespace registry does not trigger any internal events (and therefore doesn't trigger any observation events)

This has come up while porting the JcrObservationManagerTest#shouldReceiveEventsForChangesToRepositoryNamespacesInSystemContent test. If this test case does not apply to 3.x anymore, it should be removed.",2012/03/02 10:05 AM
MODE-1406,"Using the following node definitions
{noformat}
[A] > mix:versionable
  - name (string) copy
  + b (B) multiple copy
  + c (C) multiple copy

[B]
  - name (string) copy
  + c (C) multiple copy

[C] > mix:shareable
  - name (string) copy
{noformat}
When I run the following bit of code (full code in the forum post) with an existing simple tree of nodes that is /a/b/c I get a ConstraintViolationException.
{code}
71:  versionManager.checkout(a.getPath());
72:  workspace.clone(workspace.getName(), c.getPath(), ""/a/c"", false);
73:  versionManager.checkin(a.getPath());
{code}


The code is trying to clone the node at /a/b/c to /a/c which should create a shared node that is at both /a/b/c and at /a/c. The clone operation works fine but I get the exception at the line that does the checkin.
 
The error is:
 
{noformat}
javax.jcr.nodetype.ConstraintViolationException: Cannot find a definition for the child node named 'c' on the node at '/a' with primary type 'A' and mixin types: []
          at org.modeshape.jcr.SessionCache.save(SessionCache.java:509)
          at org.modeshape.jcr.AbstractJcrNode.save(AbstractJcrNode.java:2256)
          at org.modeshape.jcr.JcrVersionManager.checkin(JcrVersionManager.java:384)
          at org.modeshape.jcr.JcrVersionManager.checkin(JcrVersionManager.java:1738)
          at au.com.infomedix.documentstore.cnd.TestSharedVersioned.main(TestSharedVersioned.java:73)
Caused by: org.modeshape.graph.session.ValidationException: Cannot find a definition for the child node named 'c' on the node at '/a' with primary type 'A' and mixin types: []
          at org.modeshape.jcr.SessionCache$JcrNodeOperations.preSave(SessionCache.java:2930)
          at org.modeshape.graph.session.GraphSession$4.finishParentAfterLoading(GraphSession.java:1115)
          at org.modeshape.graph.session.GraphSession$LoadAllChildrenVisitor.finish(GraphSession.java:3449)
          at org.modeshape.graph.session.GraphSession$Node.onChangedNodes(GraphSession.java:3182)
          at org.modeshape.graph.session.GraphSession.save(GraphSession.java:1112)
          at org.modeshape.jcr.SessionCache.save(SessionCache.java:507)
          ... 4 more
{noformat}

If I change the type of the child node c in node A to ""nt:base"" then the error goes away and it works as expected.
ie:
 
{noformat}
[A] > mix:versionable
  - name (string) copy
  + b (B) multiple copy
  + c (nt:base) multiple copy
{noformat}
",2012/02/28 4:05 PM
MODE-1405,"Hello,

i tried ModeShape 3.0.0.Alpha1 today, but got stuck by an error I cant seem to solve. I set up a quite easy repo:

{code:javascript}
{
    ""name"":""wwRepo"",
    ""jndiName"":"""",
    ""security"":{
        ""jaas"":{
            ""policyName"":""""
        },
        ""anonymous"":{
            ""roles"":[""readonly"", ""readwrite"", ""admin""],
            ""username"":""<anonymous>"",
            ""useOnFailedLogin"":true
        }
    },
    ""sequencing"":{
        ""removeDerivedContentWithOriginal"":true,
        ""sequencers"":[
            {
                ""description"":""CND Sequencer Same Location"",
                ""type"":""CNDSequencer"",
                ""pathExpressions"":[ ""default://(*.cnd)/jcr:content[@jcr:data]"" ]
            }
        ]
    }
}
{code}

Beside this, I startup my default app an registering nods via CND:

{code}
[#|2012-02-28T15:02:40.192+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - JcrRepository              - Initializing ModeShape version 3.0.0.Alpha1|#]
[#|2012-02-28T15:02:40.221+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - TransientBinaryStore       - ModeShape is using the following directory for transient storage of binary values: /var/folders/ql/9xg715td53s6prn53sj9szkw0000gn/T|#]
[#|2012-02-28T15:02:41.429+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - GlobalComponentRegistry    - ISPN000128: Infinispan version: Infinispan 'Brahma' 5.1.0.BETA3|#]
[#|2012-02-28T15:02:41.429+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - GlobalComponentRegistry    - ISPN000128: Infinispan version: Infinispan 'Brahma' 5.1.0.BETA3|#]
...
[#|2012-02-28T15:02:42.501+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - BrixRepositoryInitializer  - Registering Brix JCR Namespace: brix|#]
[#|2012-02-28T15:02:42.539+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:node in workspace default|#]
[#|2012-02-28T15:02:42.569+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:folder in workspace default|#]
[#|2012-02-28T15:02:42.572+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:tile in workspace default|#]
[#|2012-02-28T15:02:42.573+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:hidden in workspace default|#]
[#|2012-02-28T15:02:42.575+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:globalContainer in workspace default|#]
[#|2012-02-28T15:02:42.577+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:tilePage in workspace default|#]
[#|2012-02-28T15:02:42.580+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:tileTemplate in workspace default|#]
[#|2012-02-28T15:02:42.581+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - Brix                       - Registering node type: brix:webDavContainer in workspace default|#]
[#|2012-02-28T15:02:42.610+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|INFO  - WicketApplication          - try to import into: bx_ZbsPajcasCzwuZNlkmGmKWqKq|#]
...
{code}

but then I get an error when I try to import an XML file into a new Repository:

{code}
[#|2012-02-28T15:02:42.716+0100|INFO|glassfish3.1.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=17;_ThreadName=Thread-4;|ERROR - WicketApplication      	- Exception in WicketApplication init()java.lang.RuntimeException: Could not initialize workspace with Brix
.....
Caused by: org.brixcms.jcr.exception.JcrException: javax.jcr.nodetype.ConstraintViolationException: Cannot find a definition for the property named 'jcr:createdBy' on the node at '/brix:root' with primary type 'nt:folder' and mixin types: [brix:node]
    at org.brixcms.jcr.SessionBehavior.handleException(SessionBehavior.java:78)
    at org.brixcms.jcr.api.wrapper.AbstractWrapper.handleException(AbstractWrapper.java:91)
    at org.brixcms.jcr.api.wrapper.AbstractWrapper.executeCallback(AbstractWrapper.java:108)
    at org.brixcms.jcr.api.wrapper.SessionWrapper.importXML(SessionWrapper.java:338)
    at de.whiskyworld.shop.web.WicketApplication.initDefaultWorkspace(WicketApplication.java:182)
    ... 44 more
Caused by: javax.jcr.nodetype.ConstraintViolationException: Cannot find a definition for the property named 'jcr:createdBy' on the node at '/brix:root' with primary type 'nt:folder' and mixin types: [brix:node]
    at org.modeshape.jcr.AbstractJcrNode.setProperty(AbstractJcrNode.java:1515)
    at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.create(JcrContentHandler.java:732)
    at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.node(JcrContentHandler.java:567)
    at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.finish(JcrContentHandler.java:552)
    at org.modeshape.jcr.JcrContentHandler$SystemViewContentHandler.startElement(JcrContentHandler.java:923)
    at org.modeshape.jcr.JcrContentHandler.startElement(JcrContentHandler.java:359)
    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.startElement(AbstractSAXParser.java:501)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:400)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2756)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
    at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:140)
    at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
    at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
    at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
    at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1205)
    at org.modeshape.jcr.JcrSession.importXML(JcrSession.java:1091)
    at org.brixcms.jcr.base.wrapper.SessionWrapper.importXML(SessionWrapper.java:241)
    at org.brixcms.jcr.api.wrapper.SessionWrapper$26.execute(SessionWrapper.java:340)
    at org.brixcms.jcr.api.wrapper.AbstractWrapper.executeCallback(AbstractWrapper.java:106)
    ... 46 more
{code}

So, ModeShape complains about jcr:createdBy elements that got specified by the CND just 5 loglines ago;",2012/02/28 9:11 AM
MODE-1404,"Executing TestModeShapeConfiguration, I receive the following exception:

{code}
10:59:20,814 ERROR MSC00001: Failed to start service jboss.modeshape.repository.sample1
org.jboss.msc.service.StartException in service jboss.modeshape.repository.sample1: Failed to start service
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1786)
	at org.jboss.msc.service.ServiceControllerImpl$ClearTCCLTask.run(ServiceControllerImpl.java:2291)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ExceptionInInitializerError
	at org.modeshape.jcr.value.binary.AbstractBinaryStore.<init>(AbstractBinaryStore.java:61)
	at org.modeshape.jcr.value.binary.FileSystemBinaryStore.<init>(FileSystemBinaryStore.java:90)
	at org.modeshape.jcr.value.binary.TransientBinaryStore.<init>(TransientBinaryStore.java:77)
	at org.modeshape.jcr.value.binary.TransientBinaryStore.<clinit>(TransientBinaryStore.java:42)
	at org.modeshape.jcr.ExecutionContext.<init>(ExecutionContext.java:186)
	at org.modeshape.jcr.ExecutionContext.<init>(ExecutionContext.java:105)
	at org.modeshape.jcr.ExecutionContext.<clinit>(ExecutionContext.java:74)
	at org.modeshape.jcr.JcrRepository.initializeDescriptors(JcrRepository.java:695)
	at org.modeshape.jcr.JcrRepository.<init>(JcrRepository.java:209)
	at org.modeshape.jcr.JcrEngine.deploy(JcrEngine.java:503)
	at org.modeshape.jcr.JcrEngine.deploy(JcrEngine.java:462)
	at org.modeshape.jboss.service.RepositoryService.start(RepositoryService.java:62)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1765)
	... 4 more
Caused by: java.lang.NullPointerException
	at org.modeshape.common.util.MimeTypeUtil.getDefaultMappings(MimeTypeUtil.java:145)
	at org.modeshape.common.util.MimeTypeUtil.<init>(MimeTypeUtil.java:99)
	at org.modeshape.common.util.MimeTypeUtil.<init>(MimeTypeUtil.java:72)
	at org.modeshape.jcr.mimetype.ExtensionBasedMimeTypeDetector.<init>(ExtensionBasedMimeTypeDetector.java:37)
	at org.modeshape.jcr.mimetype.ExtensionBasedMimeTypeDetector.<clinit>(ExtensionBasedMimeTypeDetector.java:39)
	... 17 more
{code}",2012/02/17 1:24 PM
MODE-1401,"When checking in a versionable node, that node and its subgraph should be read-only. In particular, Section 15.2.2 of the JCR 2.0 specification has the relevant bits:

{quote}
When a versionable node is checked in, it and its subgraph become read-only. The effect of read-only status on a node depends on the on-parent-version (OPV) status of each of its child items.

When a node {{N}} becomes read-only:
* No property of {{N}} can be added, removed or have its value changed unless it has an on-parent-version setting of {{IGNORE}}.
* No child node of {{N}} can be added or removed unless it has an on-parent-version setting of {{IGNORE}}.
* Every existing child node of {{N}} becomes read-only unless it has an on- parent-version setting of {{IGNORE}} or has an on-parent-version setting of {{VERSION}} and is itself versionable.
{quote}

Apparently we restrict the adding/modification/removal of properties (tho we should verify that with additional tests), but we do not restrict the adding or removal of nodes. Additionally, even when the OPV setting of a child node definition is {{VERSION}}, the expected behavior differs depending upon whether the actual child node is versionable.

Consider these node types:

{code}
[A] > mix:versionable
  - name (string) copy
  + b (B) multiple version

[B]
  - name (string) copy
{code}

and this code:

{code:java}
Node root = session.getRootNode();
Node a    = root.addNode(""node"", ""A"");
a.setProperty(""name"", ""aaa"");
session.save();
versionManager.checkin(a.getPath());
// The next call is correctly prevented ...
// a.setProperty(""name"", ""aaa"");

// But the next call should result in an exception, but doesn't
Node b = a.addNode(""b"", ""B"");
session.save();

// This shouldn't be possible either ...
b.remove();

session.save();
{code}

The {{a.setProperty(""name"", ""aaa"")}} statement (commented out) is not possible without an exception:

{code}
javax.jcr.version.VersionException: '/node' (or its nearest versionable ancestor) is checked in, preventing this action
          at org.modeshape.jcr.JcrNode.doRemove(JcrNode.java:118)
          at org.modeshape.jcr.AbstractJcrNode.removeShare(AbstractJcrNode.java:2415)
          at org.modeshape.jcr.AbstractJcrNode.remove(AbstractJcrNode.java:2458)
          at au.com.infomedix.documentstore.cnd.TestLoadCND.main(TestLoadCND.java:88)
{code}

However, the {{a.addNode(""b"", ""B"")}} should not be possible either without an exception. And once there is a child named 'b', whether its properties can be changed depends on whether 'b' is versionable. Currently, setting a property on 'b' when 'a' is checked out is not currently possible, even when 'b' is versionable.

See the forum post for more context and detail.",2012/02/14 2:34 PM
MODE-1400,When NodeTypeManager.registerNodeTypes() is called with a CND file that contains a syntax error then the error is not reported and no nodes are registered. A full description of the problem is given in [this thread|https://community.jboss.org/thread/195097],2012/02/12 6:05 PM
MODE-1391,This was an oversight. The JSON Schema for the repository configuration does not allow the location of the filesystem binary store to be specified.,2012/01/27 6:26 PM
MODE-1377,"I created a straightforward WAR having the ModeShape WebDAV Servlet, configured one repository ""bolehaja"" with a few workspaces.

Accessing via WebDAV is OK, however via plain HTTP there is a slight problem.

This URL is working well:

{code}
http://localhost:8080/bolehaja-dav/bolehaja
{code}

However this URL throws 500 error:

{code}
http://localhost:8080/bolehaja-dav/bolehaja/
{code}

{code}
$ curl -v 'http://localhost:8080/bolehaja-d                 
* About to connect() to localhost port 8080 (#0)
*   Trying 127.0.0.1... connected
* Connected to localhost (127.0.0.1) port 8080 (#0)
> GET /bolehaja-dav/bolehaja/ HTTP/1.1
> User-Agent: curl/7.21.6 (x86_64-pc-linux-gnu) libcurl/7.21.6 OpenSSL/1.0.0e zlib/1.2.3.4 libidn/1.22 librtmp/2.3
> Host: localhost:8080
> Accept: */*
> 
< HTTP/1.1 500 Internal Server Error
< Server: Apache-Coyote/1.1
< Content-Type: text/html;charset=utf-8
< Content-Length: 1002
< Date: Mon, 23 Jan 2012 13:28:52 GMT
< Connection: close
< 
* Closing connection #0
<html><head><title>JBoss Web/7.0.7.Final - Error report</title><style><!--H1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} H2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} H3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} BODY {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} B {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} P {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;}A {color : black;}A.name {color : black;}HR {color : #525D76;}--></style> </head><body><h1>HTTP Status 500 - </h1><HR size=""1"" noshade=""noshade""><p><b>type</b> Status report</p><p><b>message</b> <u></u></p><p><b>description</b> <u>The server encountered an internal error () that prevented it from fulfilling this request.</u></p><HR size=""1"" noshade=""noshade""><h3>JBoss Web/7.0.7.Final</h3></body></html>
{code}

The log when access is OK (no trailing slash):

{code}
20:33:09,000 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja"" resolved to ""/bolehaja/nullnull""
20:33:09,002 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja"" resolved to ""/bolehaja/nullnull""
20:33:09,008 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja/dev"" resolved to ""/bolehaja/dev/""
20:33:09,012 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja/staging"" resolved to ""/bolehaja/staging/""
20:33:09,015 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja/prod"" resolved to ""/bolehaja/prod/""
{code}

Log when error (with trailing slash):

{code}
20:33:18,348 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja/"" resolved to ""/bolehaja/nullnull""
20:33:18,351 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja/"" resolved to ""/bolehaja/nullnull""
20:33:18,357 FINE  [org.modeshape.web.jcr.webdav.ModeShapeWebdavStore] (http--127.0.0.1-8080-2) WebDAV getStoredObject at ""/bolehaja//dev"" resolved to ""/bolehaja//dev""
{code}

Note that accessing workspaces work either way:

http://localhost:8080/bolehaja-dav/bolehaja/prod
http://localhost:8080/bolehaja-dav/bolehaja/prod/
",2012/01/23 8:32 AM
MODE-1374,"I am working on a ""resource"" controller using the latest Spring3 and JBoss Modeshape (pointing to a federated repository using the Filesystem connectors) to retrieve an asset.

When I access any webpage, using the controller, it returns most of the images then throws a NullPointerException in the ""getNode"" call at various other ones...

On my end, I am not doing anything special (my test cases work fine):

# Create/configure the engine (only once)
# Login and get a session
# Try to find the node
# Logout from the session

The code pretty much looks like (no custom CND is being used):

{code:java}
session = createSession(); 
Node node = session.getNode(path); 
{code}

After the first hit to the page (with errors), every hit after that works perfect and everything loads fine from then out.

I am following this link Heavy Concurrency: A better way to manage JCR Sessions for the session creation/management.

It appears as if I have multiple threads trying to configure the JcrNodeDefinition in Modeshape. If i mark the enureRequirePrimaryTypesLoaded() method as synchronized then I do not get the error ever.

The stack trace is:

{code}
java.lang.NullPointerException
          at org.modeshape.jcr.JcrNodeDefinition.ensureRequiredPrimaryTypesLoaded(JcrNodeDefinition.java:121)
          at org.modeshape.jcr.JcrNodeDefinition.allowsChildWithType(JcrNodeDefinition.java:249)
          at org.modeshape.jcr.RepositoryNodeTypeManager.findChildNodeDefinition(RepositoryNodeTypeManager.java:1142)
          at org.modeshape.jcr.RepositoryNodeTypeManager.findChildNodeDefinition(RepositoryNodeTypeManager.java:1161)
          at org.modeshape.jcr.JcrNodeTypeManager.findChildNodeDefinition(JcrNodeTypeManager.java:433)
          at org.modeshape.jcr.SessionCache$JcrNodeOperations.materialize(SessionCache.java:2711)
          at org.modeshape.graph.session.GraphSession.findNodeRelativeTo(GraphSession.java:535)
          at org.modeshape.graph.session.GraphSession.findNodeWith(GraphSession.java:398)
          at org.modeshape.graph.session.GraphSession.findNodeWith(GraphSession.java:381)
          at org.modeshape.jcr.SessionCache.findNode(SessionCache.java:532)
          at org.modeshape.jcr.SessionCache.findJcrNode(SessionCache.java:643)
          at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:838)
          at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:703)
          at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:96)
          at com.acme.contents.ModeshapeManagerBean.findNode(ModeshapeManagerBean.java:67)
          at com.acme.contents.ModeshapeManagerBean.findNode(ModeshapeManagerBean.java:50)
          at com.acme.views.ResourceController.getStream(ResourceController.java:69)
          at comacme.views.ResourceController.handleResource(ResourceController.java:46)
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
          at java.lang.reflect.Method.invoke(Method.java:597)
          at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:212)
          at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:126)
          at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:96)
          at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:6
{code}",2012/01/18 9:13 AM
MODE-1373,The MS Office sequencer's CND file does not reflect the actual output generated by the sequencer.,2012/01/16 9:19 AM
MODE-1364,"A JCR-SQL2 join that uses a REFERENCE property in the join clause returns 0 records, even when it should return some records. A good test case is given in the forum.

Unfortunately, no workaround exists.",2012/01/03 2:18 PM
MODE-1362,"The DDL sequencer code does generate graph output, but the graph does not adhere to the structured defined in the CND node types. IOW, the generated output is not valid JCR output. Some of these problems are errors in the CND, but other problems are issues in the sequencer code.

BTW, this was not caught in our tests for a couple of reasons. First, the sequencers use the graph API to generate content, and tho this is expected to adhere to the types, the sequencing framework doesn't actually verify this (since the graph API doesn't know about types). Instead, we've relied upon integration tests to run the sequencers in the context of JCR, and we do have some integration tests for the DDL sequencer. However, none of the DDL sequencer integration tests appear to work; they're all looking for a node and only continuing if that node exists -- of course the tests never find that node, so the meat of the integration tests are never run.

Another complicating factor that might help explain why this issue was not noticed is because of the way the sequencing framework and the JCR layer validation both work. Since the sequencers *do* parse the DDL and generate output, that output *is* persisted in the store. Reading that output via JCR might work actually work, depending upon how much the JCR layer validates the *already-persisted* content. The content might also be accessible via querying, since processing the query doesn't require JCR validation.

In short, we have to fix the DDL sequencer code so that it produces output that IS valid per the CND types. Note that this is likely to require changes to both the sequencer code and the CND node types.",2012/01/03 9:40 AM
MODE-1361,"The following path expressions aren't being parsed & interpreted correctly:

1) ""default://(*.cnd)[/jcr:content@jcr:data]"" will not match (i.e. will not be triggered) for ""default://images.cnd/jcr:content@jcr:data""
2) ""default://(*.class)/jcr:content[@jcr:data] => /classes/$1"" will create for a matched input of: default:/TestClass.class the following output: default://classes/TestClass.class/TestClass.class",2011/12/26 8:51 AM
MODE-1356,"The current java.nio.FileLock based implementation doesn't work on Windows, because on this platform all the filelocks are exclusive and are related to the file descriptors.",2011/12/20 11:31 AM
MODE-1350,"When re-indexing an entire workspace, the SearchIndexer walks through the content by reading subgraphs, where each subgraph depth is dictated by the ""indexReadDepth"" repository option. The SearchIndexer code is structured to not hold onto the subgraphs longer than needed, to allow garbage collection to reclaim memory as the indexer walks through the content.

However, the SearchIndexer is inadvertently holding onto all of the requests, preventing them from being garbage collected. Normally this isn't a problem, except for very large repositories or repositories that contain large binary values. The result is an OutOfMemoryError.

The culprit turns out to be the SearchIndexer's use of CompositeRequestChannel, which is actually keeping all processed requests in a list; this is necessary in other situations, like the federation connector, where not a significant number of requests are processed. In the case of the SearchIndexer, the number of requests could be very significant. Since the SearchIndexer never re-processes the requests, in this case the CompositeRequestChannel can be configured to not accumulate the processed requests.",2011/12/17 9:02 AM
MODE-1349,"LargeValueEntity can be, well, large. If cached they may lead to OOM situation",2011/12/16 9:14 AM
MODE-1347," 
Setup: jboss as 6, latest modeshape.

Started 30 requests in parallel in got stuck (nothing is happening)

Taking a threads dump and looking at the code, it seems to me that we have a race condition in RepositoryConnectionPool.

 
When we try to get a connection we do first (only the interesting part is shown):

{code:java}
mainLock.lock();

// Peek to see if there is a connection available ...
else if (this.availableConnections.peek() != null) {
    // There is, so take it and return it ...
    try {
        connection = this.availableConnections.take();
    } catch (InterruptedException e) {
        LOGGER.trace(""Cancelled obtaining a repository connection from pool {0}"", getSourceName());
        Thread.interrupted();
        throw new RepositorySourceException(getSourceName(), e);
    }
}
{code}

The race condition is between the 'peek' and the 'take'.

Reason is further down the same method we do:

{code:java}
if (connection == null) {
   // There are not enough connections, so wait in line for the
   // next available connection ...
   LOGGER.trace(""Waiting for a repository connection from pool {0}"", getSourceName());
   try {
       connection = this.availableConnections.take();
   } catch (InterruptedException e) {
       LOGGER.trace(""Cancelled obtaining a repository connection from pool {0}"", getSourceName());
       Thread.interrupted();
       throw new RepositorySourceException(getSourceName(), e);
   }
mainLock = this.mainLock;
mainLock.lock();
{code}
 
So we call 'take' here without holding the mainLock.

And this is IMO what happened.

I have a thread that is blocked in the first 'take' (after the 'peek') and another one that is stuck while trying to get the lock after calling 'take'.

This is this 'take' that went between the 'peek' and the 'take'.

Note I have 9 other threads that are trying to release the connections but are also blocked was tryng to get the lock and
this also explains why the first thread is stuck in 'take' as all the connections are taken.
",2011/12/14 9:26 AM
MODE-1327,"The {{JpsSource.setAllowsUpdates(boolean)}} method creates a new RepositorySourceCapabilities, but it uses a constructor that does not copy the {{RepositorySourceCapabilities.supportsAutomaticGarbageCollection()}} capability.",2011/12/05 11:52 AM
MODE-1315,"An  NPE occurs in a background thread when listening for Event.PROPERTY_REMOVED events, the watched nodes are restricted by a node type, and a property on the watched node type is deleted. The EvenListener is never called after the property deletion.

",2011/11/30 12:09 AM
MODE-1309,"1) Create a 2-level hierarchy of nodes with 2 int properties - foo & bar.
The following query should work:
{code}
""SELECT a.foo AS aVal, b.bar AS bVal 
FROM [nt:unstructured] AS a INNER JOIN [nt:unstructured] AS b ON a.foo = b.bar 
WHERE a.foo = "" + fooValue;
{code}
but results in the following error: 
{code}
javax.jcr.RepositoryException: Column 'foo' does not exist on the table '__ALLNODES__'
{code}

2) Create a 3-level hierarchy of nodes with 3 int properties - foo , bar & baz
The following query should work:
{code}
""SELECT a.foo AS aVal, b.bar AS bVal, c.baz AS cVal 
FROM [nt:unstructured] AS a INNER JOIN [nt:unstructured] AS b 
  ON a.foo = b.bar INNER JOIN [nt:unstructured] AS c ON b.bar = c.baz 
WHERE a.foo = "" + randFooValue;
{code}
but results in the following error:
{code}
javax.jcr.RepositoryException: Column 'foo' does not exist on the table '__ALLNODES__'
{code}",2011/11/22 8:52 AM
MODE-1306,"If one grabs current modeshape 2.7 from trunk and does: mvn clean install -s settings.xml -DskipTests 
then jetty is startet in many moduls even no tests are run and after saying ""test skipped"" again shut down - increases time required for build process (it took 3:34 mins on my machine)",2011/11/15 9:56 AM
MODE-1302,"Following code fragment will produce javax.jcr.PathNotFoundException: Unable to find ""{}outerFolder[2]/{}innerFolder/{}testFile.dat""; lowest existing path is ""/"". 
Occurs for inmemory and jpa repositories.

{code}
Repository repository = RepositoryReferenceFactory.getRepository(""test-inmemory"");
Session session = repository.login();
VersionManager vm = session.getWorkspace().getVersionManager();
		
Node outer = session.getRootNode().addNode(""outerFolder"");
Node inner = outer.addNode(""innerFolder"");
Node file  = inner.addNode(""testFile.dat"");
file.setProperty(""jcr:mimeType"", ""text/plain"");
file.setProperty(""jcr:data"", ""Original content"");
session.save();
		
isVersionable(vm, file);
file.addMixin(""mix:versionable"");
session.refresh(true);
isVersionable(vm, file);
{code}

{code}
boolean isVersionable(VersionManager vm, Node node) throws RepositoryException {
    try {
        vm.getVersionHistory(node.getPath());
        return true;
    } catch (UnsupportedRepositoryOperationException e) {
        return false;
    }
}
{code}",2011/11/09 8:55 AM
MODE-1296,"Using the PartsVirtual.xmi model that used in the unit test for the teiid sequencer.

1)  attached is the test.log that prints when ModelSequencerTest.shouldSequencePartsSupplierVirtualRelationalModel test is run.   It shows the transformation thats defined for SupplierInfo

2)  published the model to a SOA server, used the jdbc.war, using jndi name java:ModeShapeDS, issue query: select * from [transform:withSql]         and it returned zero rows.

3)  used the FireFox json plugin to view Supplier info:  http://localhost:8080/modeshape-rest/eds/default/items/sequenced/teiid/models/teiid/PartsVirtual/SupplierInfo
(see attachment)  and its there:

{code}
""transform:selectSql"": ""SELECT PartSupplier_Oracle.SUPPLIER_PARTS.SUPPLIER_ID, PartSupplier_Oracle.SUPPLIER_PARTS.PART_ID, PartSupplier_Oracle.SUPPLIER_PARTS.QUANTITY, PartSupplier_Oracle.SUPPLIER_PARTS.SHIPPER_ID, PartsSupplier_SQLServer.SUPPLIER.SUPPLIER_NAME, PartsSupplier_SQLServer.SUPPLIER.SUPPLIER_STATUS, PartsSupplier_SQLServer.SUPPLIER.SUPPLIER_CITY, PartsSupplier_SQLServer.SUPPLIER.SUPPLIER_STATE FROM PartSupplier_Oracle.SUPPLIER_PARTS, PartsSupplier_SQLServer.SUPPLIER WHERE PartSupplier_Oracle.SUPPLIER_PARTS.SUPPLIER_ID = PartsSupplier_SQLServer.SUPPLIER.SUPPLIER_ID"",
{code}

Not sure why its not coming thru the jdbc interface. ",2011/11/04 4:34 PM
MODE-1282,"Infinispan connector produce NullPointerException when CacheManager is loaded from JNDI.

NPE occurs in line 193 of InfinispanSource:
object = super.getContext().lookup(jndiName);
super.getContext() returns null
also setContext() method is never called.",2011/10/24 9:15 AM
MODE-1277,"I'm trying to do is to query some properties of parent and child node together, below is the JCR_SQL2:

{code:sql}
SELECT parent.title, child.age 
FROM [nt:unstructured] as parent
FULL OUTER JOIN [nt:unstructured] as child ON ISCHILDNODE(child, parent)
WHERE child.age =10
{code}
 
the QueryResult.getColumnName() returns [""title"", ""age""], but I got the follow exception while I try to call Row.getValue(""title"") method

{code}
java.lang.ArrayIndexOutOfBoundsException: 14
          at org.modeshape.jcr.query.JcrQueryResult$MultiSelectorQueryResultRow.getValue(JcrQueryResult.java:651)
          at javax.jcr.query.Row$getValue.call(Unknown Source)
{code}
",2011/10/07 10:34 AM
MODE-1270,"When using JAAS authentication and not supplying credentials, ModeShape's Repository.login(...) methods result in a session that does not contain the proper user ID. This is because ModeShape uses the following call to obtain the Subject:

{code:java}
Subject subject = Subject.getSubject(AccessController.getContext());
{code}

However, when running within a J2EE container, the resulting 'subject' is null! 

The fact that the standard Java API to access the Subject from the JAAS LoginContext does *not* work within J2EE and the app server is very troubling, but apparently this is a problem that is well-known in J2EE circles (of which I am clearly not a member).

According to Kurt, the Guvnor code obtains the Subject from the Seam context. If this is true (and acceptable), perhaps the easiest way to fix this is to enhance ModeShape to define an additional JCR Credentials class that allows this Subject to be passed into ModeShape. This new Credentials class should then be used in J2EE applications that use ModeShape with JAAS security.

I still have not heard back from Anil or Shane as to the ""proper"" way to grab the Subject. If there's no other way than the Seam context, we may have to add the new Credentials implementation.",2011/09/21 11:17 PM
MODE-1269,"The [JcrSession.reindex(...)|https://github.com/ModeShape/modeshape/blob/master/modeshape-jcr/src/main/java/org/modeshape/jcr/JcrSession.java#L1312] methods are public, but the JcrSession class is package protected, which means the methods are not visible or usable by callers.  These need to be made public by adding them to the ModeShape JCR API interfaces.

I also wonder if these methods should be moved to JcrWorkspace instead. Plus, we probably need forms that are asynchronous.",2011/09/21 11:17 AM
MODE-1267,"I published CND file into default repository. Publishing went fine, but when try to look at file's content (jcr:content node) I received NPE.

I queried file content through REST interface (using curl utility), I issued this command: 

{code}
curl -u admin:admin -X GET http://127.0.0.1:8080/modeshape-rest/eds/default/items/test.cnd/jcr:content
{code}
and I got this exception:

{code}
16:34:14,500 ERROR [[Resteasy]] Servlet.service() for servlet Resteasy threw exception
org.jboss.resteasy.spi.UnhandledException: java.lang.NullPointerException
	at org.jboss.resteasy.core.SynchronousDispatcher.handleApplicationException(SynchronousDispatcher.java:263)
	at org.jboss.resteasy.core.SynchronousDispatcher.handleException(SynchronousDispatcher.java:169)
	at org.jboss.resteasy.core.SynchronousDispatcher.handleInvokerException(SynchronousDispatcher.java:146)
	at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:456)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:418)
	at org.jboss.resteasy.core.SynchronousDispatcher.invoke(SynchronousDispatcher.java:111)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:217)
	at org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher.service(HttpServletDispatcher.java:159)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:717)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:290)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.jboss.web.tomcat.filters.ReplyHeaderFilter.doFilter(ReplyHeaderFilter.java:96)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:235)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)
	at org.jboss.web.tomcat.security.SecurityAssociationValve.invoke(SecurityAssociationValve.java:183)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:525)
	at org.jboss.web.tomcat.security.JaccContextValve.invoke(JaccContextValve.java:95)
	at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.process(SecurityContextEstablishmentValve.java:126)
	at org.jboss.web.tomcat.security.SecurityContextEstablishmentValve.invoke(SecurityContextEstablishmentValve.java:70)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102)
	at org.jboss.web.tomcat.service.jca.CachedConnectionValve.invoke(CachedConnectionValve.java:158)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:330)
	at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:829)
	at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:599)
	at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:451)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NullPointerException
	at org.modeshape.jcr.SelfClosingInputStream.<init>(SelfClosingInputStream.java:58)
	at org.modeshape.jcr.JcrBinary.getStream(JcrBinary.java:75)
	at org.modeshape.web.jcr.rest.AbstractHandler.jsonEncodedStringFor(AbstractHandler.java:75)
	at org.modeshape.web.jcr.rest.ItemHandler.jsonFor(ItemHandler.java:194)
	at org.modeshape.web.jcr.rest.ItemHandler.getItem(ItemHandler.java:97)
	at org.modeshape.web.jcr.rest.JcrResources.getItem(JcrResources.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.resteasy.core.MethodInjectorImpl.invoke(MethodInjectorImpl.java:124)
	at org.jboss.resteasy.core.ResourceMethod.invokeOnTarget(ResourceMethod.java:247)
	at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:212)
	at org.jboss.resteasy.core.ResourceMethod.invoke(ResourceMethod.java:202)
	at org.jboss.resteasy.core.SynchronousDispatcher.getResponse(SynchronousDispatcher.java:441)
	... 26 more
{code}

Steps to reproduce:

* unzip reproducer and invoke mvn package
* deploy webapp into server
* run http://localhost:8080/wsdl-reproducer/wsdl?repository=eds&workspace=default",2011/09/21 10:42 AM
MODE-1263,"- The Query is not addressing those existing nodes inside the FileSystem Connector's repository before the Session start. So, the query will just return Root node even though the repository already have multiple folder or files. 
- The Query is only address those nodes created (save or not saved) after Session start. 
- This Query problem confirmed happen to FileSystem connector (as tested so far using Standalone or App Server), whereas for Disk,Database,InMemory connectors, the Query is working just fine. Not tested with other type of connector yet.
- Putting Thread.sleep(3000) before Query.execute won't help.
- Related unit @Test is at \modeshape-integration-tests\src\test\java\org\modeshape\test\integration\filesystem\FileSystemRepositoryIntegrationTest.java
 ",2011/09/13 12:35 PM
MODE-1257,"When attempting to delete a property by setting it to null, Modeshape throws an exception when ModeShape is configured to use the federation connector:

{code}
Caused by: javax.jcr.RepositoryException: java.lang.ClassCastException: org.modeshape.graph.request.RemovePropertyRequest cannot be cast to org.modeshape.graph.request.SetPropertyRequest
    at org.modeshape.jcr.SessionCache.save(SessionCache.java:480)
    at org.modeshape.jcr.JcrSession.save(JcrSession.java:1309)
    at com.montanesolutions.mcr.component.NodeAction.deleteProperty(NodeAction.java:119)

Caused by: org.modeshape.graph.connector.RepositorySourceException: java.lang.ClassCastException: org.modeshape.graph.request.RemovePropertyRequest cannot be cast to org.modeshape.graph.request.SetPropertyRequest
    at org.modeshape.graph.session.GraphSession.save(GraphSession.java:1052)
    at org.modeshape.jcr.SessionCache.save(SessionCache.java:474)
    ... 88 more

Caused by: java.lang.ClassCastException: org.modeshape.graph.request.RemovePropertyRequest cannot be cast to org.modeshape.graph.request.SetPropertyRequest
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:924)
    at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:303)
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:195)
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:145)
    at org.modeshape.graph.connector.federation.FederatedRepositoryConnection.execute(FederatedRepositoryConnection.java:225)
    at org.modeshape.graph.connector.RepositoryConnectionPool$ConnectionWrapper.execute(RepositoryConnectionPool.java:1129)
    at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:193)
    at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:183)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    ... 1 more
{code}
",2011/09/07 11:20 AM
MODE-1256,"An exception is thrown in session.save() after a call to session.move(""/path/to/a"", ""/path/to/b"").

The exception: 
{code}
Caused by: javax.jcr.RepositoryException: java.lang.IllegalArgumentException: The actual location of </{}infinispan/{}node1 && [{http://www.modeshape.org/1.0}uuid = 535660a4-0f8b-49fc-ae5f-ea7ae61ce02e]> is not equal to the current location of </{}infinispan && [{http://www.modeshape.org/1.0}uuid = cafebabe-cafe-babe-cafe-babecafebabe]>
    at org.modeshape.jcr.SessionCache.save(SessionCache.java:480)
    at org.modeshape.jcr.JcrSession.save(JcrSession.java:1309)
    at com.montanesolutions.mcr.component.NodeAction.renameNode(NodeAction.java:126)
    ... more

Caused by: org.modeshape.graph.connector.RepositorySourceException: java.lang.IllegalArgumentException: The actual location of </{}infinispan/{}node1 && [{http://www.modeshape.org/1.0}uuid = 535660a4-0f8b-49fc-ae5f-ea7ae61ce02e]> is not equal to the current location of </{}infinispan && [{http://www.modeshape.org/1.0}uuid = cafebabe-cafe-babe-cafe-babecafebabe]>
    at org.modeshape.graph.session.GraphSession.save(GraphSession.java:1052)
    at org.modeshape.jcr.SessionCache.save(SessionCache.java:474)
    ... 86 more

Caused by: java.lang.IllegalArgumentException: The actual location of </{}infinispan/{}node1 && [{http://www.modeshape.org/1.0}uuid = 535660a4-0f8b-49fc-ae5f-ea7ae61ce02e]> is not equal to the current location of </{}infinispan && [{http://www.modeshape.org/1.0}uuid = cafebabe-cafe-babe-cafe-babecafebabe]>
    at org.modeshape.graph.request.MoveBranchRequest.setActualLocations(MoveBranchRequest.java:245)
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:1109)
    at org.modeshape.graph.request.processor.RequestProcessor.process(RequestProcessor.java:279)
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:195)
    at org.modeshape.graph.connector.federation.JoinRequestProcessor.process(JoinRequestProcessor.java:145)
    at org.modeshape.graph.connector.federation.FederatedRepositoryConnection.execute(FederatedRepositoryConnection.java:225)
    at org.modeshape.graph.connector.RepositoryConnectionPool$ConnectionWrapper.execute(RepositoryConnectionPool.java:1129)
    at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:193)
    at org.modeshape.graph.request.CompositeRequestChannel$2.call(CompositeRequestChannel.java:183)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    ... 1 more
{code}

The modeshape configuration is:

{code:xml}
<?xml version=""2.0"" encoding=""UTF-8""?>
<configuration xmlns:mode=""http://www.modeshape.org/1.0"" xmlns:jcr=""http://www.jcp.org/jcr/1.0"">
    <mode:repositories>
        <mode:repository jcr:name=""repository"" >
            <mode:source>federated</mode:source>
            <mode:options jcr:primaryType=""options"">
                <mode:option jcr:name=""projectNodeTypes"" mode:value=""true""/>
                <mode:option jcr:name=""jaasLoginConfigName"" mode:value=""modeshape""/>
                <mode:option jcr:name=""queryIndexDirectory"" mode:value=""${jboss.server.data.dir}/modeshape/repositories/store/indexes""/>
                <mode:option jcr:name=""queryIndexesUpdatedSynchronously"" mode:value=""true""/>
                <mode:option jcr:name=""queryIndexesRebuiltSynchronously"" mode:value=""true""/>
                <mode:option jcr:name=""rebuildQueryIndexOnStartup"" mode:value=""always""/>
            </mode:options>
        </mode:repository>
    </mode:repositories>

    <mode:sources jcr:primaryType=""nt:unstructured"">
        <mode:source jcr:name=""infinispan"" 
            mode:classname=""org.modeshape.connector.infinispan.RemoteInfinispanSource"" 
            mode:defaultWorkspaceName=""default"">
       </mode:source>
        <mode:source jcr:name=""filesystem"" 
            mode:classname=""org.modeshape.connector.filesystem.FileSystemSource""
            mode:description=""File System Source""
            mode:workspaceRootPath=""/home/mcr/content""
            mode:defaultWorkspaceName=""default""
            mode:creatingWorkspacesAllowed=""false""
            mode:rootNodeUuid=""a9bb5d79-f6c7-4bbc-a016-9453035b1b87""
            mode:updatesAllowed=""true"" 
            mode:exclusionPattern=""^.*\.modeshape$""
            mode:extraPropertiesBehavior=""store""/>
        <mode:source jcr:name=""federated"">
            <mode:classname>org.modeshape.graph.connector.federation.FederatedRepositorySource</mode:classname>
            <mode:workspaces>
                <mode:workspace jcr:name=""default"">
                    <mode:projections>
                    <mode:projection jcr:name=""infinispan projection"" mode:source=""infinispan"" mode:workspaceName=""default"">
                        <mode:projectionRules>/infinispan => /</mode:projectionRules>
                    </mode:projection>
                    <mode:projection jcr:name=""filesystem projection"" mode:source=""filesystem"" mode:workspaceName=""default"">
                        <mode:projectionRules>/filesystem => /</mode:projectionRules>
                    </mode:projection>
                    </mode:projections>
                </mode:workspace>
            </mode:workspaces>
        </mode:source>
    </mode:sources>
</configuration>
{code}",2011/09/07 11:16 AM
MODE-1255,"After checking in a subgraph (resulting in a new version in the history) where the OPV of a node in the subgraph used COPY, removing a 'mix:referenceable' node that is a child of a node that was COPIED into the version history, and then restoring the version noted, an exception occurs during the restore.

{code}
17:22:41,478 ERROR [STDERR] Caused by: javax.jcr.nodetype.ConstraintViolationException: Unable to determine a valid node definition for the node ""/{}VersionStorage/{}VersionedDocumentSections/{}DocumentSection[16]/{}Field"" in workspace ""workspace"" of ""JCR Portal""
17:22:41,479 ERROR [STDERR]     at org.modeshape.jcr.SessionCache$NodeEditor.createChild(SessionCache.java:1738)
17:22:41,479 ERROR [STDERR]     at org.modeshape.jcr.JcrVersionManager$RestoreCommand.restoreNode(JcrVersionManager.java:1116)
17:22:41,479 ERROR [STDERR]     at org.modeshape.jcr.JcrVersionManager$RestoreCommand.execute(JcrVersionManager.java:969)
17:22:41,479 ERROR [STDERR]     at org.modeshape.jcr.JcrVersionManager.restore(JcrVersionManager.java:698)
17:22:41,481 ERROR [STDERR]     at org.modeshape.jcr.JcrVersionManager.restore(JcrVersionManager.java:1826)
17:22:41,481 ERROR [STDERR]     at org.oea.jcr.management.impl.JCRManagerImpl.restoreNodeVersion(JCRManagerImpl.java:578)
{code}

where the primary types of the nodes are:

{code}
/oea:ignoreUnstructured/oea:ignoreUnstructured/oea:ignoreUnstructured/oea:copyUnstructured
{code}

and the node types are defined as:

{code}

<oea=""http://www.oea.org/ns/oea/1.0"">
[oea:unstructured]
orderable
- * (UNDEFINED) multiple
- * (UNDEFINED)
+ * (oea:ignoreUnstructured) = oea:ignoreUnstructured sns IGNORE
+ * (oea:versionUnstructured) = oea:versionUnstructured sns VERSION
+ * (oea:copyUnstructured) = oea:copyUnstructured sns COPY
+ * (oea:unstructured) = oea:unstructured sns
+ * (nt:file) = nt:file sns IGNORE
 
[oea:versionUnstructured]
orderable
- * (UNDEFINED) multiple
- * (UNDEFINED)
+ * (oea:ignoreUnstructured) = oea:ignoreUnstructured sns IGNORE
+ * (oea:versionUnstructured) = oea:versionUnstructured sns VERSION
+ * (nt:file) = nt:file sns
 
[oea:ignoreUnstructured]
orderable
- * (UNDEFINED) multiple
- * (UNDEFINED)
+ * (oea:ignoreUnstructured) = oea:ignoreUnstructured sns IGNORE
+ * (oea:versionUnstructured) = oea:versionUnstructured sns VERSION
+ * (oea:copyUnstructured) = oea:copyUnstructured sns COPY
+ * (nt:file) = nt:file sns IGNORE
 
[oea:copyUnstructured]
orderable
- * (UNDEFINED) multiple
- * (UNDEFINED)
+ * (oea:copyUnstructured) = oea:copyUnstructured sns COPY
+ * (oea:ignoreUnstructured) = oea:ignoreUnstructured sns IGNORE
+ * (nt:file) = nt:file sns IGNORE
{code}",2011/09/07 10:40 AM
MODE-1254,"org.modeshape.jcr.AbstractJcrNode.toString() causes out of memory if node contains large binary property, because it is trying to include the value of the property in the string representation.

Here is the partial stack trace:

{code}
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.util.Arrays.copyOf(Arrays.java:2786)
	at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94)
	at org.modeshape.common.util.IoUtil.readBytes(IoUtil.java:66)
	at org.modeshape.graph.property.basic.StringValueFactory.create(StringValueFactory.java:287)
	at org.modeshape.graph.property.basic.StringValueFactory.create(StringValueFactory.java:266)
	at org.modeshape.graph.property.basic.StringValueFactory.create(StringValueFactory.java:56)
	at org.modeshape.graph.property.basic.AbstractValueFactory.create(AbstractValueFactory.java:121)
	at org.modeshape.jcr.AbstractJcrProperty.toString(AbstractJcrProperty.java:322)
	at java.lang.String.valueOf(String.java:2826)
	at java.lang.StringBuffer.append(StringBuffer.java:219)
	at org.modeshape.jcr.AbstractJcrNode.toString(AbstractJcrNode.java:2235)
{code}

This node has a large Binary property. ",2011/09/06 11:56 PM
MODE-1247,"This code works fine (note that ""in"" is a FileInputStream):
{code}
   Node file = root.addNode(filename, ""nt:file"");
   Node content = file.addNode(""jcr:content"", ""nt:resource"");
   content.setProperty(""jcr:data"", in);
{code}
 
But this code does not:
{code}
   Node file = root.addNode(filename, ""nt:file"");
   Node content = file.addNode(""jcr:content"", ""nt:resource"");
   Binary binary = session.getValueFactory().createBinary(in);
   content.setProperty(""jcr:data"", binary);
{code}
 
Reading the source code  it seems that the problem is in AbstractJcrNode.java:
{code}
    final JcrValue valueFrom( Binary value ) {
       ValueFactories factories = cache.factories();
        org.modeshape.graph.property.Binary binary = ((JcrBinary)value).binary();
        return new JcrValue(factories, cache, PropertyType.DATE, binary);
    }
{code}
DATE is wrong. No ?

Here's a link to the offending line: https://github.com/ModeShape/modeshape/blob/617b3ed4b24b55f97df8/modeshape-jcr/src/main/java/org/modeshape/jcr/AbstractJcrNode.java#L228",2011/08/24 9:48 AM
MODE-1245,"When using BRMS, ModeShape and a MySQL database, the server doesn't start, with the following exception appearing in the server log:


Caused by: org.drools.repository.RulesRepositoryException: Unable to checkin.
	at org.drools.repository.VersionableItem.checkin(VersionableItem.java:591)
	at org.drools.repository.RulesRepository.createPackage(RulesRepository.java:860)
	at org.drools.repository.RulesRepository.createPackage(RulesRepository.java:813)
	at org.drools.repository.RulesRepository.listPackages(RulesRepository.java:1379)
	at org.drools.repository.migration.MigrateDroolsPackage.migrate(MigrateDroolsPackage.java:43)
	at org.drools.repository.RulesRepository.checkForDataMigration(RulesRepository.java:148)
	at org.drools.repository.RulesRepository.<init>(RulesRepository.java:139)
	at org.drools.guvnor.server.repository.RepositoryStartupService.create(RepositoryStartupService.java:155)
	at org.drools.guvnor.server.repository.RepositoryStartupService.create(RepositoryStartupService.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.seam.util.Reflections.invoke(Reflections.java:22)
	at org.jboss.seam.intercept.RootInvocationContext.proceed(RootInvocationContext.java:31)
	at org.jboss.seam.intercept.SeamInvocationContext.proceed(SeamInvocationContext.java:56)
	at org.jboss.seam.transaction.RollbackInterceptor.aroundInvoke(RollbackInterceptor.java:28)
	at org.jboss.seam.intercept.SeamInvocationContext.proceed(SeamInvocationContext.java:68)
	at org.jboss.seam.core.MethodContextInterceptor.aroundInvoke(MethodContextInterceptor.java:44)
	at org.jboss.seam.intercept.SeamInvocationContext.proceed(SeamInvocationContext.java:68)
	at org.jboss.seam.intercept.RootInterceptor.invoke(RootInterceptor.java:107)
	at org.jboss.seam.intercept.JavaBeanInterceptor.interceptInvocation(JavaBeanInterceptor.java:166)
	at org.jboss.seam.intercept.JavaBeanInterceptor.invoke(JavaBeanInterceptor.java:102)
	at org.drools.guvnor.server.repository.RepositoryStartupService_$$_javassist_1.create(RepositoryStartupService_$$_javassist_1.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.jboss.seam.util.Reflections.invoke(Reflections.java:22)
	at org.jboss.seam.util.Reflections.invokeAndWrap(Reflections.java:138)
	at org.jboss.seam.Component.callComponentMethod(Component.java:2171)
	at org.jboss.seam.Component.callCreateMethod(Component.java:2094)
	at org.jboss.seam.Component.newInstance(Component.java:2054)
	... 74 more
Caused by: javax.jcr.ItemNotFoundException: Unable to find ""/{http://www.jcp.org/jcr/1.0}system/{http://www.jcp.org/jcr/1.0}versionStorage/{}49/{}c9/{}09/{}6f/{}02dc-4c69-ba72-41459f67293c/{}2011-08-23T23?03?07.194-05?00""; lowest existing path is ""/{http://www.jcp.org/jcr/1.0}system/{http://www.jcp.org/jcr/1.0}versionStorage/{}49/{}c9/{}09/{}6f/{}02dc-4c69-ba72-41459f67293c""
	at org.modeshape.jcr.SessionCache.findJcrNode(SessionCache.java:621)
	at org.modeshape.jcr.JcrVersionManager.checkin(JcrVersionManager.java:374)
	at org.modeshape.jcr.JcrVersionManager.checkin(JcrVersionManager.java:1722)
	at org.drools.repository.VersionableItem.checkin(VersionableItem.java:581)
	... 106 more

This works with the default H2 repo and postgres.
",2011/08/24 12:20 AM
MODE-1241,"Calling jcrSession.getValueFactory().createBinary(is)) to upload a text file causes:

java.nio.channels.ClosedChannelException
	at sun.nio.ch.FileChannelImpl.ensureOpen(FileChannelImpl.java:88)
	at sun.nio.ch.FileChannelImpl.size(FileChannelImpl.java:289)
	at org.modeshape.graph.property.basic.FileInputStreamBinary.getSize(FileInputStreamBinary.java:81)
	at org.modeshape.connector.store.jpa.util.Serializer.serializeProperty(Serializer.java:315)
	at org.modeshape.connector.store.jpa.util.Serializer.serializeProperties(Serializer.java:186)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaRepository$JpaNode.serializeProperties(SimpleJpaRepository.java:650)
	at org.modeshape.connector.store.jpa.model.simple.SimpleJpaRepository$JpaNode.setProperty(SimpleJpaRepository.java:784)
	at org.modeshape.graph.connector.map.MapRequestProcessor.process(MapRequestProcessor.java:397)


It appears the stream is being closed at:  org.modeshape.connector.store.jpa.util.Serializer.serializeProperty(Serializer.java:315)",2011/08/17 12:01 PM
MODE-1238,"In a simple JBoss Seam web app, using a Modeshape federated repository, and JBoss AS kit, new nodes/properties are not reflected in the query index until the server is restarted.",2011/08/15 4:11 PM
MODE-1234,"ModeShape uses an internal rule set to build the internal indexes used by the query engine to answer queries and searches. These rules are based upon the registered node types and determine how property values are to be treated, including (among other things) whether the value is to be treated as a string, an integer/float numeric value, a date, etc. For example, property definitions of type BOOLEAN result in the corresponding values being treated as numeric values with a range of [0,1]. Any property for which there is no rule (e.g., there is no property definition) is treated as a string.

So when custom node types are registered, ModeShape internally updates its indexing rule set. However, the problem is that the indexing logic was not using the new indexing rule sets. As a result, any nodes that used custom node types might have their properties stored in a non-ideal manner within the indexes.

In many cases, the query logic would still work, simply because of how the values are stored in the indexes. But the case of BOOLEAN property definitions is complicated by another error in the query processing logic that incorrectly converted the boolean value in criteria into a string value for comparison against the indexes.

Thus, for custom BOOLEAN property definitions, the two errors resulted in the *correct* query behavior, but for built-in BOOLEAN property definitions, queries using 'true' or 'false' for criteria values would not match the expected nodes.

For example, the following query would work:

{code}
SELECT * FROM [my:type] WHERE [my:type].[my:booleanProperty] = true
{code} 

whereas the following query would not:

{code}
SELECT * FROM [mix:versionable] WHERE [mix:versionable].[jcr:isCheckedIn] = true
{code}",2011/08/05 1:07 PM
MODE-1229,"I have a repository that has a disabled anonymous access using <anonymousUserRoles jcr:PrimaryType=""mode:option"" mode:value=""""/> as described in documentation. The attempt to obtain such repository ends with exception
{code}
2011-07-21 13:08:55,303 DEBUG [org.modeshape.jcr.JcrRepositoryFactory] (Thread-35) Could not load repository named 'test-secured'
javax.jcr.RepositoryException: Error starting the ""test-secured"" repository (check the configuration): Error starting the ""test-secured"" repository (check the configuration): null
        at org.modeshape.jcr.JcrEngine$JcrRepositoryHolder.getRepository(JcrEngine.java:824)
        at org.modeshape.jcr.JcrEngine.getRepository(JcrEngine.java:365)
        at org.modeshape.jboss.managed.JNDIManagedRepositories.getRepository(JNDIManagedRepositories.java:87)
        at org.modeshape.jcr.JcrRepositoryFactory.getRepository(JcrRepositoryFactory.java:153)
        at org.jboss.soa.modeshape.factory.RepositoryReferenceFactory.getServerRepository(RepositoryReferenceFactory.java:79)
        at org.jboss.soa.modeshape.factory.RepositoryReferenceFactory.getRepository(RepositoryReferenceFactory.java:31)
        at org.jboss.soa.modeshape.qa.tests.AuthenticationTest.logWithoutCredentials(AuthenticationTest.java:27)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:616)
        at org.testng.internal.MethodHelper.invokeMethod(MethodHelper.java:641)
        at org.testng.internal.Invoker.invokeMethod(Invoker.java:677)
        at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:850)
        at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1154)
        at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:137)
        at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:121)
        at org.testng.TestRunner.runWorkers(TestRunner.java:1108)
        at org.testng.TestRunner.privateRun(TestRunner.java:737)
        at org.testng.TestRunner.run(TestRunner.java:596)
        at org.testng.SuiteRunner.runTest(SuiteRunner.java:315)
        at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:310)
        at org.testng.SuiteRunner.privateRun(SuiteRunner.java:272)
        at org.testng.SuiteRunner.run(SuiteRunner.java:221)
        at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
        at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
        at org.testng.TestNG.runSuitesSequentially(TestNG.java:1027)
        at org.testng.TestNG.runSuitesLocally(TestNG.java:964)
        at org.testng.TestNG.run(TestNG.java:896)
        at org.jboss.soa.esb.qa.framework.incontainer.TestNGRunner.runTestsWithConfigFile(TestNGRunner.java:67)
        at org.jboss.soa.esb.qa.framework.incontainer.TestNGRunner.run(TestNGRunner.java:77)
        at java.lang.Thread.run(Thread.java:636)
Caused by: javax.jcr.RepositoryException: Error starting the ""test-secured"" repository (check the configuration): null
        at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:902)
        at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:874)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        ... 1 more
Caused by: java.lang.NullPointerException
        at org.modeshape.jcr.JcrEngine.doCreateJcrRepository(JcrEngine.java:433)
        at org.modeshape.jcr.JcrEngine$RepositoryInitializer.call(JcrEngine.java:891)
        ... 6 more
{code}
Whenever I put any string into value attribute, then the repository can be accessed.",2011/07/26 5:29 PM
MODE-1228,"I have a node N, mix:versionable, with children OPV COPY.
The versions of N are correct, including the children of the frozen node.

The trouble happens when restoring, using VersionManager.restore(Version arg0, boolean arg1): the frozen node is properly restored, but the children have no mixins, and no UUID anymore.
This happens because of shouldRestoreMixinsAndUuid==false on line 1095 of JcrVersionManager.java. 
This variable equals false because the children's primaryType isn't jcr:frozenNode (line 1072 of the same file). 
So in my opinion, either the children has to be frozen like the root, and old primaryType has to be frozen like the root, either the test of the line 1072 has to change its condition.

As asked by Randall Hauch, here is the path taken to reach the buggy code: 

Daemon Thread [http-localhost%2F127.0.0.1-8080-3] (Suspended (breakpoint at line 1095 in JcrVersionManager$RestoreCommand))	
	JcrVersionManager$RestoreCommand.restoreNode(AbstractJcrNode, AbstractJcrNode, DateTime) line: 1095	
	JcrVersionManager$RestoreCommand.execute() line: 941	
	JcrVersionManager.restore(Path, Version, String, boolean) line: 670	
	JcrVersionManager.restore(Version, boolean) line: 1792	
	JCRManagerImpl.restoreNodeVersion(Session, Location, Location) line: 578 //My code.	",2011/07/26 11:21 AM
MODE-1225,"This issue was originally logged as a feature request for MySQL 5.5 in: SOA-3170

But - the same error is being seen with RHEL6 and MySQL 5.1 - as installed by RHEL6

2011-07-20 12:51:48,892 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) Unsuccessful: create table DNA_CHANGELOG (ID bigint not null auto_increment, CHANGES longblob not null, CHANGE_COUNT integer not null, UTC_TIMESTAMP bigint not null, USERNAME varchar(64) not null, primary key (ID)) ENGINE=InnoDB
2011-07-20 12:51:48,892 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UTC_TIMESTAMP bigint not null, USERNAME varchar(64) not null, primary key (ID)) ' at line 1
2011-07-20 12:51:49,702 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) Unsuccessful: create index NS_CHANGE_TS_INX on DNA_CHANGELOG (UTC_TIMESTAMP)
2011-07-20 12:51:49,702 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UTC_TIMESTAMP)' at line 1
2011-07-20 12:51:52,941 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) Unsuccessful: create table DNA_CHANGELOG (ID bigint not null auto_increment, CHANGES longblob not null, CHANGE_COUNT integer not null, UTC_TIMESTAMP bigint not null, USERNAME varchar(64) not null, primary key (ID)) ENGINE=InnoDB
2011-07-20 12:51:52,941 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UTC_TIMESTAMP bigint not null, USERNAME varchar(64) not null, primary key (ID)) ' at line 1
2011-07-20 12:51:52,941 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) Unsuccessful: create index NS_CHANGE_TS_INX on DNA_CHANGELOG (UTC_TIMESTAMP)
2011-07-20 12:51:52,941 ERROR [org.hibernate.tool.hbm2ddl.SchemaUpdate] (modeshape-start-repo-2-thread-1) You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'UTC_TIMESTAMP)' at line 1
",2011/07/21 11:49 AM
MODE-1224,"I have SOA-P 5.2 ER1 build with Modeshape installed and configured to use PostgreSQL 8.4 as backend database. First start-up of the server - with clean database schema - went quick, it took approximately 2 minutes. Then I shutdown server and started it again. During the startup, server hung at these lines:

{code}
17:08:30,400 INFO  [SchemaUpdate] Running hbm2ddl schema update
17:08:30,400 INFO  [SchemaUpdate] fetching database metadata
17:08:30,401 INFO  [SchemaUpdate] updating schema
17:08:30,441 INFO  [TableMetadata] table found: public.dna_changelog
17:08:30,441 INFO  [TableMetadata] columns: [id, username, change_count, utc_timestamp, changes]
17:08:30,441 INFO  [TableMetadata] foreign keys: []
17:08:30,441 INFO  [TableMetadata] indexes: [dna_changelog_pkey, ns_change_ts_inx]
17:08:30,464 INFO  [TableMetadata] table found: public.dna_namespaces
17:08:30,464 INFO  [TableMetadata] columns: [id, uri]
17:08:30,464 INFO  [TableMetadata] foreign keys: []
17:08:30,464 INFO  [TableMetadata] indexes: [ns_uri_inx, dna_namespaces_pkey]
17:08:30,486 INFO  [TableMetadata] table found: public.dna_workspaces
17:08:30,486 INFO  [TableMetadata] columns: [id, name]
17:08:30,486 INFO  [TableMetadata] foreign keys: []
17:08:30,486 INFO  [TableMetadata] indexes: [ws_name_inx, dna_workspaces_pkey]
17:08:30,510 INFO  [TableMetadata] table found: public.mode_options
17:08:30,510 INFO  [TableMetadata] columns: [name, value]
17:08:30,510 INFO  [TableMetadata] foreign keys: []
17:08:30,510 INFO  [TableMetadata] indexes: [mode_options_pkey]
17:08:30,533 INFO  [TableMetadata] table found: public.mode_simple_large_values
17:08:30,533 INFO  [TableMetadata] columns: [compressed, length, data, sha1, type]
17:08:30,533 INFO  [TableMetadata] foreign keys: []
17:08:30,533 INFO  [TableMetadata] indexes: [mode_simple_large_values_pkey]
17:08:30,562 INFO  [TableMetadata] table found: public.mode_simple_node
17:08:30,562 INFO  [TableMetadata] columns: [child_name_local, child_name_ns_id, node_uuid, data, workspace_id, allows_sns, id, compressed, child_index, num_props, sns_index, enforcerefinteg, parent_id]
17:08:30,562 INFO  [TableMetadata] foreign keys: [fke43e2bd346ef783f, fke43e2bd360f39011]
17:08:30,562 INFO  [TableMetadata] indexes: [mode_simple_node_pkey, nodeuuid_inx, childindex_inx, childname_inx]
17:08:30,588 INFO  [TableMetadata] table found: public.mode_subgraph_nodes
17:08:30,588 INFO  [TableMetadata] columns: [id, child_num, parent_num, uuid, query_id, depth]
17:08:30,588 INFO  [TableMetadata] foreign keys: []
17:08:30,588 INFO  [TableMetadata] indexes: [queryid_inx, mode_subgraph_nodes_pkey]
17:08:30,615 INFO  [TableMetadata] table found: public.mode_subgraph_queries
17:08:30,615 INFO  [TableMetadata] columns: [id, workspace_id, root_uuid]
17:08:30,615 INFO  [TableMetadata] foreign keys: []
17:08:30,615 INFO  [TableMetadata] indexes: [mode_subgraph_queries_pkey]
17:08:30,640 INFO  [TableMetadata] table found: public.modeshape_largevalue_usages
17:08:30,640 INFO  [TableMetadata] columns: [id, largevalues_sha1]
17:08:30,640 INFO  [TableMetadata] foreign keys: [fk4b54e5da1b6fbc1c, fk4b54e5dae58cec5c]
17:08:30,640 INFO  [TableMetadata] indexes: [modeshape_largevalue_usages_pkey]
17:08:30,641 INFO  [SchemaUpdate] schema update complete
{code}

Then server stayed here for 5 or 6 minutes and then continued in startup: 

{code}
17:14:45,804 INFO  [ModeShapeEngine] Completed starting the ""eds"" repository
17:14:45,845 INFO  [JNDIManagedRepositories] ModeShape Repositories bound to JNDI at name ""jcr/local"".
{code}

This happened also in third startup attempt. So, first start with clean DB schema went OK - it took usual starting time - no hanging.

Second, third and every other startup hung on ""schema update complete"" line, stayed there 5 minutes and then continued. Schema update with production DB shouldn't take such amount of time.",2011/07/21 11:28 AM
MODE-1214,"When starting the jboss as 5 server, seeing the following exception for each persistent unit in the modeshape-connector-store-jpa connector:

21:34:59,334 INFO  [PersistenceUnitDeployment] Starting persistence unit persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-nocache
21:34:59,363 ERROR [AbstractKernelController] Error installing to Start: name=persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-nocache state=Create
java.lang.RuntimeException: Specification violation [EJB3 JPA 6.2.1.2] - You have not defined a jta-data-source for a JTA enabled persistence context named: modeshape-connector-jpa-nocache
	at org.jboss.jpa.deployment.PersistenceUnitInfoImpl.<init>(PersistenceUnitInfoImpl.java:115)
	at org.jboss.jpa.deployment.PersistenceUnitDeployment.start(PersistenceUnitDeployment.java:275)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at 
...
21:34:59,395 ERROR [AbstractKernelController] Error installing to Start: name=persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-bootstrap state=Create
java.lang.RuntimeException: Specification violation [EJB3 JPA 6.2.1.2] - You have not defined a jta-data-source for a JTA enabled persistence context named: modeshape-connector-jpa-bootstrap
....
21:34:59,423 ERROR [AbstractKernelController] Error installing to Start: name=persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-simple state=Create
java.lang.RuntimeException: Specification violation [EJB3 JPA 6.2.1.2] - You have not defined a jta-data-source for a JTA enabled persistence context named: modeshape-connector-jpa-simple
....
21:34:59,439 ERROR [AbstractKernelController] Error installing to Start: name=persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-ehcache state=Create
java.lang.RuntimeException: Specification violation [EJB3 JPA 6.2.1.2] - You have not defined a jta-data-source for a JTA enabled persistence context named: modeshape-connector-jpa-ehcache

.....
21:34:59,476 ERROR [AbstractKernelController] Error installing to Start: name=persistence.unit:unitName=modeshape-connector-store-jpa-2.6-SNAPSHOT.jar#modeshape-connector-jpa-infinispan state=Create
java.lang.RuntimeException: Specification violation [EJB3 JPA 6.2.1.2] - You have not defined a jta-data-source for a JTA enabled persistence context named: modeshape-connector-jpa-infinispan



",2011/07/07 10:48 PM
MODE-1211,"Columns of type 'Name' are returned as type 'String' in resultset metadata, but returned as type 'Name' in database metadata",2011/07/07 12:46 PM
MODE-1201,"Using FileSystemSource:

Inserting a large file into a repository causes the JVM to run out of memory. It seems like the whole file is loaded into memory.

{code}
java.lang.OutOfMemoryError: Java heap space
          at java.util.Arrays.copyOf(Arrays.java:2786)
          at java.io.ByteArrayOutputStream.write(ByteArrayOutputStream.java:94)
          at org.modeshape.common.util.IoUtil.readBytes(IoUtil.java:66)
          at org.modeshape.graph.property.basic.AbstractBinaryValueFactory.create(AbstractBinaryValueFactory.java:229)
          at org.modeshape.graph.property.basic.AbstractBinaryValueFactory.create(AbstractBinaryValueFactory.java:55)
          at org.modeshape.graph.property.basic.AbstractValueFactory.create(AbstractValueFactory.java:123)
          at org.modeshape.jcr.JcrValueFactory.createBinary(JcrValueFactory.java:111)
          at org.modeshape.jcr.JcrValueFactory.createBinary(JcrValueFactory.java:45)
          at com.nextgen.core.repository.ModeShapeLargeFileInsertTest.testInsert(RespositoryTest.java:132)
          at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
          at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
          at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
          at java.lang.reflect.Method.invoke(Method.java:597)
          at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
          at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
          at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
          at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
          at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
          at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
          at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
          at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
          at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
          at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
          at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
          at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
          at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
          at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
          at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
          at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)
          at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
          at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
{code}",2011/06/17 9:03 AM
MODE-1198,"The license header in the following classes is not updated to ModeShape, it still refers to DNA.

* extensions/modeshape-connector-jcr/src/main/java/org/modeshape/connector/jcr/JcrNamespaceRegistry.java
* extensions/modeshape-connector-jcr/src/main/java/org/modeshape/connector/jcr/JcrRepositoryConnection.java
* extensions/modeshape-connector-jcr/src/main/java/org/modeshape/connector/jcr/JcrRequestProcessor.java
* extensions/modeshape-connector-jcr/src/test/java/org/modeshape/connector/jcr/JcrConnectorTestUtil.java
* extensions/modeshape-sequencer-ddl/src/main/java/org/modeshape/sequencer/ddl/DdlParserScorer.java
* modeshape-graph/src/main/java/org/modeshape/graph/property/basic/NamespaceRegistryWithAliases.java
* modeshape-integration-tests/src/test/java/org/modeshape/test/integration/svn/JcrAndLocalSvnRepositoryTest.jav
* modeshape-jcr-tck/src/test/java/org/modeshape/jcr/ResetRepositoryInstanceTest.java
* modeshape-jcr/src/main/java/org/modeshape/jcr/ModeShapePermissions.java
* modeshape-jcr/src/main/java/org/modeshape/jcr/ModeShapeRoles.java
* modeshape-jcr/src/main/java/org/modeshape/jcr/query/JcrSql2QueryParser.java



",2011/06/15 2:44 PM
MODE-1195,"In the page http://docs.jboss.org/modeshape/2.5.0.Final/manuals/reference/html/introduction.html#modules the paragraph modeshape-jcr-api seems to have some typos. e.g. the line ""including more criteria options (such as , , , ), a formal clause, and a for unions, intersects, and difference queries. ""

Also the paragraph abruptly ends with "" repositories by name without having to depend on the "". ",2011/06/10 7:47 AM
MODE-1194,modeshape-jdbc-ds.xml driver class should be changed to be org.modeshape.jdbc.LocalJcrDriver,2011/06/09 3:40 PM
MODE-1192,"At about line 117 of InfinispanRepository, the code does this:

// Remove all cache names that are not valid workspaces ...
if (!nonWorkspaceCacheNames.isEmpty()) cacheNames.removeAll(nowWorkspaceCacheNames);

But cacheNames is returned (earlier in the method) from one of the two CacheManager implementations and turns out to be immutable, making the removeAll method throw an UnsupportedOperationException.  The fix is:

        // Remove all cache names that are not valid workspaces ...
        if (!nonWorkspaceCacheNames.isEmpty()) {
            // the returned set from CacheContainer#getCacheNames() is immutable
            cacheNames = new HashSet<String>(cacheNames);
            cacheNames.removeAll(nonWorkspaceCacheNames);
        }

I had a test case that triggered it, but forgot to save it off.  Here's a reference to the ISPN source code though that documents the immutability of the returned value:

https://github.com/infinispan/infinispan/blob/master/core/src/main/java/org/infinispan/manager/EmbeddedCacheManager.java#L164
",2011/06/08 9:01 AM
MODE-1191,"useage of source: 

<mode:source jcr:name=""sourceRepo""
                     mode:classname=""org.modeshape.connector.store.jpa.JpaSource""
                     mode:description=""The database store for our content""
                     mode:dataSourceJndiName=""jdbc/mode""
                     mode:defaultWorkspaceName=""default""
                     mode:dialect=""org.hibernate.dialect.MySQLInnoDBDialect""
                     mode:autoGenerateSchema=""create"">

partially fails according to logs:

...
[#|2011-06-07T12:18:45.863+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - taSourceConnectionProvider - Using provided datasource|#]
[#|2011-06-07T12:18:45.863+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - SettingsFactory            - RDBMS: MySQL, version: 5.1.50|#]
[#|2011-06-07T12:18:45.863+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - SettingsFactory            - JDBC driver: MySQL-AB JDBC Driver, version: mysql-connector-java-5.1.15 ( Revision: ${bzr.revision-id} )|#]
[#|2011-06-07T12:18:45.863+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - Dialect                    - Using dialect: org.hibernate.dialect.MySQLInnoDBDialect|#]
[#|2011-06-07T12:18:45.864+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - TransactionFactoryFactory  - Transaction strategy: org.hibernate.transaction.JDBCTransactionFactory|#]
[#|2011-06-07T12:18:45.864+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - actionManagerLookupFactory - No TransactionManagerLookup configured (in JTA environment, use of read-write or transactional second-level cache is not recommended)|#]

... 

[#|2011-06-07T12:18:45.960+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - SchemaExport               - Running hbm2ddl schema export|#]
[#|2011-06-07T12:18:45.960+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|INFO  - SchemaExport               - exporting generated schema to database|#]
[#|2011-06-07T12:18:47.298+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|ERROR - SchemaExport               - Unsuccessful: create index NS_URI_INX on DNA_NAMESPACES (URI)|#]
[#|2011-06-07T12:18:47.298+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|ERROR - SchemaExport               - BLOB/TEXT column 'URI' used in key specification without a key length|#]
[#|2011-06-07T12:18:47.534+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|ERROR - SchemaExport               - Unsuccessful: create index CHILDNAME_INX on MODE_SIMPLE_NODE (WORKSPACE_ID, PARENT_ID, CHILD_NAME_NS_ID, CHILD_NAME_LOCAL, SNS_INDEX)|#]
[#|2011-06-07T12:18:47.534+0200|INFO|glassfish3.1|javax.enterprise.system.std.com.sun.enterprise.server.logging|_ThreadID=54;_ThreadName=Thread-2;|ERROR - SchemaExport               - BLOB/TEXT column 'CHILD_NAME_LOCAL' used in key specification without a key length|#]
INFO  - SchemaExport               - schema export complete|#]
...

this results in ERRORs in log and bad performance as necessary indexes are not created; The system however is running fine beside performance;


NOTE: As noted below in the comments, the problem stems from improper configuration, and now involves improving our documentation with a direct link to the Hibernate dialects.",2011/06/07 6:24 AM
MODE-1190,"On first startup with the usage of the jpa-connector-store into a mysql an app creates a own nodetype, here ""brix:node""; Then system is shutdown regularly and restarted. Upon startup ERROR is listed as follows:

ERROR - RepositoryNodeTypeManager  - Node types were read from the system content, and appear to be inconsistent or invalid: org.modeshape.jcr.nodetype.InvalidNodeTypeDefinitionException: Supertype 'nt:unstructured' from type 'brix:node' does not exist|#]

It doesn't have any impact on the work so far (at least I couldn't find anything yet), but the mentioned supertype is from JCR API definition and therefore of course not defined by the app;

",2011/06/07 6:17 AM
MODE-1182,"Calling Graph.destroyWorkspace().named(String) is supposed to destroy the workspace, but right now it only deletes the content from the workspace and doesn't remove the workspace from the list of workspaces named by the repository source.  Among other things, this causes the following code to not work:

{code}
Graph graph = ...;

graph.createWorkspace().named(workspaceName);

graph.useWorkspace(defaultWorkspaceName);
graph.destroyWorkspace().named(workspaceName);

graph.createWorkspace().named(workspaceName);
{code}

The second createWorkspace call fails because the repository object in the source never deleted its reference to the workspace named workspaceName.  This behavior is consistent across all repository sources.",2011/06/01 10:27 AM
MODE-1178,"The repositories stopped respecting the creatingWorkspacesAllowed flag at some point.  We used to have test cases for this, but they were deleted for many (but not all) of the repositories.  If they are added back, they either fail or pass because the source for the test does not allow updates.",2011/05/27 3:07 PM
MODE-1176,"The JcrDriverIntegrationTest has been failing for some time on the Hudson boxes, yet it's been running successfully on developer boxes. Turns out the problem is in a base class (ModeShapeUnitTest extended by ModeShapeMultiUseTest extended by JcrDriverIntegrationTest) and how the 'startEngineUsing(...)' method works when supplied with the path to the configuration file that should be on the classpath. When this method is called in a static method (e.g., the @BeforeClass method), the classloader is null and the method looks for the configuration file on the file system and then under 'src/test/resources'. That's obviously a problem when the configuration file has Maven replacement properties, and the real file is placed by Maven under 'target'.

The 'startEngineUsing' method needs to take the class under test as an additional parameter, and the JcrDriverIntegrationTest needs to use this new method.",2011/05/25 11:33 AM
MODE-1175,See JBIDE-8991 for steps to reproduce.,2011/05/24 3:41 PM
MODE-1174,"The example web.xml files for the REST servlet and the WebDav servlet use a JCR configuration value that was not updated into an URL.  That is, the current examples do not work.",2011/05/24 10:49 AM
MODE-1171,"this is the reason for initial: https://issues.jboss.org/browse/MODE-1170

in case one exports an workspace.xml from e.g. jackrabbit that holds:

{code}
<sv:node sv:name=""child"">
    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
        <sv:value>nt:unstructured</sv:value>
    </sv:property>
    <sv:property sv:name=""cssClass"" sv:type=""String"">
        <sv:value>dir</sv:value>
    </sv:property>
    <sv:property sv:name=""menuType"" sv:type=""String"">
        <sv:value>REFERENCE</sv:value>
    </sv:property>
    <sv:property sv:name=""title"" sv:type=""String"">
        <sv:value>Wein</sv:value>
    </sv:property>
    <sv:node sv:name=""reference"">
        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
            <sv:value>nt:unstructured</sv:value>
        </sv:property>
        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"" sv:multiple=""true"">
            <sv:value>brix:hidden</sv:value>
        </sv:property>
        <sv:property sv:name=""indexedParameters"" sv:type=""String"" sv:multiple=""true"">
            <sv:value>wein</sv:value>
        </sv:property>
        <sv:property sv:name=""node"" sv:type=""Reference"">
            <sv:value>cef14fca-1f16-446d-ac50-5222cd6ece9e</sv:value>
        </sv:property>
        <sv:property sv:name=""type"" sv:type=""String"">
            <sv:value>NODE</sv:value>
        </sv:property>
    </sv:node>
</sv:node>
{code}

having a:

{code}
<sv:property sv:name=""indexedParameters"" sv:type=""String"" sv:multiple=""true"">
    <sv:value>wein</sv:value>
</sv:property>
{code}

in it, it is translated by modeshape to a JcrSingleValueProperty instead of a JcrMultiValueProperty; It seems the sv:multiple=""true"" is ignored and instead the size of the sv:value-array taken into account. ",2011/05/15 5:21 AM
MODE-1168,"The RepositoryService maps XML attributes from configuration files (or properties from programmatic configuration) by using reflection to determine the correct setter for the property on the corresponding RepositorySource (e.g., FileSystemSource) and invoking that setter.

However, if the RepositorySource has overloaded that method (e.g., FileSystemSource#setFilenameFilter), the RepositoryService will only test one of the overloaded methods and, if the RepositoryService gets the wrong method, it will silently ignore the setting.",2011/05/11 8:53 AM
MODE-1167,"o.m.g.property.basic.SystemPropertyFactory misspells ""curly"" as ""curyly"" in an internal constant.",2011/05/10 7:01 AM
MODE-1165,"I see this error on import of the attached policyquote_service_repository.xml file. Randall to reproduce use the guvnor I gave you and try importing the policyquote_service_repository.xml.

{code}
14:52:02,417 INFO  [STDOUT] Clearing rules repository
14:52:05,498 INFO  [STDOUT] ERROR 04-05 14:52:05,495 (RulesRepository.java:importRulesRepositoryFromStream:1314) 	 One or more of the 'drools:categoryReference' REFERENCE property values ,14ade576-def0-477f-905c-a00b82d607fa,5a6eeee1-127e-441c-b2e6-f7af541d5e41 on node '/drools:repository/drools:package_area/PolicyQuoteProcessService/assets/SuccessfulPolicyQuote' does not satisfy the constraints of the 'drools:categoryReference' property definition on the 'drools:assetNodeType' node type, and no other property definition is valid.
javax.jcr.nodetype.ConstraintViolationException: One or more of the 'drools:categoryReference' REFERENCE property values ,14ade576-def0-477f-905c-a00b82d607fa,5a6eeee1-127e-441c-b2e6-f7af541d5e41 on node '/drools:repository/drools:package_area/PolicyQuoteProcessService/assets/SuccessfulPolicyQuote' does not satisfy the constraints of the 'drools:categoryReference' property definition on the 'drools:assetNodeType' node type, and no other property definition is valid.
	at org.modeshape.jcr.SessionCache$NodeEditor.setProperty(SessionCache.java:1377)
	at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.create(JcrContentHandler.java:844)
	at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.node(JcrContentHandler.java:674)
	at org.modeshape.jcr.JcrContentHandler$BasicNodeHandler.finish(JcrContentHandler.java:659)
	at org.modeshape.jcr.JcrContentHandler$SystemViewContentHandler.endElement(JcrContentHandler.java:1055)
	at org.modeshape.jcr.JcrContentHandler.endElement(JcrContentHandler.java:453)
	at org.apache.xerces.parsers.AbstractSAXParser.endElement(Unknown Source)
{code}
Please let me know if you need more info.",2011/05/04 2:57 PM
MODE-1154,"RepositoryNodeTypeManager allows NodeTypes to be updated, but JcrNodeTypeManager does not pass through allowUpdate from calls to registerNodeType(NodeTypeDefinition ntd, boolean allowUpdate) and egisterNodeTypes(NodeTypeDefinition[] ntds, boolean allowUpdate).",2011/04/16 2:07 PM
MODE-1146,"As noted in the attached forum thread, the REST server only works if the REST servlet is mapped to /*.  Other mappings result in the REST server returning inaccurate URLs for the repository and its workspaces.

RESTEasy allows for other mappings, but the ModeShape code also needs to be corrected to allow other mappings to work.",2011/04/08 8:42 PM
MODE-1145,JCR-SQL2 Query is returning an error for properties referenced that are not in the NodeTypeDefinition.  All information to reproduce is in the forum at http://community.jboss.org/message/598952#598952.,2011/04/08 4:45 PM
MODE-1141,"When checking in a 'mix:versionable' node, the VersionManager implementation creates a new version in the node's version history, and copies the versionable state of that node into that new version via a single 'nt:frozenNode'. The versionable state includes all versionable properties and children, as dictated by the property & child node definitions' On Parent Versioning (OPV) value.

Our JcrVersionManager class implements this behavior by creating the 'nt:frozenNode' inside the JcrVersionManager.checkin(...) method, and then calling 'versionNodeAt(...)' on all children. The 'versionNodeAt(...)' method calls itself recursively for all children where the child node definition has an OPV of COPY or VERSION, though it skips and returns for any child where the definition has an OPV of IGNORE, INITIALIZE, or COMPUTE.

However, the 'versionNodeAt(...)' method should not be recursive when the child node has a child node definition of an OPV of VERSION and the child node is 'mix:versionable'. Instead, it should create the 'nt:versionedChild' node (as it does not) and simply return rather than break out of the switch. In other words, the 'break' should be changed to 'return' at https://github.com/ModeShape/modeshape/blob/ffefa17a/modeshape-jcr/src/main/java/org/modeshape/jcr/JcrVersionManager.java#L434

I've changed this locally, and it does *not* affect the outcome of any of the JCR TCK tests, which means none of the TCK tests really check this. Because of this, I would like to have some verification that my interpretation is correct.

For example, consider this subgraph:

{code}
+ A mix:versionable
  + B
  + C
     + D mix:versionable
        + E
{code}

If node A is checked in, then the implementation should create a new version in the version history for A under '/jcr:system/jcr:versionStorage', and this new version node V should contain a single 'nt:frozenNode' node that is the snapshot of the versionable subgraph of A. Thus, nodes B and C will be copied into this frozen node, and node D will have a 'nt:versionedChild' node created under the version's representation/copy of C.

Without the proposed change, the 'nt:versionedChild' representation of D will actually contain a full copy of the state of D. This is not correct, since the whole point of the 'nt:versionedChild' node is to REFERENCE the actual version history of D. See the [image in the JSR-283 specification|http://www.day.com/specs/jcr/2.0/3_Repository_Model.html#3.13.10%20FullVersioning%20Diagram].
",2011/04/06 3:35 PM
MODE-1140,"When we changed to use Maven 3 (see MODE-1096), we started explicitly specifying the versions for each of the Maven plugins, including the Surefire plugin that runs our unit tests. When we did this, we chose to use the latest version of Surefire (2.7.1), even though 2.7 had a severe change in behavior with respect to determining which unit test classes should be run. For details, see [SUREFIRE-482|http://jira.codehaus.org/browse/SUREFIRE-482], the [release notes for Surefire 4.7|http://www.mail-archive.com/users@maven.apache.org/msg115334.html], and the [Surefire JUnit usage page|http://maven.apache.org/plugins/maven-surefire-plugin/examples/junit.html].

Unfortunately, when I did the initial conversion to Maven 3, I didn't see the supposed warning message about running Maven with the ""-Dsurefire.junit4.upgradecheck"" argument, and therefore missed the fact that we were no longer running the TCK tests.",2011/04/05 4:51 PM
MODE-1137,"Exporting an XML file with accented characters makes the input invalid, resulting in errors when importing:

{code}
Invalid byte 2 of 3-byte UTF-8 sequence.
javax.jcr.InvalidSerializedDataException: org.apache.xerces.impl.io.MalformedByteSequenceException: Invalid byte 2 of 3-byte UTF-8 sequence.
     at org.modeshape.jcr.JcrSession.importXML(JcrSession.java:965)
     at org.oea.jcr.management.impl.JCRManagerImpl.importJCRData(JCRManagerImpl.java:1117)
{code}",2011/04/01 10:58 AM
MODE-1136,"When working on MODE-1135 and reviewing existing code in Graph, it was noticed that several of the Graph.Batch operations were creating and immediately invoking requests against the connector. Changing these caused regressions in the unit and TCK tests related to locking and observation. After a bit of investigation, it became obvious that when locking and unlocking operations were performed within the same batch as other operations (e.g., setting properties), events for the other operations were not fired.

Having the locking and unlocking operations be performed outside of the batch means that what was coded to be a single batch operation actually results in the batch operation plus at least one non-batch operation. IOW, the number of distinct operation sets sent to the connector is doubled, and this would likely (at least slightly) reduce performance.",2011/03/30 9:26 PM
MODE-1131,"From ModeShape Tools I ran this query through the IRestClient using JCR_SQL2:

SELECT [jcr:path], [jcr:title] FROM [mode:publishArea]

See attachment for stacktrace. If ""[jcr:title]"" is taken out of the query it all works fine.",2011/03/29 3:17 PM
MODE-1130,I tried publishing from ModeShape Tools using the new versioning flag available from the IRestClient API. Publishing a file works the first time.,2011/03/28 2:54 PM
MODE-1101,"When an ""svn://"" URL format is used to connect to a subversion repository, adding to repository does not work properly. If a file or folder is uploaded into the repository, it is checked into SVN as a sibling to 'trunk' and not as a child node. However, if a ""file://"" URL is used to connect to the repository, it works flawlessly.",2011/02/24 1:27 AM
MODE-1097,"For a JpaSource repository, if the number of nodes is large, and if JBoss is restarted with the ""autoGenerateSchema"" configuration parameter set to ""validate"", it takes a very long time to startup the repository. Setting the ""indexReadDepth"" parameter to a value lower than the default of 4 also does not help. ",2011/02/17 2:10 PM
MODE-1095,"Triing to execute this code:

{code}
QueryManager qManager = session.getWorkspace().getQueryManager();
Query q = qManager.createQuery(""SELECT [sling:vanityPath], [sling:redirect] FROM [sling:VanityPath] WHERE [sling:vanityPath] IS NOT NULL ORDER BY [sling:vanityOrder] DESC"", javax.jcr.query.Query.JCR_SQL2);
return q.execute();
{code}

Here the cnd for the table:

{code}
[sling:VanityPath]
    mixin
  - sling:vanityPath (string) multiple
  - sling:redirect (boolean)
  - sling:vanityOrder (long)
{code}

I get this error:

{code}
java.util.NoSuchElementException: Property 'sling:vanityOrder' on selector 'sling:VanityPath' is not used in query
	at org.modeshape.graph.query.process.QueryResultColumns.getColumnIndexForProperty(QueryResultColumns.java:476)
	at org.modeshape.graph.query.process.ProcessingComponent.createDynamicOperation(ProcessingComponent.java:158)
	at org.modeshape.graph.query.process.SortValuesComponent.createSortComparator(SortValuesComponent.java:130)
	at org.modeshape.graph.query.process.SortValuesComponent.createSortComparator(SortValuesComponent.java:88)
	at org.modeshape.graph.query.process.SortValuesComponent.<init>(SortValuesComponent.java:53)
	at org.modeshape.graph.query.process.QueryProcessor.createComponent(QueryProcessor.java:355)
	at org.modeshape.graph.query.process.QueryProcessor.execute(QueryProcessor.java:90)
	at org.modeshape.graph.query.QueryEngine.execute(QueryEngine.java:111)
	at org.modeshape.jcr.RepositoryQueryManager$SelfContained.query(RepositoryQueryManager.java:384)
	at org.modeshape.jcr.JcrQueryManager$SessionQueryContext.execute(JcrQueryManager.java:1426)
	at org.modeshape.jcr.query.JcrQuery.execute(JcrQuery.java:103)
	at org.apache.sling.jcr.resource.JcrResourceUtil.query(JcrResourceUtil.java:52)
	at org.apache.sling.jcr.resource.internal.JcrResourceResolver.findResources(JcrResourceResolver.java:860)
	at org.apache.sling.jcr.resource.internal.helper.MapEntries.loadVanityPaths(MapEntries.java:303)
	at org.apache.sling.jcr.resource.internal.helper.MapEntries.init(MapEntries.java:130)
	at org.apache.sling.jcr.resource.internal.helper.MapEntries.<init>(MapEntries.java:98)
	at org.apache.sling.jcr.resource.internal.JcrResourceResolverFactoryImpl.activate(JcrResourceResolverFactoryImpl.java:478)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:227)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:591)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:472)
	at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:146)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:226)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:997)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:333)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceAdded(DependencyManager.java:283)
	at org.apache.felix.scr.impl.manager.DependencyManager.serviceChanged(DependencyManager.java:170)
	at org.apache.felix.framework.util.EventDispatcher.invokeServiceListenerCallback(EventDispatcher.java:871)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:733)
	at org.apache.felix.framework.util.EventDispatcher.fireServiceEvent(EventDispatcher.java:662)
	at org.apache.felix.framework.Felix.fireServiceEvent(Felix.java:3735)
	at org.apache.felix.framework.Felix.access$000(Felix.java:80)
	at org.apache.felix.framework.Felix$2.serviceChanged(Felix.java:722)
	at org.apache.felix.framework.ServiceRegistry.registerService(ServiceRegistry.java:107)
	at org.apache.felix.framework.Felix.registerService(Felix.java:2847)
	at org.apache.felix.framework.BundleContextImpl.registerService(BundleContextImpl.java:251)
	at org.apache.sling.jcr.base.AbstractSlingRepository.registerService(AbstractSlingRepository.java:465)
	at org.apache.sling.jcr.base.AbstractSlingRepository.startRepository(AbstractSlingRepository.java:811)
	at org.apache.sling.jcr.base.AbstractSlingRepository.activate(AbstractSlingRepository.java:606)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.felix.scr.impl.helper.BaseMethod.invokeMethod(BaseMethod.java:227)
	at org.apache.felix.scr.impl.helper.BaseMethod.access$500(BaseMethod.java:38)
	at org.apache.felix.scr.impl.helper.BaseMethod$Resolved.invoke(BaseMethod.java:591)
	at org.apache.felix.scr.impl.helper.BaseMethod.invoke(BaseMethod.java:472)
	at org.apache.felix.scr.impl.helper.ActivateMethod.invoke(ActivateMethod.java:146)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createImplementationObject(ImmediateComponentManager.java:226)
	at org.apache.felix.scr.impl.manager.ImmediateComponentManager.createComponent(ImmediateComponentManager.java:118)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager$Unsatisfied.activate(AbstractComponentManager.java:997)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.activateInternal(AbstractComponentManager.java:333)
	at org.apache.felix.scr.impl.manager.AbstractComponentManager.enable(AbstractComponentManager.java:157)
	at org.apache.felix.scr.impl.config.ConfiguredComponentHolder.enableComponents(ConfiguredComponentHolder.java:262)
	at org.apache.felix.scr.impl.BundleComponentActivator.loadDescriptor(BundleComponentActivator.java:253)
	at org.apache.felix.scr.impl.BundleComponentActivator.initialize(BundleComponentActivator.java:147)
	at org.apache.felix.scr.impl.BundleComponentActivator.<init>(BundleComponentActivator.java:111)
	at org.apache.felix.scr.impl.Activator.loadComponents(Activator.java:285)
	at org.apache.felix.scr.impl.Activator.bundleChanged(Activator.java:203)
	at org.apache.felix.framework.util.EventDispatcher.invokeBundleListenerCallback(EventDispatcher.java:807)
	at org.apache.felix.framework.util.EventDispatcher.fireEventImmediately(EventDispatcher.java:729)
	at org.apache.felix.framework.util.EventDispatcher.fireBundleEvent(EventDispatcher.java:610)
	at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:3724)
	at org.apache.felix.framework.Felix.startBundle(Felix.java:1772)
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1148)
	at org.apache.felix.framework.StartLevelImpl.run(StartLevelImpl.java:264)
	at java.lang.Thread.run(Thread.java:680)
{code}

If I add the [sling:vanityOrder] in the column lists so:

{code}
        QueryManager qManager = session.getWorkspace().getQueryManager();
        Query q = qManager.createQuery(""SELECT [sling:vanityPath], [sling:redirect], [sling:vanityOrder] FROM [sling:VanityPath] WHERE [sling:vanityPath] IS NOT NULL ORDER BY [sling:vanityOrder] DESC"", javax.jcr.query.Query.JCR_SQL2);
        return q.execute();
{code}

It's ok. It could be a request to force the column in the column list by modeshape.

But if I try this query without the ordering column in the columns list:

{code}
SELECT bogus, laughable, [car:year] FROM [nt:base] ORDER BY argle
{code}

it is ok too!!

 ",2011/02/14 1:10 PM
MODE-1050,"org.modeshape.jcr.RepositoryNodeTypeManager.validate(JcrNodeDefinition, List<Name>, List<JcrNodeType>) throws a NullPointerException at line 2084 (npt is null) when validating a node type definition that as a child node of the same type. This NPE seems to be caused by the absence of the current node definition in the list of pending types when checking the type's child nodes.",2010/12/09 7:35 AM
MODE-1015,"These tests are failing
org.modeshape.connector.store.jpa.JpaConnectorWritingTest.shouldStoreManyPropertiesOnANode
org.modeshape.connector.store.jpa.JpaConnectorWritingTest.shouldUpdateSmallPropertiesOnANode
org.modeshape.connector.store.jpa.JpaConnectorWritingTest.shouldUpdateLargePropertiesOnANode
org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnectorWritableTest.shouldStoreLargeBinaryValue
org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnectorWritableTest.shouldStoreManyPropertiesOnANode
org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnectorWritableTest.shouldUpdateSmallPropertiesOnANode
org.modeshape.connector.store.jpa.model.simple.SimpleJpaConnectorWritableTest.shouldUpdateLargePropertiesOnANode

when executed against DB2 9.7 with error
DB2 SQL Error: SQLCODE=-302, SQLSTATE=22001, SQLERRMC=null, DRIVER=4.9.78

See
http://hudson.qa.jboss.com/hudson/view/SOA-Release/job/soa-modeshape-db-openjdk16/4/DATABASE=db2-97,jdk=openjdk-local,label=RHEL5_any/#showFailuresLink for details

To allocate testing database use
http://dballocator.mw.lab.eng.bos.redhat.com:8080/Allocator/AllocatorServlet?operation=alloc&label=db2-97&requestee=ModeShapeIssue&expiry=240

To deallocate use
http://dballocator.mw.lab.eng.bos.redhat.com:8080/Allocator/AllocatorServlet?operation=report
",2010/11/11 2:13 PM
MODE-986,"This code does not work

{code}
  Session session = RepositoryReferenceFactory.getRepository(""test-file"").login();
  ValueFactory vf = session.getValueFactory();

  Node root = session.getRootNode();
  Node file = root.addNode(""createfile.mode"", ""nt:file"");
  Node content = file.addNode(""jcr:content"", ""nt:resource"");
  content.setProperty(""jcr:data"", vf.createBinary(new ByteArrayInputStream(""Write 1"".getBytes())));
  session.save();

  session.getNode(""/createfile.mode"");
{code}

It throws an exception
{code}
javax.jcr.PathNotFoundException: Unable to find ""{}createfile.mode""; lowest existing path is ""/""
        at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:779)
        at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:649)
        at org.modeshape.jcr.JcrSession.getNode(JcrSession.java:106)
        at org.jboss.soa.modeshape.qa.tests.BrokenFileConnectorTest.fileCreate(BrokenFileConnectorTest.java:31)
{code}

Connector configuration:
{code}
   <mode:source jcr:name=""test-file""
                mode:classname=""org.modeshape.connector.filesystem.FileSystemSource""
                mode:creatingWorkspaceAllowed=""true""
                mode:retryLimit=""3""
                mode:defaultWorkspaceName=""default""
                mode:filenameFilter=""*.mode""
                mode:updatesAllowed=""true"">
     <xsl:attribute name=""mode:workspaceRootPath"">
       <xsl:value-of select=""$repositorypath""/>
     </xsl:attribute>
     <mode:predefinedWorkspaceNames>file1</mode:predefinedWorkspaceNames>
     <mode:predefinedWorkspaceNames>file2</mode:predefinedWorkspaceNames>
     <mode:predefinedWorkspaceNames>custom-federated</mode:predefinedWorkspaceNames>
   </mode:source>
{code}

The file is not physically created after the session.save(). Creating folders works reliably.
This code was worked in ER2.",2010/10/27 3:37 PM
MODE-947,"ModeShape documentation for sequencers misses important details. The user should see output from sequence process - there should be an example of graph structure created in repository after sequence process, so the users can better figure out what nodes are created after sequencing is done. Currently only TEIID sequencer, Image sequencer, DDL sequencer and Java Class/Source file provide this information.",2010/10/12 11:23 AM
MODE-497,"Several activities should make use of the Java SecurityManager to ensure the caller has the appropriate privileges to perform the activity.  These activities should be wrapped in a block such as the following:

String lineSeparator = java.security.AccessController.doPrivileged(
    new java.security.PrivilegedAction<String>() {
        public String run() {
            return System.getProperty(""line.separator"");
        }
    }
 );

obviously with the correct generic type for whatever is being returned from the run.  (Nice and concise, huh? Ugh.)

We need to go through all of the (non-test) code and add this checking (if it is not already there) when the following types of activities are performed:
- System.getProperty
- System.setProperty
- Thread.currentThread().getContextClassLoader()
- All code executed via reflection",2009/08/04 12:00 PM
