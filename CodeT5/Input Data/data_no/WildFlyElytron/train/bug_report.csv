bug_report_id,bug_report_desc,bug_report_time
ELY-1234,NoData,2017/06/07 1:51 PM
ELY-1232,"I'm not able to get SCRAM PLUS SASL mechanisms (i.e. the ones with channel binding)  working. It seems there is a missing piece of integration. The mechanisms are required by EAP7-530.

I don't see the wrapper SASL factories, which are responsible for handling {{ChannelBindingCallback}}, used in the application server. (e.g. the {{TLSServerEndPointChannelBindingSaslClientFactory}}). 

This issue is blocking test development.

There is still a chance the problem is in my test configuration, but the documentation of this topic is still a little bit sparse.",2017/06/07 3:07 AM
ELY-1231,"Vault commands with --enc-dir option leads to directory which doesn't contain VAULT.dat should fail.

Converted credential store storage file is empty but it is very confusing to see successful message and created credential storage file.
The user might mistakenly believe that the VAULT.dat was empty.

*How to reproduce*
set --enc-dir to folder which is empty.
{code}
./elytron-tool.sh   vault --enc-dir /tmp/empty_dir --keystore server.store --keystore-password secretsecret --location converted001.store --alias jboss

Vault (enc-dir=""/tmp"";keystore=""server.store"") converted to credential store ""converted001.store""
{code}
",2017/06/07 2:24 AM
ELY-1230,"When client-server schema as 'Client -> Server A -> Server B' is used and intermediate server (server A) uses {{authentication-configuration.security-domain}} and DIGEST-MD5 mechanism is used then application (i.e. EJB) from intermediate server cannot authenticate to server B. It seems that DIGEST-MD5 mechanism cannot be chosen by SASL mechanism selector when no user and credentials are explicitly allowed.

As we understand attribute {{authentication-configuration.security-domain}} correctly (since there is not any sufficient documentation or example project), then intermediate server should be able to obtain credentials from given security domain and use them for authentication.

See reproducer for more details.

Exception from intermediate server:
{code}
ERROR [org.jboss.as.ejb3.invocation] (default task-6) WFLYEJB0034: EJB Invocation failed on component Intermediate for method public abstract java.lang.String example.ejb.WhoAmIBeanRemote.whoAmI(): javax.ejb.EJBException: java.lang.IllegalStateException: EJBCLIENT000024: Not able to find EJB matching ""StatelessEJBLocator for ""/server-side/WhoAmIBean"", view is interface example.ejb.WhoAmIBeanRemote, affinity is None""
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.handleExceptionInOurTx(CMTTxInterceptor.java:188)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:277)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.required(CMTTxInterceptor.java:332)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.processInvocation(CMTTxInterceptor.java:240)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:327)
	at org.jboss.weld.ejb.AbstractEJBRequestScopeActivationInterceptor.aroundInvoke(AbstractEJBRequestScopeActivationInterceptor.java:73)
	at org.jboss.as.weld.ejb.EjbRequestScopeActivationInterceptor.processInvocation(EjbRequestScopeActivationInterceptor.java:89)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.remote.EJBRemoteTransactionPropagatingInterceptor.processInvocation(EJBRemoteTransactionPropagatingInterceptor.java:89)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.interceptors.CurrentInvocationContextInterceptor.processInvocation(CurrentInvocationContextInterceptor.java:41)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.invocationmetrics.WaitTimeInterceptor.processInvocation(WaitTimeInterceptor.java:47)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.security.AuthorizationInterceptor.processInvocation(AuthorizationInterceptor.java:138)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.security.SecurityContextInterceptor.processInvocation(SecurityContextInterceptor.java:100)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.deployment.processors.StartupAwaitInterceptor.processInvocation(StartupAwaitInterceptor.java:22)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.interceptors.ShutDownInterceptorFactory$1.processInvocation(ShutDownInterceptorFactory.java:64)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.deployment.processors.EjbSuspendInterceptor.processInvocation(EjbSuspendInterceptor.java:57)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.interceptors.LoggingInterceptor.processInvocation(LoggingInterceptor.java:67)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ee.component.NamespaceContextInterceptor.processInvocation(NamespaceContextInterceptor.java:50)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.interceptors.AdditionalSetupInterceptor.processInvocation(AdditionalSetupInterceptor.java:54)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.ContextClassLoaderInterceptor.processInvocation(ContextClassLoaderInterceptor.java:60)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.InterceptorContext.run(InterceptorContext.java:256)
	at org.wildfly.security.manager.WildFlySecurityManager.doChecked(WildFlySecurityManager.java:609)
	at org.jboss.invocation.AccessCheckingInterceptor.processInvocation(AccessCheckingInterceptor.java:57)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:53)
	at org.jboss.as.ee.component.ViewService$View.invoke(ViewService.java:198)
	at org.wildfly.security.auth.server.SecurityIdentity.runAsFunctionEx(SecurityIdentity.java:380)
	at org.jboss.as.ejb3.remote.AssociationImpl.invokeWithIdentity(AssociationImpl.java:460)
	at org.jboss.as.ejb3.remote.AssociationImpl.invokeMethod(AssociationImpl.java:455)
	at org.jboss.as.ejb3.remote.AssociationImpl.lambda$receiveInvocationRequest$0(AssociationImpl.java:165)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalStateException: EJBCLIENT000024: Not able to find EJB matching ""StatelessEJBLocator for ""/server-side/WhoAmIBean"", view is interface example.ejb.WhoAmIBeanRemote, affinity is None""
	at org.jboss.ejb.client.EJBClientContext.discoverAffinityNone(EJBClientContext.java:719)
	at org.jboss.ejb.client.EJBClientContext.performLocatedAction(EJBClientContext.java:701)
	at org.jboss.ejb.client.EJBInvocationHandler.invoke(EJBInvocationHandler.java:162)
	at org.jboss.ejb.client.EJBInvocationHandler.invoke(EJBInvocationHandler.java:112)
	at com.sun.proxy.$Proxy48.whoAmI(Unknown Source)
	at example.ejb.Intermediate.whoAmI(Intermediate.java:21)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.jboss.as.ee.component.ManagedReferenceMethodInterceptor.processInvocation(ManagedReferenceMethodInterceptor.java:52)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.InterceptorContext$Invocation.proceed(InterceptorContext.java:327)
	at org.jboss.as.weld.interceptors.Jsr299BindingsInterceptor.doMethodInterception(Jsr299BindingsInterceptor.java:90)
	at org.jboss.as.weld.interceptors.Jsr299BindingsInterceptor.processInvocation(Jsr299BindingsInterceptor.java:101)
	at org.jboss.as.ee.component.interceptors.UserInterceptorFactory$1.processInvocation(UserInterceptorFactory.java:63)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.invocationmetrics.ExecutionTimeInterceptor.processInvocation(ExecutionTimeInterceptor.java:43)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.jpa.interceptor.SBInvocationInterceptor.processInvocation(SBInvocationInterceptor.java:47)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ee.concurrent.ConcurrentContextInterceptor.processInvocation(ConcurrentContextInterceptor.java:45)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.InitialInterceptor.processInvocation(InitialInterceptor.java:40)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.invocation.ChainedInterceptor.processInvocation(ChainedInterceptor.java:53)
	at org.jboss.as.ee.component.interceptors.ComponentDispatcherInterceptor.processInvocation(ComponentDispatcherInterceptor.java:52)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.component.pool.PooledInstanceInterceptor.processInvocation(PooledInstanceInterceptor.java:51)
	at org.jboss.invocation.InterceptorContext.proceed(InterceptorContext.java:240)
	at org.jboss.as.ejb3.tx.CMTTxInterceptor.invokeInOurTx(CMTTxInterceptor.java:275)
	... 44 more
	Suppressed: javax.security.sasl.SaslException: Authentication failed: none of the mechanisms presented by the server (JBOSS-LOCAL-USER, DIGEST-MD5) are supported
		at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:438)
		at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:246)
		at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
		at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
		at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
		at org.xnio.nio.WorkerThread.run(WorkerThread.java:567)
		at ...asynchronous invocation...(Unknown Source)
		at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:545)
		at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:513)
		at org.jboss.remoting3.ConnectionInfo$None.getConnection(ConnectionInfo.java:84)
		at org.jboss.remoting3.ConnectionInfo.getConnection(ConnectionInfo.java:57)
		at org.jboss.remoting3.EndpointImpl.doGetConnection(EndpointImpl.java:464)
		at org.jboss.remoting3.EndpointImpl.getConnectedIdentity(EndpointImpl.java:410)
		at org.jboss.remoting3.Endpoint.getConnectedIdentity(Endpoint.java:126)
		at org.jboss.remoting3.Endpoint.getConnectedIdentity(Endpoint.java:139)
		at org.jboss.remoting3.Endpoint.getConnection(Endpoint.java:216)
		at org.jboss.ejb.protocol.remote.RemotingEJBDiscoveryProvider.lambda$discover$0(RemotingEJBDiscoveryProvider.java:103)
		at java.security.AccessController.doPrivileged(Native Method)
		at org.jboss.ejb.protocol.remote.RemotingEJBDiscoveryProvider.discover(RemotingEJBDiscoveryProvider.java:103)
		at org.wildfly.discovery.impl.AggregateDiscoveryProvider.discover(AggregateDiscoveryProvider.java:58)
		at org.wildfly.discovery.Discovery.discover(Discovery.java:94)
		at org.jboss.ejb.client.EJBClientContext.discover(EJBClientContext.java:442)
		at org.jboss.ejb.client.EJBClientContext.discoverAffinityNone(EJBClientContext.java:714)
		... 74 more
{code}",2017/06/06 7:26 AM
ELY-1228,"Wildfly Elytron Tool help output contains ""java -jar wildfly-elytron-tool.jar"" instead of ""wildfly-elytron.sh/bat/ps1"" script name.

You can see this content in help output:
usage: java -jar wildfly-elytron-tool.jar credential-store
usage: java -jar wildfly-elytron-tool.jar vault
usage: java -jar wildfly-elytron-tool.jar mask

*There is expected some like this:*
usage: elytron-tool.sh/bat/ps1 credential-store
etc.


{code:collapse}
[hsvabek@localhost bin]$ ./elytron-tool.sh  --help
Missing arguments. Printing general help message:
usage: java -jar wildfly-elytron-tool.jar credential-store [-a <alias> | -e <alias> | -r <alias> | -v] [-c]  [-f] [-h] [-i <arg>] [-l <loc>] [-n <type>] [-o <providers>] [-p <pwd>]  [-s <arg>] [-t <type>] [-u <arg>]  [-x <secret to store>]
""credential-store"" command is used to perform various operations on credential store.
 -a,--add <alias>                   Add new alias to the credential store
 -c,--create                        Create credential store
 -e,--exists <alias>                Check if alias exists within the credential store
 -f,--summary                       Print summary, especially command how to create this credential store
 -h,--help                          Get help with usage of this command
 -i,--iteration <arg>               Iteration count for final masked password of the credential store
 -l,--location <loc>                Location of credential store storage file
 -n,--entry-type <type>             Type of entry in credential store
 -o,--other-providers <providers>   Comma separated list of JCA provider names. Providers will be supplied to the credential store instance.
                                    Each provider must be installed through java.security file.
 -p,--password <pwd>                Password for credential store
 -r,--remove <alias>                Remove alias from the credential store
 -s,--salt <arg>                    Salt to apply for final masked password of the credential store
 -t,--type <type>                   Credential store type
 -u,--properties <arg>              Implementation properties for credential store type in form of ""prop1=value1; ... ;propN=valueN"" .
                                    Supported properties are dependent on credential store type
                                    KeyStoreCredentialStore (default implementation) supports following additional properties (all are optional):
                                    keyStoreType - specifies the key store type to use (defaults to ""JCEKS"")
                                    keyAlias - specifies the secret key alias within the key store to use for encrypt/decrypt of data in external storage (defaults to ""cs_key"")
                                    external - specifies whether to store data to external storage and encrypted by keyAlias key (defaults to ""false"")
                                    cryptoAlg - cryptographic algorithm name to be used to encrypt/decrypt entries at external storage ""external"" has to be set to ""true""
 -v,--aliases                       Display all aliases
 -x,--secret <secret to store>      Password credential value

usage: java -jar wildfly-elytron-tool.jar vault [-b <description file>] [-e <dir>] [-f] [-h] [-i <arg>] [-k <keystore>] [-l <loc>] [-p <pwd>] [-s <salt>] [-u <arg>] [-v <arg>]
""vault"" command is used convert PicketBox Security Vault to credential store using default implementation (KeyStoreCredentialStore).
 -b,--bulk-convert <description file>   Bulk conversion with options listed in description file. All options have no default value and should be set in the file.
                                        All options are required with two exceptions:
                                        - ""properties"" option
                                        - ""salt"" and ""iteration"" options can be omitted when plain-text password is used
                                        Each set of options must start with the ""keystore"" option in the following format:
                                        keystore:<value>
                                        keystore-password:<value>
                                        enc-dir:<value>
                                        salt:<value>
                                        iteration:<value>
                                        location:<value>
                                        alias:<value>
                                        properties:<parameter1>=<value1>; ... ;<parameterN>=<valueN>
 -e,--enc-dir <dir>                     Vault directory containing encrypted files
 -f,--summary                           Print summary of conversion
 -h,--help                              Get help with usage of this command
 -i,--iteration <arg>                   Iteration count
 -k,--keystore <keystore>               Vault keystore URL
 -l,--location <loc>                    Location of credential store storage file
 -p,--keystore-password <pwd>           Vault keystore password:
                                        - used to open original vault key store
                                        - used as password for new converted credential store
 -s,--salt <salt>                       8 character salt
 -u,--properties <arg>                  Configuration parameters for credential store in form of: ""parameter1=value1; ... ;parameterN=valueN""
                                        Supported parameters are dependent on credential store type
                                        Generally supported parameters for default credential store implementation (all are optional):
                                        create - automatically creates credential store file (true/false)
                                        modifiable - is the credential modifiable (true/false)
                                        location - file location of credential store
                                        keyStoreType - specify the key store type to use
 -v,--alias <arg>                       Vault master key alias within key store

usage: java -jar wildfly-elytron-tool.jar mask [-h] [-i <arg>] [-s <arg>] [-x <to encrypt>]
""mask"" command is used to get MASK- string encrypted using PBEWithMD5AndDES in PicketBox compatible way.
 -h,--help                  Get help with usage of this command
 -i,--iteration <arg>       Iteration count for masked string
 -s,--salt <arg>            Salt to apply to masked string
 -x,--secret <to encrypt>   Secret to be encrypted

[hsvabek@localhost bin]$ 
{code}",2017/06/06 6:28 AM
ELY-1226,"When Elytron dir-context is configured to use referral mode THROW and MS Active Directory is used and ldap-realm attributes {{identity-mapping.search-base-dn}} or {{identity-mapping.attribute-mapping.filter-base-dn}} is configured to referral domain (i.e. domain which is referred through crossRef of LDAP server configured in related {{dir-context}}) then LdapReferralException is thrown and authentication is failed.

In correct behavior ldap-realm with THROW referral mode should be able to authenticate user from referral correctly.

Thrown Exception:
{code}
BASIC: org.wildfly.security.http.HttpAuthenticationException: org.wildfly.security.http.HttpAuthenticationException: org.wildfly.security.auth.server.RealmUnavailableException: ELY01108: Ldap-backed realm identity search failed
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:176)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:114)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:115)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:94)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:78)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:100)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.wildfly.security.http.HttpAuthenticationException: org.wildfly.security.auth.server.RealmUnavailableException: ELY01108: Ldap-backed realm identity search failed
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:79)
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:152)
	... 37 more
Caused by: org.wildfly.security.auth.server.RealmUnavailableException: ELY01108: Ldap-backed realm identity search failed
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.search(LdapSecurityRealm.java:1138)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getIdentity(LdapSecurityRealm.java:689)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:601)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1859)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:665)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:877)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:787)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:928)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:735)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:113)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:73)
	... 38 more
Caused by: com.sun.jndi.ldap.LdapReferralException: [LDAP: error code 10 - 0000202B: RefErr: DSID-03100781, data 0, 1 access points
	ref 1: 'eap-vm002.mw.lab.eng.bos.redhat.com'
\00]; remaining name 'ou=SimpleADReferralTestCasea4e11461,OU=secondary,O=eapqe,DC=JBOSS3,DC=test2'
	at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2975)
	at com.sun.jndi.ldap.LdapCtx.processReturnCode(LdapCtx.java:2888)
	at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1846)
	at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1769)
	at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1786)
	at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:418)
	at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:396)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:297)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:297)
	at org.wildfly.security.auth.realm.ldap.DelegatingLdapContext.search(DelegatingLdapContext.java:330)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.searchWithPagination(LdapSecurityRealm.java:1158)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.search(LdapSecurityRealm.java:1052)
	... 48 more
{code}

Similar issue for referral mode THROW is also included in older version of application server, see JBEAP-3027 and JBEAP-3029.",2017/06/06 3:02 AM
ELY-1223,NoData,2017/06/05 11:29 AM
ELY-1218,"Token #MUTUAL should work as follow:
_{{#MUTUAL}} - matches all mechanisms which authenticate the server in some way (this might just mean, making the server prove that the server knows the password); currently matches {{#FAMILY(SCRAM)}} and {{#FAMILY(GS2)}} but may be adjusted in the future as new mechanisms are available._ [1]

However it also incorrectly requires SSL context to be used, in {{SaslMechanismPredicate.MUTUAL}} [2] see:
{code}
boolean test(final String mechName, final SSLSession sslSession) {
    return sslSession != null && SaslMechanismInformation.MUTUAL.test(mechName);
}
{code}

SSL context should not be required for {{#FAMILY(SCRAM)}} or {{#FAMILY(GS2)}}.

[1] https://issues.jboss.org/browse/EAP7-567?focusedCommentId=13408238&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13408238
[2] https://github.com/wildfly-security/wildfly-elytron/blob/03e583dd476dbbdf05e3c852d34e191f181038aa/src/main/java/org/wildfly/security/sasl/SaslMechanismPredicate.java#L185",2017/06/02 1:37 AM
ELY-1217,"For SASL and HTTP mechanisms it is possible to define *realm-mapping* as part of **-authentication-factory*. But this cannot be used for EXTERNAL/CLIENT_CERT mechanism, because *ServerAuthenticationContext* is not constructed by mechanism but by *SecurityDomainTrustManager* - without relation to any **-authentication-factory*.

It can be misleading for user, that *EXTERNAL* mechanism is present in *sasl-authentication-factory*, but if *realm-mapper* is defined here, it is ignored: (because SSL authentication finish before any SASL is initiated)
{code:xml}
<sasl-authentication-factory name=""client-cert-digest"" sasl-server-factory=""configured"" security-domain=""client-cert-domain"">
    <mechanism-configuration>
        <mechanism mechanism-name=""EXTERNAL"" realm-mapper=""key-store-realm""/>
    </mechanism-configuration>
</sasl-authentication-factory>
{code}

Should be considered adding way how to pass *realm-mapper* into SSL authentication - maybe add *realm-mapper* attribute into *server-ssl-context* definition?",2017/06/01 12:50 PM
ELY-1216,"Minus operatar should work as following:
_The - operator deletes all entries that match the given name or predicate, preventing them from occurring later._ [1]

When SASL mechanism selector includes {{-}} operator for some mechanism and this mechanism is added again then this mechanism can be used. It means it violates 'preventing them from occurring later'.

e.g. {{PLAIN}} mechanism can be incorrectly used when selectors like {{selector=""-PLAIN PLAIN""}} or {{selector=""-PLAIN #ALL""}} are used for client.

[1] https://issues.jboss.org/browse/EAP7-567?focusedCommentId=13408238&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13408238",2017/06/01 6:59 AM
ELY-1215,"Application server does not offer SASL mechanisms in order defined in Elytron sasl-authentication-factory. See Steps to Reproduce for more details. 

Screenshot from wireshark 'follow TCP stream' is attached. {{JBOSS-LOCAL-USER}} is offered before {{DIGEST-MD5}}.",2017/06/01 4:56 AM
ELY-1214,"{{finalize()}} method can be called even when object is still in use [1]. Please change LocalUserServer not to rely on {{finalize()}} method

{code:java|title=LocalUserServer.java}
    @Override
    protected void finalize() throws Throwable {
        deleteChallenge();
    }
{code}

[1] https://www.infoq.com/articles/Fatal-Flaw-Finalizers-Phantoms",2017/05/31 8:17 AM
ELY-1213,"Match purpose should be entirely removed, see [1]. It means it should be removed from API, Elytron subsystem and Elytron client configuration file.

We request blocker flag to avoid situation where match-purpose occurs in GA.

[1] https://issues.jboss.org/browse/JBEAP-11144?focusedCommentId=13413867&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13413867",2017/05/31 6:31 AM
ELY-1209,"There are some topics for revising in {{allow-all-mechanisms}}, {{allow-sasl-mechanisms}}, {{forbid-sasl-mechanisms}} and {{sasl-mechanism-selector}} of Elytron subsystem and client config file.

1) Since selectors have been introduced in EAP 7.1.0.DR19 what is the reason for {{allow-all-mechanisms}}, {{allow-sasl-mechanisms}} and {{forbid-sasl-mechanisms}}? AFAIK they just provides the subset of configuration which can be set by {{sasl-mechanism-selector}}. It that case {{allow-all-mechanisms}}, {{allow-sasl-mechanisms}} and {{forbid-sasl-mechanisms}} can be completely removed from Elytron configuration because they just duplicates another configuration. Or they provide something which cannot be configured by selectors?

2) These options are mutually exclusive in Elytron subsystem, but all of them can be configured together in Elytron client configuration file. There should be added some check for mutually exclusivity of these options in Elytron client configuration file.",2017/05/30 7:19 AM
ELY-1206,"{{rotating-file-audit}} throws {{IllegalArgumentException}} if user tries to add a new {{rotating-audit-file}} and does not specify {{suffix}} property.

Steps to reproduce: {{/subsystem=elytron/rotating-file-audit-log=rotating-audit:add(path=rotating-audit.log)}}

Following output is given in jboss-cli
{code}
{
    ""outcome"" => ""failed"",
    ""failure-description"" => {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.security-event-listener.rotating-audit"" => ""Failed to start service
    Caused by: java.lang.IllegalArgumentException: Illegal pattern character 'n'""}},
    ""rolled-back"" => true
}
{code}

and following one in server log:
{code}
12:45:41,381 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC000001: Failed to start service org.wildfly.security.security-event-listener.rotating-audit: org.jboss.msc.service.StartException in service org.wildfly.security.security-event-listener.rotating-audit: Failed to start service
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1978)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: Illegal pattern character 'n'
	at java.text.SimpleDateFormat.compile(SimpleDateFormat.java:826)
	at java.text.SimpleDateFormat.initialize(SimpleDateFormat.java:634)
	at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:605)
	at java.text.SimpleDateFormat.<init>(SimpleDateFormat.java:580)
	at org.wildfly.security.audit.RotatingFileAuditEndpoint$Builder.setSuffix(RotatingFileAuditEndpoint.java:289)
	at org.wildfly.extension.elytron.AuditResourceDefinitions$2.lambda$getValueSupplier$2(AuditResourceDefinitions.java:235)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:2032)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1955)
	... 3 more

12:45:41,382 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 5) WFLYCTL0013: Operation (""add"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""rotating-file-audit-log"" => ""rotating-audit"")
]) - failure description: {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.security-event-listener.rotating-audit"" => ""Failed to start service
    Caused by: java.lang.IllegalArgumentException: Illegal pattern character 'n'""}}
{code}

Note: there is an easy workaround - if user specifies {{suffix}} property then adding a new {{rotating-audit-file}} works fine, e.g. {{/subsystem=elytron/rotating-file-audit-log=rotating-audit:add(path=rotating-audit.log,suffix=y-M-d)}} passes successfully.",2017/05/29 3:06 AM
ELY-1207,"Rule matcher {{match-user}} in authentication-context in Elytron subsystem internally uses {{org.wildfly.security.auth.client.MatchUserRule}}. This matcher works based on passed userinfo. However naming of {{match-user}} in Elytron subsystem indicates that just user part of userinfo should be used in matching.

Also description in CLI is not correct, it says: _The user to match against._

It means one of following should be changed:
* name of {{match-user}}
* functionality of {{MatchUserRule}}

Since Elytron client configuration file includes for the same matcher with name {{match-userinfo}} then I suggest to rename attribute {{match-user}} in {{authentication-context}} in Elytron subsystem to {{match-userinfo}} and improve description in CLI and XSD.",2017/05/25 8:45 AM
ELY-1202,"In case Elytron client authentication-context includes rule which contains {{match-purpose}} then NullPointerException is thrown.

Thrown exception:
{code}
java.lang.NullPointerException
	at java.lang.String.compareTo(String.java:1155)
	at java.lang.String.compareTo(String.java:111)
	at java.util.Arrays.binarySearch0(Arrays.java:2439)
	at java.util.Arrays.binarySearch(Arrays.java:2379)
	at org.wildfly.security.auth.client.MatchPurposeRule.matches(MatchPurposeRule.java:43)
	at org.wildfly.security.auth.client.AuthenticationContext.authRuleMatching(AuthenticationContext.java:233)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getAuthenticationConfiguration(AuthenticationContextConfigurationClient.java:125)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getAuthenticationConfiguration(AuthenticationContextConfigurationClient.java:107)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getAuthenticationConfiguration(AuthenticationContextConfigurationClient.java:92)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getAuthenticationConfiguration(AuthenticationContextConfigurationClient.java:79)
	at org.jboss.as.protocol.ProtocolConnectionUtils.connect(ProtocolConnectionUtils.java:151)
	at org.jboss.as.protocol.ProtocolConnectionUtils.connectSync(ProtocolConnectionUtils.java:117)
	at org.jboss.as.protocol.ProtocolConnectionManager$EstablishingConnection.connect(ProtocolConnectionManager.java:259)
	at org.jboss.as.protocol.ProtocolConnectionManager.connect(ProtocolConnectionManager.java:70)
	at org.jboss.as.protocol.mgmt.ManagementClientChannelStrategy$Establishing.getChannel(ManagementClientChannelStrategy.java:162)
	at org.jboss.as.controller.client.impl.RemotingModelControllerClient.getOrCreateChannel(RemotingModelControllerClient.java:146)
	at org.jboss.as.controller.client.impl.RemotingModelControllerClient$1.getChannel(RemotingModelControllerClient.java:60)
	at org.jboss.as.protocol.mgmt.ManagementChannelHandler.executeRequest(ManagementChannelHandler.java:135)
	at org.jboss.as.protocol.mgmt.ManagementChannelHandler.executeRequest(ManagementChannelHandler.java:110)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.executeRequest(AbstractModelControllerClient.java:263)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.execute(AbstractModelControllerClient.java:168)
	at org.jboss.as.controller.client.impl.AbstractModelControllerClient.executeForResult(AbstractModelControllerClient.java:147)
	... 42 more
{code}",2017/05/25 3:16 AM
ELY-1198,"The ACC should be captured dynamically if not given, and established to the auth config.  The ACC should not figure into equals/hashCode decisions.",2017/05/24 11:16 AM
ELY-1196,NoData,2017/05/24 9:22 AM
ELY-1195,"dataLocation is dereferenced, although it is checked on null before (could be null). 

Setting Critical priority as that can cover root cause of real problem with NPE.

{code:java|title=KeyStoreCredentialStore.java}
try {
    if (dataLocation != null && Files.exists(dataLocation)) {
        char[] password = getStorePassword(protectionParameter);
        try (InputStream fileStream = Files.newInputStream(dataLocation)) {
            if (useExternalStorage) {
                externalStorage.load(fileStream);
            } else {
                keyStore.load(fileStream, password);
            }
        }
        enumeration = keyStore.aliases();
    } else {
        keyStore.load(null, null);
        enumeration = Collections.emptyEnumeration();
    }
} catch (GeneralSecurityException e) {
    throw log.cannotInitializeCredentialStore(
            log.internalEncryptionProblem(e, dataLocation.toString()));
}
{code}


https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=20120757&defectInstanceId=4609349&mergedDefectId=1436246",2017/05/24 3:48 AM
ELY-1194,"When token verification in OAUTHBEARER SASL mechanism fails (e.g. token is already expired), the connection remain open and it hangs (until it timeouts).",2017/05/24 3:37 AM
ELY-1193,"Verification of JWT tokens with empty signature part fails in Elytron.

The Elytron token-realm can be configured to not verify JWT token signature.
{code}
/subsystem=elytron/token-realm=JwtRealm:add(jwt={})
{code}

The JWT specification describes tokens without signature in [RFC 7519 Section 6|https://tools.ietf.org/html/rfc7519#section-6].

When user is comming with such a token the validation in Elytron fails.

Sample token:
{code}
eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJpc3N1ZXIud2lsZGZseS5vcmciLCJzdWIiOiJlbHl0cm9uQHdpbGRmbHkub3JnIiwiZXhwIjoyMDUxMjIyMzk5LCJhdWQiOiJlbHl0cm9uLXRlc3QifQ.

Header:
{
  ""alg"": ""none"",
  ""typ"": ""JWT""
}

Payload:
{
  ""iss"": ""issuer.wildfly.org"",
  ""sub"": ""elytron@wildfly.org"",
  ""exp"": 2051222399,
  ""aud"": ""elytron-test""
}
{code}

The problem is probably in this piece of code in {{JwtValidator}} class:
{code:java}
        String[] parts = jwt.split(""\\."");

        if (parts.length < 3) {
            throw log.tokenRealmJwtInvalidFormat();
        }
{code}

Even if the token correctly contains 2 dots, the {{split}} returns array of lenght 2 (because the last part is empty). Additional negative-integer argument to the {{split()}} method could help here: 
{code:java}
jwt.split(""\\."", -1);
{code}",2017/05/24 2:55 AM
ELY-1191,"When I setup CLIENT_CERT authentication for an application (see Steps to Reproduce) and utilize HTTP/2 protocol, I get always 403 Forbidden even in case I use correct client certificate that should allow me access to a secured content.

I can see following TRACE messages in server.log:
{code}
2017-05-23 10:58:31,110 TRACE [org.wildfly.security] (default task-7) X500 principal [CN=client] decoded as name [client] (attribute values: [client])
2017-05-23 10:58:31,110 TRACE [org.wildfly.security] (default task-7) Principal assigning: [CN=client], pre-realm rewritten: [client], realm name: [ksRealm], post-realm rewritten: [client], realm rewritten: [client]
2017-05-23 10:58:31,110 TRACE [org.wildfly.security] (default task-7) Role mapping: principal [client] -> decoded roles [] -> realm mapped roles [] -> domain mapped roles [gooduser]
2017-05-23 10:58:31,110 TRACE [org.wildfly.security] (default task-7) Authorizing principal client.
2017-05-23 10:58:31,110 TRACE [org.wildfly.security] (default task-7) Authorizing against the following attributes: [] => []
2017-05-23 10:58:31,111 TRACE [org.wildfly.security] (default task-7) Permission mapping: identity [client] with roles [gooduser] implies (""org.wildfly.security.auth.permission.LoginPermission"" """") = true
2017-05-23 10:58:31,111 TRACE [org.wildfly.security] (default task-7) Authorization succeed
2017-05-23 10:58:31,111 TRACE [org.wildfly.security] (default task-7) Authentication succeed for principal [CN=client]
2017-05-23 10:58:31,117 TRACE [org.wildfly.security] (default task-10) Handling MechanismInformationCallback type='HTTP' name='CLIENT_CERT' host-name='localhost' protocol='https'
2017-05-23 10:58:31,117 TRACE [org.wildfly.security] (default task-10) CLIENT-CERT no SSL session
{code}
Authentication seems that it succeed just fine. But notice the last line - {{CLIENT-CERT no SSL session}}.

When I disable 'http2' in https-listener:
{code}
/subsystem=undertow/server=default-server/https-listener=https:write-attribute(name=enable-http2,value=false)
reload
{code}
I can now access secured content as expected. Also trace log contains different (more healthy) messages now.

This happens both when I utilize HTTP/2 with EAP 'alpn-hack' mechanism and also with ALPN provided by OpenSSL library.

As described in JBEAP-9803, Undertow needs to write into ssl-context when HTTP/2 with ALPN is utilized. Maybe this might be the source of this problem?",2017/05/24 12:35 AM
ELY-1186,"When a default configuration is used for DIGEST-MD5 SASL mechanism, then server suggest hostname as a realm name, but authentication fails because ServerAuthenticationContext checks mechanism configuration and fails with following exception:

{code}
@Message(id = 1092, value = ""Invalid mechanism realm selection \""%s\"""")
IllegalArgumentException invalidMechRealmSelection(String realmName);
{code}

*Suggested fix:*
If the server suggests realm name, then it should be able to consume it. Or if the realm name is really mandatory, then server should not suggest such a default value. IMO allowing such a default and simplifying configuration would have positive impact on user experience.

The full stacktrace (hidden):
{noformat}
 javax.security.sasl.SaslException: ELY05053: [DIGEST-MD5] Callback handler failed for unknown reason [Caused by java.lang.IllegalArgumentException: ELY01092: Invalid mechanism realm selection ""localhost""]
         at org.wildfly.security.sasl.util.AbstractSaslParticipant.tryHandleCallbacks(AbstractSaslParticipant.java:105)
         at org.wildfly.security.sasl.digest.AbstractDigestMechanism.getPredigestedSaltedPassword(AbstractDigestMechanism.java:482)
         at org.wildfly.security.sasl.digest.DigestSaslServer.validateDigestResponse(DigestSaslServer.java:259)
         at org.wildfly.security.sasl.digest.DigestSaslServer.evaluateMessage(DigestSaslServer.java:355)
         at org.wildfly.security.sasl.util.AbstractSaslParticipant.evaluateMessage(AbstractSaslParticipant.java:180)
         at org.wildfly.security.sasl.digest.DigestSaslServer.evaluateResponse(DigestSaslServer.java:328)
         at org.wildfly.security.sasl.util.AuthenticationCompleteCallbackSaslServerFactory$1.evaluateResponse(AuthenticationCompleteCallbackSaslServerFactory.java:58)
         at org.wildfly.security.sasl.util.AuthenticationTimeoutSaslServerFactory$DelegatingTimeoutSaslServer.evaluateResponse(AuthenticationTimeoutSaslServerFactory.java:106)
         at org.wildfly.security.sasl.util.SecurityIdentitySaslServerFactory$1.evaluateResponse(SecurityIdentitySaslServerFactory.java:57)
         at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:245)
         at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:217)
         at org.jboss.remoting3.remote.ServerConnectionOpenListener$AuthStepRunnable.run(ServerConnectionOpenListener.java:470)
         at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:897)
         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
         at java.lang.Thread.run(Thread.java:748)
 Caused by: java.lang.IllegalArgumentException: ELY01092: Invalid mechanism realm selection ""localhost""
         at org.wildfly.security.auth.server.ServerAuthenticationContext$InitialState.setMechanismRealmName(ServerAuthenticationContext.java:1615)
         at org.wildfly.security.auth.server.ServerAuthenticationContext.setMechanismRealmName(ServerAuthenticationContext.java:712)
         at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:927)
         at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:735)
         at org.wildfly.security.sasl.util.TrustManagerSaslServerFactory.lambda$createSaslServer$0(TrustManagerSaslServerFactory.java:96)
         at org.wildfly.security.sasl.util.AbstractSaslParticipant.tryHandleCallbacks(AbstractSaslParticipant.java:101)
         ... 15 more
{noformat}

Attached also server configuration and WireShark log.
",2017/05/22 4:01 PM
ELY-1185,"When Elytron client configuration file includes {{sasl-mechanism-selector}} with string which contains more mechanisms then only the last mentioned mechanism is used. In correct behavior it should use all given mechanisms in given order, see [1].

In case when the last given mechanism is supported by server then it tries to authenticate, otherwise no mechanism is used to attempt to authenticate.

For example, following element for selector can be used in Elytron client configuration file:
{code}
<sasl-mechanism-selector selector=""PLAIN DIGEST-MD5 ANONYMOUS JBOSS-LOCAL-USER""/>
{code}
When only {{DIGEST-MD5}} is supported by server then it works only if {{DIGEST-MD5}} is the last mechanism in selector string.

[1] https://issues.jboss.org/browse/EAP7-567?focusedCommentId=13408238&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13408238",2017/05/22 12:28 PM
ELY-1184,"When #FAMILY or #HASH selector is used in Elytron client configuration file then it is parsed incorrectly - end bracket ')' is included in parsed family/hash name - it means it results to {{DIGEST)}} instead of {{DIGEST}}. It seems it is parsed incorrectly in {{parseSpecialWithName}} method of {{org.wildfly.security.sasl.SaslMechanismSelector}} class in [1].

Following element for selector is used in Elytron client configuration file:
{code}
...
<sasl-mechanism-selector selector=""#FAMILY(DIGEST)""/>
...
{code}

[1] https://github.com/wildfly-security/wildfly-elytron/blob/master/src/main/java/org/wildfly/security/sasl/SaslMechanismSelector.java#L693",2017/05/22 12:01 PM
ELY-1175,"10:12:59,592 ERROR [stderr] (management task-8) Caused by: java.lang.NoClassDefFoundError: javax/json/Json
10:12:59,592 ERROR [stderr] (management task-8) 	at org.wildfly.security.audit.JsonSecurityEventFormatter.handlePermissionCheckEvent(JsonSecurityEventFormatter.java:109)
10:12:59,592 ERROR [stderr] (management task-8) 	at org.wildfly.security.audit.JsonSecurityEventFormatter.handlePermissionCheckEvent(JsonSecurityEventFormatter.java:43)
10:12:59,592 ERROR [stderr] (management task-8) 	at org.wildfly.security.auth.server.event.SecurityEventVisitor.handlePermissionCheckSuccessfulEvent(SecurityEventVisitor.java:104)
10:12:59,593 ERROR [stderr] (management task-8) 	at org.wildfly.security.auth.server.event.SecurityPermissionCheckSuccessfulEvent.accept(SecurityPermissionCheckSuccessfulEvent.java:43)
10:12:59,593 ERROR [stderr] (management task-8) 	at org.wildfly.extension.elytron.AuditResourceDefinitions$1.lambda$null$1(AuditResourceDefinitions.java:196)
10:12:59,594 ERROR [stderr] (management task-8) 	at org.wildfly.security.audit.AuditLogger.accept(AuditLogger.java:56)
10:12:59,595 ERROR [stderr] (management task-8) 	at org.wildfly.security.audit.AuditLogger.accept(AuditLogger.java:35)
",2017/05/19 5:19 AM
ELY-1165,"Wildfly Elytron Tool credential-store command ""add"" option doesn't contain entry-type in summary for adding new alias to credential store storage.

When user uses non-default entry-type that is expected entry-type in CLI command as in example below:
{code}
/subsystem=elytron/credential-store=test/alias=secret_alias:add(secret-value=""secret_password"", entry-type=""org.wildfly.security.credential.PasswordCredential"")
{code}


*How to reproduce*
{code}
java -jar  ./bin/wildfly-elytron-tool.jar credential-store  --create   --add secret_alias --password pass123 --secret secret_password --location store.jceks -n org.wildfly.security.credential.PasswordCredential --summary
Alias ""secret_alias"" has been successfully stored
Credential store command summary:
--------------------------------------
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,create=true,modifiable=true,location=""store.jceks"",implementation-properties={""keyStoreType""=>""JCEKS""},credential-reference={clear-text=""pass123""})
/subsystem=elytron/credential-store=test/alias=secret_alias:add(secret-value=""secret_password"")
{code}",2017/05/17 10:31 AM
ELY-1164,"Wildfly Elytron Tool, credential-store command doesn't support redirection (<, <<)  when multiple options are missing which show prompts.

User omit --password and --secret options and then get two (four: there is confirmation) prompts but user isn't able to redirect data to second one.

Expected behaviour is that it must work.

*How to reproduce*
{code}
java -jar  wildfly-elytron-tool.jar credential-store --add secret_alias --create -l cs001.jceks  --summary << EOF
pass123
pass123
secret_value
secret_value
EOF
{code}

*has this output:*
{code}
Exception encountered executing the command:
java.lang.Exception: java.io.IOException: Stream closed
        at org.wildfly.security.tool.Command.prompt(Command.java:115)
        at org.wildfly.security.tool.CredentialStoreCommand.execute(CredentialStoreCommand.java:184)
        at org.wildfly.security.tool.ElytronTool.main(ElytronTool.java:75)
Caused by: java.io.IOException: Stream closed
        at java.io.BufferedInputStream.getBufIfOpen(BufferedInputStream.java:170)
        at java.io.BufferedInputStream.read(BufferedInputStream.java:336)
        at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:284)
        at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:326)
        at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)
        at java.io.InputStreamReader.read(InputStreamReader.java:184)
        at java.io.BufferedReader.fill(BufferedReader.java:161)
        at java.io.BufferedReader.readLine(BufferedReader.java:324)
        at java.io.BufferedReader.readLine(BufferedReader.java:389)
        at org.wildfly.security.tool.Command.prompt(Command.java:100)
        ... 2 more
{code}
",2017/05/17 8:54 AM
ELY-1162,"Add prompt when --secret is missing for Mask command.

Use case:
    User have automation script using wildfly elytron tool and user don't want to have secret value stored in file.
    User don't want secret value to be stored in shell history after execution.
    User don't want secret value to be listed in ps -aux output.

There have to be possibility to omit --secret. When omitting --secret attribute user interaction prompt should follow with possibility to input secret value.

*How to reproduce*
{code}
java -jar wildfly-elytron-tool.jar mask -i 240 -s 12345678
{code}",2017/05/17 6:14 AM
ELY-1161,"When Elytron Client configuration file for key-store-ssl-certificate element includes alias which does not exist in given keystore then Exception with wrong message is thrown. When wrong alias {{thisIsWrongAlias}} is used, then exception says:
{quote}
Key store entry for alias ""unknown"" is missing.
{quote}
It should rather say:
{quote}
Key store entry for alias ""thisIsWrongAlias"" is missing.
{quote}

Thrown exception:
{code}
UT005023: Exception handling request to /wildfly-config-xml-dep/authenticationContext: java.lang.RuntimeException: org.wildfly.client.config.ConfigXMLParseException: ELY01159: Key store entry for alias ""unknown"" is missing.
	at vfs:/content/wildfly-config-xml-dep.war/META-INF/wildfly-config.xml:29:13
	at com.redhat.eap.qe.elytron.authnctx.WildflyConfigXmlServlet.parseAndCreateAuthenticationClientConfiguration(WildflyConfigXmlServlet.java:123)
	at com.redhat.eap.qe.elytron.authnctx.WildflyConfigXmlServlet.doGet(WildflyConfigXmlServlet.java:95)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.security.SecurityContextThreadSetupAction.lambda$create$0(SecurityContextThreadSetupAction.java:105)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.wildfly.client.config.ConfigXMLParseException: ELY01159: Key store entry for alias ""unknown"" is missing.
	at vfs:/content/wildfly-config-xml-dep.war/META-INF/wildfly-config.xml:29:13
	at org.wildfly.security.auth.client.ElytronXmlParser$PrivateKeyKeyStoreEntryCredentialFactory.get(ElytronXmlParser.java:2412)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseSslContextType$5(ElytronXmlParser.java:459)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseSslContextRuleType$6(ElytronXmlParser.java:501)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseRulesType$8(ElytronXmlParser.java:537)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:309)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:180)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:141)
	at com.redhat.eap.qe.elytron.authnctx.WildflyConfigXmlServlet.parseAndCreateAuthenticationClientConfiguration(WildflyConfigXmlServlet.java:120)
	... 41 more
{code}",2017/05/17 1:06 AM
ELY-1157,NoData,2017/05/15 2:10 PM
ELY-1151,"SASL specification says about Authorization Identity String [1]:
{quote}
If the authorization identity string is absent, the client is requesting to act as the identity the server associates with the client's credentials. *An empty string is equivalent to an absent authorization identity.*
{quote}

In case when authentication configuration includes empty name for authorization name then authentication fail. In correct behavior authentication name should be used if authorization name is empty string. 

It is caused by passing empty {{defaultName}} to {{NameCallback}} constructor which results to {{IllegalArgumentException}}. Condition in [2] checks only non-null value of {{authorizationId}} but it seems it should also check empty name.

It can be reproduced with correctly set wildfly-config.xml (i.e. configuration where authentication succeed) - in case {{set-authorization-name}} element with empty string is added to this configuration file then authentication starts to fail.

The same issue can occurs for every supported SASL mechanism. In needs to be revisited.

We request blocker flag since current behavior violates SASL specification.

[1] https://tools.ietf.org/html/rfc4422#section-3.4.1
[2] https://github.com/wildfly-security/wildfly-elytron/blob/596f25e853c8fbae088ff562708def3a43480aeb/src/main/java/org/wildfly/security/sasl/digest/DigestSaslClient.java#L223",2017/05/12 4:01 AM
ELY-1150,"Three branches (for EvidenceVerifyCallback, MechanismInformationCallback, CredentialUpdateCallback) in {{handleOne}} method of CallbackHandler created in {{ServerAuthenticationContext.createCallbackHandler()}} do not call {{handleOne(callbacks, idx + 1);}}, which means that another callbacks in array are not processed then. In case it is expected then some assertion that no another callback is obtained in {{callbacks}} array should be added.",2017/05/11 8:13 AM
ELY-1149,"I am able to pass any property into default KeyStoreCredentialStore implementation of credential store. I understand implementation-properties is general data holder for any implementation, so validation can't be made on subsystem level. But each delivered implementation knows which parameters are allowed for itself and thus should check it.

{code}
/subsystem=elytron/credential-store=test:add(relative-to=jboss.server.data.dir,credential-reference={clear-text=""pass123+""},implementation-properties={DOES_NOT_EXIST=anything},create=true,location=keystore.jks,modifiable=true)
{code}

It can prevent user from typo error. Also can help user to understand what is allowed for current implementation, as allowed properties can't be describe in model, because resource is for general usage.

{code}
""implementation-properties"" => {
    ""type"" => OBJECT,
    ""description"" => ""Map of credentials store implementation specific properties."",
    ""attribute-group"" => ""implementation"",
    ""expressions-allowed"" => true,
    ""required"" => false,
    ""nillable"" => true,
    ""value-type"" => STRING,
    ""access-type"" => ""read-write"",
    ""storage"" => ""configuration"",
    ""restart-required"" => ""resource-services""
}
{code}
",2017/05/10 9:02 AM
ELY-1147,"Coverity scan discovered unguarded read in method {{VaultCredentialStore.getAliases}}. The accessing {{data}} field should be synchronized in the same way as the other usages of this Map.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=17825064&defectInstanceId=4142379&mergedDefectId=1429449&eventId=4142379-0",2017/05/09 4:17 PM
ELY-1146,"The ""if"" conditions in the Elytron's {{ServerAuthenticationContext.assignName}} are wrong (copy/paste issue):

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=17824833&defectInstanceId=4142373&mergedDefectId=1433254",2017/05/09 3:54 PM
ELY-1145,"Vault command bulk-convert must contain in --help output which options are required.

All options are required with two exceptions:
""properties"" option and
when user uses plain-text password then he can omit SALT and ITERATION option.",2017/05/09 10:47 AM
ELY-1144,"External Credential Store - mechanism introduced as solution for EAP7-277 is missing parameter for specifying key store location. 

This is not necessary for PKCS11 keystore, which it was designed for in first place. 
However, if we left it in this way we loose posibility to ocnfigure file based keystores e.g. JKS, BCFKS (Bouncy Castle FIPS Key Store) ...
",2017/05/09 8:36 AM
ELY-1141,"Section 3.3


   For historical reasons, a sender MUST NOT generate the quoted string
   syntax values for the following parameters: stale and algorithm.",2017/05/07 11:49 PM
ELY-1138,"Comparing subsystem configuration options of client-ssl-context to wildfly-config.xml I am missing these attributes:

* client-ssl-context
    ** use-cipher-suites-order
    ** maximum-session-cache-size
    ** session-timeout

* key-managers/trust-managers: 
    ** algorithm (is IBM - IBMX509 handled properly? e.g. *ManagerFactory.getDefaultAlgorithm() is called internally)

* trust-manager
    ** certificate-revocation-list

* key-managers
    ** key-password",2017/05/05 8:42 AM
ELY-1130,"In Elytron Client configuration file all elements related to keystore (key-store-ssl-certificate, key-store-reference and key-store-credential) require element alias. It is difference from Elytron subsystem where alias is not required. 

Usage of alias should be consistent between subsystem and Elytron Client configuration file. Elytron is able to found out certificate without passed alias if keystore includes just one entry.",2017/05/03 8:28 AM
ELY-1129,"Vault command bulk-convert must have better description in --help output.

Now there is only this
{code}
 -b,--bulk-convert <description file>   Bulk conversion with parameters in description file
{code}

It's insufficient. There is expected to have description of format description file.
Now all options which are set in description file have not default value and that is in contrast with non-bulk-convert which contain default values. There must be mention this information too.
",2017/05/03 7:32 AM
ELY-1128,"Add prompt when --keystore-password is missing for Vault command.

Use case:
* User have automation script using cs tool and user don't want to have password stored in file.
* User don't want credential store password to be stored in shell history after execution.
* User don't want credential store password to be listed in ps -aux output.

There have to be possibility to omit --keystore-password attribute. When omitting --keystore-password attribute user interaction prompt should follow with possibility to input password.",2017/05/03 6:30 AM
ELY-1127,"Help output of Vault command must contain information about default values of options.

There are some options which has default value:
* alias
* location
* enc-dir
* iteration
* salt",2017/05/03 6:23 AM
ELY-1126,"Vault command summary contains MASKed password without --iteration and --salt when is used MASKed password for access to VAULT.

MASKed password must contain SALT and ITERATION as is expected:
*credential-reference=\{clear-text=""MASK-2hKo56F1a3jYGnJwhPmiF5;12345678;34""\}*
FYI: plain text password is ""secretsecret"".

*How to reproduce*
Download all attachments to same location as *wildfly-elytron-tool.jar* and run this command:
{code}
[hsvabek@dhcp-10-40-5-100 003]$ java -jar wildfly-elytron-tool.jar vault --enc-dir . --keystore server.store --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location converted001.store --alias jboss --summary
Vault (enc-dir=""."";keystore=""server.store"") converted to credential store ""converted001.store""
Vault Conversion summary:
--------------------------------------
Vault Conversion Successful
CLI command to add new credential store:
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location=""converted001.store"",implementation-properties={},credential-reference={clear-text=""MASK-2hKo56F1a3jYGnJwhPmiF5""})
{code}

Credential reference contains MASKed password without salt and iteration (credential-reference={clear-text=""MASK-2hKo56F1a3jYGnJwhPmiF5""})
",2017/05/03 6:08 AM
ELY-1125,"Omitting --location for Vault command leads to wrong credential store storage file in tool output and in summary output.

In this case when is omitted --location
* tool output contains credential store storage file name with ""enc-dir"" path prefix.
* summary output contains in location double slash in case of enc-dir value ends by slash

*Expected behaviour:* 
Tool output must show only storage file name.
Summary output must not contain double slash in location

*How to reproduce*
Download all attachments to same location as wildfly-elytron-tool.jar
option --location must be omitted, --enc-dir must end by slash.
{code}
[hsvabek@dhcp-10-40-5-100 003]$ java -jar wildfly-elytron-tool.jar vault --enc-dir ./ --keystore server.store --keystore-password secretsecret --alias jboss -f
Vault (enc-dir=""./"";keystore=""server.store"") converted to credential store "".//converted-vault.cr-store""
Vault Conversion summary:
--------------------------------------
Vault Conversion Successful
CLI command to add new credential store:
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location="".//converted-vault.cr-store"",implementation-properties={},credential-reference={clear-text=""MASK-13KrO2ZNhwNg3UxmIt.02D;12345678;23""})

{code}
Now you can see *"".//converted-vault.cr-store""* on tool output right value is *""converted-vault.cr-store""*
and location=*"".//converted-vault.cr-store""* in summary output for which is correct value *""./converted-vault.cr-store""*.",2017/05/03 5:51 AM
ELY-1124,"Vault commands with wrongly filled path to vaults should fail.
Converted credential store storage file is empty but it is very confusing to see successful message and created credential storage file.
The user might mistakenly believe that the VAULT was empty.

*How to reproduce*
Download *server.store* attachment to same location as *wildfly-elytron-tool.jar* file and then run these commands
VAULT.dat is located in path which is given by --enc-dir option - we set it to wrong value.
{code}
java -jar wildfly-elytron-tool.jar vault --enc-dir doesntMatter --keystore server.store --keystore-password secretsecret --location converted001.store --alias jboss
Vault (enc-dir=""doesntMatter"";keystore=""server.store"") converted to credential store ""converted001.store""
{code}
It is created empty converted001.store

We can omit --location option. In this case is created empty converted file with default name ""converted-vault.cr-store"" in path given by --enc-dir option.
{code}
java -jar wildfly-elytron-tool.jar vault --enc-dir doesntMatter --keystore server.store --keystore-password secretsecret --alias jboss
Vault (enc-dir=""doesntMatter"";keystore=""server.store"") converted to credential store ""doesntMatter/converted-vault.cr-store""
{code}
",2017/05/03 4:57 AM
ELY-1123,"Vault command: converted storage file overwrites existing file on filesystem.

Expected behaviour is error or some option which can enable overwriting (flag option?).


*How to reproduce:*
download all attachments to same location as *wildfly-elytron-tool.jar* file and then run this command twice and the each one ends with success.
{code}
java -jar wildfly-elytron-tool.jar vault --enc-dir . --keystore server.store --keystore-password secretsecret --location converted001.store --alias jboss --summary
Vault (enc-dir=""."";keystore=""server.store"") converted to credential store ""converted001.store""
Vault Conversion summary:
--------------------------------------
Vault Conversion Successful
CLI command to add new credential store:
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location=""converted001.store"",implementation-properties={},credential-reference={clear-text=""MASK-2hKo56F1a3jYGnJwhPmiF5;12345678;34""})
{code}",2017/05/03 4:37 AM
ELY-1122,"Vault Command --bulk-convert ignore --summary option.

There is expected to get one CLI command for each converted credential store.

*How to reproduce*
download all attachments to same location as *wildfly-elytron-tool.jar* or update locations in *bulk-vault-conversion-desc* file and then run.
{code}
java -jar wildfly-elytron-tool.jar vault --bulk-convert bulk-vault-conversion-desc --summary
Vault (enc-dir=""./"";keystore=""server.store"") converted to credential store ""converted.jceks""
Vault (enc-dir=""./"";keystore=""server.store"") converted to credential store ""converted2.jceks""  
{code}

You don't see any summary with CLI commands for each converted credential store.

",2017/05/03 4:24 AM
ELY-1121,NoData,2017/05/02 2:19 PM
ELY-1115,"Meaning of Elytron {{aggregate-principal-transformer}} should be revised. Also one point about {{regex-validating-principal-transformer}} is included since it seems its use cases are related to aggregate-principal-transformer. See:
* It seems that it works like ""It iterates through assigned Principal Transformers and returns the first non-null transformed Principal"" - is it correct and intended behaviour? Is ""aggregate-principal-transformer"" appropriate name for transformer which works like that?
* What is the use case for regex-validating-principal-transformer. This transformer just checks some pattern and if it does not match then it rewrites Principal name to null. I think it can be useful in aggregate-principal-transformer, when it can check that name matches some pattern in first transformer (regex-validating-principal-transformer) and then transforms principal in another transformer (e.g. constant-principal-transformer). Is there any other use case?
* When can aggregate-principal-transformer return any other Principal Transformer than first of the list? I think only user implemented custom-principal-transformer can currently return null (which enable iterating to another principal transformer in the list). Also regex-validating-principal-transformer can be used for returning non-first transformer, as I mentioned in previous point. Is there any real scenario when aggregate-principal-transformer can be used?

This issue is reported based on previous discussion with engineering.",2017/04/29 4:59 AM
ELY-1316,"I'm not able to use the new OTP SASL mechanism in WildFly (introduced as part of EAP7-530).

It seems the only security-realm which has subsystem support for OTP  is the {{ldap-realm}} now. Nevertheless the name filtering in {{AbstractMechanismAuthenticationFactory.getMechanismNames()}} doesn't return OTP as supported in ldap-realm. Neither the {{PasswordGuessEvidence}} nor {{PasswordCredential}} checked in the method seems to be supported.",2017/04/28 9:57 AM
ELY-1110,Update AuthenticationContextTest due to ELY-987 has been resolved.,2017/04/28 6:55 AM
ELY-1107,"Summary CLI command for adding new credential store contains duplicity for ""create"" and ""location"" attribute, ""modification"" attr is wrongly placed..

Create, location and modifiable attributes cannot be included in implementation-properties. ""modifiable"" attribute should be present in same way as ""create"" and ""location"" in its own attribute.

*How to reproduce*
{code}
java -jar wildfly-elytron-tool.jar credential-store --add secret_alias --password pass123 --create -x secret_password -l store.jceks --summary
{code}

{code}
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location=""store.jceks"",create=true,implementation-properties={""keyStoreType""=>""JCEKS"",""create""=>""true"",""location""=>""store.jceks"",""modifiable""=>""true""},credential-reference={clear-text=""pass123""})
{code}

*It is expected some like this*
{code}
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location=""store.jceks"",create=true, modifiable=true,implementation-properties={""keyStoreType""=>""JCEKS""},credential-reference={clear-text=""pass123""})
{code}",2017/04/27 10:02 AM
ELY-1106,"Setting {{cipher-suite}} or {{protocol}} attribute 
{code:xml|title=wildfly-config.xml}
            <ssl-context name=""client-ssl-context"">
                <trust-store key-store-name=""trustsore""/>
                <cipher-suite selector=""TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA,TLS_ECDH_anon_WITH_AES_128_CBC_SHA,TLS_ECDH_anon_WITH_AES_256_CBC_SHA""/>
                <protocol names=""TLSv1.1""/>
                <use-system-providers/>
            </ssl-context>
{code}

leads to 

{code:server.log}
13:47:57,206 ERROR [io.undertow.request] (default task-1) UT005023: Exception handling request to /wildfly-config-app/authenticationContext: java.lang.RuntimeException: org.wildfly.client.config.ConfigXMLParseException: CONF0005: Unexpected element ""cipher-suite"" in namespace ""urn:elytron:1.0"" encountered
	at vfs:/content/wildfly-config-app.war/META-INF/wildfly-config.xml:21:17
	at com.redhat.eap.qe.deployment.servlet.WildflyConfigXmlServlet.parseAndCreateAuthenticationClientConfiguration(WildflyConfigXmlServlet.java:119)
	at com.redhat.eap.qe.deployment.servlet.WildflyConfigXmlServlet.doGet(WildflyConfigXmlServlet.java:91)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:687)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)
	at io.undertow.servlet.handlers.ServletHandler.handleRequest(ServletHandler.java:85)
	at io.undertow.servlet.handlers.security.ServletSecurityRoleHandler.handleRequest(ServletSecurityRoleHandler.java:62)
	at io.undertow.servlet.handlers.ServletDispatchingHandler.handleRequest(ServletDispatchingHandler.java:36)
	at org.wildfly.extension.undertow.security.SecurityContextAssociationHandler.handleRequest(SecurityContextAssociationHandler.java:78)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.security.SSLInformationAssociationHandler.handleRequest(SSLInformationAssociationHandler.java:131)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:57)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.security.handlers.AuthenticationMechanismsHandler.handleRequest(AuthenticationMechanismsHandler.java:60)
	at io.undertow.servlet.handlers.security.CachedAuthenticatedSessionHandler.handleRequest(CachedAuthenticatedSessionHandler.java:77)
	at io.undertow.security.handlers.NotificationReceiverHandler.handleRequest(NotificationReceiverHandler.java:50)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.security.SecurityContextThreadSetupAction.lambda$create$0(SecurityContextThreadSetupAction.java:105)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.wildfly.client.config.ConfigXMLParseException: CONF0005: Unexpected element ""cipher-suite"" in namespace ""urn:elytron:1.0"" encountered
	at vfs:/content/wildfly-config-app.war/META-INF/wildfly-config.xml:21:17
	at org.wildfly.client.config.ConfigurationXMLStreamReader.unexpectedElement(ConfigurationXMLStreamReader.java:245)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseSslContextType(ElytronXmlParser.java:420)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseSslContextsType(ElytronXmlParser.java:342)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:265)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:172)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:133)
	at com.redhat.eap.qe.deployment.servlet.WildflyConfigXmlServlet.parseAndCreateAuthenticationClientConfiguration(WildflyConfigXmlServlet.java:116)
	... 41 more
{code}
",2017/04/27 9:54 AM
ELY-1101,Wrong offset causing padding check to throw BadPaddingException.,2017/04/26 4:52 AM
ELY-1096,"There is variable {{currentSize}} marked with modifier as {{volatile}}, what hint variable {{currentSize}} is used in multithreaded manner, as volatile ensures actual value can be seen between threads.
On the other side there is update operation on {{currentSize}}, which is not written in atomic manner, so can lead race condition.

{code}
    @Override
    protected void write(byte[] bytes) throws IOException {
        super.write(bytes);
        currentSize += bytes.length;
    }
{code}

Setting as Critical as that can lead to strange / hard to reproduce errors.
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=15443553&defectInstanceId=3634186&mergedDefectId=1429223",2017/04/21 1:20 AM
ELY-1095,"Elytron {{filesystem-realm}} should load existing identities from file system. The steps to reproduce results in:

{noformat}
[standalone@localhost:9990 /] /subsystem=elytron/filesystem-realm=realm/identity=user:read-identity
{
    ""outcome"" => ""failed"",
    ""failure-description"" => ""WFLYCTL0216: Management resource '[
    (\""subsystem\"" => \""elytron\""),
    (\""filesystem-realm\"" => \""realm\""),
    (\""identity\"" => \""user\"")
]' not found"",
    ""rolled-back"" => true
}
[standalone@localhost:9990 /] /subsystem=elytron/filesystem-realm=realm/identity=user:add
{
    ""outcome"" => ""failed"",
    ""failure-description"" => ""WFLYELY01000: Identity with name [user] already exists."",
    ""rolled-back"" => true
}
{noformat}",2017/04/20 11:50 AM
ELY-1091,"Summary output must reflect chosen option. When I run wildfly-elytron-tool with --remove and --summary I always get ""add command for CLI""

There is expected command for remove entry from credential store.
Same problem is there for --aliases, --exists

{code}
java -jar  wildfly-elytron-tool.jar credential-store --remove secret_alias --password pass123 --uri ""cr-store://test1.jceks?modifiable=true;create=true;keyStoreType=JCEKS"" -l test1.jceks --summary
Alias ""secret_alias"" has been successfully removed
Credential store command summary:
--------------------------------------
/subsystem=elytron/credential-store=test:add(uri=""cr-store://test1.jceks?modifiable=true;create=true;keyStoreType=JCEKS"",relative-to=jboss.server.data.dir,credential-reference={clear-text=""pass123""})
{code}",2017/04/19 3:12 AM
ELY-1088,"Redirection (<, <<) do not work in wildfly-elytron-tool.

It must work as is expected.

Customers use redirection of input in CLI, here are some old customer cases
* Customer cases (EAP 6x):
**    https://access.redhat.com/support/cases/#/case/00904577
**    https://access.redhat.com/support/cases/#/case/00889193
**    https://access.redhat.com/support/cases/#/case/00910827
**    https://access.redhat.com/support/cases/#/case/00910848",2017/04/18 9:54 AM
ELY-1086,"Command without any option must show help rather then error message about required options.

*How to reproduce:*
{code}
java -jar  wildfly-elytron-tool.jar credential-store 
Exception encountered executing the command:
org.apache.commons.cli.MissingOptionException: Missing required option: [-a Add new alias to the credential store, -r Remove alias from the credential store, -e Check if alias exists within the credential store, -v Display all aliases, -h Get help with usage of this command]
        at org.apache.commons.cli.DefaultParser.checkRequiredOptions(DefaultParser.java:199)
        at org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:130)
        at org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:81)
        at org.wildfly.security.tool.CredentialStoreCommand.execute(CredentialStoreCommand.java:120)
        at org.wildfly.security.tool.ElytronTool.main(ElytronTool.java:74)

{code}

*Same for mask command*
{code}
java -jar  wildfly-elytron-tool.jar mask
Exception encountered executing the command:
org.apache.commons.cli.MissingOptionException: Missing required option: [-x Secret to be encrypted, -h Get help with usage of this command]
        at org.apache.commons.cli.DefaultParser.checkRequiredOptions(DefaultParser.java:199)
        at org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:130)
        at org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:81)
        at org.wildfly.security.tool.MaskCommand.execute(MaskCommand.java:72)
        at org.wildfly.security.tool.ElytronTool.main(ElytronTool.java:74)
{code}",2017/04/18 8:48 AM
ELY-1085,"Help contains wrong description of ""--create"" option, there is description with true/false value.
And now there is wrong behaviour too. I am able set some value (even invalid) for \--create option and it is valid.
I can set e.g. ""--create false"" and it pass. It is very confusing.

--create option doesn't expect any value.

Please make it consistent:
# ""--create"" is only flag -> please fix help usage and fix it in command (\--create false must be invalid)
# ""--create"" expects true/false value, in this case leave help usage unchanged



{code}
java -jar wildfly-elytron-tool.jar credential-store     --add secret_alias --password pass123 --secret secret_password --create false -f -l newstore.jceks
Alias ""secret_alias"" has been successfully stored
Credential store command summary:
--------------------------------------
/subsystem=elytron/credential-store=cs:add(relative-to=jboss.server.data.dir,location=""newstore.jceks"",create=true,implementation-properties={""keyStoreType""=>""JCEKS"",""create""=>""true"",""location""=>""newstore.jceks"",""modifiable""=>""true""},credential-reference={clear-text=""pass123""})
{code}

{code}
java -jar  wildfly-elytron-tool.jar credential-store --help
...
 -c,--create                     Create credential store [true/false]
...
{code}",2017/04/18 6:57 AM
ELY-1084,"When we try remove non-existent alias entry from credential store storage file then we get success message.

There is expected error message.

*How to reproduce:*
Create credential store storage file and add there alias
{code}
java -jar  wildfly-elytron-tool.jar credential-store --remove secret_alias --password pass123 --uri ""cr-store://test1.jceks?modifiable=true;create=true;keyStoreType=JCEKS"" -l test1.jceks
{code}

We run command for remove alias from storage and in both cases we get success message:
{code}
java -jar  wildfly-elytron-tool.jar credential-store --remove secret_alias --password pass123 --uri ""cr-store://test1.jceks?modifiable=true;create=true;keyStoreType=JCEKS"" -l test1.jceks
Alias ""secret_alias"" has been successfully removed

java -jar  wildfly-elytron-tool.jar credential-store --remove secret_alias --password pass123 --uri ""cr-store://test1.jceks?modifiable=true;create=true;keyStoreType=JCEKS"" -l test1.jceks
Alias ""secret_alias"" has been successfully removed
{code}

",2017/04/18 6:22 AM
ELY-1083,"Elytron Client Configuration File ({{wildfly-config.xml}}) does not allow to use or configure truststore. It seems there are not related truststore attributes and also {{org.wildfly.security.auth.client.ElytronXmlParser}} does not use {{setTrustManager()}} method.

It means that following cannot be configured in Elytron Client Configuration File:
* 1-way SSL where Elytron clients need to trust the certificate from server
* 2-way SSL cannot be set between application server and Elytron Client

We request blocker since this issue blocks RFE EAP7-567.",2017/04/18 5:52 AM
ELY-1079,"{code:java|title=SecurityProviderServerMechanismFactory.java}
log.tracef(""No %s provided by service loader in %s: %s"", SERVICE_TYPE, getClass().getSimpleName(), Arrays.toString(providerSupplier.get()));
{code}

should be 

{code:java}
log.tracef(""No %s provided by provider loader in %s: %s"", SERVICE_TYPE, getClass().getSimpleName(), Arrays.toString(providerSupplier.get()));
{code}

It means ""service loader"" -> ""provider loader""",2017/04/12 3:45 AM
ELY-1070,"If SPNEGO is misconfigured Negotiate header is still send back to client, although SPNEGO can't be used.

{code}
13:19:20,861 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='BASIC' host-name='localhost.localdomain' protocol='http'
13:19:20,862 TRACE [org.wildfly.security] (management task-6) Handling AvailableRealmsCallback: realms = [fileSystemFallbackRealm]
13:19:20,862 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='CLIENT_CERT' host-name='localhost.localdomain' protocol='http'
13:19:20,862 TRACE [org.wildfly.security] (management task-6) java.lang.IllegalStateException: ELY01119: Unable to resolve MechanismConfiguration for mechanismType='HTTP', mechanismName='CLIENT_CERT', hostName='localhost.localdomain', protocol='http'.
13:19:20,862 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='DIGEST' host-name='localhost.localdomain' protocol='http'
13:19:20,862 TRACE [org.wildfly.security] (management task-6) java.lang.IllegalStateException: ELY01119: Unable to resolve MechanismConfiguration for mechanismType='HTTP', mechanismName='DIGEST', hostName='localhost.localdomain', protocol='http'.
13:19:20,862 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='FORM' host-name='localhost.localdomain' protocol='http'
13:19:20,862 TRACE [org.wildfly.security] (management task-6) java.lang.IllegalStateException: ELY01119: Unable to resolve MechanismConfiguration for mechanismType='HTTP', mechanismName='FORM', hostName='localhost.localdomain', protocol='http'.
13:19:20,862 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='SPNEGO' host-name='localhost.localdomain' protocol='http'
13:19:20,863 TRACE [org.wildfly.security] (management task-6) Evaluating SPNEGO request: cached GSSContext = null
13:19:20,863 TRACE [org.wildfly.security] (management task-6) Obtaining GSSCredential for the service from callback handler...
13:19:20,863 TRACE [org.wildfly.security] (management task-6) No valid cached credential, obtaining new one...
13:19:20,863 TRACE [org.wildfly.security] (management task-6) Logging in using LoginContext and subject [Subject:
]
13:19:20,863 INFO  [stdout] (management task-6) Debug is  true storeKey true useTicketCache false useKeyTab true doNotPrompt false ticketCache is null isInitiator false KeyTab is /home/mchoma/workspace/git-repositories/tests-ldap-kerberos-eap7/eap71/target/krb/krb.4985635734744374940.keytab refreshKrb5Config is false principal is HTTP/wronghost@JBOSS.ORG tryFirstPass is false useFirstPass is false storePass is false clearPass is false
13:19:20,863 INFO  [stdout] (management task-6) principal is HTTP/wronghost@JBOSS.ORG
13:19:20,863 INFO  [stdout] (management task-6) Will use keytab
13:19:20,863 INFO  [stdout] (management task-6) Commit Succeeded 
13:19:20,863 INFO  [stdout] (management task-6) 
13:19:20,863 TRACE [org.wildfly.security] (management task-6) Logging in using LoginContext and subject [Subject:
	Principal: HTTP/wronghost@JBOSS.ORG
	Private Credential: /home/mchoma/workspace/git-repositories/tests-ldap-kerberos-eap7/eap71/target/krb/krb.4985635734744374940.keytab for HTTP/wronghost@JBOSS.ORG
] succeed
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Creating GSSName for Principal 'HTTP/wronghost@JBOSS.ORG'
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Obtained GSSCredentialCredential [org.wildfly.security.credential.GSSKerberosCredential@1f]
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Handling ServerCredentialCallback: successfully obtained credential type type=class org.wildfly.security.credential.GSSKerberosCredential, algorithm=null, params=null
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Using SpnegoAuthenticationMechanism to authenticate HTTP/wronghost@JBOSS.ORG using the following mechanisms: [[Lorg.ietf.jgss.Oid;@4133c756]
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Caching GSSContext sun.security.jgss.GSSContextImpl@3adbbdae
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Caching KerberosTicket null
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Sent HTTP authorizations: [null]
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Request lacks valid authentication credentials
13:19:20,864 TRACE [org.wildfly.security] (management task-6) Handling MechanismInformationCallback type='HTTP' name='BEARER_TOKEN' host-name='localhost.localdomain' protocol='http'
13:19:20,864 TRACE [org.wildfly.security] (management task-6) java.lang.IllegalStateException: ELY01119: Unable to resolve MechanismConfiguration for mechanismType='HTTP', mechanismName='BEARER_TOKEN', hostName='localhost.localdomain', protocol='http'.
{code}
",2017/04/10 7:44 AM
ELY-1069,Also client credentials should be optional.,2017/04/10 5:44 AM
ELY-1062,NoData,2017/04/06 6:44 AM
ELY-1059,"When I set iteration value as STRING or NEGATIVE integer then I get different error messages rather the same one.

{code}
[hsvabek@localhost bin]$ java -jar wildfly-elytron-tool.jar mask -x secret_password -s 12345678 --iteration=""-123""
ELY03025: Iteration count not specified for password based encryption
[hsvabek@localhost bin]$ java -jar wildfly-elytron-tool.jar mask -x secret_password -s 12345678 --iteration=""ab123""
java.lang.NumberFormatException: For input string: ""ab123""
{code}",2017/04/04 11:00 AM
ELY-1058,"When we set wrong ITERATION value (too big number or string) then we get NumberFormatException.

I expect here some meaningful message about what we expected -> e.g. integer value and its maximum value.

{code}
java -jar wildfly-elytron-tool.jar mask -x secret_password -i 2301145145644 -s 12用戶
java.lang.NumberFormatException: For input string: ""2301145145644""
{code}
{code}
java -jar wildfly-elytron-tool.jar mask -x secret_password -i 230sd644 -s 12用戶
java.lang.NumberFormatException: For input string: ""230sd644""
{code}
",2017/04/04 10:37 AM
ELY-1055,"Calling Elytron {{SecurityDomain.authenticate()}} method results in {{AccessControlException}} (missing {{FilePermission}}) when Elytron {{FileSystemSecurityRealm}} is used for the domain and server runs with security manager enabled.

This file permission check must not be propagated to the calling user. The only permissions required for him/her should be the {{ElytronPermission}} ones.",2017/04/04 4:54 AM
ELY-1051,"Coverity found possible null dereference as {{getEntry()}} could return null.

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=12563831&defectInstanceId=2991455&mergedDefectId=1422740

{code:java|title=KeyStoreCredentialStore.java}
        void store(OutputStream outputStream) throws IOException, GeneralSecurityException {
            ObjectOutputStream oos = new ObjectOutputStream(outputStream);
            oos.writeInt(VERSION);
            Enumeration<String> ksAliases = dataKeyStore.aliases();
            while(ksAliases.hasMoreElements()) {
                String alias = ksAliases.nextElement();
                KeyStore.Entry entry = dataKeyStore.getEntry(alias, convertParameter(protectionParameter));
                if (entry instanceof KeyStore.SecretKeyEntry) {
                    saveSecretKey(alias, oos, (KeyStore.SecretKeyEntry)entry);
                } else {
                    throw log.unrecognizedEntryType(entry.getClass().getCanonicalName());
                }
            }
            oos.flush();
            oos.close();
        }
{code}",2017/04/03 4:28 AM
ELY-1048,"Coverity found error handling of reading stream is not sufficient. There is no check if number of actual read bytes match number of expected read bytes .

{code:java|title=KeyStoreCredentialStore.java}
        private byte[] readBytes(ObjectInputStream ois) throws IOException {
            int len = ois.readInt();
            byte[] data = new byte[len];
            ois.read(data, 0, len);
            return data;
        }
{code}

[1] https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=12563831&defectInstanceId=2991439&mergedDefectId=1422737",2017/04/03 3:52 AM
ELY-1046,"Users who use property-file based authentication with plain passwords can't authenticate with Elytron if the property file contains Unicode escape sequences (e.g. file generated by using a classical {{java.util.Properties}}). The same authentication works with legacy solution (_/core-service=management/security-realm=ApplicationRealm/authentication=properties(plain-text=true, ...)_).

The {{LegacyPropertiesSecurityRealm}} implementation has to be able to support  properties files which were supported by legacy security realms.

",2017/03/31 3:05 AM
ELY-1044,"CS tool has to support bulk conversion of vaults to credential stores.

",2017/03/30 4:20 AM
ELY-1039,ModuleLoader class has LGPL header. Let's fix it and use the project default ASL header.,2017/03/29 3:35 AM
ELY-1032,"Help output has limit 160 chars for line length and it leads to ugly line break in the middle of one option.

Command
{code}
java -jar wildfly-elytron-tool.jar credential-store --help
{code}
has this output:
{code}
usage: java -jar wildfly-elytron-tool.jar credential-store -a <alias> | -e <alias> | -h | -r <alias> | -v [-c]  [-f]  [-i <arg>] [-l <loc>] [-p <pwd>]  [-s
       <arg>] [-t <type>] [-u <uri>]  [-x <secret to store>]
{code}

I expect at least line break before ""-s"" option
{code}
usage: java -jar wildfly-elytron-tool.jar credential-store -a <alias> | -e <alias> | -h | -r <alias> | -v [-c]  [-f]  [-i <arg>] [-l <loc>] [-p <pwd>]
       [-s <arg>] [-t <type>] [-u <uri>]  [-x <secret to store>]
{code}

The best option would be some dynamic settings of line length
",2017/03/27 3:57 AM
ELY-1021,"

* {{mechanism-oids}}
	** Minimal command for kerberos security factory creation is {code}/subsystem=elytron/kerberos-security-factory=kerberos:add(principal=mchoma, path=/path/to/keytab, mechanism-oids=[1.2.840.113554.1.2.2]){code}
	** I don't think it is user-friendly to require user to specify mechanism-oids. I think some reasonable default value should be used here.",2017/03/21 3:04 PM
ELY-1019,"{code}
shifts += keyShifts[i];
{code}

should be also ensured by

{code}
shifts += keyShifts[i] & 0xff;
{code}

True is array keyShifts does not contain any negative value, but it doesn't neither {{IP}} or {{keyPerm}}, which are ensured ?

This follow up https://issues.jboss.org/browse/ELY-960
",2017/03/21 11:11 AM
ELY-1018,NoData,2017/03/21 10:22 AM
ELY-1016,"Cache in KeyStoreCredentialStore must work with lowercase aliases (keys) too.

When I work directly with CredentialStore API I see there problem with case sensitive aliases. I located problem to used cache.
There is one place when we store new entry and where is not key in lowercase.
e.g.
https://github.com/wildfly-security/wildfly-elytron/blob/master/src/main/java/org/wildfly/security/credential/store/impl/KeyStoreCredentialStore.java#L326

",2017/03/17 7:04 AM
ELY-1011,"In case when validation in Elytron regex-validating-principal-transformer fails then following NPE occurs in server log:
{code}
ERROR [org.wildfly.security] (default task-2) ELY01094: An event handler threw an exception: java.lang.NullPointerException: Value in JsonObjects name/value pair cannot be null
	at org.glassfish.json.JsonObjectBuilderImpl.validateValue(JsonObjectBuilderImpl.java:164)
	at org.glassfish.json.JsonObjectBuilderImpl.add(JsonObjectBuilderImpl.java:74)
	at org.wildfly.security.audit.JsonSecurityEventFormatter.handleAuthenticationFailedEvent(JsonSecurityEventFormatter.java:99)
	at org.wildfly.security.audit.JsonSecurityEventFormatter.handleAuthenticationFailedEvent(JsonSecurityEventFormatter.java:93)
	at org.wildfly.security.audit.JsonSecurityEventFormatter.handleAuthenticationFailedEvent(JsonSecurityEventFormatter.java:43)
	at org.wildfly.security.auth.server.event.SecurityAuthenticationFailedEvent.accept(SecurityAuthenticationFailedEvent.java:49)
	at org.wildfly.extension.elytron.AuditResourceDefinitions$1.lambda$null$1(AuditResourceDefinitions.java:156)
	at org.wildfly.security.audit.AuditLogger.accept(AuditLogger.java:56)
	at org.wildfly.security.audit.AuditLogger.accept(AuditLogger.java:35)
	at org.wildfly.security.auth.server.SecurityDomain.handleSecurityEvent(SecurityDomain.java:680)
	at org.wildfly.security.auth.server.SecurityDomain.safeHandleSecurityEvent(SecurityDomain.java:687)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.fail(ServerAuthenticationContext.java:1793)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.fail(ServerAuthenticationContext.java:433)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:865)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:728)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:113)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.fail(UsernamePasswordAuthenticationMechanism.java:107)
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:170)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:110)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:94)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:78)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:97)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:46)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:211)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

It happens only in case when Elytron audit log is enabled. It happens in case when match attribute is set to true and principal name does not match given pattern as well as in case when match attribute is set to false and principal name matches given pattern.",2017/03/16 11:07 AM
ELY-1009,"The default values of {{maximum-session-cache-size}} and {{session-timeout}} of Elytron {{*-ssl-context}} are {{0}}. This is not safe because SSL sessions can be stored indefinitely. Furthermore, such default settings overwrites default settings in Java, which can be unexpected.

There should be reasonable combination of values, or Java default values should be (let) used.

For example, see http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/sun/security/ssl/SSLSessionContextImpl.java",2017/03/16 9:59 AM
ELY-1006,"It is not possible to rotate (= rename current log file and start logging into a new one) Elytron Audit log files. It cannot be set to use the log rotation neither based on the file size (e.g. once the file size outreaches 100 MB) nor based on a time period (e.g. rotate create a new file every Sunday at midnight).

Inability to set the log rotation could lead to huge log files. Then it would be really difficult to read such files.",2017/03/16 9:14 AM
ELY-1038,NoData,2017/03/14 3:12 AM
ELY-998,i.e. Allows calls to set need and want to true to pass through.,2017/03/09 11:38 AM
ELY-997,"Form authentication backed by Elytron in the web applications uses status code 303 (See Other) to redirect user after processing /j_security_check. 

We see two serious issues here:
* Legacy security uses status code 302 (Moved Temporarily/Found) to handle this redirect and existing applications/clients may behave differently for these different codes. (e.g. default behavior of Apache HTTP client is to follow redirect for 303, but not to follow for 302)
* The 303 status code was introduced in HTTP 1.1 so it's not part of HTTP 1.0, but the 303 is returned also for HTTP/1.0 request as a HTTP/1.0 response, which is wrong.",2017/03/09 9:15 AM
ELY-996,NoData,2017/03/09 12:48 AM
ELY-1002,"When I secure management interface with wrongly configured http-authentication-factory and try to authenticate I get no error except of warning during boot 
{code}
11:41:16,140 WARN  [org.jboss.as.remoting] (MSC service thread 1-2) ****** All authentication is ANONYMOUS for org.jboss.as.remoting.RemotingHttpUpgradeService
{code}
But user is not able to know what is going wrong.

When I do similar for deployment there is at least error during boot:
{code}
14:30:59,608 ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 63) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./secured-webapp: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./secured-webapp: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:84)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	at org.jboss.threads.JBossThread.run(JBossThread.java:320)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:241)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:99)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:81)
	... 6 more
Caused by: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.initialSecurityHandler(ApplicationSecurityDomainDefinition.java:463)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$applyElytronSecurity$2(ApplicationSecurityDomainDefinition.java:425)
	at io.undertow.servlet.core.DeploymentManagerImpl.setupSecurityHandlers(DeploymentManagerImpl.java:415)
	at io.undertow.servlet.core.DeploymentManagerImpl.access$600(DeploymentManagerImpl.java:119)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:211)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:174)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1704)
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:239)
	... 8 more

14:30:59,613 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation (""deploy"") failed - address: ([(""deployment"" => ""secured-webapp.war"")]) - failure description: {
    ""WFLYCTL0080: Failed services"" => {""jboss.undertow.deployment.default-server.default-host./secured-webapp"" => ""org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./secured-webapp: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
    Caused by: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.""},
    ""WFLYCTL0412: Required services that are not installed:"" => [""jboss.undertow.deployment.default-server.default-host./secured-webapp""]
}
{code}
",2017/03/08 1:14 AM
ELY-992,"Otherwise if we use an SSLContext that does not support it we get a NPE, e.g. with wildfly-openssl: -

{quote}Caused by: java.lang.NullPointerException
	at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:302)
	at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:45)
	at org.wildfly.extension.elytron.SSLDefinitions$4.lambda$getValueSupplier$1(SSLDefinitions.java:725)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:2032)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1955)
	... 3 more
{quote}",2017/03/06 11:25 AM
ELY-1181,"On IBM java when obtain-kerberos-ticket is set to true user always get

{code}
javax.security.auth.login.LoginException: Bad JAAS configuration: credsType and keytab values are not compatible
{code}

According to ibm documentation [1] credsType=initiator and useKeytab are really incompatible.


This constraint can't be avoided once obtain-kerberos-ticket = true, because keytab path is required in model. 
{code}
       ""path"" => {
	    ""type"" => STRING,
	    ""description"" => ""The path of the KeyTab to load to obtain the credential."",
	    ""attribute-group"" => ""file"",
	    ""expressions-allowed"" => true,
	    ""required"" => true,
	    ""nillable"" => false,
	    ""min-length"" => 1L,
	    ""max-length"" => 2147483647L,
	    ""access-type"" => ""read-write"",
	    ""storage"" => ""configuration"",
	    ""restart-required"" => ""resource-services""
	},
{code}

And keytab is always set into Kerberos login module options
{code:title=GSSCredentialSecurityFactory.java}
            if (IS_IBM) {
                options.put(""noAddress"", ""true"");
                options.put(""credsType"", (isServer && !obtainKerberosTicket) ? ""acceptor"" : ""initiator"");
                options.put(""useKeytab"", keyTab.toURI().toURL().toString());
            }
{code}

[1] https://www.ibm.com/support/knowledgecenter/SSYKE2_8.0.0/com.ibm.java.security.component.80.doc/security-component/jgssDocs/jaas_login_user.html

I am not setting to blocker just because I am not sure about importance of obtain-kerberos-ticket. See my question JBEAP-9292.",2017/03/06 3:44 AM
ELY-991,"Right now the SASL digest client handles callbacks like this:

* If a realm choice is available use RealmChoiceCallback to get it, and fail if it is not supported
* Try to use RealmCallback+NameCallback+CredentialCallback (with digest password)
* Try to use RealmCallback+NameCallback+CredentialCallback (with two-way password)
* Try to use RealmCallback+NameCallback+PasswordCallback

This is a problem because RealmChoiceCallback should not be required, and if it was supported, RealmCallback is not needed.  It's basically OK to retry realm selection and name selection if the credential was unsupported.

The logic should probably be more like this:
* Try to use <a realm callback>+NameCallback+CredentialCallback (with digest password)
** First try with RealmChoiceCallback if there is a choice
** Then try with RealmCallback if RealmChoiceCallback is unsupported
** If there is no default realm, fail
** Otherwise try with no realm callback and use the default realm
* Try to use <a realm callback>+NameCallback+CredentialCallback (with two-way password)
** First try with RealmChoiceCallback if it was not eliminated above and there is a choice
** Then try RealmCallback if it was not eliminated above
** If there is no default realm, fail
** Otherwise try with no realm callback and use the default realm
* Try to use <a realm callback>+NameCallback+PasswordCallback
** First try with RealmChoiceCallback if it was not eliminated above and there is a choice
** Then try RealmCallback if it was not eliminated above
** If there is no default realm, fail
** Otherwise try with no realm callback and use the default realm

This way we don't retry callbacks that don't work, and we don't fail if RealmCallback is not supported.  If no user name or credential is given, then the attempt should be considered a failure and the next credential tried without eliminating any realm callbacks.  If no realm is given then the attempt should be a failure without trying other realm callback options, because the callback is supported but there was no realm given (which is a programming error).

If a user name or realm is given in an earlier stage, it should stay as the default for later stages.
",2017/03/03 2:49 PM
ELY-990,"I get to situation where in method {{GSSCredentialSecurityFactory.createGSSCredential()}} the cause of LoginException is hide from user. 

In log there is 
{code:title=server.log}
14:26:07,751 TRACE [org.wildfly.security] (default task-1) java.security.GeneralSecurityException: ELY01121: Unable to perform initial JAAS login.
{code}

But with debugger I get to obvious cause {{javax.security.auth.login.LoginException: Bad JAAS configuration: credsType and keytab values are not compatible}}, but this is not logged into log.

Setting to high priority, because logging useful information is esential for troubleshooting fragile Kerberos setup.

Mesage
{code:java|title=ElytronMessages}
    @Message(id = 1121, value = ""Unable to perform initial JAAS login."")
    GeneralSecurityException unableToPerformInitialLogin(@Cause LoginException cause);
{code}

is created in
{code:java|title=GSSCredentialSecurityFactory.java#L283}
	    } catch (LoginException e) {
                throw log.unableToPerformInitialLogin(e);
            }
{code}

and logged into log by 
{code:java|title=ServerAuthenticationContext.java#L847}
                        } catch (GeneralSecurityException e) {
                            // skip this credential
                            log.trace(e);
                        }
{code}


An more importantly. Question here is if some global issue should follow up? Because problem is in usage of log.trace(e) where although cause exception is avalaible, effectivelly is called log.trace(e.toString()) and cause is hidden; So probably some global check should be performed in elytron codebase if other such occurences aren't also problematic.
",2017/03/03 10:00 AM
ELY-988,"According to their javadoc, these methods should replace the rule and configuration (or SSL context) at the given index with the given rule and configuration.

In case when AuthenticationContext is defined with RuleNode - RuleA, RuleB, RuleC and RuleNode {{replacing}} method is called for index1 and RuleD, then:
* correct behavior should be - new AuthenticationContext with rule ordered - RuleA, RuleD, RuleC is created
* current behavior is - new AuthenticationContext with rule ordered - RuleD, RuleD, RuleB RuleC is created

Behavior of these methods is correct only in case when they are called with index 0.",2017/03/03 8:23 AM
ELY-987,"org.wildfly.security.auth.client.AuthenticationContext includes method {{AuthenticationContext with(AuthenticationContext other)}} which creates new AuthenticationContext which includes rules and configuration and SSL context of given AuthenticationContext other.

However, in case when {{with}} method is used with index and another AuthenticationContext, then it includes only rules and configuration (SSL context is not used). There is also method {{withSsl}} which includes rules and SSL context, but no configuration.

I see three problems here:
* there is different behavior between {{with(AuthenticationContext other)}} and {{with(int idx, AuthenticationContext other)}} - first includes also SSL context
* javadoc for with(AuthenticationContext other) does not describe that SSL context from given {{AuthenticationContext other}} is also used.
* there is not able to include both configuration and SSL context into any AuthenticationContext on some position based on index

I report this as critical because it is part of public API - it should stay backward compatible once it will be released.
",2017/03/03 3:55 AM
ELY-983,"The description of {{MECHANISM_QUERY_ALL}} filtering property says:

{quote}
This flag is only effective on calls to SaslServerFactory.getMechanismNames(Map) or SaslClientFactory.getMechanismNames(Map) for Elytron-provided SASL factories.
{quote}

It's not true for EXTERNAL SASL mechanism factories, where it's taken into account also in {{createSaslServer/Client}} methods.",2017/03/01 1:35 PM
ELY-982,"SASL mechanism filtering in Elytron {{ExternalSasl*}} factories differs from Oracle one. 

http://docs.oracle.com/javase/jndi/tutorial/ldap/security/sasl.html

Oracle has EXTERNAL mechanism valid for policies:
* javax.security.sasl.policy.noplaintext
* javax.security.sasl.policy.noactive
* javax.security.sasl.policy.nodictionary

Elytron factories doesn't allow EXTERNAL mechanism for these filtering properties set to true.

[~dlofthouse] If the changed filtering policy is intentional, please reject this issue.",2017/03/01 1:00 PM
ELY-1104,"There is no way to create empty credential store. Curently credential store can be created only with adding alias as well.
{code}
java -jar wildfly-elytron-tool.jar credential-store --add myalias --secret supersecretpassword --location=""test.store"" --uri ""cr-store://test?modifiable=true;create=true;keyStoreType=JCEKS"" --password mycspassword --salt 12345678 --iteration 230 --summary
{code}

I would expect something like 
{code}
java -jar wildfly-elytron-tool.jar credential-store --create --location=""test.store"" --uri ""cr-store://test?modifiable=true;create=true;keyStoreType=JCEKS"" --password mycspassword
{code}
",2017/02/22 7:12 AM
ELY-972,"Successful authentication is correctly handled by Elytron Audit Logging. However, if user provides incorrect password (~ authentication fails) there is no such record in audit log file.

Logging of failed authentication is one of the requirements for this Elytron Audit Logging feature. Therefore setting blocker priority.",2017/02/20 10:28 AM
ELY-971,The same problem as ELY-804 but in FOLLOW mode of DirContext.,2017/02/20 9:52 AM
ELY-967,"There are no methods on SecurityIdentity to create a run-as authorized user with a Principal, only a String name.  There is no authorize(Principal) variant on ServerAuthenticationContext.

These should be added to support realms which do not use plain text names to identify users.",2017/02/16 10:45 PM
ELY-964,"Coverity static analysis found possible occurence of resource leak.

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9690272&defectInstanceId=2391428&mergedDefectId=1402977

In constructor when {{fos.getFD()}} will throw exception {{FileOutputStream fos}} won't be closed.

{code:java|title=FileAuditEndpoint.java}
    FileAuditEndpoint(Builder builder) throws IOException {
        this.dateFormatSupplier = builder.dateFormatSupplier;
        this.syncOnAccept = builder.syncOnAccept;

        FileOutputStream fos = new FileOutputStream(builder.location.toFile(), true);
        this.fileDescriptor = fos.getFD();
        this.outputStream = new BufferedOutputStream(fos);
    }
{code}
",2017/02/15 4:52 AM
ELY-963,"Coverity found field {{EntitySaslClient.clientCertUrl}} is never filled. So probably initially intended behavior in {{X509Certificate getClientCertificate()}} method is not covered.

{code:java}
    private X509Certificate getClientCertificate() throws SaslException {
        if ((clientCertChain != null) && (clientCertChain.length > 0)) {
            return clientCertChain[0];
        } else if (clientCertUrl != null) {
            try {
                return EntityUtil.getCertificateFromUrl(clientCertUrl);
            } catch (IOException e) {
                throw log.mechUnableToObtainServerCertificate(getMechanismName(), clientCertUrl.toString(), e).toSaslException();
            }
        } else {
            throw log.mechCallbackHandlerNotProvidedServerCertificate(getMechanismName()).toSaslException();
        }
    }
{code}",2017/02/14 3:45 AM
ELY-945,"User names are case sensitive on Linux but not on Windows when using the Elytron {{FileSystemSecurityRealm}}

This is IMO a security issue. And it also affects platform certifications.

If this is by any chance an expected behavior, then it has to be emphasized in documentation and in the domain model too (description of file-system-realm)",2017/02/13 3:08 PM
ELY-946,"Coverity found suspicious logical operation https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9563899&defectInstanceId=2359232&mergedDefectId=1377462

See detailed description of possible problem in [1]

If I extend DigestUtilTest#testDecodeByteOrderedInteger with case from [1], test fails

{code}
        byte[] inputFF = CodePointIterator.ofString(""000000FF"").hexDecode().drain();
        assertEquals(0xFF, decodeByteOrderedInteger(inputFF, 0, 4));
{code}

If I change decodeByteOrderedInteger implementation according to [1], all tests passes.

{code}
result |= (buf[offset + i] & 0xff);
{code}

[1] http://findbugs.sourceforge.net/bugDescriptions.html#BIT_IOR_OF_SIGNED_BYTE

Setting to high priority, because correct behavior of SASL Digest mechanism could be impacted.",2017/02/13 9:13 AM
ELY-954,"Coverity found possible dereferencing of null value returned from {{resolveSSLContext()}} in {{openConnection()}}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564099&defectInstanceId=2359300&mergedDefectId=1389514

{code:java|title=OAuth2CredentialSource.java}
    private SSLContext resolveSSLContext() {
        if (!isHttps(tokenEndpointUri)) {
            return null;
        }
        return sslContextSupplier == null ? null : sslContextSupplier.get();
    }

    private HttpURLConnection openConnection() throws IOException {
        log.debugf(""Opening connection to [%s]"", tokenEndpointUri);
        HttpURLConnection connection = (HttpURLConnection) tokenEndpointUri.openConnection();

        if (isHttps(tokenEndpointUri)) {
            HttpsURLConnection https = (HttpsURLConnection) connection;

            https.setSSLSocketFactory(resolveSSLContext().getSocketFactory());
            if (hostnameVerifierSupplier != null) {
                https.setHostnameVerifier(checkNotNullParam(""hostnameVerifier"", hostnameVerifierSupplier.get()));
            }
        }

        return connection;
    }
{code}


NPE could probably happen if {{oauth2-introspection}} is configured with no {{client-ssl-context}} and https {{introspection-url}}.",2017/02/13 7:56 AM
ELY-965,"Coverity static analysis found 8 occurence of Closeable object LdapIdentity not closing properly. 

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359307&mergedDefectId=1400389
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359304&mergedDefectId=1400388
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359309&mergedDefectId=1400387
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359306&mergedDefectId=1400386
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359311&mergedDefectId=1400385
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359312&mergedDefectId=1400384
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359313&mergedDefectId=1400383
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564393&defectInstanceId=2359303&mergedDefectId=1400382

{{LdapIdentity}} in {{close()}} method just close provided dirContext. {{LdapIdentity}} does not create dirContext by itself. So it looks to me it is no necessary to implement Closeable in {{LdapIdentity}}, as code where dirContext was created should be responsible for closing it (and according to coverity it is closed properly everywhere).

{code:java|title=LdapSecurityRealm.java}
        private class LdapIdentity implements Closeable {

            private final String name;
            private final DirContext dirContext;
            private final String distinguishedName;
            private final SearchResult entry;

            LdapIdentity(String name, DirContext dirContext, String distinguishedName, SearchResult entry) {
                this.name = name;
                this.dirContext = dirContext;
                this.distinguishedName = distinguishedName;
                this.entry = entry;
            }

            String getName() {
                return this.name;
            }

            DirContext getDirContext() {
                return this.dirContext;
            }

            String getDistinguishedName() {
                return this.distinguishedName;
            }

            SearchResult getEntry() {
                return this.entry;
            }

            @Override
            public void close() throws IOException {
                try {
                    dirContext.close();
                } catch (NamingException e) {
                    log.debug(""LdapSecurityRealm failed to close DirContext"", e);
                }
            }
        }
{code}
",2017/02/13 7:38 AM
ELY-1060,"Coverity static-analysis scan found possible call on null object in KeyStoreCredentialStore class:
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=9564274&defectInstanceId=2359189&mergedDefectId=1402109

In if branch where flow will get only if location is null, location is dereferenced:
{code:java|title=KeyStoreCredentialStore.java}
if (location != null && Files.exists(location))
            try (InputStream fileStream = Files.newInputStream(location)) {
                keyStore.load(fileStream, getStorePassword(protectionParameter));
                enumeration = keyStore.aliases();
            } catch (GeneralSecurityException | IOException e) {
                throw log.cannotInitializeCredentialStore(e);
        } else if (create) {
            try {
                keyStore.load(null, null);
                enumeration = Collections.emptyEnumeration();
            } catch (CertificateException | IOException | NoSuchAlgorithmException e) {
                throw log.cannotInitializeCredentialStore(e);
            }
        } else {
            throw log.automaticStorageCreationDisabled(location.toString());
        }
{code}
",2017/02/13 6:17 AM
ELY-926,"JDK with [JDK-8005408|http://bugs.java.com/view_bug.do?bug_id=8005408] changed the behaviour of PKCS#12 KeyStore so it will use SecretKeyFactory to convert from SecretKeySpec to SecretKey. So a SecretKeyFactorySpi implementation is needed to support PKCS#7 Data OID used when storing data as SecretKeys in the PKCS#12 KeyStore.

This relates to ELY-920 and the test failure on JDK 1.8.0_74.
",2017/02/06 1:44 PM
ELY-920,NoData,2017/02/04 2:49 PM
ELY-915,"Elytron caching realm backed by filesystem realm provides caching for identity objects but not for related credentials and attributes.

Credentials and attributes should not be loaded from file system for a cache hit.",2017/02/03 7:51 AM
ELY-914,"In case when log debug level for class {{org.wildfly.security.auth.realm.ldap.LdapSecurityRealm.LdapSearch}} is enabled, then arguments and returning attributes are not able to be logged correctly because they are arrays.

See:
{code}
Executing search [(uid={0})] in context [ou=People,dc=jboss,dc=org] with arguments [[Ljava.lang.String;@45535736]. Returning attributes are [[Ljava.lang.String;@331d3f34]
{code}",2017/02/03 6:29 AM
ELY-910,We are not properly handle remote logout failures when something wrong happens when logging out a participant.,2017/02/02 5:46 PM
ELY-908,{{specialchars.properties}} uses wrong encoding which results to test failures.,2017/02/02 7:36 AM
ELY-903,"In case when role recursion is configured for ldap-realm and given LDAP includes some role which has member some user and also another role, then some roles are intermittently not assigned. See Steps to Reproduce for more details about configuration.

Most important part of ldif for reproduction is following:
{code}
dn: cn=R1,ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: groupOfNames
cn: R1
member: uid=jduke,ou=People,dc=jboss,dc=org
description: the R1 group

dn: cn=R2,ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: groupOfNames
cn: R2
member: uid=jduke,ou=People,dc=jboss,dc=org
member: cn=R1,ou=Roles,dc=jboss,dc=org
description: the R2 group

dn: cn=R3,ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: groupOfNames
cn: R3
member: cn=R2,ou=Roles,dc=jboss,dc=org
description: the R3 group
{code}
User jduke is direct member of roles R1 and R2. However role R2 is also member of role R1. In case when {{ldap-realm.identity-mapping.attribute-mapping.role-recursion}} is configured to {{2}}, then sometimes only roles R1, R2 and R3 are assigned (and role R4 is missing).

The same behavior occurs when role mapping is configured in application server in opposite way (principal to group mapping which uses memberOf attribute).",2017/02/01 6:42 AM
ELY-902,"In case when LDAP server used by Elytron dir-context is unreachable (e.g. LDAP is down or some network failures occur) or when dir-context is incorrectly set (e.g. used password is wrong) then application which uses ldap-realm with direct-verification=true and which uses this dir-context cannot be deployed. Deployment fails and confusing exception occurs in server log.

We request blocker since it causes that deployments (which have already been successfully deployed) can unexpectedly fail when server is restarted/reloaded in time when LDAP server is unreachable.

Deployment fails with following exception in server log:

{code}
ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 65) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./print-roles: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./print-roles: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:84)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	at org.jboss.threads.JBossThread.run(JBossThread.java:320)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:239)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:99)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:81)
	... 6 more
Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$initialSecurityHandler$4(ApplicationSecurityDomainDefinition.java:416)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.initialSecurityHandler(ApplicationSecurityDomainDefinition.java:413)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$applyElytronSecurity$0(ApplicationSecurityDomainDefinition.java:356)
	at io.undertow.servlet.core.DeploymentManagerImpl.setupSecurityHandlers(DeploymentManagerImpl.java:409)
	at io.undertow.servlet.core.DeploymentManagerImpl.access$600(DeploymentManagerImpl.java:119)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:209)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:172)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:237)
	... 8 more

ERROR [org.jboss.as.controller.management-operation] (DeploymentScanner-threads - 1) WFLYCTL0013: Operation (""deploy"") failed - address: ([(""deployment"" => ""print-roles.war"")]) - failure description: {
    ""WFLYCTL0080: Failed services"" => {""jboss.undertow.deployment.default-server.default-host./print-roles"" => ""org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./print-roles: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.""},
    ""WFLYCTL0412: Required services that are not installed:"" => [""jboss.undertow.deployment.default-server.default-host./print-roles""]
}
{code}

It is similar issue as ELY-668 - the difference is that {{direct-verification=true}} is configured in current issue.",2017/02/01 4:33 AM
ELY-921,"NPE occures during FORM authentication when TRACE logging is enabled.  

{code}
11:02:55,488 ERROR [io.undertow.request] (default task-1) UT005023: Exception handling request to /secured-webapp/: java.lang.NullPointerException
	at org.wildfly.elytron.web.undertow.server.ElytronHttpExchange$4.getID(ElytronHttpExchange.java:401)
	at org.wildfly.security.http.impl.FormAuthenticationMechanism.attemptReAuthentication(FormAuthenticationMechanism.java:228)
	at org.wildfly.security.http.impl.FormAuthenticationMechanism.evaluateRequest(FormAuthenticationMechanism.java:99)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:106)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:90)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:74)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:82)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:46)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1696)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:210)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}


{code:java|title=FormAuthenticationMechanism.java}
        if (log.isTraceEnabled()) {
            if (getSessionScope(request, false) != null) {
                log.tracef(""Trying to re-authenticate session %s using FormAuthenticationMechanism. Request URI: [%s], Context path: [%s]"",
                        getSessionScope(request, false).getID(), request.getRequestURI(), this.contextPath);
{code}
",2017/01/26 5:20 AM
ELY-962,"There are couple of classes marked as Serializable, but containing non-serializable fields.

*     RawECPrivateKey
*     RawDHPrivateKey
*     RawDSAPrivateKey
*     RawRSAMultiPrimePrivateCrtKey

Mark non-serializable fields transient or Serializable

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8553934&defectInstanceId=2138981&mergedDefectId=1377487",2017/01/25 8:16 AM
ELY-961,"There are some Serializable classes, which extends from RawKey, which is not Serializable.

*     RawRSAPrivateKey
*     RawDHPrivateKey
*     RawPBEKey
*     RawECPrivateKey
*     RawDSAPrivateKey

Either mark RawKey as Serializable as well or if this is not desired, provide no-args constructor in RawKey class, as javadoc describes:

??During deserialization, the fields of non-serializable classes will be initialized using the public or protected no-arg constructor of the class. A no-arg constructor must be accessible to the subclass that is serializable. The fields of serializable subclasses will be restored from the stream. [1]??

[1] http://docs.oracle.com/javase/8/docs/api/java/io/Serializable.html

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8553919&defectInstanceId=2138989&mergedDefectId=1377488",2017/01/25 8:07 AM
ELY-960,"Seems {{if}} statement will never be {{true}}, because invKeyPerm is of type byte[]. And permitted values for byte are -128...127. 

{code:java|title=BSDUnixDESCryptPasswordImpl.java}
outBit = invKeyPerm[inBit];
if (outBit == 255) {
    continue;
}
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8553812&defectInstanceId=2138962&mergedDefectId=1377479&fileStart=1&fileEnd=250

",2017/01/25 7:57 AM
ELY-955,"Coverity static-analysis scan found possible dereference null return value in following code

{code:java|title=ServerAuthenticationContext.java}
if (log.isTraceEnabled()) {
                log.tracef(""Authorizing principal %s."", authenticationPrincipal.getName());
                log.tracef(""Authorizing against the following attributes: %s => %s"",
                        authorizationIdentity.getAttributes().keySet(), authorizationIdentity.getAttributes().values());
            }
{code}

Coverity suppose null value could get here via {{AggregateSecurityRealm.Identity.getAuthorizationIdentity}} calling {{TokenSecurityRealm.TokenRealmIdentity.getAuthorizationIdentity}}
{code:java|title=TokenRealmIdentity.java}
        @Override
        public AuthorizationIdentity getAuthorizationIdentity() throws RealmUnavailableException {
            if (exists()) {
                return new AuthorizationIdentity() {
                    @Override
                    public Attributes getAttributes() {
                        return claims;
                    }
                };
            }

            return null;
        }
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8553790&defectInstanceId=2139010&mergedDefectId=1397421&eventId=2139010-2",2017/01/25 7:53 AM
ELY-924,"Coverity static-analysis scan found resource leak in LdapSecurityRealm.getIdentity().

It has to be in  try-with-resources, because Stream<LdapIdentity> has registered close handler, where NamingEnumeration.close() is called. Looking into one possible implementation http://grepcode.com/file/repository.grepcode.com/java/root/jdk/openjdk/8u40-b25/com/sun/jndi/ldap/LdapNamingEnumeration.java#LdapNamingEnumeration It would be safer to call close() explicitelly.

However chained stream statement is used in try, which cause 2 Stream objects to be created. But only one of them is closed. Stream created by ldapSearch.search(context) (with exlicitely registered close handler) is not closed.

{code:java|title=LdapSecurityRealm.java}
try (
Stream<LdapIdentity> identityStream = ldapSearch.search(context)
    .map(result -> new LdapIdentity(result.getNameInNamespace()))
     ) {
        LdapIdentity identity = identityStream.findFirst().orElse(null);
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8553877&defectInstanceId=2139014&mergedDefectId=1397422

",2017/01/25 7:47 AM
ELY-959,"Coverity static analysis found, there is couple of *Callback classes, which  are mark as Serializable, and contains non-serializable fields. 

* CredentialCallback 
* CredentialUpdateCallback
* MechanismInformationCallback
* SSLCallback
* SecurityIdentityCallback
* ServerCredentialCallback
* TrustedAuthoritiesCallback

Either mark fields as transient or Serializable.


https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8490519&defectInstanceId=2123214&mergedDefectId=1377493

",2017/01/25 4:56 AM
ELY-958,"Coverity static analysis found possible use of null object comming from {{RawPBEKey.getSalt()}} passed into {{javax.crypto.spec.PBEParameterSpec.PBEParameterSpec}}

{code:java|title=javax.crypto.spec.PBEParameterSpec.java}
public PBEParameterSpec(byte[] salt, int iterationCount) {
    this.salt = salt.clone();
    this.iterationCount = iterationCount;
}
{code}

Responsible elytron code:
{code:java|title=KeyUtils.java}
if (key instanceof PBEKey && paramSpecClass.isAssignableFrom(PBEParameterSpec.class)) {
            final PBEKey pbeKey = (PBEKey) key;
            // TODO: we miss the IV here
            return paramSpecClass.cast(new PBEParameterSpec(pbeKey.getSalt(), pbeKey.getIterationCount()));
        }
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8490615&defectInstanceId=2123254&mergedDefectId=1389515",2017/01/25 3:52 AM
ELY-957,"Coverity  static-analysis scan found getter is not synchronized, while setter is.

{code}
public SecurityIdentity getIdentity() {
    return this.entry.getCachedIdentity().getSecurityIdentity();
}
{code}

Current implementation  is correct because in DefaultSingleSignOnEntry (currently only avalaible implementation of SingleSignOnEntry) cachedIdentity is volatile.

However other implementations can be wrongly implemented. Once getIdentity() would be marked with synchronize modifier, such problem shouldn't occure.

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8490896&defectInstanceId=2123245&mergedDefectId=1396940

",2017/01/25 3:49 AM
ELY-894,"Accepting Map<String, String> is too restrictive and doesn't match existing contracts.",2017/01/24 9:56 AM
ELY-919,"Coverity static-analysis scan found a String to byte conversion (4xoccurences of {{getBytes()}}) with default platform encoding in the DefaultSingleSignOnSessionFactory method.

Following code

{code:java|title=DefaultSingleSignOnSessionFactory.java}
    @Override
    public String createLogoutParameter(String sessionId) {
        try {
            Signature signature = Signature.getInstance(DEFAULT_SIGNATURE_ALGORITHM);

            signature.initSign(this.privateKey);

            Base64.Encoder urlEncoder = Base64.getUrlEncoder();

            return sessionId + ""."" + ByteIterator.ofBytes(urlEncoder.encode(ByteIterator.ofBytes(sessionId.getBytes()).sign(signature).drain())).asUtf8String().drainToString();
        } catch (NoSuchAlgorithmException | InvalidKeyException e) {
            throw new IllegalStateException(e);
        }
    }
    
    @Override
    public String verifyLogoutParameter(String parameter) {
        String[] parts = parameter.split(""\\."");
        if (parts.length != 2) {
            throw new IllegalArgumentException(parameter);
        }
        try {
            String localSessionId = ByteIterator.ofBytes(parts[0].getBytes()).asUtf8String().drainToString();
            Signature signature = Signature.getInstance(DEFAULT_SIGNATURE_ALGORITHM);

            signature.initVerify(this.certificate);
            signature.update(localSessionId.getBytes());

            Base64.Decoder urlDecoder = Base64.getUrlDecoder();

            if (!ByteIterator.ofBytes(urlDecoder.decode(parts[1].getBytes())).verify(signature)) {
                throw log.httpMechSsoInvalidLogoutMessage(localSessionId);
            }

            return localSessionId;
        } catch (NoSuchAlgorithmException | InvalidKeyException e) {
            throw new IllegalStateException(e);
        } catch (SignatureException e) {
            throw new IllegalArgumentException(parameter, e);
        }
    }
{code}                                                                                                                                                                                                             

The encoding should be specified as argument.

Setting with high priority, because once default platform encoding UTF-16 will be set, funcionality  do not need to work as intended. Especially when combined with {{asUtf8String()}}, which implies specifying default encoding UTF-8.

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8675870&defectInstanceId=2164160&mergedDefectId=1396938
https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=8675870&defectInstanceId=2164161&mergedDefectId=1396939

",2017/01/24 8:40 AM
ELY-909,"According to LDAP specification [1]: ""Clients that follow referrals MUST ensure that they do not loop between servers. They MUST NOT repeatedly contact the same server for the same request with the same parameters."".

When application server is configured to use ldap-realm with dir-context which uses referral-mode=follow or throw and LDAP servers contain loop then it leads to infinite cycle. It can results to java.lang.OutOfMemoryError on EAP server.

[1] http://tools.ietf.org/html/rfc4511#section-4.1.10",2017/01/24 3:01 AM
ELY-892,NoData,2017/01/23 12:47 PM
ELY-891,"CredentialNode.getCredential() should clone the credential returned so that the destruction of any wrapped passwords does not affect the cached instance.

RawClearPassword.clone() should clone the password array. ",2017/01/23 11:41 AM
ELY-886,NoData,2017/01/17 1:10 PM
ELY-881,"Wildcard ""\{0\}"" is replaced by username in filter-name in filtering attribute mapping.

It is correct for search of identity roles, but wrong for search roles of role - on role-recursion. In such case it should be replaced by name of that role.",2017/01/17 9:21 AM
ELY-872,"WFLY-7864 is an issue hit by the helloworld-jms quickstart example. It is a standalone Java app using plain classpath (JBoss Modules is not present).

I have found an issue in JBoss Remoting that was causing an issue when JBoss Modules was not present (REM3-244). After patching JBoss Remoting, I see a similar issue with Elytron:

{code}
[WARNING]
java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)
        at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.ExceptionInInitializerError
        at org.wildfly.security.auth.client.AuthenticationContext.lambda$static$0(AuthenticationContext.java:49)
        at org.wildfly.common.context.ContextManager.getPrivileged(ContextManager.java:205)
        at org.wildfly.security.auth.client.AuthenticationContext.captureCurrent(AuthenticationContext.java:81)
        at org.jboss.remoting3.EndpointImpl.construct(EndpointImpl.java:211)
        at org.jboss.remoting3.EndpointBuilder.build(EndpointBuilder.java:117)
        at org.jboss.remoting3.RemotingXmlParser.parseEndpoint(RemotingXmlParser.java:52)
        at org.jboss.remoting3.ConfigurationEndpointSupplier.lambda$static$0(ConfigurationEndpointSupplier.java:51)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jboss.remoting3.ConfigurationEndpointSupplier.<clinit>(ConfigurationEndpointSupplier.java:48)
        at org.wildfly.common.context.ContextManager.setGlobalDefaultSupplierIfNotSet(ContextManager.java:108)
        at org.jboss.remoting3.Endpoint.lambda$static$0(Endpoint.java:58)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.jboss.remoting3.Endpoint.<clinit>(Endpoint.java:56)
        at org.wildfly.naming.client.remote.RemoteNamingProviderFactory.supportsUriScheme(RemoteNamingProviderFactory.java:70)
        at org.wildfly.naming.client.WildFlyRootContext.getProviderContext(WildFlyRootContext.java:318)
        at org.wildfly.naming.client.WildFlyRootContext.lookup(WildFlyRootContext.java:123)
        at org.wildfly.naming.client.WildFlyRootContext.lookup(WildFlyRootContext.java:113)
        at javax.naming.InitialContext.lookup(InitialContext.java:417)
        at org.jboss.as.quickstarts.jms.HelloWorldJMSClient.main(HelloWorldJMSClient.java:62)
        ... 6 more
Caused by: org.wildfly.security.auth.client.InvalidAuthenticationConfigurationException: java.lang.NoClassDefFoundError: org/jboss/modules/ModuleClassLoader
        at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:44)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.<clinit>(DefaultAuthenticationContextProvider.java:36)
        ... 25 more
Caused by: java.lang.NoClassDefFoundError: org/jboss/modules/ModuleClassLoader
        at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:42)
        ... 27 more
Caused by: java.lang.ClassNotFoundException: org.jboss.modules.ModuleClassLoader
        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
{code}

According to Elytron's POM, JBoss Modules should be be optional and a standalone Java app should not require it to be able to use Elytron's client authentication.",2017/01/13 3:47 AM
ELY-869,"Scenario: I try to configure application server for scenario when different identity stores are used for authentication and authorization (e.g. username/password are stored in LDAP and roles are assigned from Database).

In case when authentication and authorization is handled by different security realms in Elytron (i.e. aggregate realm is used) then authorization works only in case, when identity store for realm used for authorization includes the username also for authentication. See Steps to Reproduce for more details.

We request blocker since using different identity stores for authentication and authorization is common scenario which should be provided by Elytron. Even out documentation explicitly mentioned that scenarios [1]: 
??Consider the case where users are managed in a central LDAP server and application-specific roles are stored in the application’s relational database.??

I tried this scenario with Properties and Filesystem Realms for authentication and Properties and Ldap Realms for authorization.

[1] https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/security-architecture/",2017/01/12 4:11 AM
ELY-867,"I encountered couple of issues with cryptography used for password masking:
* implementation of masked passwords drops initialization vector (IV) randomly generated by the {{javax.crypto.Cipher}} which makes unmasking (decryption) impossible.
* the implementation is using the same algorithm for key derivation and encryption, which is not possible as there is no encryption support in {{javax.crypto.Cipher}} for PKDBF2 family of algorithms, they are supported only in {{javax.crypto.SecretKeyFactory}}
",2017/01/11 8:07 AM
ELY-1284,"Exception when running on WildFly:
{noformat}
13:28:04,646 ERROR [org.xnio.listener] (Remoting ""management-client"" I/O-1) XNIO001007: A channel event listener threw an exception: java.security.AccessControlException: WFSM000001: Permission check failed (permission ""(""java.io.FilePermission"" ""/Users/iweiss/Development/wildfly/dist/target/wildfly-11.0.0.Alpha1-SNAPSHOT/modules/system/layers/base/org/wildfly/security/elytron/main/wildfly-elytron-1.1.0.Beta19-SNAPSHOT.jar"" ""read"")"" in code source ""(vfs:/content/RebindTestCase.jar <no signer certificates>)"" of ""ModuleClassLoader for Module ""deployment.RebindTestCase.jar:main"" from Service Module Loader"")
        at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:278)
        at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:175)
        at java.lang.SecurityManager.checkRead(SecurityManager.java:888)
        at org.wildfly.security.manager.WildFlySecurityManager.checkRead(WildFlySecurityManager.java:350)
        at sun.net.www.protocol.jar.JarFileFactory.getCachedJarFile(JarFileFactory.java:137)
        at sun.net.www.protocol.jar.JarFileFactory.get(JarFileFactory.java:81)
        at sun.net.www.protocol.jar.JarURLConnection.connect(JarURLConnection.java:122)
        at sun.net.www.protocol.jar.JarURLConnection.getInputStream(JarURLConnection.java:150)
        at java.net.URL.openStream(URL.java:1045)
        at java.util.ServiceLoader.parse(ServiceLoader.java:304)
        at java.util.ServiceLoader.access$200(ServiceLoader.java:185)
        at java.util.ServiceLoader$LazyIterator.hasNextService(ServiceLoader.java:357)
        at java.util.ServiceLoader$LazyIterator.access$600(ServiceLoader.java:323)
        at java.util.ServiceLoader$LazyIterator$1.run(ServiceLoader.java:396)
        at java.util.ServiceLoader$LazyIterator$1.run(ServiceLoader.java:395)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.util.ServiceLoader$LazyIterator.hasNext(ServiceLoader.java:398)
        at java.util.ServiceLoader$1.hasNext(ServiceLoader.java:474)
        at org.wildfly.security.util.ServiceLoaderSupplier.get(ServiceLoaderSupplier.java:54)
        at org.wildfly.security.util.ServiceLoaderSupplier.get(ServiceLoaderSupplier.java:35)
        at org.wildfly.security.auth.client.ElytronXmlParser$DeferredSupplier.get(ElytronXmlParser.java:2267)
        at org.wildfly.security.sasl.util.SecurityProviderSaslClientFactory.createSaslClient(SecurityProviderSaslClientFactory.java:89)
        at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.createSaslClient(PrivilegedSaslClientFactory.java:55)
        at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:64)
        at org.wildfly.security.sasl.util.ProtocolSaslClientFactory.createSaslClient(ProtocolSaslClientFactory.java:48)
        at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:64)
        at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:48)
        at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:64)
        at org.wildfly.security.sasl.util.PropertiesSaslClientFactory.createSaslClient(PropertiesSaslClientFactory.java:52)
        at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:64)
        at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:48)
        at org.wildfly.security.sasl.util.FilterMechanismSaslClientFactory.createSaslClient(FilterMechanismSaslClientFactory.java:101)
        at org.wildfly.security.auth.client.AuthenticationConfiguration.createSaslClient(AuthenticationConfiguration.java:878)
        at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.createSaslClient(AuthenticationContextConfigurationClient.java:296)
        at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:404)
        at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:239)
        at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
        at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
        at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
        at org.xnio.nio.WorkerThread.run(WorkerThread.java:567)
{noformat}",2017/01/06 10:50 AM
ELY-862,"Only plaintext password is currently able to be configured in Elytron dir-context resource. Any integration with Credential store is missing.

We request blocker since it seems that there is currently no option how to provide non-plaintext password for dir-context to server configuration.",2017/01/05 9:59 AM
ELY-858,"In case when attribute {{identity-mapping.search-base-dn}} from Elytron ldap-realm is missing in configuration then calling ldap-realm during authentication causes NullPointerException.

Following exception is thrown to server log:
{code}
ERROR [io.undertow.request] (default task-1) UT005023: Exception handling request to /print-roles/protected/printRoles: java.lang.RuntimeException: ELY01108: Ldap-backed realm identity search failed
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity$LdapSearch.search(LdapSecurityRealm.java:976)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getIdentity(LdapSecurityRealm.java:605)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.exists(LdapSecurityRealm.java:548)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:516)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1785)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:656)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:854)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:778)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:895)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:726)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:113)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:69)
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:151)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:106)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:90)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:74)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:82)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:46)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1680)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1680)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1680)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1680)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:208)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:809)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at org.jboss.as.naming.InitialContext.getURLScheme(InitialContext.java:160)
	at org.jboss.as.naming.InitialContext.getURLOrDefaultInitCtx(InitialContext.java:128)
	at javax.naming.directory.InitialDirContext.getURLOrDefaultInitDirCtx(InitialDirContext.java:106)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:286)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:286)
	at org.wildfly.security.auth.realm.ldap.DelegatingLdapContext.search(DelegatingLdapContext.java:319)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity$LdapSearch.search(LdapSecurityRealm.java:945)
	... 47 more
{code}",2017/01/02 7:06 AM
ELY-856,"Elytron ldap-realm is not able to work with LDAP which uses principal to group mapping. It seems that there is currently no way how to configure principal to group mapping in application server.

Simplified example:
{code}
dn: uid=TestUserOne,ou=users,dc=principal-to-group,dc=example,dc=org
objectClass: groupMember
memberOf: uid=GroupOne,ou=groups,dc=principal-to-group,dc=example,dc=org
memberOf: uid=Slashy/Group,ou=groups,dc=principal-to-group,dc=example,dc=org

dn: uid=GroupOne,ou=groups,dc=principal-to-group,dc=example,dc=org
objectClass: groupMember
objectClass: group
memberOf: uid=GroupFive,ou=subgroups,ou=groups,dc=principal-to-group,dc=example,dc=org
{code}

Example for reproducing: (by olukas)
Role {{SomeRole}} is currently not able to be assigned to user {{someUser}} when following ldif is used. In this case principal to group mapping is provided by attribute {{description}}, but in can be provided by any attribute (e.g. memberOf). User {{thisUserIsNotUsed}} is used only for simpler reproduction of issue.
{code}
dn: ou=People,dc=jboss,dc=org
objectclass: top
objectclass: organizationalUnit
ou: People

dn: uid=someUser,ou=People,dc=jboss,dc=org
objectclass: top
objectclass: person
objectclass: inetOrgPerson
uid: someUser
cn: some User
sn: User
userPassword: Password
description: cn=SomeRole,ou=Roles,dc=jboss,dc=org

dn: uid=thisUserIsNotUsed,ou=People,dc=jboss,dc=org
objectclass: top
objectclass: person
objectclass: inetOrgPerson
uid: thisUserIsNotUsed
cn: this User Is Not Used
sn: this User Is Not Used
userPassword: Password

dn: ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: organizationalUnit
ou: Roles

dn: cn=SomeRole,ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: groupOfNames
cn: SomeRole
member: uid=thisUserIsNotUsed,ou=People,dc=jboss,dc=org
{code}

Mentioned ldif works with legacy security solution.

This missing feature can cause that migration from legacy security solution will not be possible -> we request blocker.",2017/01/02 6:45 AM
ELY-831,"Coverity static-analysis scan found resource leak in {{OidsUtil}} static initialization block.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=6804056&defectInstanceId=1776762&mergedDefectId=1384493
Following code is used in the static block
{code}
props.load(OidsUtil.class.getResourceAsStream(""oids.properties""));
{code}

The resource created by {{OidsUtil.class.getResourceAsStream(""oids.properties"")}} is not closed properly.
",2016/12/14 10:12 AM
ELY-823,NoData,2016/12/08 7:57 AM
ELY-821,NoData,2016/12/07 9:23 AM
ELY-813,"Credential store operations can be slow, as they generally flush the updated store to disk after every operation making multiple changes undergo many pointless flushes.  We can solve this a number of different possible ways:

* Make CredentialStore use the same access pattern as KeyStore, where the user is responsible for flushing changes when they are complete, putting the user in charge of storage details (user is responsible for concurrency control)
* Make CredentialStore implement a {{flush()}} method (and {{hasUnflushedChanges()}} method) which performs the persistence step separately at a time of the user's choosing (user is responsible for concurrency control) (memory-backed stores always return {{false}} for {{hasUnflushedChanges()}}) (this is my preferred approach)
* Implement a transaction API in CredentialStore to allow concurrent non-conflicting updates with lock protection, isolation, atomicity, and consistency properties (credential store manages concurrency control via lock/transaction objects)
",2016/12/05 12:20 PM
ELY-807,NoData,2016/12/02 11:30 AM
ELY-803,"The {{ExternalSaslServer.evaluateResponse}} returns empty byte array instead of null after successful authentication.

[The contract|http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#evaluateResponse-byte:A-] says:
{quote}
It is null if the authentication has succeeded and there is no more challenge data to be sent to the client.
{quote}

*Possible fix*
Return null when authentication succeeds.",2016/11/29 10:06 AM
ELY-802,"Calling {{wrap/unwrap}} methods on {{ExternalSaslServer/Client}} should throw {{IllegalStateException}} as defines [the contract|http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServer.html#unwrap-byte:A-int-int-]. Currently it throws a {{SaslException}}.

--We could be inspired by OpenJDK implementation of CRAM-MD5 and do the following in  both methods:-
",2016/11/29 9:42 AM
ELY-1014,"When deployment is configured to be secured with DIGEST, but {{http-authentication-factory}} does not list DIGEST mechanism, user is not informed about misconfiguration. Even when TRACE logging is turned on. When user tries to access app 403 http code is returned and Forbidden is shown in browser. I would expect browser dialog to appear to allow user provide credentials (401 http status code).

{code:title=web.xml}
  <login-config>
      <auth-method>DIGEST</auth-method>
      <realm-name>ApplicaitonRealm</realm-name>
  </login-config>
{code}

{code:title=standalone-elytron.xml}
<http-authentication-factory name=""application-http-authentication"" http-server-mechanism-factory=""global"" security-domain=""ApplicationDomain"">
    <mechanism-configuration>
        <mechanism mechanism-name=""BASIC"">
            <mechanism-realm realm-name=""Application Realm""/>
        </mechanism>
        <mechanism mechanism-name=""FORM""/>
    </mechanism-configuration>
</http-authentication-factory>
{code}

This applies globally to all authentication mechanisms, not only DIGEST.

Could elytron handle misconfiguration:
* either fail during deploying application as deployment requirement can't be satisfy 
* or provide reasonable elytron defaults of missing mechanism configuration.
",2016/11/29 9:32 AM
ELY-800,"The {{ExternalSaslServerFactory.createSaslServer(String, String, String, Map<String, ?>, CallbackHandler)}} method returns an instance even for properties, for which {{getMechanismNames()}} returns empty array of names.

The {{ExternalSaslServer}} instances should only be created if the mechanism is supported for given properties (configuration).",2016/11/28 11:04 AM
ELY-905,"It is not possible to set up authentication based on certificates. I followed the community documentation [1,2] to set up 2-way SSL for apps and certificates based auth. Everything worked as expected until I tried to deploy an app. I got this output

{code}
14:50:29,352 ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 65) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./deployment: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./deployment: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:85)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	at org.jboss.threads.JBossThread.run(JBossThread.java:320)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:237)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:100)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:82)
	... 6 more
Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$initialSecurityHandler$4(ApplicationSecurityDomainDefinition.java:348)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.initialSecurityHandler(ApplicationSecurityDomainDefinition.java:345)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$applyElytronSecurity$0(ApplicationSecurityDomainDefinition.java:293)
	at io.undertow.servlet.core.DeploymentManagerImpl.setupSecurityHandlers(DeploymentManagerImpl.java:404)
	at io.undertow.servlet.core.DeploymentManagerImpl.access$600(DeploymentManagerImpl.java:119)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:207)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:172)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:235)
	... 8 more

14:50:29,356 ERROR [org.jboss.as.controller.management-operation] (DeploymentScanner-threads - 2) WFLYCTL0013: Operation (""deploy"") failed - address: ([(""deployment"" => ""deployment.war"")]) - failure description: {
    ""WFLYCTL0080: Failed services"" => {""jboss.undertow.deployment.default-server.default-host./deployment"" => ""org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./deployment: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'CLIENT_CERT' is not available from the HttpAuthenticationFactory.""},
    ""WFLYCTL0412: Required services that are not installed:"" => [""jboss.undertow.deployment.default-server.default-host./deployment""],
    ""WFLYCTL0180: Services with missing/unavailable dependencies"" => undefined
{code}

This might be caused by different representation of {{CLIENT-CERT}} attribute within Elytron and Undertow. It appears that Elytron uses {{CLIENT-CERT}} [3] whereas Undertow uses {{CLIENT_CERT}} [4]

[1] https://docs.jboss.org/author/display/WFLY/Using+the+Elytron+Subsystem#UsingtheElytronSubsystem-EnableTwoWaySSL%2FTLSinWildFlyforApplications
[2] https://docs.jboss.org/author/display/WFLY/Using+the+Elytron+Subsystem#UsingtheElytronSubsystem-ConfigureAuthenticationwithCertificates
[3] https://github.com/wildfly-security/wildfly-elytron/blob/master/src/main/java/org/wildfly/security/http/HttpConstants.java#L93
[4] https://github.com/undertow-io/undertow/blob/master/core/src/main/java/io/undertow/security/impl/ClientCertAuthenticationMechanism.java#L66",2016/11/28 9:45 AM
ELY-794,"Scenario: I am trying to assign role from LDAP to user. I would like to use input username (e.g. admin) in filter, not full user DN (e.g. uid=admin,ou=People,dc=jboss,dc=org). It seems Elytron ldap-realm does not provide any wildcard which can be used for input username.

In EAP 7.0 (with PicketBox), LdapExtLoginModule provides roleFilter option which filter can contain following wildcards:
* {{\{0\}}} - for input username
* {{\{1\}}} - for authenticated full user DN

It seems that Elytron supports only wildcard for authenticated full user DN (through {{\{0\}}} wildcard). Wildcard for input username should be added. 

It would be useful, when order of wildcards will be the same as in EAP 7.0 - i.e. not just add the new {{\{1\}}} for input username, but use {{\{0\}}} for input username and {{\{1\}}} for authenticated full user DN. This order is also better due to wildcard {{\{0\}}} will mean the same in identity filter and in role/attribute filter.  

Missing this feature in Elytron can lead to situation when migration from PicketBox to Elytron will not be possible since LDAP structure for role assignment used by legacy solution will not be able to work correctly with Elytron.

Example of usage:
I would like to use filter like {{(description=SOME_INPUT_USERNAME_WILDCARD)}} for assigning role JBossAdmin to user jduke in following ldif:
{code}
dn: ou=People,dc=jboss,dc=org
objectclass: top
objectclass: organizationalUnit
ou: People

dn: uid=jduke,ou=People,dc=jboss,dc=org
objectclass: top
objectclass: person
objectclass: inetOrgPerson
uid: jduke
cn: Java Duke
sn: Duke
userPassword: Password

dn: uid=notUsedUser,ou=People,dc=jboss,dc=org
objectclass: top
objectclass: person
objectclass: inetOrgPerson
uid: notUsedUser
cn: not used user
sn: notUsedUser
userPassword: Password

dn: ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: organizationalUnit
ou: Roles

dn: cn=JBossAdmin,ou=Roles,dc=jboss,dc=org
objectclass: top
objectclass: groupOfNames
cn: JBossAdmin
member: uid=notUsedUser,ou=People,dc=jboss,dc=org
description: jduke
{code}",2016/11/25 1:55 AM
ELY-791,"Following exception is not enclosed into Realm exception when problem with properties file occure:
{code:java}
org.wildfly.security.util.DecodeException: ELY03007: Invalid hex character
org.wildfly.security.util.NumericIterator$5.calc(NumericIterator.java:1074)
org.wildfly.security.util.NumericIterator$5.hasNext(NumericIterator.java:1090)
org.wildfly.security.util.ByteIterator.drainTo(ByteIterator.java:1153)
org.wildfly.security.util.ByteIterator.drain(ByteIterator.java:1165)
org.wildfly.security.auth.realm.LegacyPropertiesSecurityRealm$1.verifyEvidence(LegacyPropertiesSecurityRealm.java:171)
org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1680)
org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:655)
{code}",2016/11/24 9:30 AM
ELY-789,The UnaryOperator is supposed to offer a final override configuration so needs to wrap the inner factory not the outer one as the outer one already has configuration based modifications applied to it so the effect of the UnaryOperator is ignored.,2016/11/23 3:11 PM
ELY-788," Java [SaslClientFactory|http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslClientFactory.html] and [SaslServerFactory|http://docs.oracle.com/javase/8/docs/api/javax/security/sasl/SaslServerFactory.html] interfaces define where {{null}} parameters or {{null}} return values are allowed  and which Exception types can be used in methods. Elytron implementation of SASL mechanisms doesn't follow this contract, which results in NullPointerExceptions.

E.g.
{code}
java.lang.NullPointerException
	at org.wildfly.security.sasl.scram.ScramSaslClientFactory.getMechanismNames(ScramSaslClientFactory.java:119)
...
{code}",2016/11/23 10:23 AM
ELY-768,NoData,2016/11/17 1:15 PM
ELY-797,"There are methods in Elytron {{LdapSecurityRealm}} class which create/get DirContext, but does not close him in finally block.
In some circumstances could cause context resource leak.

* LdapSecurityRealm
** getEvidenceVerifySupport
** getCredentialAcquireSupport
** getCredential
** setCredentials

* LdapRealmIdentity
** setCredentials

In same class there are examples of properly closed contexts:
* LdapRealmIdentity
** getCredential
** getEvidenceVerifySupport
** verifyEvidence
** getIdentity
** create
** setAttributes",2016/11/16 5:36 AM
ELY-760,"In Ldap Realm roles are searched before actual user password is validated. Ldap Realm uses following flow:
# searching for username
# searching for roles (i.e. searching for attributes)
# validating password for username

It means even if wrong password is used then roles in LDAP are searched. Password should be validated before some roles are searched. Current behavior can result to performance issues.",2016/11/16 4:04 AM
ELY-757,"The {{String.toUpperCase()}} and {{String.toLowerCase()}} methods depend on the system locale. We should avoid using them in the Elytron testsuite and use the overloaded method with {{Locale}} parameter instead.
",2016/11/15 4:11 AM
ELY-754,"Coverity static-analysis scan found possible use of null object in {{IdentityCredentials.contains(Class)}} method.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5862869&defectInstanceId=1561289&mergedDefectId=1377460
The method returns
{code}
return contains(credentialType, null);
{code}

If the virtual call resolves to type {{CredentailNode}}, then the {{contains()}} call may result in NPE, because the {{null}} is used as {{algorthmName}} in:
{code}
return credentialType.isInstance(credential) && algorithmName.equals(((AlgorithmCredential) credential).getAlgorithm());
{code}
",2016/11/14 10:21 AM
ELY-753,"Coverity static-analysis scan found possible use of null object in {{SetCredentialsConfiguration.filterOneSaslMechanism}} method.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5863025&defectInstanceId=1561291&mergedDefectId=1377459
The method contains condition
{code}
if (credentials.contains(type, null)) {
    //...
}
{code}

If the {{credentials}} variable is of type {{IdentityCredentials}}, then the {{contains()}} call may result in NPE, because the {{null}} is used as {{algorthmName}} in:
{code}
return credentialType.isInstance(credential) && algorithmName.equals(((AlgorithmCredential) credential).getAlgorithm());
{code}
",2016/11/14 10:15 AM
ELY-750,"Coverity static-analysis scan found 2 usages of null object in {{NonceManager}} class.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760290&defectInstanceId=1541375&mergedDefectId=1375730
The method {{generateNonce()}} without params, call {{generateNonce(null)}} - where {{null}} is provided as a ({{byte[] salt}})
It's used later in the code:
{code}
if (log.isTraceEnabled()) {
    log.tracef(""New nonce generated %s, using seed %s"", nonce, new String(salt, StandardCharsets.UTF_8));
}
{code}
so it will throw NPE when trace-logging is enabled.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760290&defectInstanceId=1541376&mergedDefectId=1375731
similar problem in {{useNonce(nonce)}} calling {{useNonce(nonce, null)}}

",2016/11/14 7:58 AM
ELY-749,"The String.toUpperCase() call is used in constructor of {{AttributeMapping}} class without providing {{Locale.ENGLISH}} or {{Locale.US}} as parameter.

This can lead to problems on systems with non-English default locale (e.g. {{-Duser.language=tr}}).",2016/11/14 7:16 AM
ELY-748,"Coverity static-analysis scan found possible use of null object in {{FileSystemSecurityRealm.parseCredential()}} method.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760040&defectInstanceId=1541373&mergedDefectId=1369298&eventId=1541373-14
If the {{format}} is not provided as an attribute in the provided XML stream, then the call
{code}
  String format = null;
  // ...
  function.parseCredential(algorithm, format, text);
{code}

will fail for {{parsePublicKey}} method as the function code it contains code calling method of the {{format}} parameter (with possible {{null}} value).

{code}
if (! format.equals(""pkcs8"")) {
    throw ElytronMessages.log.fileSystemRealmUnsupportedKeyFormat(format, path, streamReader.getLocation().getLineNumber(), name);
}
{code}
",2016/11/14 6:35 AM
ELY-743,"Coverity static-analysis scan found 3 possible calls on null objects in {{ServerAuthenticationContext}} class.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760324&defectInstanceId=1541382&mergedDefectId=1369286

In {​{ServerAuthenticationContext.AuthorizedState.​isSamePrincipal(Principal)}} - Return value of function which returns null is dereferenced without checking.
{code}
2039    boolean isSamePrincipal(final Principal principal) {
    
// 1. returned_null: getName returns null (checked 9 out of 11 times). (The virtual call resolves to org.wildfly.security.auth.server.PrincipalDecoder.<clinit>/<gen>org.wildfly.security.auth.server.PrincipalDecoder_instance_2.getName.) [show details]
    
// 2. var_assigned: Assigning: name = null return value from getName.
2040        String name = authorizedIdentity.getSecurityDomain().getPrincipalDecoder().getName(principal);
    
// CID 1369286 (#1 of 1): Dereference null return value (NULL_RETURNS)3. dereference: Dereferencing a pointer that might be null name when calling isSameName. [show details]
2041        return isSameName(name);
2042    }
{code}

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760324&defectInstanceId=1541377&mergedDefectId=1369289
In {{ServerAuthenticationContext.NameAssignedState.​isSamePrincipal(Principal)}} - the same as the previous one.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760324&defectInstanceId=1541378&mergedDefectId=1369304
In {{​ServerAuthenticationContext.ANONYMOUS.​handleOne(​Callback[], int)}}
{code}
790    final PasswordCallback passwordCallback = (PasswordCallback) callback;
791
   
// 8. returned_null: getCredentialAcquireSupport returns null (checked 0 out of 1 times). [show details]
   
// CID 1369304 (#1 of 1): Dereference null return value (NULL_RETURNS)9. null_method_call: Calling a method on null object getCredentialAcquireSupport(org.wildfly.security.credential.PasswordCredential.class).
792    if (getCredentialAcquireSupport(PasswordCredential.class).mayBeSupported()) {
{code}

*Suggested improvement*
Add null checks.
",2016/11/11 9:30 AM
ELY-740,"Coverity static-analysis scan found possible call on null object in {{EntityUtil.encodeAlgorithmIdentifier}} method:
https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760335&defectInstanceId=1541381&mergedDefectId=1369303

In the call
{{encodeAlgorithmIdentifier(encoder, algorithmOid(algorithm), omitParametersField);}}
the {{algorithmOid()}} may return null (look at {{Entity}} class).
Then the {{encodeAlgorithmIdentifier}} calls {{DerEncoder.encodeObjectIdentifier}} where on the given String is called {{length()}} method without a null check.
",2016/11/11 7:52 AM
ELY-739,"Coverity static-analysis scan found 3 possible calls on null objects in {{AbstractDigestMechanism}} class:

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760450&defectInstanceId=1541368&mergedDefectId=1369283
Method {{wrapConfidentialityProtectedMessage}}
{code}
cipheredPart = wrapCipher.update(toCipher);
// ... cipheredPart may be null
byte[] result = new byte[cipheredPart.length + 6];
{code}

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760450&defectInstanceId=1541380&mergedDefectId=1369285
Method {{createCipher}}
{code}
// the getTransformationSpec may be null - look at DefaultTransformationMapper
ciph = Cipher.getInstance(trans.getTransformationSpec(SaslMechanismInformation.Names.DIGEST_MD5, cipher).getTransformation());
{code}

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760450&defectInstanceId=1541367&mergedDefectId=1369297
Method {{unwrapConfidentialityProtectedMessage}}
{code}
clearText = unwrapCipher.update(message, offset, len - 6);
// the clearText may be null in clearText.length
System.arraycopy(clearText, clearText.length - 10, hmac, 0, 10);
{code}

*Suggested improvement*
Add null checks.
",2016/11/11 7:42 AM
ELY-738,"Coverity static-analysis scan found possible call on null object in {{SingleSignOnServerMechanismFactory.evaluateRequst()}} method:

{code}
getTargetMechanism(mechanismName, singleSignOnSession).evaluateRequest(createHttpServerRequest(request, singleSignOnSession));
{code}

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760259&defectInstanceId=1541379&mergedDefectId=1369284

The problem is the {{getTargetMechanism}} call, which just calls an {{HttpServerAuthenticationMechanismFactory.createAuthenticationMechanism()}} method.

The {{createAuthenticationMechanism}} doesn't declare it could return null, nevertheless, the implementations use null as fallback (e.g. look at {{ServerMechanismFactoryImpl.createAuthenticationMechanism()}})

*Suggested improvement*
I see 2 possible solutions:
1. Declare in javadoc of {{HttpServerAuthenticationMechanismFactory.createAuthenticationMechanism()}} method, that it can return null and add the null-check into the {{SingleSignOnServerMechanismFactory.evaluateRequst()}} method
2. or throw an exception from {{HttpServerAuthenticationMechanismFactory.createAuthenticationMechanism()}} implementations instead of returning null
",2016/11/11 7:17 AM
ELY-737,"Coverity static-analysis scan found unnecessary code in the {{DigestQuote.quoteNeeded()}} method on line 43 (currently).
One part of the condition is {{ch >= 0}}, which is always true, because the {{ch}} parameter has {{char}} type.

https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5760146&defectInstanceId=1541357&mergedDefectId=1375729

*Suggested improvement*
Remove the useless {{ch >= 0}} from the expression.
",2016/11/11 4:47 AM
ELY-733,"Coverity static analysis: Useless call in Elytron

Coverity static-analysis scan found useless call in the {{FileSystemSecurityRealm.writeIdentity()}} method on line 554 (currently).
There is an orphan call of {{otp.getHash()}}.
https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5721630&defectInstanceId=1531117&mergedDefectId=1369308

The correct call is on the line 557, where it's used in streamWriter.

*Suggested improvement*
Remove the useless call.",2016/11/10 12:53 PM
ELY-732,"There are complicated failure-descriptions in Elytron properties-realm. They include some details from exceptions which are not needed and can be confused for non-java administrators. Please handle these exceptions and provide some user friendly failure-description.

Examples of complicated failure-description in properties-realm:
* Adding path which does not exist:
{code}
/subsystem=elytron/properties-realm=realm:add(users-properties={path=/wrong/path/a.properties})
{
    ""outcome"" => ""failed"",
    ""failure-description"" => {
        ""WFLYCTL0080: Failed services"" => {""org.wildfly.security.security-realm.realm"" => ""org.jboss.msc.service.StartException in service org.wildfly.security.security-realm.realm: WFLYELY00014: Unable to load the properties files required to start the properties file backed realm.
    Caused by: java.io.FileNotFoundException: /wrong/path/a.properties (No such file or directory)""},
        ""WFLYCTL0412: Required services that are not installed:"" => [""org.wildfly.security.security-realm.realm""],
        ""WFLYCTL0180: Services with missing/unavailable dependencies"" => undefined
    },
    ""rolled-back"" => true
}
{code}
* Adding file with missing $REALM:
{code}
/subsystem=elytron/properties-realm=realm:add(users-properties={path=/some/path/roles.properties})
{
    ""outcome"" => ""failed"",
    ""failure-description"" => {
        ""WFLYCTL0080: Failed services"" => {""org.wildfly.security.security-realm.realm"" => ""org.jboss.msc.service.StartException in service org.wildfly.security.security-realm.realm: WFLYELY00014: Unable to load the properties files required to start the properties file backed realm.
    Caused by: java.io.IOException: ELY01006: No realm name found in properties file""},
        ""WFLYCTL0412: Required services that are not installed:"" => [""org.wildfly.security.security-realm.realm""],
        ""WFLYCTL0180: Services with missing/unavailable dependencies"" => undefined
    },
    ""rolled-back"" => true
}
{code}
* path mentiond in relative-to does not exist:
{code}
/subsystem=elytron/properties-realm=realm:add(users-properties={path=users.properties,relative-to=non.exist})
{
    ""outcome"" => ""failed"",
    ""failure-description"" => {
        ""WFLYCTL0412: Required services that are not installed:"" => [""jboss.server.path.\""non.exist\""""],
        ""WFLYCTL0180: Services with missing/unavailable dependencies"" => [""org.wildfly.security.security-realm.realm is missing [jboss.server.path.\""non.exist\""]""]
    },
    ""rolled-back"" => true
}
{code}


Suggestion for improvement:
* use only description of failure, e.g. something like ""file /wrong/path/a.properties was not found""
* do not use any unneeded information - e.g. ""WFLYCTL0180: Services with missing/unavailable dependencies"" => undefined",2016/11/09 10:12 AM
ELY-731,"Coverity static-analysis scan found missing parent calls in Elytron. They seems to be a simple fixes:

* DisposedCallbackSaslClientFactory should use super.dispose() instead of delegate.dispose()
** https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5621921&defectInstanceId=1486715&mergedDefectId=1369275
* DisposedCallbackSaslServerFactory should use super.dispose() instead of delegate.dispose()
** https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5621887&defectInstanceId=1486717&mergedDefectId=1369279
* org.wildfly.security.auth.client.MatchSchemeSpecificPartRule.matches(URI, String, String, String)
** compare to {{MatchHostRule}} class
** https://scan7.coverity.com/reports.htm#v16159/p11778/fileInstanceId=5622496&defectInstanceId=1486714&mergedDefectId=1375739
",2016/11/09 9:10 AM
ELY-712,"User can't achieve identity propagation scenario with elytron, so far:
# Client authenticate to web application using SPNEGO
# Web application calls another service (database, another web application, ... )  on behalf of user. 
# Web applications wants to use provided gss credential, but there is no way to get associated credentials in elytron, so far

Basically use case tested in AS TS with legacy security [1] 

Legacy approach using {{DelegationCredentialContext.getDelegCredential()}} return null in elytron.

Actually there exists pull request the delegated credential will be associated with the SecurityIdentity [2] . This JIRA is created mainly for tracking purpose to process it properly once pending commit gets to EAP.

[1] https://github.com/wildfly/wildfly/blob/15f9a4f2b5a10cc3acbaa2df57d5cc13db50ff43/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/security/loginmodules/negotiation/SPNEGOLoginModuleTestCase.java#L280 testIdentityPropagation 
[2] https://github.com/wildfly-security/wildfly-elytron/pull/434/commits/9b5aba5ca03824f0b42f786e5663cb7c3a1524f2 ",2016/11/02 10:14 AM
ELY-702,"sasl-authentication-factory and sasl-server-factory creates chain of SaslServerFactories - for example ServerNameSaslServerFactory only delegates creating to following factory in chain but with rewriting of the server name.
In this chain is also *SetMechanismInformationSaslServerFactory*, which call callback handler to send MechanismInformation into ServerAuthenticationContext - there it will cause state change from InactiveState to InitialState.

*The problem is,* if the configurable-sasl-server-factory is used, the *SetMechanismInformationSaslServerFactory* is in chain twice. The first occurence (by sasl-authentication-factory) will cause change state to InitialState, but before the serverName+protocol is overriden by SaslServerFactories following in chain. The second occurence (by configurable-sasl-server-factory) already have serverName+protocol set, but because the ServerAuthenticationContext is already in InitialState, the exception ""Too late to set"" is thrown and createSaslServer returns null - fail completely.

The chain of SaslServerFactories:
{code:java}
AuthenticationTimeoutSSF
TrustManagerSSF
AuthenticationCompleteSSF
SetMechanismInformationSSF => cbh => InactiveState -> InitialState(undefined, null)
ServerNameSSF
ProtocolSSF
SetMechanismInformationSSF => cbh => ""Too late to set"" => return null
SecurityProviderSSF
{code}

Will have to discuss yet how to correctly solve this... (maybe consider allowing of multiple MechanismInformation setting? In current design the sasl-authentication-factory cannot detect the configurable-sasl-server-factory WILL change the MechanismInformation yet...)",2016/10/31 10:22 AM
ELY-693,"I have problem to achieve this scenario with elytron:
# Client sends non kerberos OID mechanism as most preferred with non kerberos ticket
# Server response with ""continuation required""
# Client sends kerberos ticket 
# Server response with 401 instead of 200

Actually, it is scenario tested in [1]. It worked correctly in EAP 7.0 . Also works with elytron when client sends non-kerberos OID mechanism with kerberos ticket.

Problem as I see is that SpnegoAuthenticationMechanism: 
# Creates {{gssContext}} with first provided ticket (non-kerberos) and sends ""continuation required""
# Client provide proper kerberos ticket, but that anyway leads to 401 bare challenge, because {{gssContext}} was already created in first step and is not tried to make again.

Setting to critical as it behaves differently compared to EAP 7.0 and IMHO it doesn't comply to spec [2]. Similar error was resolved in EAP 7.0 (JBEAP-3709) as blocker because customer case existed for that.

[1] https://github.com/wildfly/wildfly/blob/15f9a4f2b5a10cc3acbaa2df57d5cc13db50ff43/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/security/loginmodules/negotiation/SPNEGOLoginModuleTestCase.java#L344
[2] https://tools.ietf.org/html/rfc4178",2016/10/26 9:12 AM
ELY-692,Add tests for issue https://issues.jboss.org/browse/ELY-688 and https://issues.jboss.org/browse/ELY-691,2016/10/26 8:55 AM
ELY-691,"When users properties file (e.g. mgmt-users.properties) used by legacy properties security realm is taken and used with Elytron properties-realm (backed by {{org.wildfly.security.auth.realm.LegacyPropertiesSecurityRealm}}) then there exist username/password combinations which do not works correctly.

Following scenarios which uses mentioned below username/password work correctly for properties file used by legacy solution and do not work for Elytron:
{code}
elytron:password                            // results to username elytron with password password
elytronumlautöäü=password                   // results to username elytronumlautöäü with password password
elytron用戶=password                        // results to username elytron用戶 with password password
backslash\\=password                        // results to username backslash\ with password password
backslash\\inthemiddle=password             // results to username backslash\inthemiddle with password password
dn\=elytron,dc\=wildfly,dc\=org=password    // results to username dn=elytron,dc=wildfly,dc=org with password password
elytron1=pass=word                          // results to username elytron1 with password pass=word - covered by JBEAP-6581
elytron2=password\\                         // results to username elytron2 with password password\
elytron3=pass\\word                         // results to username elytron3 with password pass\word
elytron4=passwordWithumlautöäü              // results to username elytron4 with password passwordWithumlautöäü
elytron5=用戶                               // results to username elytron5 with password 用戶
{code}

Also '!' can be used for comments. It means that {{!elytron=password}} should not be considered as user {{!elytron}} but as comment.",2016/10/26 8:07 AM
ELY-680,"Elytron is missing log messages related to kerberos authentication. These log messages should be added. See JBEAP-6041 for more details.

I consider to be useful to have TRACE log messages at least in:
- SpnegoAuthenticationMechanism
- GSSCredentialSecurityFactory

If there are more classes involved in kerberos authnetication include them as well.

Kerberos issues are very specific. So it is very important to have as much trace information as possible. Therefore raising priority to Critical.

",2016/10/19 3:09 AM
ELY-690,"Http response code 500 + excpetion in server log:
{code}
21:40:40,640 ERROR [io.undertow.request] (default task-2) UT005023: Exception handling request to /secured-webapp/secure/index.jsp: java.lang.NullPointerException
	at org.wildfly.security.http.impl.SpnegoAuthenticationMechanism.authorizeEstablishedContext(SpnegoAuthenticationMechanism.java:177)
	at org.wildfly.security.http.impl.SpnegoAuthenticationMechanism.evaluateRequest(SpnegoAuthenticationMechanism.java:128)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:106)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:90)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:74)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:82)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:207)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:810)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}


I have hit this in two situations so far
* accessing with kerberos ticket from another realm. E.g. application server is set for realm JBOSS.ORG, but client is jduke@REDHAT.COM
	** For this situation is http response code 500 disputable, as it could be viewed as problem of client. Client can change ticket and authentication can be performed just fine. 
* misconfiguration e.g. wrong kdc in krb5.conf

Provide some meaningful error message.",2016/10/18 4:24 PM
ELY-674,"Krb5LoginModule options are not configurable. I mean there are some of them exposed (debug, keytab, acceptor/initiator), but not all. In my opinion, sooner or later customers will hunt us to provide all of them. Because there are various use-cases out there needing to tweak kerberos configuration somehow. Legacy KerberosLoginModule exposed these options https://access.redhat.com/documentation/en/red-hat-jboss-enterprise-application-platform/version-7.0/login-module-reference/#kerberos_login_module

{code:java}
            if (debug) {
                options.put(""debug"", ""true"");
            }
            options.put(""principal"", principal);

            final AppConfigurationEntry ace;
            if (IS_IBM) {
                options.put(""noAddress"", ""true"");
                options.put(""credsType"", isServer ? ""acceptor"" : ""initiator"");
                options.put(""useKeytab"", keyTab.toURI().toURL().toString());
                ace = new AppConfigurationEntry(IBMKRB5LoginModule, REQUIRED, options);
            } else {
                options.put(""storeKey"", ""true"");
                options.put(""useKeyTab"", ""true"");
                options.put(""keyTab"", keyTab.getAbsolutePath());
                options.put(""isInitiator"", isServer ? ""false"" : ""true"");

                ace = new AppConfigurationEntry(KRB5LoginModule, REQUIRED, options);
            }
{code}
^ GSSCredentialSecurityFactory

* http://docs.oracle.com/javase/8/docs/jre/api/security/jaas/spec/com/sun/security/auth/module/Krb5LoginModule.html
* https://www.ibm.com/support/knowledgecenter/en/SSYKE2_8.0.0/com.ibm.java.security.api.doc/jgss/com/ibm/security/auth/module/Krb5LoginModule.html",2016/10/18 12:16 PM
ELY-669,"When the referral-mode=""follow"" is used, NamingEnumeration.hasMore create new LdapReferralContext and socket, which is not covered by DelegatingDirContext yet.

{code:text}
java.lang.RuntimeException: ELY01084: Error while consuming results from search. SearchDn [dc=users,dc=elytron,dc=wildfly,dc=org], Filter [(|(objectclass=referral)(uid={0}))], Filter Args [[refUser]].
Caused by: javax.naming.PartialResultException [Root exception is javax.naming.CommunicationException: localhost:11391 [Root exception is java.lang.IllegalStateException: ELY04025: DirContext tries to connect without SSLSocketFactory thread local setting]]
	at com.sun.jndi.ldap.AbstractLdapNamingEnumeration.hasMoreImpl(AbstractLdapNamingEnumeration.java:237)
	at com.sun.jndi.ldap.AbstractLdapNamingEnumeration.hasMore(AbstractLdapNamingEnumeration.java:189)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity$LdapSearch$1.tryAdvance(LdapSecurityRealm.java:938)
	... 39 more
Caused by: javax.naming.CommunicationException: localhost:11391 [Root exception is java.lang.IllegalStateException: ELY04025: DirContext tries to connect without SSLSocketFactory thread local setting]
	at com.sun.jndi.ldap.LdapReferralContext.<init>(LdapReferralContext.java:95)
	at com.sun.jndi.ldap.LdapReferralException.getReferralContext(LdapReferralException.java:150)
	at com.sun.jndi.ldap.AbstractLdapNamingEnumeration.hasMoreReferrals(AbstractLdapNamingEnumeration.java:325)
	at com.sun.jndi.ldap.AbstractLdapNamingEnumeration.hasMoreImpl(AbstractLdapNamingEnumeration.java:227)
	... 41 more
Caused by: java.lang.IllegalStateException: ELY04025: DirContext tries to connect without SSLSocketFactory thread local setting
	at org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory.getDefault(ThreadLocalSSLSocketFactory.java:46)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.jndi.ldap.Connection.createSocket(Connection.java:284)
	at com.sun.jndi.ldap.Connection.<init>(Connection.java:203)
	at com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:137)
	at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1614)
	at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2746)
	at com.sun.jndi.ldap.LdapCtx.<init>(LdapCtx.java:319)
	at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:192)
	at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:151)
	at com.sun.jndi.url.ldap.ldapURLContextFactory.getObjectInstance(ldapURLContextFactory.java:52)
	at javax.naming.spi.NamingManager.getURLObject(NamingManager.java:601)
	at javax.naming.spi.NamingManager.processURL(NamingManager.java:381)
	at javax.naming.spi.NamingManager.processURLAddrs(NamingManager.java:361)
	at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:333)
	at com.sun.jndi.ldap.LdapReferralContext.<init>(LdapReferralContext.java:114)
	... 44 more
{code}",2016/10/17 12:34 PM
ELY-663,"Elytron dir-context is not able to follow/throw referrals in LDAP search. Value set in Elytron {{dir-context.referral-mode}} is ignored by Elytron. 

InitialLdapContext {{java.naming.referral}} parameter is internally always set to value {{ignore}}. It is caused by ignoring {{ReferralMode}} parameter in {{obtainDirContext}} of {{org.wildfly.security.auth.realm.ldap.SimpleDirContextFactoryBuilder$SimpleDirContextFactory}} [1].

We request blocker flag since this issue causes that referrals cannot be used for LDAP search with Elytron.

[1] https://github.com/wildfly-security/wildfly-elytron/blob/cb57f2f0ffcdb1470e3135007603c97679b9434f/src/main/java/org/wildfly/security/auth/realm/ldap/SimpleDirContextFactoryBuilder.java#L222",2016/10/14 7:56 AM
ELY-673,"In case when Elytron ldap-realm is configured to return some attribute as password (i.e. direct verification is set to false) and LDAP search does not find this attribute, then NPE occurs.

It is caused by missing null check for {{attribute}} in [1].

Exception thrown to server log:
{code}
ERROR [io.undertow.request] (default task-1) UT005023: Exception handling request to /print-roles/protected/printRoles: java.lang.NullPointerException
	at org.wildfly.security.auth.realm.ldap.UserPasswordCredentialLoader$ForIdentityLoader.getCredential(UserPasswordCredentialLoader.java:130)
	at org.wildfly.security.auth.realm.ldap.UserPasswordCredentialLoader$ForIdentityLoader.verifyEvidence(UserPasswordCredentialLoader.java:151)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:531)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1634)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:654)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:818)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:752)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:850)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:703)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:113)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:69)
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:151)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:106)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:90)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:74)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:82)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:207)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:810)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

[1] https://github.com/wildfly-security/wildfly-elytron/blob/cb57f2f0ffcdb1470e3135007603c97679b9434f/src/main/java/org/wildfly/security/auth/realm/ldap/UserPasswordCredentialLoader.java#L129",2016/10/13 7:41 AM
ELY-672,"Elytron ldap-realm allows to use DN as username (e.g. full {{uid=jduke,ou=People,dc=jboss,dc=org}} can be used instead of {{jduke}}). However implementation requires that used DN must start with rdn-identifier in the same case sensitivity as is used in server configuration. Otherwise authentication fails. It means when server configuration uses {{rdn-identifier=uid}} then only {{uid=jduke,...}} can be correctly used, {{UID=jduke,...}} will fail. 

LDAP specification does not talk about case sensitivity of attributes, but most of LDAP servers work with attributes as case insensitive.",2016/10/13 7:11 AM
ELY-671,"In case username passed to {{org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity}} starts with the same string as is used in {{identityMapping.rdnIdentifier}} then authentication fails. It is caused by wrong condition in [1].

Thrown exception in server log:
{code}
ERROR [io.undertow.request] (default task-12) UT005023: Exception handling request to /print-roles/protected/printRoles: java.lang.RuntimeException: ELY01078: Ldap-backed realm failed to obtain identity ""uidyllic"" from server
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getIdentity(LdapSecurityRealm.java:625)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.exists(LdapSecurityRealm.java:545)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:513)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1634)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:654)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:818)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:752)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:850)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:703)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:113)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:69)
	at org.wildfly.security.http.impl.BasicAuthenticationMechanism.evaluateRequest(BasicAuthenticationMechanism.java:151)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:115)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:106)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:90)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:74)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:82)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:207)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:810)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: javax.naming.InvalidNameException: Invalid name: uidyllic
	at javax.naming.ldap.Rfc2253Parser.doParse(Rfc2253Parser.java:111)
	at javax.naming.ldap.Rfc2253Parser.parseDn(Rfc2253Parser.java:70)
	at javax.naming.ldap.LdapName.parse(LdapName.java:785)
	at javax.naming.ldap.LdapName.<init>(LdapName.java:123)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getIdentity(LdapSecurityRealm.java:571)
	... 45 more
{code}

[1] https://github.com/wildfly-security/wildfly-elytron/blob/cb57f2f0ffcdb1470e3135007603c97679b9434f/src/main/java/org/wildfly/security/auth/realm/ldap/LdapSecurityRealm.java#L570",2016/10/13 2:05 AM
ELY-668,"In case when LDAP server used by Elytron dir-context is unreachable (e.g. LDAP is down or some network failures occur) or when dir-context is incorrectly set (e.g. used password is wrong) then application which uses this dir-context cannot be deployed. Deployment fails and confusing exception occurs in server log.

We request blocker since it causes that deployments (which have already been successfully deployed) can unexpectedly fail when server is restarted/reloaded in time when LDAP server is unreachable.

Deployment fails with following exception in server log:
{code}
ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 61) MSC000001: Failed to start service jboss.undertow.deployment.default-server.default-host./print-roles: org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./print-roles: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:85)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
	at org.jboss.threads.JBossThread.run(JBossThread.java:320)
Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:236)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService.startContext(UndertowDeploymentService.java:100)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentService$1.run(UndertowDeploymentService.java:82)
	... 6 more
Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$initialSecurityHandler$4(ApplicationSecurityDomainDefinition.java:349)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.initialSecurityHandler(ApplicationSecurityDomainDefinition.java:346)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService.lambda$applyElytronSecurity$0(ApplicationSecurityDomainDefinition.java:294)
	at io.undertow.servlet.core.DeploymentManagerImpl.setupSecurityHandlers(DeploymentManagerImpl.java:402)
	at io.undertow.servlet.core.DeploymentManagerImpl.access$600(DeploymentManagerImpl.java:119)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:206)
	at io.undertow.servlet.core.DeploymentManagerImpl$1.call(DeploymentManagerImpl.java:171)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:42)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1671)
	at io.undertow.servlet.core.DeploymentManagerImpl.deploy(DeploymentManagerImpl.java:234)
	... 8 more

ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation (""deploy"") failed - address: ([(""deployment"" => ""print-roles.war"")]) - failure description: {
    ""WFLYCTL0080: Failed services"" => {""jboss.undertow.deployment.default-server.default-host./print-roles"" => ""org.jboss.msc.service.StartException in service jboss.undertow.deployment.default-server.default-host./print-roles: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.
    Caused by: java.lang.IllegalStateException: WFLYUT0085: The required mechanism 'BASIC' is not available from the HttpAuthenticationFactory.""},
    ""WFLYCTL0412: Required services that are not installed:"" => [""jboss.undertow.deployment.default-server.default-host./print-roles""],
    ""WFLYCTL0180: Services with missing/unavailable dependencies"" => undefined
}
{code}",2016/10/12 7:51 AM
ELY-656,While initializing KeystorePasswordStore an NPE is thrown instead of proper log message.,2016/10/11 5:58 AM
ELY-654,Ensure that negative values are converted to zero when setting sessionCacheSize and sessionTimeout on SSLSessionContext.,2016/10/07 9:32 AM
ELY-653,"KeystorePasswordStore contains inconsistency about MODIFIABLE configuration attribute.

Here it is used MODIFIABLE attribute:
https://github.com/wildfly-security/wildfly-elytron/blob/1.1.0.Beta10/src/main/java/org/wildfly/security/credential/store/impl/KeystorePasswordStore.java#L275

But it is missing between supported configuration attributes:
https://github.com/wildfly-security/wildfly-elytron/blob/1.1.0.Beta10/src/main/java/org/wildfly/security/credential/store/impl/KeystorePasswordStore.java#L222

I cannot see any condition with isModifiable() in *store()* or *remove()* method:
https://github.com/wildfly-security/wildfly-elytron/blob/1.1.0.Beta10/src/main/java/org/wildfly/security/credential/store/impl/KeystorePasswordStore.java#L317

In my opinion MODIFIABLE attribute should be supported otherwise please remove code about MODIFIABLE from *initialize()* method.",2016/10/05 7:33 AM
ELY-646,"Following Zach's notes on [How to setup 2 way TLS|https://gitlab.cee.redhat.com/zrhoads/kbase/blob/master/eap71.elytron.2-way-https-apps.adoc]  I am unable to setup it properly. User is not requested by browser for specifying client certificate and get access to application without certificate.

In log you there is:
1. Server send request for certificate
{code}
^[[0m^[[0m13:55:33,309 INFO  [stdout] (default task-1) *** CertificateRequest
^[[0m^[[0m13:55:33,309 INFO  [stdout] (default task-1) Cert Types: RSA, DSS, ECDSA
^[[0m^[[0m13:55:33,309 INFO  [stdout] (default task-1) Cert Authorities:
^[[0m^[[0m13:55:33,310 INFO  [stdout] (default task-1) <CN=client>
{code}
2. And client responds with empty certificate chain. Without asking for certificate
{code}
^[[0m^[[0m13:55:33,432 INFO  [stdout] (default task-2) *** Certificate chain
^[[0m^[[0m13:55:33,432 INFO  [stdout] (default task-2) <Empty>
^[[0m^[[0m13:55:33,432 INFO  [stdout] (default task-2) ***
{code}

I am attaching:
* server.log - server log with -Djavax.net.debug=all turn on.
* 2wayTLS.pcap - wireshark recording of port 8443
* secured-app - tested application ",2016/09/26 8:44 AM
ELY-641,"Default Elytron configuration assigns role ""All"" to every user during authentication. If a deployed application uses such the role name for a resource protection, then every authenticated user can access the protected resource. So the security is bypassed then.

The problem is caused by workaround used for mapping ""LoginPermission"" to all users. It maps role ""All"" to the users first and then maps ""LoginPermission"" to this role.

{code:xml}
<mappers>
    <simple-permission-mapper name=""login-permission-mapper"">
        <permission-mapping roles=""All"">
            <permission class-name=""org.wildfly.security.auth.permission.LoginPermission""/>
        </permission-mapping>
    </simple-permission-mapper>
    <constant-role-mapper name=""constant-roles"" roles=""All""/>
</mappers>
{code}

We have to make the default server configuration secure for users.

*Suggestions for improvement:*
* the {{LoginPermission}} mapping should be implicit so everybody has it by default - without specifying it in the server configuration; users should only define cases when they don't want the permission to be assigned to some principals/roles
* constant permission mapper should exist in Elytron subsystem (similar to {{constant-role-mapper}}) so the custom permission can be mapped without workarounds through role-mappings
",2016/09/23 9:42 AM
ELY-637,Elytron is missing any log messages related to permission assignment. These log messages should be added. See JBEAP-6041 for more details.,2016/09/22 5:23 AM
ELY-636,Elytron is missing any log messages related to principal mapping. These log messages should be added. See JBEAP-6041 for more details.,2016/09/22 5:22 AM
ELY-635,Elytron is missing any log messages related to role mapping. These log messages should be added. See JBEAP-6041 for more details.,2016/09/22 5:21 AM
ELY-634,Elytron is missing any log messages related to group assignment. These log messages should be added. See JBEAP-6041 for more details.,2016/09/22 5:19 AM
ELY-623,"In {{src/main/java/org/wildfly/security/auth/server/SecurityIdentity.java}}:
{noformat}
+            if (AnonymousPrincipal.getInstance().getName().equals(name)) {
+                if (! context.authorizeAnonymous(false)) {
+                    throw log.runAsAuthorizationFailed(getPrincipal(), new AnonymousPrincipal(), null);
+                }
+            } else {
+                if (! (context.importIdentity(this) && context.authorize(name, authorize))) {
+                    throw log.runAsAuthorizationFailed(getPrincipal(), new NamePrincipal(name), null);
+                }
             }
{noformat}

Only a type check is sufficient to determine if a principal is anonymous.  In this fix, the string name ""anonymous"" takes on a special meaning for the first time, which should not be the case.",2016/08/29 8:01 AM
ELY-613,"There are some inner classes in Elytron which should be considered to be static nested to avoid dependency on their outer class. Following nested classes should be considered:

* LoadedIdentity and Identity from org.wildfly.security.auth.realm.FileSystemSecurityRealm
* DecoderState from org.wildfly.security.asn1.DERDecoder
* AccountEntry from org.wildfly.security.auth.realm.LegacyPropertiesSecurityRealm
* JaasAuthorizationIdentity and DefaultCallbackHandler from org.wildfly.security.auth.realm.JaasSecurityRealm
* LoadKey from org.wildfly.security.keystore.AtomicLoadKeyStore",2016/07/29 6:56 AM
ELY-609,"Access to fields {{uncheckedPermissions}}, {{excludedPermissions}} and {{rolePermissions}} in {{org.wildfly.security.authz.jacc.ElytronPolicyConfiguration}} is holded by lock. However lock is not used in their getter methods. Getters should be also handled by locks to avoid unguarded read of those fields.",2016/07/29 6:43 AM
ELY-603,NoData,2016/07/26 10:49 AM
ELY-592,NoData,2016/07/21 1:01 PM
ELY-571,"At the moment the raw authorization ID is compared against the current authenticated principal, however we need to be comparing the result of name rewriting as applied to the authorization ID as this is the identity we will try and run as.",2016/06/12 10:50 AM
ELY-527,NoData,2016/05/05 8:24 AM
ELY-502,Remove operation doesn't persist the result in KeystorePasswordStore,2016/04/19 8:08 AM
ELY-494,"We use a different delimiter for the {{com.sun.security.sasl.digest.realm}} property than the JDK, which uses commas, spaces, newlines, or tab characters.  This makes it impossible to correctly emulate the property to the mechanism while using the callback to acquire the actual list.  Since code changes would likely be required to use the new version with only a comma delimiter, it does not serve any compatibility purpose to continue to support this property.

Instead we should do three things:

* Eliminate property support from our DigestSaslServer
* Add a wrapping SaslServerFactory which detects when a mechanism is trying to acquire a realm list by reading the {{com.sun.security.sasl.digest.realm}} property, and uses the AvailableRealmsCallback to populate it -(with a flag to support transformation of spaces, tabs, and newlines to NBSP (0xA0), and remove commas)-
* Add a wrapping SaslServerFactory which allows legacy users to specify a value for {{com.sun.security.sasl.digest.realm}}, and uses it to support AvailableRealmsCallback if that property was set, with programmable delimiters
",2016/04/12 10:55 AM
ELY-483,"Test cases initialization from GssapiTestSuite and Gs2Test fail with following exception for IBM JDK:
{code}
javax.security.auth.login.FailedLoginException: 
Login error: com.ibm.security.krb5.KrbException, status code: 9
	message: The client or server has a null key
	at com.ibm.security.jgss.i18n.I18NException.throwFailedLoginException(I18NException.java:15)
	at com.ibm.security.auth.module.Krb5LoginModule.j(Krb5LoginModule.java:727)
	at com.ibm.security.auth.module.Krb5LoginModule.b(Krb5LoginModule.java:307)
	at com.ibm.security.auth.module.Krb5LoginModule.login(Krb5LoginModule.java:59)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:95)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
	at java.lang.reflect.Method.invoke(Method.java:507)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:788)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:196)
	at javax.security.auth.login.LoginContext$5.run(LoginContext.java:721)
	at javax.security.auth.login.LoginContext$5.run(LoginContext.java:719)
	at java.security.AccessController.doPrivileged(AccessController.java:686)
	at javax.security.auth.login.LoginContext.invokeCreatorPriv(LoginContext.java:719)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:593)
	at org.wildfly.security.sasl.gssapi.JaasUtil.login(JaasUtil.java:71)
	at org.wildfly.security.sasl.gssapi.JaasUtil.loginClient(JaasUtil.java:53)
	at org.wildfly.security.sasl.gssapi.JdkClientJdkServer.initialise(JdkClientJdkServer.java:47)
    ...
{code}

It is test case issue but it can hide any another functional issue because affected tests are not running with IBM JDK.",2016/04/05 3:53 AM
ELY-482,"IBM JDK is not able to work with options set in method createGssProxyConfiguration from org.wildfly.security.sasl.gssapi.JaasUtil class used by tests.

Following options are unrecognized by IBM JDK: ""useKeyTab"", ""keyTab"", ""doNotPrompt"".
On the other hand, following option must be used for IBM JDK: ""useKeytab"".",2016/04/05 3:12 AM
ELY-481,"This is only test case issue.

Running SSLAuthenticationTest with IBM JDK fails with:
{code}
java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
	at sun.security.jca.GetInstance.getInstance(GetInstance.java:171)
	at javax.net.ssl.KeyManagerFactory.getInstance(KeyManagerFactory.java:20)
	at org.wildfly.security.ssl.SSLAuthenticationTest.getKeyManager(SSLAuthenticationTest.java:101)
	at org.wildfly.security.ssl.SSLAuthenticationTest.setupServer(SSLAuthenticationTest.java:79)
    ...
{code}

It is caused by calling KeyManagerFactory.getInstance with value ""SunX509"" for IBM JDK. However IBM JDK should use ""IbmX509"".",2016/04/05 1:44 AM
ELY-472,"KeystorePasswordStore fails to store secret when ""key.password"" option is not specified.
Fix will use ""store.password"" as default in case key.password is empty.",2016/03/24 5:15 AM
ELY-471,"KeystorePasswordStore creates empty file when automatically created from subsystem and subsequent ""store the secret"" operation fails.
Next time the subsystem tries to add the same store (the same store file) it fails. ",2016/03/24 5:01 AM
ELY-437,"Compilation of wildfly-elytron project with IBM JDK 1.8 fails with:

{code}
wildfly-elytron/src/main/java/org/wildfly/security/x500/X500PrincipalUtil.java:[31,25] cannot find symbol
  symbol:   class X500Name
  location: package sun.security.x509
{code}

Class X500PrincipalUtil using sun.security.x509.X500Name which comes from internal API and leads to mentioned above issue.",2016/03/09 6:16 AM
ELY-429,"Class LdapSecurityRealm cannot be used from elytron subsystem since is has only package access, see [1].

[1] https://github.com/wildfly-security/wildfly-elytron/blob/1.1.0.Beta4/src/main/java/org/wildfly/security/auth/provider/ldap/LdapSecurityRealm.java#L73",2016/02/26 8:30 AM
ELY-424,"{noformat}
Caused by: java.lang.NullPointerException
	at org.wildfly.security.ssl.SSLUtils.createSslContextFactory(SSLUtils.java:72)
	at org.wildfly.security.ssl.ServerSSLContextBuilder.lambda$build$17(ServerSSLContextBuilder.java:199)
	at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:45)
	at org.wildfly.extension.elytron.SSLDefinitions$3.lambda$getValueSupplier$65(SSLDefinitions.java:357)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881)
	... 3 more
{noformat}",2016/02/19 1:33 PM
ELY-421,"On some IBM JDKs, System.getProperty delegates to other System methods.  The security manager does not account for that.",2016/02/12 8:49 AM
ELY-419,NoData,2016/02/01 11:52 AM
ELY-408,NoData,2016/01/26 4:41 PM
ELY-391,Otherwise it is triggering authentication on pages that should not require it.,2015/12/09 2:08 PM
ELY-386,"Can't configure OpenSSL cipher suites EXP-DHE-RSA-DES-CBC-SHA, DHE-RSA-DES-CBC-SHA, DHE-RSA-DES-CBC3-SHA, EXP-DHE-DSS-DES-CBC-SHA, DHE-DSS-CBC-SHA, DHE-DSS-DES-CBC3-SHA [1] for HTTPS connection. Seems like everlasting problem DHE vs. EDH [2] - these cipher suites don't work neither in EAP6. IMHO problem is in MechanismDatabase.properties, where these DHE cipher suite are mapped to openssl EDH cipher suite what contradict openssl documentation [1]:

{code}
SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA   = alias:TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA
SSL_DHE_RSA_WITH_DES_CBC_SHA            = alias:TLS_DHE_RSA_WITH_DES_CBC_SHA
SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA       = alias:TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA

TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA   = EXP-EDH-RSA-DES-CBC-SHA,DHE,RSA,DES,SHA1,SSLv3,true,EXP40,false,40,56
TLS_DHE_RSA_WITH_DES_CBC_SHA            = EDH-RSA-DES-CBC-SHA,DHE,RSA,DES,SHA1,SSLv3,false,LOW,false,56,56
TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA       = EDH-RSA-DES-CBC3-SHA,DHE,RSA,3DES,SHA1,SSLv3,false,HIGH,true,168,168

SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA   = EXP-EDH-DSS-DES-CBC-SHA,DHE,DSS,DES,SHA1,SSLv3,true,EXP40,false,40,56
SSL_DHE_DSS_WITH_DES_CBC_SHA            = EDH-DSS-DES-CBC-SHA,DHE,DSS,DES,SHA1,SSLv3,false,LOW,false,56,56
SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA       = EDH-DSS-DES-CBC3-SHA,DHE,DSS,3DES,SHA1,SSLv3,false,HIGH,true,168,168
{code}

Note that MechanismDatabase.properties is inconsistent in mapping DHE cipher suites to openssl cipher suites, as there also exist couple of them which map DHE to DHE, for example
{code}
TLS_DHE_RSA_WITH_AES_128_CBC_SHA256     = DHE-RSA-AES128-SHA256,DHE,RSA,AES128,SHA256,TLSv1.2,false,HIGH,true,128,128
TLS_DHE_RSA_WITH_AES_256_CBC_SHA256     = DHE-RSA-AES256-SHA256,DHE,RSA,AES256,SHA256,TLSv1.2,false,HIGH,true,256,256
TLS_DHE_RSA_WITH_AES_128_GCM_SHA256     = DHE-RSA-AES128-GCM-SHA256,DHE,RSA,AES128GCM,AEAD,TLSv1.2,false,HIGH,true,128,128
TLS_DHE_RSA_WITH_AES_256_GCM_SHA384     = DHE-RSA-AES256-GCM-SHA384,DHE,RSA,AES256GCM,AEAD,TLSv1.2,false,HIGH,true,256,256
{code}

In MechanismDatabase.properties is also said that

??Note that all EDH ciphers automatically get a DHE OpenSSL-style alias (and vice-versa)??

I think this JIRA contradict this comment.

Last thing, based on [1] shouldn't be SSL_DHE_DSS_WITH_DES_CBC_SHA defined as 
SSL_DHE_DSS_WITH_DES_CBC_SHA            = DHE-DSS-CBC-SHA,DHE,DSS,DES,SHA1,SSLv3,false,LOW,false,56,56
?

[1] https://www.openssl.org/docs/manmaster/apps/ciphers.html#CIPHER-SUITE-NAMES
[2] https://bugzilla.redhat.com/show_bug.cgi?id=1123304",2015/12/03 3:46 AM
ELY-362,NoData,2015/11/06 9:08 AM
ELY-361,NoData,2015/11/06 8:21 AM
ELY-351,NoData,2015/10/27 11:07 AM
ELY-337,The test suite authenticates and authorizes users as identities that do not exist in the test realms.  This causes those tests to fail when the {{realmIdentity.exists()}} check is enabled (search for TODO) in {{ServerAuthenticationContext}}.,2015/10/20 11:32 AM
ELY-334,There are a number of uses of {{String(byte[])}} which assume the platform default charset is ASCII-derived.  These need to be changed to specify {{StandardCharsets.UTF_8}} as the second method argument.,2015/10/20 10:36 AM
ELY-256,"Currently this causes a FastUnsupportedCallbackException since these factories are the only thing to handle this callback. It doesn't really cause any problems, but I noticed this while debugging.
 
TLSServerEndPointChannelBindingSaslClientFactory removes the SSLCallback from the array before delegating, and the ChannelBinding ones should take the same approach from what I can tell.",2015/08/05 9:30 AM
ELY-247,"
{noformat}
18:12:18,391 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 2) WFLYCTL0013: Operation (""read-attribute"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""provider-sasl-server-factory"" => ""default"")
]): java.lang.NullPointerException
	at org.wildfly.security.sasl.util.SecurityProviderSaslServerFactory.getMechanismNames(SecurityProviderSaslServerFactory.java:88)
	at org.wildfly.extension.elytron.SaslFactoryRuntimeResource$AvailableMechanismsHandler.executeRuntimeStep(SaslFactoryRuntimeResource.java:71)
{noformat}",2015/07/29 1:23 PM
ELY-196,NoData,2015/05/20 6:03 AM
ELY-171,"The default file only contains commented out lines, however the following error is reported.

{noformat}
12:28:44,523 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-12) MSC000001: Failed to start service elytron.keystore.mgmt_properties: org.jboss.msc.service.StartException in service elytron.keystore.mgmt_properties: Failed to start service
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1904)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.IllegalArgumentException: The supplied character array must contain an even number of hex chars.
	at org.wildfly.security.sasl.util.HexConverter.convertFromHex(HexConverter.java:91)
	at org.wildfly.security.sasl.util.HexConverter.convertFromHex(HexConverter.java:123)
	at org.wildfly.security.keystore.PropertiesKeyStoreSpi.engineLoad(PropertiesKeyStoreSpi.java:296)
	at java.security.KeyStore.load(KeyStore.java:1433)
	at org.wildfly.security.keystore.AtomicLoadKeyStoreSpi.engineLoad(AtomicLoadKeyStoreSpi.java:51)
	at java.security.KeyStore.load(KeyStore.java:1433)
	at org.wildfly.extension.elytron.KeyStoreService.start(KeyStoreService.java:109)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881)
	... 3 more

12:28:44,527 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 1) WFLYCTL0013: Operation (""add"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""keystore"" => ""mgmt_properties"")
]) - failure description: {""WFLYCTL0080: Failed services"" => {""elytron.keystore.mgmt_properties"" => ""org.jboss.msc.service.StartException in service elytron.keystore.mgmt_properties: Failed to start service
    Caused by: java.lang.IllegalArgumentException: The supplied character array must contain an even number of hex chars.""}}
{noformat}",2015/03/27 8:32 AM
ELY-168,NoData,2015/03/17 2:10 PM
ELY-145,"* In Digest-MD5 implementation is missing last step of authetication - generating and checking of rspauth.

* Keys generated for encrypted communication in auth-conf are different from keys generated by JDK implementation - in their generating is bug. (keys are derivated from H(A1) by RFC, so must be identical in all implementations.)",2015/02/06 5:07 AM
ELY-139,"-ByteStringBuilder cannot append codepoints 0xD8xx (lonely surrogates). It should - StringBuilder.appendCodePoint() work with it.-
-(Problem is only with uncomplete/nonvalid unicode strings, so it is not critical problem.)-

Mentioned in: https://github.com/wildfly-security/wildfly-elytron/pull/101

*UPDATE:*
ByteStringBuilder encode surrogates correctly by RFC3629 (if we ignore they are prohibited because they are reserved for UTF-16). Conversly StringBuilder and (char) operator encode D800-D8FF bad as 3F.

Problem is only in appending into ByteStringBuilder constructed as:
{code:xml}
    new ByteStringBuilder(new byte[]{});
{code}",2015/01/29 6:32 AM
ELY-104,Because they aren't always operating on a KeySpec.  Better would be IllegalArgumentException.,2014/10/16 9:14 PM
ELY-102,"The following tests fail on Windows or any platform which does not have UTF-8 as its default encoding:

* CompatibilityClientTest.testUtf8Charset
* CompatibilityServerTest.testUtf8Charset

Can be reproduced on Linux on the command line by setting the LANG environment variable to something other than UTF_8, like ISO-8859-1.",2014/10/15 2:41 PM
ELY-101,"The following GSSAPI tests fail on Windows for reasons unknown (probably not character encoding though):

* BasicAuthTest.testAuth
* BasicConfidenceTest.testAuthConf
* BasicIntegrityTest.testAuthInt
* NoServerAuthTest.testAuth
 ",2014/10/15 2:36 PM
ELY-100,"In MD5DigestSaslServer.java line 232-233 we have this code:

{code}
        byte[] authzid = parsedDigestResponse.get(""authzid"");
        String authorizationId = (authzid==null || authzid.equals(userName)) ? null : new String(authzid, Charsets.UTF_8);
{code}

The {{equals}} compare between {{authzid}} (a byte array) and {{userName}} (a String) is invalid.  However if I fix it in the obvious manner, tests fail.",2014/10/15 11:33 AM
ELY-93,"These tests have never run due to a {{pom.xml}} configuration mishap, and some of them fail:

* {{ConnectionTests}}
* {{PrincipalMappingTests}}
* {{UserPasswordTests}}

After https://github.com/dmlloyd/wildfly-elytron/commit/d65a5a074d65 is fixed (PR https://github.com/wildfly-security/wildfly-elytron/pull/40) it will just be a question of un-commenting the commented-out line in {{pom.xml}} to run the missing tests.",2014/10/08 9:26 PM
ELY-90,"DigestMD is missing permission check to use authorisation id.
See CompatibilityServerTest:ignored test testUnauthorizedAuthorizationId.",2014/10/08 7:37 AM
ELY-46,"{{StringPrep.encode()}} throws {{StringIndexOutOfBoundsException}} on encoding same private use characters, but should throw {{IllegalArgumentException}} and only when profile {{FORBID_PRIVATE_USE}} is used.

{code}
java.lang.StringIndexOutOfBoundsException: String index out of range: 2
	at java.lang.String.charAt(String.java:658)
	at org.wildfly.sasl.util.StringPrep.encode(StringPrep.java:212)
{code}

Prepared test is here:
https://github.com/honza889/wildfly-sasl/commit/444de996e3777109ca4806cf6c801cd53d9fe953

Advanced test allow test all private use characters (a lot of them cause same exception), but first two tests shows whole problem. (Advanced test will have a sense only when first two tests are successful.)",2014/08/20 6:03 AM
ELY-69,"When one uses ""new ByteStringBuilder(myByteArray)"" the myByteArray is not included in the content of this ByteStringBuilder due to lenght field not set to initial length.",2014/08/13 3:06 AM
ELY-70,When exception occurs down in state's evaluateMessage it always end up in the same state instead of FAILED state. ,2014/08/13 3:03 AM
