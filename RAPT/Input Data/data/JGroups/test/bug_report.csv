bug_report_id,bug_report_desc,bug_report_time
JGRP-2711,The local site is not included in the list returned by {{Relayer#getSiteNames}}. It would be nice to include the asymmetric sites but it does not look possible since the {{forward_routes}} can contain patterns instead of the site's name.,2023/06/28 8:31 PM
JGRP-2663,"The {{AsynCounter}} and {{SyncCounter}} interfaces were supposed to be temporary in JGroups RAFT until they are stable [1].

No more changes are planned to them, so merge them in JGroups.

[1] https://github.com/belaban/jgroups-raft/blob/8e1b052ba7e610fee2c4169bb85a5691cdede97c/src/org/jgroups/blocks/atomic/package-info.java#L2",2022/11/23 11:00 AM
JGRP-2649,"FD_SOCK2 is currently missing a configuration property to configure NioServer.linger() so that this socket option gets applied to all client sockets.
Additionally, the logic in NioServer precludes enabling SO_LINGER with a value of 0, which terminates the socket via RST instead of FIN.
",2022/10/28 3:07 PM
JGRP-2648,"FD_SOCK2.createServer(...) is hard coded to use JGroups' default socket and thread factories, rather than using the socket/thread factory of the transport (as was the case with FD_SOCK).",2022/10/26 9:54 PM
JGRP-2590,"jgroups-4.2.xsd imports fork-stacks.xsd
fork-stacks.xsd imports jgroups-4.0.xsd
We should break the circular dependency by incorporating the fork-stacks declarations inside the main jgroups xsd. Alternatively, version fork-stacks so it follows the same version as the jgroups xsd
While relay.xsd doesn't suffer from the circular dependency, I think that should also be versioned

",2021/12/03 11:19 AM
JGRP-2570,"When a ""node X"" (not SiteMaster) needs to send a message to a remote site, it forwards the message to the local SiteMaster (""node S""). If the route/bridge to the remote site is not available, ""node S"" sends a {{SITE_UNREACHABLE}} to ""node X"".

The problem is the {{Message.setDst()}} is set with the ""node X"" {{SiteUUID}} instead of using the [[ExtendedUUID}}. The {{Message}} is discarded in [1] because SiteUUID.equals(ExtendedUUID.) returns false. 

RELAY2 needs to use the ExtendedUUID to send the {{SITE_UNREACHABLE}}.

Zulip Discussion: https://infinispan.zulipchat.com/#narrow/stream/118645-infinispan/topic/xsite/near/253721421

[1] https://github.com/belaban/JGroups/blob/78fc3aec2b15bab26a6c873e67d657e18994033c/src/org/jgroups/protocols/TP.java#L1500",2021/09/17 11:21 AM
JGRP-2531,"we use jgoups TCP_NIO2 protocol stacks

after we upgrade to jgroups 5.1.5 throw following exception in our dev env.

21-02-25 14:42:50.357 WARN [NioConnection.Reader [172.30.1.161:7802]-27,shared=common TCP_NIO2.warn:120]failed handling message
java.nio.channels.NotYetConnectedException: null
 at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:178)
 at java.base/sun.nio.ch.SocketChannelImpl.beginRead(SocketChannelImpl.java:312)
 at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:347)
 at org.jgroups.nio.Buffers.readLengthAndData(Buffers.java:128)
 at org.jgroups.blocks.cs.NioConnection._receive(NioConnection.java:247)
 at org.jgroups.blocks.cs.NioConnection$Reader._run(NioConnection.java:483)
 at org.jgroups.blocks.cs.NioConnection$Reader.run(NioConnection.java:471)
 at java.base/java.lang.Thread.run(Thread.java:834)
21-02-25 14:42:53.348 WARN [main AbstractJGroupsMessenger.viewAccepted:228][system.messenger.common]jgroups discover[TIMEOUT]: 1, elapsed time: 6293 ms
21-02-25 14:43:02.501 WARN [hedging.persister.database AbstractJournaler.loop:369][hedging.persister.database]failed to seek: 1364436024374509085
21-02-25 14:43:02.513 WARN [holding.persister.database AbstractJournaler.loop:369][holding.persister.database]failed to seek: 1348674154999584257
21-02-25 14:43:02.567 WARN [pricing.persister.redis AbstractJournaler.loop:369][pricing.persister.redis]failed to seek: 1364471253746595885
21-02-25 14:43:02.569 WARN [pricing.persister.database AbstractJournaler.loop:369][pricing.persister.database]failed to seek: 1364471253746595885
21-02-25 14:43:02.605 WARN [trading.persister.database.0 AbstractJournaler.loop:369][trading.persister.database.0]failed to seek: 1364234418297976373
21-02-25 14:43:02.610 WARN [trading.persister.database.1 AbstractJournaler.loop:369][trading.persister.database.1]failed to seek: 1364234418297975861
21-02-25 14:43:02.645 WARN [dealing.persister.database AbstractJournaler.loop:369][dealing.persister.database]failed to seek: 1364436024417785365
21-02-25 14:43:02.674 WARN [customer.persister.database AbstractJournaler.loop:369][customer.persister.database]failed to seek: 1364234470919554125
21-02-25 14:43:02.704 WARN [courier.mail.customer.pump AbstractJournaler.loop:369][courier.mail.customer.pump]failed to seek: 1361051105273893941
21-02-25 14:43:02.720 WARN [courier.push.customer.pump AbstractJournaler.loop:369][courier.push.customer.pump]failed to seek: 1361051105273893941
21-02-25 14:43:11.859 WARN [NioConnection.Reader [172.30.1.161:7805]-38,shared=common TCP_NIO2.warn:120]failed handling message
java.nio.channels.NotYetConnectedException: null
 at java.base/sun.nio.ch.SocketChannelImpl.ensureOpenAndConnected(SocketChannelImpl.java:178)
 at java.base/sun.nio.ch.SocketChannelImpl.beginRead(SocketChannelImpl.java:312)
 at java.base/sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:347)
 at org.jgroups.nio.Buffers.readLengthAndData(Buffers.java:128)
 at org.jgroups.blocks.cs.NioConnection._receive(NioConnection.java:247)
 at org.jgroups.blocks.cs.NioConnection$Reader._run(NioConnection.java:483)
 at org.jgroups.blocks.cs.NioConnection$Reader.run(NioConnection.java:471)
 at java.base/java.lang.Thread.run(Thread.java:834)

 

jgroups properties

<config xmlns=""urn:org:jgroups"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
 xsi:schemaLocation=""urn:org:jgroups http://www.jgroups.org/schema/jgroups.xsd""
 version=""5.0.4.Final"">
 
 <TCP_NIO2
 recv_buf_size=""2M""
 send_buf_size=""2M""
 max_bundle_size=""64K""
 max_send_buffers=""32""
 sock_conn_timeout=""3000""
 reader_idle_time=""300000""
 enable_diagnostics=""false""
 thread_pool.enabled=""true""
 thread_naming_pattern=""cl""
 logical_addr_cache_max_size=""100000""
 logical_addr_cache_expiration=""3600000""
 
 bind_port=""${jgroups.tcp.bind.port}""
 port_range=""${jgroups.tcp.port.range}""
 thread_pool.min_threads=""${jgroups.threads.min}""
 thread_pool.max_threads=""${jgroups.threads.max}""
 thread_pool.keep_alive_time = ""${jgroups.threads.ttl}""/>
 
 <TCPPING
 async_discovery=""true""
 port_range=""${jgroups.tcp.port.range}""
 initial_hosts=""${jgroups.tcp.initial.hosts}""
 async_discovery_use_separate_thread_per_request=""true""/>
 
 <MERGE3 min_interval=""10000"" max_interval=""30000""/>
 <!-- <FD_SOCK/> --><FD_ALL3 timeout=""30000""/>
 <VERIFY_SUSPECT timeout=""3000""/>
 <!-- <BARRIER /> -->
 
 <pbcast.NAKACK2 use_mcast_xmit=""false"" xmit_interval=""300"" xmit_table_max_compaction_time=""30000""/>
 <UNICAST3 xmit_interval=""300"" xmit_table_max_compaction_time=""30000""/>
 
 <pbcast.STABLE desired_avg_gossip=""60000"" max_bytes=""4M""/>
 <pbcast.GMS join_timeout=""5000"" max_join_attempts=""0""/>
 
 <UFC max_credits=""6M"" min_threshold=""0.4""/>
 <MFC max_credits=""6M"" min_threshold=""0.4""/>
 <FRAG2 frag_size=""60K""/>
 
 <!--RSVP resend_interval=""2000"" timeout=""10000""/-->
 <!-- <pbcast.STATE_TRANSFER/> -->
</config>

 ",2021/02/25 12:54 AM
JGRP-2388,"Caused by: java.lang.NullPointerException
at org.jgroups.protocols.dns.DNS_PING.destroy(DNS_PING.java:70)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.jgroups.stack.ProtocolStack.destroy(ProtocolStack.java:876)
at org.jgroups.stack.ProtocolStack.initProtocolStack(ProtocolStack.java:867)
at org.jgroups.stack.ProtocolStack.init(ProtocolStack.java:849)
at org.jgroups.JChannel.<init>(JChannel.java:155)
at org.jboss.as.clustering.jgroups.JChannelFactory.createChannel(JChannelFactory.java:116)
at org.jboss.as.clustering.jgroups.subsystem.ChannelServiceConfigurator.get(ChannelServiceConfigurator.java:96)",2019/10/03 8:23 AM
JGRP-2371,"Given the integration with Elytron, it differentiates between SSLContexts for client and server. The protocol needs to separate these too in order to support Elytron integration. Blocks WFLY-12164.",2019/08/16 5:20 PM
JGRP-2370,"This causes protocol initialization to fail if the setSSLContext(...) was used.

{noformat}
17:55:10,947 ERROR [org.jboss.msc.service.fail] (ServerService Thread Pool -- 82) MSC000001: Failed to start service org.wildfly.clustering.jgroups.channel.ee: org.jboss.msc.service.StartException in service org.wildfly.clustering.jgroups.channel.ee: java.lang.IllegalStateException: java.io.FileNotFoundException: keystore.jks
    at org.wildfly.clustering.service.FunctionalService.start(FunctionalService.java:70)
    at org.wildfly.clustering.service.AsyncServiceConfigurator$AsyncService.lambda$start$0(AsyncServiceConfigurator.java:117)
    at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
    at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982)
    at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486)
    at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1377)
    at java.lang.Thread.run(Thread.java:748)
    at org.jboss.threads.JBossThread.run(JBossThread.java:485)
Caused by: java.lang.IllegalStateException: java.io.FileNotFoundException: keystore.jks
    at org.jboss.as.clustering.jgroups.subsystem.ChannelServiceConfigurator.get(ChannelServiceConfigurator.java:116)
    at org.jboss.as.clustering.jgroups.subsystem.ChannelServiceConfigurator.get(ChannelServiceConfigurator.java:58)
    at org.wildfly.clustering.service.FunctionalService.start(FunctionalService.java:67)
    ... 7 more
Caused by: java.io.FileNotFoundException: keystore.jks
    at org.jgroups.protocols.SSL_KEY_EXCHANGE.init(SSL_KEY_EXCHANGE.java:170)
    at org.jgroups.stack.ProtocolStack.initProtocolStack(ProtocolStack.java:857)
    at org.jgroups.stack.ProtocolStack.init(ProtocolStack.java:845)
    at org.jgroups.JChannel.<init>(JChannel.java:155)
    at org.jboss.as.clustering.jgroups.JChannelFactory.createChannel(JChannelFactory.java:116)
    at org.jboss.as.clustering.jgroups.subsystem.ChannelServiceConfigurator.get(ChannelServiceConfigurator.java:96)
    ... 9 more
{noformat}",2019/08/16 4:19 PM
JGRP-2339,"JGroups SocketFactory contains methods for creating named ServerSocketChannels, however, there is no corresponding close(ServerSocketChannel) method.
WF relies on the SocketFactory to register JGroups sockets with its SocketBindingManager, so that the management layer can report which sockets are connected, to which address/port are they are bound, etc.  The close(...) methods are necessary to unregister from the SocketBindingManager.",2019/03/30 5:34 PM
JGRP-2333,Basically org.jgroups.protocols.pbcast.GMS#getView is now identical to org.jgroups.protocols.pbcast.GMS#getViewId while the intention is to be able to see the current view.,2019/03/20 5:54 AM
JGRP-2328,"When [NioConnection.Reader._run()|https://github.com/belaban/JGroups/blob/d0d77d85f28efefaa2f0f262d3b1c279558c3f1f/src/org/jgroups/blocks/cs/NioConnection.java#L476] waits on the {{CondVar}} it should avoid waiting if {{running = false}}.

Currently it only avoids waiting if {{data_available = true}}, which is also set by {{NioConnection.Reader.stop()}}, but which is reset a few lines above.",2019/01/23 2:36 AM
JGRP-2323,"The JGroups XSD fails validation because it does not correctly namespace the ConfigType type.
Additionally the jar should contain all of the needed XSDs (relay.xsd, fork-stacks.xsd and rules.xsd)",2019/01/08 3:17 PM
JGRP-2315,"If a message is received that needs to be decrypted, or if a message need to be encrypted, a cipher is taken from the queue.  However, if a new coordinator concurrently sends a new secret key, it will clear and recreate the cipher queues.  If the previous operation then puts its cipher back on the queue, the queue will now contain a cipher with the old secret key.  This will result in random message decryption failures when a message encryption/decryption pulls the outdated cipher from the queue.

While this is mitigated somewhat by the caching of old cipher versions, newly joined members do not have the ability to read messages encrypted by outdated ciphers.",2018/11/29 10:59 AM
JGRP-2307,"When running our application, it crashes with the following stacktrace.

{code}
Exception in thread ""main"" java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:48)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:87)
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:50)
	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:51)
Caused by: java.lang.ExceptionInInitializerError
	at Bug.main(Bug.java:5)
	... 8 more
Caused by: java.lang.NullPointerException
	at java.util.Locale.<init>(Locale.java:648)
	at java.util.Locale.<init>(Locale.java:677)
	at org.jgroups.logging.Slf4jLogImpl.<clinit>(Slf4jLogImpl.java:20)
	... 9 more
{code}",2018/10/23 5:55 AM
JGRP-2306,"When disconnect() is called in StompConnection it will change running to false and close the connections which can result in an uncaught IOException in the run loop which is logged as an Error.

We desire to log errors, but if disconnect() has been called and running is no longer true then this should not be an unexpected error?

Probably has been a thing for long time, looks like this loop has been in the code for many versions.

",2018/10/19 6:32 PM
JGRP-2302,"JGroups default asym_keylength is 512, however RSA keys less than 1024 bits are considered breakable (e.g. https://www.oracle.com/technetwork/java/javase/8-compatibility-guide-2156366.html )

We should baseline the default to a secure size universally supported in our supported JDKs. Also, since JDK8 the default is 2048. ",2018/10/16 10:22 AM
JGRP-2279,"*asym parameters:*
<ASYM_ENCRYPT encrypt_entire_message=""true""
                  sign_msgs=""true""
                  sym_keylength=""128""
                  sym_algorithm=""AES/ECB/PKCS5Padding""
                  asym_keylength=""2048""
                  asym_algorithm=""RSA""
                  change_key_on_leave=""true""/>
*Throws the following error:*
2018-05-23T03:11:53,891 +2903450778 [jgroups--12467,-1491537117,1] ERROR org.jgroups.protocols.ASYM_ENCRYPT - 1: failed decrypting message from 2 (offset=0, length=1136, buf.length=1136): javax.crypto.BadPaddingException: Given final block not properly padded, headers are ASYM_ENCRYPT: [ENCRYPT version=16 bytes], TP: [cluster_name=-1491537117]
2018-05-23T03:11:53,893 +2903450780 [jgroups--12467,-1491537117,1] TRACE org.jgroups.protocols.TCP_NIO2 - 1: received message batch of 1 messages from 2
2018-05-23T03:11:53,895 +2903450782 [jgroups--12467,-1491537117,1] DEBUG org.jgroups.protocols.ASYM_ENCRYPT - 1: received secret key from keyserver 2
2018-05-23T03:11:53,895 +2903450782 [jgroups--12467,-1491537117,1] DEBUG org.jgroups.protocols.ASYM_ENCRYPT - 1: created 8 symmetric ciphers with secret key (16 bytes)
2018-05-23T03:11:54,369 +2903451256 [jgroups--12467,-1491537117,1] TRACE org.jgroups.protocols.TCP_NIO2 - 1: received [dst:***
2018-05-23T03:11:54,369 +2903451256 [jgroups--12467,-1491537117,1] WARN  org.jgroups.protocols.ASYM_ENCRYPT - 1: exception occurred decrypting message
javax.crypto.BadPaddingException: Given final block not properly padded
	at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:991) ~[sunjce_provider.jar:1.8.0_162]
	at com.sun.crypto.provider.CipherCore.doFinal(CipherCore.java:847) ~[sunjce_provider.jar:1.8.0_162]
	at com.sun.crypto.provider.AESCipher.engineDoFinal(AESCipher.java:446) ~[sunjce_provider.jar:1.8.0_162]
	at javax.crypto.Cipher.doFinal(Cipher.java:2222) ~[?:1.8.0_171]
	at org.jgroups.protocols.Encrypt.code(Encrypt.java:365) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt.decryptChecksum(Encrypt.java:387) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt._decrypt(Encrypt.java:299) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt.decryptMessage(Encrypt.java:283) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt.handleEncryptedMessage(Encrypt.java:242) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt.handleUpMessage(Encrypt.java:229) ~[jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Encrypt.up(Encrypt.java:155) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.ASYM_ENCRYPT.up(ASYM_ENCRYPT.java:143) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.VERIFY_SUSPECT.up(VERIFY_SUSPECT.java:129) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.FD_ALL.up(FD_ALL.java:197) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.FD_SOCK.up(FD_SOCK.java:252) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.MERGE3.up(MERGE3.java:277) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.Discovery.up(Discovery.java:262) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.protocols.TP.passMessageUp(TP.java:1203) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at org.jgroups.util.SubmitToThreadPool$SingleMessageHandler.run(SubmitToThreadPool.java:87) [jgroups-4.0.1.Final.jar:4.0.1.Final]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_162]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_162]
	at java.lang.Thread.run(Thread.java:748) [?:1.8.0_162]",2018/06/25 1:56 AM
JGRP-2258,This is because the field {{org.jgroups.protocols.pbcast.GMS#install_view_locally_first}} is missing {{org.jgroups.annotations.Property#deprecatedMessage}} which is consulted in {{org.jgroups.stack.Protocol#setValue}} to print out a warning.,2018/03/22 6:43 AM
JGRP-2233,"When a node joins, it can start receiving TOA message before the TOA protocols installs the view. In this small interval, the messages are discarded and the sender is stuck since it waits forever until the joiner sends the propose message.

fix notes:
* add a view-id to the TOA header
* don't perform the view members check if the message has a view id higher than the current installed view.",2017/11/09 1:51 PM
JGRP-2231,"During mod_cluster failover due application undeploy on Solaris 10 intermittently I can see NPE \[1\].

I've seen it already several times during failover with HTTPD with mod_cluster as balancer and EAP 7.1 as workers where their communication works over SSL which is configured using elytron on EAP side. I have seen the issue on Solaris 10 sparc (two different slaves).

\[1\]
{noformat}
2017-10-27 12:12:07,546 ERROR [org.jgroups.protocols.pbcast.GMS] (thread-2) JGRP000027: failed passing message up: java.lang.NullPointerException
	at org.jgroups.protocols.pbcast.GMS.up(GMS.java:895)
	at org.jgroups.stack.Protocol.up(Protocol.java:418)
	at org.jgroups.protocols.pbcast.STABLE.up(STABLE.java:294)
	at org.jgroups.protocols.UNICAST3.up(UNICAST3.java:487)
	at org.jgroups.protocols.pbcast.NAKACK2.deliverBatch(NAKACK2.java:989)
	at org.jgroups.protocols.pbcast.NAKACK2.removeAndPassUp(NAKACK2.java:919)
	at org.jgroups.protocols.pbcast.NAKACK2.handleMessage(NAKACK2.java:851)
	at org.jgroups.protocols.pbcast.NAKACK2.up(NAKACK2.java:611)
	at org.jgroups.protocols.VERIFY_SUSPECT.up(VERIFY_SUSPECT.java:155)
	at org.jgroups.protocols.FD_ALL.up(FD_ALL.java:200)
	at org.jgroups.protocols.FD_SOCK.up(FD_SOCK.java:325)
	at org.jgroups.protocols.MERGE3.up(MERGE3.java:292)
	at org.jgroups.protocols.Discovery.up(Discovery.java:296)
	at org.jgroups.protocols.TP.passMessageUp(TP.java:1657)
	at org.jgroups.protocols.TP$SingleMessageHandler.run(TP.java:1872)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.jboss.as.clustering.jgroups.ClassLoaderThreadFactory.lambda$newThread$0(ClassLoaderThreadFactory.java:52)
	at java.lang.Thread.run(Thread.java:748)
{noformat}",2017/10/30 11:35 AM
JGRP-2217,"TOA accepts and handle DATA_MESSAGE from members that aren't in the view. In that case, the message stays in the queue, in the pending state, until a new view is installed and it is cleanup. 
This blocks the deliver queue.",2017/09/08 4:37 AM
