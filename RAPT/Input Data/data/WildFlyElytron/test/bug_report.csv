bug_report_id,bug_report_desc,bug_report_time
ELY-2565,"Node.js 12, used in v2, [was recently shutdown|https://github.blog/changelog/2022-09-22-github-actions-all-actions-will-begin-running-on-node16-instead-of-node12/], so new builds do not work.",2023/06/06 8:19 PM
ELY-2546,"Currently, the {{filesystem-realm-encrypt}} command will append to the expected CLI file, if the user does not permit it to be overwritten. The command does not warn the user of this, so it may modify files unexpectedly, or corrupt binaries. The CLI script should be written to a different file instead.",2023/04/18 3:59 PM
ELY-2542,"The filesystem-realm-encrypt command needs to load a Secret Key from the credential store. If it fails to do so, [the attempt is aborted|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L688-L689]. However, it does not reset the {{Descriptor}} object, so [the CLI script for the realm is still created|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L734].",2023/04/06 8:17 PM
ELY-2541,"The test cases for filesystem-realm-encrypt command reference two potential paths to the credential store:
 * [{{./target/test-classes/filesystem-encrypt/mycredstore.cs}}|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/test/java/org/wildfly/security/tool/FileSystemEncryptRealmCommandTest.java#L162]
 *  [{{./mycredstore.cs}}|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/test/resources/bulk-encryption-conversion-desc#L4]

This results in two different credentials stores being used, including one [outside of the tests directory|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/mycredstore.cs].

Relatedly, one of the commands to run commands in the test cases [sets the credential store path twice|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/test/java/org/wildfly/security/tool/FileSystemEncryptRealmCommandTest.java#L66].",2023/04/06 5:47 PM
ELY-2540,"When adding encryption support to an existing filesystem realm, Elytron Tool creates a CLI script explaining how to add the resources to WildFly. The command checks whether a file already exists as the location where the CLI script will be saved, and asks the user if they want to overwrite it.

Currently, the wrong file location is checked, [with the overwrite check|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L745] looking at the relative location {{{}./<realm-name>.cli{}}}, instead of [the actual path the file is written at|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L774-L778]: {{{}<output-location>/<realm-name>.cli{}}}.

The overwrite command and the write command should use a single [{{Path}}|https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/nio/file/Path.html] variable set to the {{output-location}} path, instead of defining the value separately.
----
This issue also addresses a misconfiguration of the prompt for the overwrite check. Currently, it outputs the message {{Password:}} and hides the user's input. This is due to [the incorrect parameters being used in Command.prompt()|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/Command.java#L100-L110]. The message should be placed in the {{{}prompt{}}}, and {{echo}} set to true.",2023/04/04 6:06 PM
ELY-2536,"When performing a bulk-conversion with the {{filesystem-realm-encrypt}} command, the parameter {{realm-name}} is optional. However, since the [default realm name|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L626] is not enumerated, the resulting CLI script will attempt to create multiple realms with the same name.",2023/03/30 4:26 PM
ELY-2535,NoData,2023/03/20 11:19 AM
ELY-2530,"When the {{filesystem-realm-encrypt}} command of Elytron Tool completes, it generates a CLI script to add the new realm to WildFly. If the script would overwrite a file, the user is prompted to confirm they want to overwrite the file.

[The current logic is flipped|https://github.com/wildfly-security/wildfly-elytron/blob/a335699df3b55fd5f9258fe480670cbce8b7394a/tool/src/main/java/org/wildfly/security/tool/FileSystemEncryptRealmCommand.java#L774-L778], so if a user answers {*}y{*}, then the script will append to the existing file, while answering *n* will truncate the file to overwrite it.",2023/03/01 6:19 PM
ELY-2502,"Elytron subsystem has a keystore configured to use server/client keystore and certificate.
When using 2-way SSL authentication with either CLIENT_CERT or EXTERNAL mechanism error is returned:
{code:java}
Failed to connect to the controller: Unable to authenticate against controller at localhost:9993: Authentication failed: all available authentication mechanisms failed:
   EXTERNAL: javax.security.sasl.SaslException: EXTERNAL: Server rejected authentication{code}
in case of the EXTERNAL and 403 in case of the CLIENT_CERT mechanism. This is a regression against 7.4.8.",2023/01/09 3:26 PM
ELY-2496,"Currently, a filesystem realm created before WildFly 27 cannot add integrity checking. A migration option should be added to {{elytron-tool}} in order to update the version of the identity files. To minimize risks from bypassing the integrity verification, this will be the only way to upgrade an existing filesystem realm.

Original discussion is included in [wildfly-security/wildfly-elytron#1848|https://github.com/wildfly-security/wildfly-elytron/pull/1848].",2022/11/29 9:00 PM
ELY-2487,"Method isAutodetectedBearerOnly() should be invoked after checking cached token.

Invoking isAutodetectedBearerOnly() early will break every AJAX request that relies on HTTP session. A clear example is JSF Partial Request, it will never send the header ""Authorization"" neither the query parameter ""auth"" by design, it relies in HTTP session. During the initial load of view the user was authenticated, then the token was stored in HTTP session, so, JSF Partial Request relies on HTTP session.",2022/11/07 11:12 PM
ELY-2469,"The method {{org.junit.Assert.assertThat}} has been deprecated, in favour of {{{}org.hamcrest.MatcherAssert.assertThat{}}}. It is still used in 3 test classes, and should be replaced:
 * [VaultObjectInputStreamTest|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/credential/store/src/test/java/org/wildfly/security/credential/store/impl/VaultObjectInputStreamTest.java#L34]
 * [LinkPolicyConfigurationTest|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/jacc/src/test/java/org/wildfly/security/authz/jacc/LinkPolicyConfigurationTest.java#L205]
 * [PolicyConfigurationTest|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/jacc/src/test/java/org/wildfly/security/authz/jacc/PolicyConfigurationTest.java#L55]",2022/10/20 8:55 PM
ELY-2468,"The RH-SSO OIDC adapter makes use of the {{KeycloakSecurityRealm}} once an identity has been successfully established using OIDC. This security realm uses a {{KeycloakPrincipal}} to represent a realm identity principal.

Elytron's security realm implementations require a realm identity principal to be a {{NamePrincipal}} (as shown in a realm [here|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/realm/ldap/src/main/java/org/wildfly/security/auth/realm/ldap/LdapSecurityRealm.java#L188-L190]). When trying to outflow an identity from the {{KeycloakDomain}} to an Elytron security domain, we run into a problem because the principal that we're trying to outflow is a {{KeycloakPrincipal}} instead of a {{{}NamePrincipal{}}}. Thus, the outflow step fails since the target realm's {{getRealmIdentity}} method will just return a {{NON_EXISTENT}} identity. 

The {{getRealmIdentity}} method in Elytron security realm implementations should be updated so that if the given {{Principal}} isn't an instance of {{{}NamePrincipal{}}}, we try to convert it to a {{NamePrincipal}} if possible.",2022/10/20 1:45 PM
ELY-2390,"Some keystore providers (BC) throw an IllegalStateException when invoking load(null) to initialize an empty keystore. We should use load(null, null) everywhere instead.",2022/08/30 4:32 PM
ELY-2383,"Running the standard Elytron testcases with {{mvn clean install}} on Windows, without administrator privileges, will fail on running the {{symbolicLinkLocation}} test case within {{KeyStoreCredentialStoreTest}}, since they can only be created by [members of the Administrator group|https://docs.microsoft.com/en-us/windows/security/threat-protection/security-policy-settings/create-symbolic-links#default-values].",2022/08/09 4:19 PM
ELY-2381,"The {{LdapSecurityRealm}} when configured to search for filtered attributes (attributes that are result of another ldap query) can return duplicated entries. The main reason is [this line|https://github.com/wildfly-security/wildfly-elytron/blob/1.20.0.Final/auth/realm/ldap/src/main/java/org/wildfly/security/auth/realm/ldap/LdapSecurityRealm.java#L771]. The ldap realm uses an ArrayList to store the attributes if there is no role recursion, but there are several situations that, without role recursion, the returned attribute can be the same:
 # Several roles have the same CN attribute at different levels. For example {{cn=role1,ou=engineering,dc=sample,dc=com}} and {{cn=role1,ou=sales,dc=sample,dc=com}}. If the mapping is configured to use the CN both names would be the same and {{role1}} would be duplicated.
 # If using another attribute that can be duplicated. Imagine the attribute to use is the {{businessCategory}} of the group. We want to retrieve the different types of groups the user has assigned instead of the group name itself. And there are several roles in the same {{businesscategory}}. The results are duplicated.
 # If the dir-context is following referrals and roles are duplicated between the servers.
 # ...

There is no big problem with this, the result just contains duplicated entries, for example {{[value1, value2, value1, value1]}} which is very similar to {{[value1, value2]}} but not the same. This duplication is generating some issues in other test suites so better if a set is always used to maintain the returned attributes.",2022/08/09 8:27 AM
ELY-2358,"When a mapping in a ldap realm is configured to use the option {{{}extract-rdn{}}}, for example something like the following:
{code:java}
/subsystem=elytron/ldap-realm=ldap_realm:add(dir-context=ldap_dir-context, direct-verification=true, identity-mapping={search-base-dn=""cn=Users,dc=example,dc=com"", rdn-identifier=""samacountname"", attribute-mapping=[{from=""memberOf"", to=""Roles"", extract-rdn=""cn""}]})
{code}
The RDN farthest to the right with name {{cn}} is selected. For example with a group name {{cn=Role1,cn=Roles,dc=example,dc=com}} the value {{Roles}} is returned instead of {{{}Role1{}}}. This makes no sense because all the roles inside that branch will be transformed in the same role name {{{}Roles{}}}. The RDN situated furthest to the left should be selected instead, {{Role1}} in the example.",2022/06/28 7:37 AM
ELY-2354,"Some tests fail on latest IBM Semeru Runtime Certified Edition 11.0.15.0


WildFly Elytron - Tests:
{noformat}
Tests in error: 
  MaskedPasswordSSLAuthenticationTest.testTwoWay:162->getKeyManager:88 » NoSuchAlgorithm
  Gs2SuiteChild.init:120 » Login No LoginModule found for com.ibm.security.auth....
  CommunicationSuiteChild.initialize:128 » Login No LoginModule found for com.ib...
  GSSSecurityFactorySuiteChild.testCreate:51 » GeneralSecurity ELY01121: Unable ...
  SSLAuthenticationTest.testCRLMaxCertPathFails:530->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testCRLMaxCertPathSucceeds:516->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testClientSideOcsp:753->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testCrlBlank:441->getKeyManager:135 » NoSuchAlgorithm Ib...
  SSLAuthenticationTest.testOcspGood:701->getKeyManager:135 » NoSuchAlgorithm Ib...
  SSLAuthenticationTest.testOcspMaxCertPath0:721->ocspMaxCertPathCommon:737->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOcspMaxCertPathNeg1:716->ocspMaxCertPathCommon:737->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOcspMaxCertPathOkay:731->ocspMaxCertPathCommon:737->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOcspMaxCertPathTooLong:726->ocspMaxCertPathCommon:737->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOneWay:432->getKeyManager:135 » NoSuchAlgorithm IbmX...
  SSLAuthenticationTest.testOneWayServerAcceptedWithMultipleCRL:502->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOneWayServerRejectedWithMultipleCRL:487->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testOneWayServerRejectedWithSingleCRL:473->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testServerIcaRevoked:459->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testServerRevoked:450->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testTwoWay:540->getKeyManager:135 » NoSuchAlgorithm IbmX...
  SSLAuthenticationTest.testTwoWayClientAcceptedWithMultipleCRL:681->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testTwoWayClientAcceptedWithSingleCRL:622->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testTwoWayClientRejectedWithMultipleCRL:652->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testTwoWayClientRejectedWithSingleCRL:594->getKeyManager:135 » NoSuchAlgorithm
  SSLAuthenticationTest.testTwoWayIca:553->getKeyManager:135 » NoSuchAlgorithm I...
  SSLv2HelloAuthenticationTest.testTwoWaySSLv2HelloNoClientSupport:258->getKeyManager:378 » NoSuchAlgorithm
  SSLv2HelloAuthenticationTest.testTwoWaySSLv2HelloNotEnabled:229->getKeyManager:378 » NoSuchAlgorithm
  TLS13AuthenticationTest.testClientTLS12Only:154->getKeyManager:241 » NoSuchAlgorithm
  TLS13AuthenticationTest.testDifferentPreferredTLS13Suites:133->getKeyManager:241 » NoSuchAlgorithm
  TLS13AuthenticationTest.testServerTLS12Only:171->getKeyManager:241 » NoSuchAlgorithm
  TLS13AuthenticationTest.testTwoWayTLS13:114->getKeyManager:241 » NoSuchAlgorithm

Tests run: 593, Failures: 0, Errors: 31, Skipped: 10
{noformat}
WildFly Elytron Tool:
{noformat}
Failed tests: 
  VaultCommandTest.arabicCharsTest:252->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_arabic_chars/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit11621342126937990432/test_-1929930405.store --alias test} should succeeded but it failed
  VaultCommandTest.chineseCharsTest:223->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_chinese_chars/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit18431019670634007662/test_1349087102.store --alias test} should succeeded but it failed
  VaultCommandTest.japaneseCharsTest:281->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_japanese_chars/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit5840592433299115352/test_325910955.store --alias test} should succeeded but it failed
  VaultCommandTest.singleConversionBasicTest:116->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_ibm/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit6706693610853698479/test_2053474387.store --alias test} should succeeded but it failed
  VaultCommandTest.singleConversionInvalidRequiredOptionTest:304->executeVaultCommandWithParams:535 Command output should contain ""ELYTOOL00008: Cannot locate admin key with alias ""wrongAliasName"" or it is of improper type""
  VaultCommandTest.singleConversionRewriteConvertedFileTest:146->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_ibm/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit12551314677508184628/test_14950830.store --alias test} should succeeded but it failed
  VaultCommandTest.singleConversionSummaryMaskedPasswordTest:379->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_ibm/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit15858441386749503517/test_648210043.store --alias test --summary} should succeeded but it failed
  VaultCommandTest.singleConversionSummaryTest:358->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_ibm/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password secretsecret --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit8169891778903422679/test_-277637701.store --alias test --summary} should succeeded but it failed
  VaultCommandTest.specialCharsTest:194->executeVaultCommandWithParams:506->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_special_chars/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --salt 12345678 --iteration 34 --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit14402584912649650809/test_1244183838.store --alias test} should succeeded but it failed
  VaultCommandTest.testConvertOperationSaltAndIteration:322->executeVaultCommandWithParams:510->executeVaultCommandWithParams:532 Execution of vault command with arguments {--enc-dir target/test-classes/vault-v1/vault_data_ibm/ --keystore target/test-classes/vault-v1/vault-jceks-ibm.keystore --keystore-password MASK-2hKo56F1a3jYGnJwhPmiF5 --alias test --location /Users/chaowan/work/git/wildfly-security/wildfly-elytron/tool/target/junit10424517418863655294/test_-1185676223.store --salt 12345678 --iteration 34} should succeeded but it failed
Tests in error: 
  VaultCommandTest.bulkConversionBasicTest:395->AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput:116->AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput:132 » Runtime
  VaultCommandTest.testDuplicateOptions:453->AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput:116->AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput:132 » Runtime

Tests run: 108, Failures: 10, Errors: 2, Skipped: 13
{noformat}

This happens because some IBM security providers and algorithms are no longer available in IBM Semeru Runtime Certified Edition, Version 11. Please see more information in [Semeru Runtimes security migration guide |https://www.ibm.com/support/pages/node/6411285]

Since we check the IBM JDK via vendor name like:

{code:java}
private static final boolean IS_IBM = System.getProperty(""java.vendor"").contains(""IBM"");
{code}

This has been just revealed in latest IBM Semeru Runtime Certified Edition 11.0.15.0. Because the vendor name changed in this update.

chaowan@Chaos-MacBook-Pro elytron % mvn -v
Apache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0)
Maven home: /Users/chaowan/Downloads/software/apache/maven/apache-maven-3.8.5
Java version: 11.0.15, *vendor: IBM Corporation*, runtime: /Users/chaowan/Downloads/software/java/jdk/ibm/jdk-11.0.15+10/Contents/Home
... ...
chaowan@Chaos-MacBook-Pro elytron % mvn -v
Apache Maven 3.8.5 (3599d3414f046de2324203b78ddcf9b5e4388aa0)
Maven home: /Users/chaowan/Downloads/software/apache/maven/apache-maven-3.8.5
Java version: 11.0.14.1, *vendor: International Business Machines Corporation*, runtime: /Users/chaowan/Downloads/software/java/jdk/ibm/jdk-11.0.14.1+1/Contents/Home
...",2022/06/23 4:09 AM
ELY-2351,"{{ScramDigestPasswordImpl}} calls {{Hmac.init()}} using the supplied secret without checking its length. The default {{SunJCE}} provider automatically pads/truncates the secret to the block length, but the {{SunPKCS11}} provider passes the secret as-is to the underlying NSS provider, which causes a {{CKR_KEY_SIZE_RANGE}} in case there is a mismatch with the block-size.",2022/06/20 7:56 AM
ELY-2347,"If both of the optional _type_ and _write_ attributes of a key store are not set in the configuration, _parseKeyStoreType()_ raises a NullPointerException due to wrap being initialized as null, and then being checked in an if statement.
 - Initialized on [line 1847|https://github.com/wildfly-security/wildfly-elytron/blob/e1c6a8e40d5e6ffcf9b3dcc7b4d24f24757049a4/auth/client/src/main/java/org/wildfly/security/auth/client/ElytronXmlParser.java#L1847], crashes on [line 2010|https://github.com/wildfly-security/wildfly-elytron/blob/e1c6a8e40d5e6ffcf9b3dcc7b4d24f24757049a4/auth/client/src/main/java/org/wildfly/security/auth/client/ElytronXmlParser.java#L2010] of ElytronXmlParser.java

The attached PR also fixes an issue where the KeyStore type detection code would not close a FileInputStream if it was successful.",2022/06/09 8:02 PM
ELY-2326,"The GSSCredentialSecurityFactory tests the validity of any cached GSSCredential but it does not test the validity of the cached KerberosTicket.  

Once the KerberosTicket has expired it is no longer possible for the server to receive a delegated credential.",2022/03/23 10:34 AM
ELY-2322,"In auth/client/pom.xml, the metainf-services dependency is defined twice:

{code:xml}
<dependency>
    <groupId>org.kohsuke.metainf-services</groupId>
    <artifactId>metainf-services</artifactId>
    <scope>provided</scope>
</dependency>
{code}",2022/03/20 5:49 PM
ELY-2308,"An HTTP GET request with encoded query parameters secured by digest authentication fails. 

The code in [https://github.com/wildfly-security/wildfly-elytron/blob/1.x/http/digest/src/main/java/org/wildfly/security/http/digest/DigestAuthenticationMechanism.java#L285] compares the digest URI with the request URI and uses {{requestURI.getQuery()}} to append any query parameters. These query parameters are _decoded_ and thus the string comparison fails. 

Instead, I think the code should use {{requestURI.getRawQuery()}} which returns the _encoded_ query parameters. ",2022/02/23 9:45 AM
ELY-2304,"Wildfly Elytron Tool, location is required even for non-filebased type e.g. PKCS11",2022/02/04 7:41 AM
ELY-2303,"When {{use-realm-role-mappings}} and {{use-resource-role-mappings}} are set to {{true}} all previously found resource mappings are overwritten by the realm role mappings.

When the {{use-realm-role-mappings}}  are being disabled using a {{oidc.json}} configuraion as follows the resource roles will be available only:

{code:json}
{
  ""realm"": ""MYREALM"",
  ""auth-server-url"": ""https://keycloak.somedomain/auth/"",
  ""resource"": ""BisonProcess"",
  ""use-realm-role-mappings"": false,
  ""use-resource-role-mappings"": true,
}
{code}

It is not possible to have a combined set by defining the following configuration:

{code:json}
{
  ""realm"": ""MYREALM"",
  ""auth-server-url"": ""https://keycloak.somedomain/auth/"",
  ""resource"": ""BisonProcess"",
  ""use-realm-role-mappings"": true,
  ""use-resource-role-mappings"": true,
}
{code}

",2022/02/02 7:26 PM
ELY-2295,"ELY-926 added the ability to use PKCS12 as a credential store in elytron. The two commits in it added an alias {{Data}} over the OID {{1.2.840.113549.1.7.1}} that in the current code it is added twice [here|https://github.com/wildfly-security/wildfly-elytron/blob/1.18.2.Final/base/src/main/java/org/wildfly/security/WildFlyElytronProvider.java#L70] and [here|https://github.com/wildfly-security/wildfly-elytron/blob/1.18.2.Final/base/src/main/java/org/wildfly/security/WildFlyElytronBaseProvider.java#L64]. This alias is wrongly added because it is a legacy alias and the algorithm is added using [putService|https://github.com/wildfly-security/wildfly-elytron/blob/1.18.2.Final/base/src/main/java/org/wildfly/security/WildFlyElytronProvider.java#L71]. If an alias want to be added using that method, it should just be passed as the 5th argument {{{}aliases{}}}.

In previous JDKs the alias was discarded ([for example in jdk-11|https://github.com/AdoptOpenJDK/openjdk-jdk11/blob/master/src/java.base/share/classes/java/security/Provider.java#L1128-L1144]). In general the legacy service is added without a class-name (if the alias is inserted first) and then, when the real service is added, the class-name is assigned to the service. In this case the real service is never added as a legacy one and therefore the original service remains without class-name, and it is discarded by the {{removeInvalidServices}} later.

Now in jdk-18 there is a new issue WFCORE-5773 because of the bad alias. The method to remove invalid services has been removed. I think that this is a bug in JDK and it will be resolved sooner or later, but adding the invalid alias makes no sense anyway. The alias is not needed at all, it is working now without it (the credential store uses [the OID directly|https://github.com/wildfly-security/wildfly-elytron/blob/1.18.2.Final/credential/store/src/main/java/org/wildfly/security/credential/store/impl/KeyStoreCredentialStore.java#L152] and never the ""Data"" alias). Therefore the easiest solution is just removing it for now.",2022/01/24 8:27 AM
ELY-2290,"Follows up on ELY-2284.

This bug is currently causing the test failure described in WFLY-15933.",2022/01/17 8:40 PM
ELY-2284,"Example application [https://wildfly-security.github.io/wildfly-elytron/blog/securing-wildfly-apps-openid-connect/] caused many keycloak requests on each application request.

Environment:

Wildfly 26.0.0.Final

Keycloak 16.1.0

Oracle JDK 17.0.1",2022/01/06 8:01 AM
ELY-2271,"IdentityCredentials.verifyEvidence(evidence, hashCharset) is calling PasswordCredential.verify(evidence,hashCharset) without passing a Supplier<Provider[]>which will use the INSTALLED_PROVIDERS

IdentityCredentials should have a verify(Supplier<Provider[]>, evidence, hashCharset)",2021/12/14 2:45 PM
ELY-2200,NoData,2021/09/02 5:41 AM
ELY-2197,"Some codepoints are not closing resources properly.
Fix: Use try-with-resources or a finally clause with close.",2021/08/22 7:54 PM
ELY-2196,"There are some codepoints per component having potential NullpointerException problems. This refers to [RSPEC-2259|https://rules.sonarsource.com/java/RSPEC-2259]

Fix: Individual check necessary.",2021/08/22 7:21 PM
ELY-2195,"A little context: in Infinspan Server CLI, we have a ""shutdown"" command to stop the server. It is pretty basic and it makes sure the main thread returns. However, I have 1 thread from Elytron thread pool preventing the process to stop. As a temporary (or not) workaround, I have added {{SecurityDomain.getScheduledExecutorService().shutdown();}} at the end of our code.

Is it intentional the default {{ScheduledExecutorService}} created in [1] to spawn non-daemon threads?

Infinispan is currently using Elytron 1.15.5.Final

[1] https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/server/base/src/main/java/org/wildfly/security/auth/server/SecurityDomain.java#L1252
",2021/08/18 3:04 PM
ELY-2194,"The current implementation of the cache inside the [JwkManager|https://github.com/wildfly-security/wildfly-elytron/blob/1.16.1.Final/auth/realm/token/src/main/java/org/wildfly/security/auth/realm/token/validator/JwkManager.java#L109] just caches by the {{jwks}} url and it does take into account if a new kid is passed. This avoids the rotation of keys because the new key is not loaded until the current cache expires.

The idea is going to be always refreshing the jwks url if the kid is new. Just adding a new time option to avoid flooding of the endpoint (a minimum time in which consecutive requests are not allowed).",2021/08/17 8:34 AM
ELY-2193,Fix exception *java.net.SocketException: Broken pipe (Write failed)* that started appearing in the SSLAuthenticationTest.java in 1.x branch.,2021/08/06 1:40 PM
ELY-2183,"The [command line tool|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/tool/src/main/java/org/wildfly/security/tool/VaultCommand.java] to convert a vault to a credential store prompts for the password twice:

{code}
bin/elytron-tool.sh vault --enc-dir standalone/configuration/vault --keystore standalone/configuration/vault.keystore --location standalone/configuration/converted.store
Vault password: 
Confirm vault password: 
{code}

This is unnecessary as at that point it should be able to attempt to use the password and report an error if it is wrong.

Please find vault {{VAULT.dat}} and keystore {{vault.keystore}} attached below for convenience to use in the above command. The password for vault is : {{secretsecret}}

You can also run the command without the server by building {{wildfly-elytron-tool.jar}} and running:
{code}
java -jar wildfly-elytron-tool-versionXY.jar vault --enc-dir path/to/vault/folder --keystore path/to/vault.keystore --location path/to/converted.store
{code}",2021/07/13 4:06 PM
ELY-2161,"Add appropriate parameter validation to the builder setter methods in [LegacyPropertiesSecurityRealm|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/realm/base/src/main/java/org/wildfly/security/auth/realm/LegacyPropertiesSecurityRealm.java#L389].

An example of how to add a check to make sure a parameter is not null can be found here:
https://github.com/wildfly-security/wildfly-elytron/blob/0bc21f17dab0507f7a5cdf7d2e7ea14d44eae12a/credential/base/src/main/java/org/wildfly/security/credential/PasswordCredential.java#L51",2021/07/05 9:15 PM
ELY-2157,Add parameter validation to the [AggregateSecurityRealm|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/realm/base/src/main/java/org/wildfly/security/auth/realm/AggregateSecurityRealm.java#L57] constructor. This task involves ensuring the authenticationRealm and authorizationRealm variables are not null. ,2021/07/05 8:49 PM
ELY-2155,"Add parameter validation in the constructor for [KeyStoreBackedSecurityRealm|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/realm/base/src/main/java/org/wildfly/security/auth/realm/KeyStoreBackedSecurityRealm.java#L76] to ensure the keystore is not null. 

An example of how to add a check to make sure a parameter is not null can be found here:
https://github.com/wildfly-security/wildfly-elytron/blob/0bc21f17dab0507f7a5cdf7d2e7ea14d44eae12a/credential/base/src/main/java/org/wildfly/security/credential/PasswordCredential.java#L51",2021/07/05 8:45 PM
ELY-2153,"Add parameter validation for the hashEncoding and hashCharset variables in the [LdapSecurityRealm|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/realm/ldap/src/main/java/org/wildfly/security/auth/realm/ldap/LdapSecurityRealm.java#L139] constructor. 

Following what other security realms do, it should first verify the value is not null. If it's null, it should set these variables to sensible defaults:

* hashEncoding default value: Encoding.BASE64. 
* hashCharset default value: StandardCharsets.UTF_8.",2021/07/05 8:36 PM
ELY-2151,"In the ""docs"" (https://wildfly-security.github.io/wildfly-elytron/docs/) section of the WildFly Elytron website, there are two typos. The word ""javdoc"" should be updated to ""javadoc"".

The code for the Elytron website is in the [develop branch|https://github.com/wildfly-security/wildfly-elytron/tree/develop] in the wildfly-elytron repo.",2021/07/05 8:30 PM
ELY-2146,"JaasAuthorizationIdentity doesn't provide public methods to access the private fields [1]. 

[1] https://github.com/wildfly-security/wildfly-elytron/blob/af38ac0f17eaccbae5d6a9461546e9b8e5a1f7fc/auth/realm/base/src/main/java/org/wildfly/security/auth/realm/JaasSecurityRealm.java#L253",2021/06/26 11:57 AM
ELY-2145,Default platform encoding used in OAuth2IntrospectValidator and OAuth2CredentialSource.,2021/06/24 2:32 PM
ELY-2143,The constructor of CachingSecurityRealm is not correctly implemented. ,2021/06/23 5:40 PM
ELY-2142,Default platform encoding in *VaultCommand.parseDescriptorFile* method. The encoding should be specified as argument.,2021/06/19 9:25 PM
ELY-2141,Default platform encoding in *Command.prompt* method. The encoding should be specified as argument.,2021/06/17 5:30 PM
ELY-2137,"In *saslSupportedByConfiguration* [1], *credentialSource* can be null.

[1] https://github.com/ivassile/wildfly-elytron/blob/1.x/auth/client/src/main/java/org/wildfly/security/auth/client/AuthenticationConfiguration.java#L534",2021/06/10 6:25 PM
ELY-2123,"{{secret-key-credential-store}} does not make parent directories when being created, unlike {{credential-store}}.

{noformat}
[standalone@embedded /] /subsystem=elytron/secret-key-credential-store=p:add(path=x/y,create=true)
{
    ""outcome"" => ""failed"",
    ""failure-description"" => {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.credential-store.p"" => ""WFLYELY00004: Unable to start the service.
    Caused by: org.wildfly.security.credential.store.CredentialStoreException: ELY09513: Unable to flush credential store to storage
    Caused by: java.io.FileNotFoundException: /home/okotek/test/server/x/y (No such file or directory)""}},
    ""rolled-back"" => true
}

[standalone@embedded /] /subsystem=elytron/credential-store=p:add(location=x/y,create=true,credential-reference={clear-text=p})
{""outcome"" => ""success""}
{noformat}",2021/05/17 7:16 PM
ELY-2120,"ELY-1894 introduced the ability to make use of the IP address of the client that's connecting to the server to determine what roles should be assigned to the client.

As part of this change, the callback handler in {{ServerAuthenticationContext}} was updated to be able to handle the {{SocketAddressCallback}}:

[https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/server/base/src/main/java/org/wildfly/security/auth/server/ServerAuthenticationContext.java#L1059-L1061]

If the client's IP address cannot be determined for some reason, it's possible that {{SocketAddressCallback.getAddress()}} will be {{null}} on line 1060. We should update this to avoid an NPE here.

We should also avoid an NPE in the case that {{((InetSocketAddress) socketAddressCallback.getAddress()).getAddress()}} is {{null}}.
  ",2021/04/26 6:49 PM
ELY-2115,"While checking ENTESB-15831 we've found that we can't use:
* masked-HMAC-SHA256-AES-128
* masked-HMAC-SHA256-AES-256

when creating KeyStoreCredentialStore masked passwords. These algorithm IDs are [added as PasswordFactory algorithm ids|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/base/src/main/java/org/wildfly/security/WildFlyElytronProvider.java#L219-L228] but are [missing among AlgorithmParameters ids|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/base/src/main/java/org/wildfly/security/WildFlyElytronProvider.java#L128-L135].

Is this intended?",2021/04/09 9:54 AM
ELY-2111,"The [JwkManager|https://github.com/wildfly-security/wildfly-elytron/blob/1.15.3.Final/auth/realm/token/src/main/java/org/wildfly/security/auth/realm/token/validator/JwkManager.java#L177-L178] loads the RSA public key value ""n"" and ""e"" with the non url-safe base64 decoder.

This is not RFC ([https://tools.ietf.org/html/rfc7517]) compliant. The BigInts of the RSA key are Base64URL encoded without padding. So that code should load ""n"" and ""e"" using the RFC4648 url-safe version.

This part of the code is only used if the ""jku"" header is specified in the token and the implementation should retrieve the key from the endpoint to validate the token.",2021/03/29 5:38 AM
ELY-2108,"We have a web application that uses via hibernate a datasource.

This datasource is elytron-enabled.

 

The problem that we face is that when we set our security domain to have a properties realm, Subject passed to DS connection info has correctly assigned in privCredentials property the user's password.

When we change the realm to be an ldap realm, password characters stay the same regarding the length, but we see only zeroes.


{noformat}
<datasource jndi-name=""java:/devDS"" pool-name=""devDS"">
 <connection-url>jdbc:postgresql://localhost:5432/testDB</connection-url>
 <driver>postgres</driver>
 <pool>
 <max-pool-size>100</max-pool-size>
 </pool>
 <security>
 <elytron-enabled>true</elytron-enabled>
 <authentication-context>test-authentication-context</authentication-context>
 </security>
 <validation>
 <check-valid-connection-sql>select 1</check-valid-connection-sql>
 <background-validation>false</background-validation>
 </validation>
 <timeout>
 <idle-timeout-minutes>5</idle-timeout-minutes>
 </timeout>
 </datasource>\{noformat}
{noformat}

{noformat}
<authentication-client>
 <authentication-configuration name=""test-authentication-configuration"" security- domaim=""testSD"" forwarding-mode=""authentication""/>
 <authentication-context name=""test-authentication-context"">
 <match-rule authentication-configuration=""test-authentication-configuration""/>
 </authentication-context>
</authentication-client>
{noformat}

{noformat}
<security-domain name=""testSD"" default-realm=""idmLR"" permission-mapper=""default-permission-mapper""> <realm name=""idmLR"" role-decoder=""from-roles-attribute""/> </security-domain>
{noformat}

{noformat}
<dir-context name=""idmDC"" url=our_ldap_url"" principal=""principal_query"">
 <credential-reference clear-text=""xxxxx""/>
</dir-context>
{noformat}
 
{noformat}
<ldap-realm name=""idmLR"" dir-context=""idmDC"" direct-verification=""true"">
 <identity-mapping rdn-identifier=""uid"" search-base-dn=""cn=users,cn=accounts,dc=internal,dc=net"">
 <attribute-mapping>
 <attribute from=""cn"" to=""Roles"" filter=""(member=uid=\{0},cn=users,cn=accounts,dc=internal,dc=net)"" filter-base-dn=""cn=groups,cn=accounts,dc=internal,dc=net""/>
 </attribute-mapping>
 </identity-mapping>
</ldap-realm>
{noformat}

!CaptureWildfly.PNG!

 ",2021/03/24 7:52 AM
ELY-2104,NoData,2021/03/15 6:06 AM
ELY-2102,"When using Elytron Tool to print a public key from a credential store, the following warnings appear related to slf4j:

{code}./bin/elytron-tool.sh credential-store --location=cs_example.cs --password Elytron --export-key-pair-public-key example
SLF4J: Failed to load class ""org.slf4j.impl.StaticLoggerBinder"".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
ssh-rsa
...
{code}",2021/03/08 5:39 PM
ELY-2098,"Authenticaiton context should be captured when it is actually required, because it can change between calls.",2021/03/03 7:23 AM
ELY-2091,"The error message from the {{import-secret-key}} operation on the {{credential-store}} and {{secret-key-credential-store}} resources should be more helpful when importing invalid key (truncated in this case)
{noformat}
[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:import-secret-key(alias=a2,key=RUxZA)
{
    ""outcome"" => ""failed"",
    ""failure-description"" => ""COM00501: Expected padding"",
    ""rolled-back"" => true
}
{noformat}
The same message appears when loading a file with a corrupted key.",2021/02/23 5:01 AM
ELY-2090,"The realm mapping is determined in [ServerAuthenticationContext#assignName|https://github.com/wildfly-security/wildfly-elytron/blob/1.x/auth/server/base/src/main/java/org/wildfly/security/auth/server/ServerAuthenticationContext.java#L1193]. Currently, this does not make use of the {{evidence}} parameter at all. This should be updated to make use of the {{evidence}} parameter so that it gets used in the call to {{realmMapper#getRealmMapping}}.",2021/02/19 11:39 AM
ELY-2092,"The {{remove-alias}} operation of the {{credential-store}} resource removes all entries for the given alias, not just one entry according to the given type.

{noformat}
[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:add-alias(alias=a2,secret-value=a2)
{""outcome"" => ""success""}

[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:remove-alias(alias=a2,entry-type=SecretKeyCredential)
{
    ""outcome"" => ""failed"",
    ""failure-description"" => ""WFLYELY00920: Credential alias 'a2' of credential type 'SecretKeyCredential' does not exist in the store"",
    ""rolled-back"" => true
}
 
[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:generate-secret-key(alias=a2)
{""outcome"" => ""success""}

[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:remove-alias(alias=a2,entry-type=SecretKeyCredential)
{
    ""outcome"" => ""success"",
    ""response-headers"" => {""warnings"" => [{
        ""warning"" => ""Update dependent resources as alias 'a2' does not exist anymore"",
        ""level"" => ""WARNING"",
        ""operation"" => {
            ""address"" => [
                (""subsystem"" => ""elytron""),
                (""credential-store"" => ""a"")
            ],
            ""operation"" => ""remove-alias""
        }
    }]}
}

[standalone@localhost:9990 /] /subsystem=elytron/credential-store=a:add-alias(alias=a2,secret-value=a2)
{""outcome"" => ""success""}
{noformat}",2021/02/19 8:48 AM
ELY-2087,When new error codes were added to the audit module these did not reserve the full range just a subset so the credential store module has reserved an overlapping range.,2021/02/12 10:57 AM
ELY-2077,Mechanisms may rely on dispose() being called to perform clean up so if this is dropped the clean up may not be possible.,2021/01/30 7:18 AM
ELY-2076,These remaining misspelt instances are on internal method names and not exposed over public API.,2021/01/29 6:58 AM
ELY-2070,"CredentialStore is not able to get data from credential storage in file on IBM JDK 8

Related feature was added as a part of ELY-1879

*Reproducer:*
* Run CredentialStoreCommandTest test with IBM JDK 8
** Use JDK11, set IBM-JDK8 path to mvn property:
{noformat}
git clone git@github.com:wildfly-security/wildfly-elytron.git .
cd tool
mvn test -Dmaven.main.skip=true -B -fae -Dmaven.test.failure.ignore=true -P skip-default-tests -Djava8.home=$PATH_TO_IBM_JDK_8_HOME -Denforcer.skip=true -Dtest=CredentialStoreCommandTest
{noformat}
* 5 tests fails
** testImportPKCSKeyPairFromFile
** testGenerateKeyPairECDSA
** testImportOpenSSHKeyPairFromString
** testImportOpenSSHKeyPairFromFile
** testImportPKCSKeyPairFromString


",2021/01/19 6:44 AM
ELY-2069,"JwtValidator is reading the exp and nbf field as a Java int instead of long:

[https://github.com/wildfly-security/wildfly-elytron/blob/master/auth/realm/token/src/main/java/org/wildfly/security/auth/realm/token/validator/JwtValidator.java#L139]

This means the maximum expiration date is ~January 18, 2038.  Also, with Javascript a NumericDate this would be a 64-bit value.  The JWT spec also leaves open the possibility of a decimal value so that should possibly be accounted for.",2021/01/12 4:59 PM
ELY-2063,"MaskedPassword interface contains 8 algorighms those are unavailable on IBM JDK8:

* masked-SHA1-RC2-40
* masked-SHA1-RC2-40-CBC-PKCS5
* masked-SHA1-RC2-128
* masked-SHA1-RC2-128-CBC-PKCS5
* masked-SHA1-RC4-40
* masked-SHA1-RC4-40-ECB
* masked-SHA1-RC4-128
* masked-SHA1-RC4-128-ECB

This leads to MaskedPasswordTest errors on IBM JDK8.

If this is excepted, MaskedPasswordTest needs to be fixed and proper explanation needs to be added to MaskedPassword interface (so far this interface suggest that only listed algorithms with @Deprecated annotation may be unavailable). If this is not excepted, then the bug needs to be fixed.



{noformat}
[hudson@csb-rhel7-medium-102630 impl]$ mvn clean install -Dmaven.repo.local=/tmp/mkopecky/repo  -Dtest=MaskedPasswordTest -P skip-default-tests -Djava8.home=/path/to/ibm-java-x86_64-sdk-8.0-6.16
...
Running org.wildfly.security.password.impl.MaskedPasswordTest
Tests run: 48, Failures: 0, Errors: 16, Skipped: 0, Time elapsed: 1.688 sec <<< FAILURE! - in org.wildfly.security.password.impl.MaskedPasswordTest
testClearSpec[6: masked-SHA1-RC2-40](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.006 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEwithSHA1AndRC2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEwithSHA1AndRC2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[6: masked-SHA1-RC2-40](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEwithSHA1AndRC2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEwithSHA1AndRC2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[7: masked-SHA1-RC2-40-CBC-PKCS5](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEwithSHA1Andrc2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEwithSHA1Andrc2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[7: masked-SHA1-RC2-40-CBC-PKCS5](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEwithSHA1Andrc2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEwithSHA1Andrc2_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[8: masked-SHA1-RC2-128](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[8: masked-SHA1-RC2-128](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[9: masked-SHA1-RC2-128-CBC-PKCS5](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1andRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1andRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[9: masked-SHA1-RC2-128-CBC-PKCS5](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1andRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1andRC2_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[10: masked-SHA1-RC4-40](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[10: masked-SHA1-RC4-40](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[11: masked-SHA1-RC4-40-ECB](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithsha1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEWithsha1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[11: masked-SHA1-RC4-40-ECB](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithsha1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEWithsha1AndRC4_40 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[12: masked-SHA1-RC4-128](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[12: masked-SHA1-RC4-128](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0.002 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: PBEWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more

testClearSpec[13: masked-SHA1-RC4-128-ECB](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: pbeWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:100)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:120)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:492)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testClearSpec(MaskedPasswordTest.java:84)
Caused by: java.security.NoSuchAlgorithmException: pbeWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 5 more

testEncryptableSpec[13: masked-SHA1-RC4-128-ECB](org.wildfly.security.password.impl.MaskedPasswordTest)  Time elapsed: 0 sec  <<< ERROR!
java.security.spec.InvalidKeySpecException: java.security.NoSuchAlgorithmException: pbeWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:91)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:104)
	at org.wildfly.security.password.impl.PasswordFactorySpiImpl.engineGeneratePassword(PasswordFactorySpiImpl.java:483)
	at org.wildfly.security.password.PasswordFactory.generatePassword(PasswordFactory.java:151)
	at org.wildfly.security.password.impl.MaskedPasswordTest.testEncryptableSpec(MaskedPasswordTest.java:104)
Caused by: java.security.NoSuchAlgorithmException: pbeWithSHA1AndRC4_128 SecretKeyFactory not available
	at org.wildfly.security.password.impl.MaskedPasswordImpl.getCipher(MaskedPasswordImpl.java:189)
	at org.wildfly.security.password.impl.MaskedPasswordImpl.<init>(MaskedPasswordImpl.java:87)
	... 4 more
...
[hudson@csb-rhel7-medium-102630 impl]$ 
{noformat}",2020/12/22 8:14 AM
ELY-2058,"In the X509RevocationTrustManager.Builder class, we can currently configure the trust manager's accepted issuers. However, the accepted issuers should only be the certificates stored in the trust store. 

Allowing users to specify their own accepted issuers could contradict the trust manager's actual accepted issuers. ",2020/12/11 11:42 AM
ELY-2057,"When CRLs are configured there're no client certificate CA names sent for a tls 2 way connexion.

Method setAcceptedIssuers of X509RevocationTrustManager builder is never called, so acceptedIssuers is always empty.",2020/12/11 11:02 AM
ELY-2053,"When you use a {{wildfly-config.xml}} that uses the {{key-store-masked-password}} the wildfly provider needs to be manually registered. This [PasswordFactory.getInstance call|https://github.com/wildfly-security/wildfly-elytron/blob/1.14.0.Final/auth/client/src/main/java/org/wildfly/security/auth/client/ElytronXmlParser.java#L1973] does not pass the providers as in the rest of the calls and tehrefore default providers in the JVM are used.

The other problem is that the corresponding test [ElytronXmlParserTest|https://github.com/wildfly-security/wildfly-elytron/blob/1.14.0.Final/auth/client/src/test/java/org/wildfly/security/auth/client/ElytronXmlParserTest.java#L202] adds the provider so the error is hidden inside the tests. Just removing that line from the test you see the exception:
{noformat}
org.wildfly.client.config.ConfigXMLParseException: 
ELY01133: Failed to create credential
	at file:/home/rmartinc/wildfly-elytron/auth/client/target/test-classes/org/wildfly/security/auth/client/test-wildfly-config-v1_4.xml:38:245
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseKeyStoreType$54(ElytronXmlParser.java:1977)
	at org.wildfly.security.auth.client.ElytronXmlParser$AbstractLoadingKeyStoreFactory.get(ElytronXmlParser.java:3640)
	at org.wildfly.security.auth.client.ElytronXmlParser$AbstractLoadingKeyStoreFactory.get(ElytronXmlParser.java:3624)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:385)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:261)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:225)
	at org.wildfly.security.auth.client.ElytronXmlParserTest.testKeyStoreClearPassword(ElytronXmlParserTest.java:117)
Caused by: java.security.NoSuchAlgorithmException: ELY08028: Invalid algorithm ""masked-HMAC-SHA1-AES-128""
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:122)
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:76)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseKeyStoreType$54(ElytronXmlParser.java:1973)
	... 6 more
{noformat}",2020/12/04 12:13 PM
ELY-2045,NoData,2020/11/24 1:02 PM
ELY-2043,"org.wildfly.security.http.util.AggregateServerMechanismFactory

has one incorrect trace message and one which could be more helpful:

getMechanismNames has

{color:#0033b3}if {color}(log.isTraceEnabled()) {
    log.tracef({color:#067d17}""No %s provided by factories in %s: %s""{color}, HttpServerAuthenticationMechanismFactory.{color:#0033b3}class{color}.getSimpleName(), getClass().getSimpleName(), Arrays.toString(factories));
}
{color:#0033b3}return {color}names.toArray({color:#0033b3}new {color}String[names.size()]);

should that be

{color:#0033b3}if {color}(log.isTraceEnabled()) {
 log.tracef({color:#067d17}""%s factories in %s: %s""{color}, HttpServerAuthenticationMechanismFactory.{color:#0033b3}class{color}.getSimpleName(), getClass().getSimpleName(), Arrays.toString(factories));
}
{color:#0033b3}return {color}names.toArray({color:#0033b3}new {color}String[names.size()]);

?

Same message in createAuthenticationMechanism

{color:#0033b3}if {color}(log.isTraceEnabled()) {
   log.tracef({color:#067d17}""No %s provided by factories in %s: %s""{color}, HttpServerAuthenticationMechanismFactory.{color:#0033b3}class{color}.getSimpleName(), getClass().getSimpleName(), Arrays.toString(factories));
}

It would be useful if it supplied the mechanism e.g:

{color:#0033b3}if {color}(log.isTraceEnabled()) {
 log.tracef({color:#067d17}""Mechanism %s not %s provided by factories in %s: %s""{color}, mechanism, HttpServerAuthenticationMechanismFactory.{color:#0033b3}class{color}.getSimpleName(), getClass().getSimpleName(), Arrays.toString(factories));
}

 

 ",2020/11/22 1:38 PM
ELY-2029,Checking String equality using != in SimpleDirContextFactory.createDirContext() ,2020/10/11 5:24 PM
ELY-2026,"Some SSLEngines provided by elytron does not implement the new TLS methods that jdk-8 251+ incorporated from jdk-11. That makes some tests in the wildfly-http-client to fail with the following exception:

{code}
12:07:31,031 ERROR (XNIO-3 I/O-1) [org.xnio.listener] <ChannelListeners.java:94> XNIO001007: A channel event listener threw an exception: java.lang.RuntimeException:
 java.lang.reflect.InvocationTargetException
        at io.undertow.protocols.alpn.JDK9AlpnProvider.getSelectedProtocol(JDK9AlpnProvider.java:99)
        at io.undertow.client.ALPNClientSelector$2.handleEvent(ALPNClientSelector.java:81)
        at io.undertow.client.ALPNClientSelector$2.handleEvent(ALPNClientSelector.java:77)
        at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
        at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
        at io.undertow.protocols.ssl.SslConduit$SslReadReadyHandler.readReady(SslConduit.java:1211)
        at io.undertow.protocols.ssl.SslConduit$SslWriteReadyHandler.writeReady(SslConduit.java:1286)
        at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:94)
        at org.xnio.nio.WorkerThread.run(WorkerThread.java:591)
Caused by: java.lang.reflect.InvocationTargetException
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.lang.reflect.Method.invoke(Method.java:498)
        at io.undertow.protocols.alpn.JDK9AlpnProvider.getSelectedProtocol(JDK9AlpnProvider.java:97)
        ... 8 more
Caused by: java.lang.UnsupportedOperationException
        at org.wildfly.security.ssl.JDKSpecific.getApplicationProtocol(JDKSpecific.java:35)
        at org.wildfly.security.ssl.AbstractDelegatingSSLEngine.getApplicationProtocol(AbstractDelegatingSSLEngine.java:166)
        ... 13 more
{code}",2020/10/02 6:16 AM
ELY-2025,Resource leak in ElytronXmlParser -> UnknownTypeFileKeyStoreFactory.get() method. The resource FileInputStream is not closed on exception.,2020/10/01 5:08 PM
ELY-2023,"When configuring a certificate login setup with elytron it doesn't work if the certificate is sent using the {{certificate-forwarding}} and {{proxy-address-forwarding}}. When there is an web proxy in front of the EAP server and forwarding is activated the following exception is received:

{noformat}
2020-09-14 16:46:37,998 TRACE [org.wildfly.security] (default task-1) CLIENT_CERT: org.wildfly.security.http.HttpAuthenticationException: ELY05053: Callback handler failed for unknown reason
        at org.wildfly.security.mechanism._private.MechanismUtil.handleCallbacks(MechanismUtil.java:160)
        at org.wildfly.security.http.cert.ClientCertAuthenticationMechanism.attemptAuthentication(ClientCertAuthenticationMechanism.java:151)
        at org.wildfly.security.http.cert.ClientCertAuthenticationMechanism.evaluateRequest(ClientCertAuthenticationMechanism.java:94)
        at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:119)
        at org.wildfly.security.auth.server.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:85)
        at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:270)
        at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$800(HttpAuthenticator.java:249)
        at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:97)
        at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:96)
       ...
Caused by: java.lang.IllegalStateException: ELY01000: Authentication name was already set on this context
        at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.setPrincipal(ServerAuthenticationContext.java:2025)
        at org.wildfly.security.auth.server.ServerAuthenticationContext.setAuthenticationPrincipal(ServerAuthenticationContext.java:409)
        at org.wildfly.security.auth.server.ServerAuthenticationContext.setAuthenticationName(ServerAuthenticationContext.java:383)
        at org.wildfly.security.auth.server.ServerAuthenticationContext.setAuthenticationName(ServerAuthenticationContext.java:367)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:870)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:851)
        at org.wildfly.security.auth.server.SecurityIdentityServerMechanismFactory$SecurityIdentityCallbackHandler.handle(SecurityIdentityServerMechanismFactory.java:121)
        at org.wildfly.security.mechanism._private.MechanismUtil.handleCallbacks(MechanismUtil.java:156)
        ... 44 more
{noformat}",2020/09/16 3:22 AM
ELY-2009,See https://github.com/wildfly-security/wildfly-elytron/pull/1374#discussion_r452231969.,2020/07/09 10:01 AM
ELY-2004,"From a successful authentication with a delegated credential we can see from the logs the delegated credential is handled twice.
{code:java}
2020-07-01 20:19:30,820 TRACE [org.wildfly.security.http.spnego] (default task-1) Associating delegated GSSCredential with identity.
2020-07-01 20:19:30,822 TRACE [org.wildfly.security.http.spnego] (default task-1) GSSContext established, authorizing...
2020-07-01 20:19:30,822 TRACE [org.wildfly.security.http.spnego] (default task-1) Credential delegation enabled, delegated credential = [GSSCredential: 
admin@ELYTRON.ORG 1.2.840.113554.1.2.2 Initiate [class sun.security.jgss.krb5.Krb5InitCredential]
admin@ELYTRON.ORG 1.3.6.1.5.5.2 Initiate [class sun.security.jgss.spnego.SpNegoCredElement]] {code}
The first can be removed as we will always move onto the second if the GSSContext is establihsed.

 ",2020/07/02 8:03 AM
ELY-1995,"Authentication is failing when token-realm is set as an authentication-realm in aggregate-realm and ldap-realm is set as authorization realm. 

It is found that {{AggregateSecurityRealm#getRealmIdentity}} is attempting to get the realm identity to be used for authentication using the JWT realm and it attempts to get the realm identity to be used for authorization using the LDAP realm. In both cases, the {{BearerTokenEvidence}} is being used to try to obtain the realm identity. The problem with this is that the {{LdapSecurityRealm}} won't be able to obtain the principal from the {{BearerTokenEvidence}} so the {{authorizationIdentity}} will just be the {{RealmIdentity.NON_EXISTENT}} identity, resulting in the ""User does not exist"" error.

{panel}
2020-06-11 08:51:06,767 TRACE [org.wildfly.security] (default task-1) Handling MechanismInformationCallback type='HTTP' name='BEARER_TOKEN' host-name='localhost' protocol='http'
2020-06-11 08:51:06,769 TRACE [org.wildfly.security] (default task-1) Evidence verification: evidence = org.wildfly.security.evidence.BearerTokenEvidence@2587e47f  evidencePrincipal = null
2020-06-11 08:51:06,782 DEBUG [org.wildfly.security] (default task-1) Token is using algorithm [RS256]
2020-06-11 08:51:06,789 DEBUG [org.wildfly.security] (default task-1) Token is using algorithm [RS256]
2020-06-11 08:51:06,792 TRACE [org.wildfly.security] (default task-1) BEARER_TOKEN: org.wildfly.security.http.HttpAuthenticationException: ELY05053: Callback handler failed for unknown reason
	at org.wildfly.security.mechanism._private.MechanismUtil.handleCallbacks(MechanismUtil.java:161)
	... 41 more

{panel}




 ",2020/06/11 11:13 AM
ELY-1982,"Configuration of `server-ssl-context` does not seem to work with BCJSSE Provider. The steps above work for EAP 7.2, however they throw the following error in EAP 7.3:

ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 1) WFLYCTL0013: Operation (""add"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""server-ssl-context"" => ""server-ssl-context"")
]) - failure description: {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.ssl-context.server-ssl-context"" => ""Failed to start service
    Caused by: java.lang.IllegalStateException: SSLContext has not been initialized.""}}

Stacktrace:

ERROR [org.jboss.msc.service.fail] (MSC service thread 1-7) MSC000001: Failed to start service org.wildfly.security.ssl-context.server-ssl-context: org.jboss.msc.service.StartException in service org.wildfly.security.ssl-context.server-ssl-context: Failed to start service
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1731)
	at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1559)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1377)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: SSLContext has not been initialized.
	at org.bouncycastle.jsse.provider.ProvSSLContextSpi.getContextData(Unknown Source)
	at org.bouncycastle.jsse.provider.ProvSSLContextSpi.engineGetServerSessionContext(Unknown Source)
	at javax.net.ssl.SSLContext.getServerSessionContext(SSLContext.java:386)
	at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:340)
	at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:53)
	at org.wildfly.extension.elytron.SSLDefinitions$6.lambda$getValueSupplier$1(SSLDefinitions.java:1173)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1739)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1701)
	... 6 more",2020/06/04 8:47 AM
ELY-1976,"Trying to configure an ejb client with Sasl authentication using a credential store causes an ""Invalid algorithm clear"" error as follows:

{code:java}
Suppressed: javax.security.sasl.SaslException: ELY05053: Callback handler failed for unknown reason [Caused by java.io.IOException: ELY01030: Unable to read credential]
            at org.wildfly.security.mechanism._private.MechanismUtil.handleCallbacks(MechanismUtil.java:160)
            at org.wildfly.security.mechanism._private.MechanismUtil.getPasswordCredential(MechanismUtil.java:102)
            at org.wildfly.security.mechanism.scram.ScramClient.handleInitialChallenge(ScramClient.java:245)
            at org.wildfly.security.sasl.scram.ScramSaslClient.evaluateMessage(ScramSaslClient.java:75)
            at org.wildfly.security.sasl.util.AbstractSaslParticipant.evaluateMessage(AbstractSaslParticipant.java:219)
            at org.wildfly.security.sasl.util.AbstractSaslClient.evaluateChallenge(AbstractSaslClient.java:98)
            at org.wildfly.security.sasl.util.AbstractDelegatingSaslClient.evaluateChallenge(AbstractDelegatingSaslClient.java:54)
            at org.wildfly.security.sasl.util.PrivilegedSaslClient.lambda$evaluateChallenge$0(PrivilegedSaslClient.java:55)
            at java.base/java.security.AccessController.doPrivileged(Native Method)
            at org.wildfly.security.sasl.util.PrivilegedSaslClient.evaluateChallenge(PrivilegedSaslClient.java:55)
            at org.jboss.remoting3.remote.ClientConnectionOpenListener$Authentication.lambda$handleEvent$0(ClientConnectionOpenListener.java:649)
            at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:991)
            at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
            at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1982)
            at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1486)
            at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1377)
            at java.base/java.lang.Thread.run(Thread.java:834)
        Caused by: java.io.IOException: ELY01030: Unable to read credential
            at org.wildfly.security.credential.source.impl.CredentialStoreCredentialSource.getCredential(CredentialStoreCredentialSource.java:92)
            at org.wildfly.security.credential.source.CredentialSource$1.getCredential(CredentialSource.java:207)
            at org.wildfly.security.auth.client.AuthenticationConfiguration$ClientCallbackHandler.handle(AuthenticationConfiguration.java:1841)
            at org.wildfly.security.sasl.util.LocalPrincipalSaslClientFactory$ClientPrincipalQueryCallbackHandler.handle(LocalPrincipalSaslClientFactory.java:93)
            at org.wildfly.security.mechanism._private.MechanismUtil.handleCallbacks(MechanismUtil.java:156)
            ... 16 more
        Caused by: org.wildfly.security.credential.store.CredentialStoreException: ELY09504: Cannot acquire a credential from the credential store
            at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.retrieve(KeyStoreCredentialStore.java:683)
            at org.wildfly.security.credential.store.CredentialStore.retrieve(CredentialStore.java:303)
            at org.wildfly.security.credential.store.CredentialStore.retrieve(CredentialStore.java:287)
            at org.wildfly.security.credential.source.impl.CredentialStoreCredentialSource.getCredential(CredentialStoreCredentialSource.java:88)
            ... 20 more
        Caused by: java.security.NoSuchAlgorithmException: ELY08028: Invalid algorithm ""clear""
            at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:122)
            at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:76)
            at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.retrieve(KeyStoreCredentialStore.java:679)
            ... 23 more
{code}


Here is my wildfly-config.xml where the credential-store-reference has been configured.
{code:java}
<configuration>
    <authentication-client xmlns=""urn:elytron:client:1.5"">
        <credential-stores>
            <credential-store name=""mycredstore"">
                <attributes>
                    <attribute name=""keyStoreType"" value=""JCEKS""/>
                    <attribute name=""location"" value=""/home/szcalles/Wildfly/wildfly/build/target/wildfly-20.0.0.Final-SNAPSHOT/standalone/configuration/mycredstore.cs""></attribute>
                </attributes>
                <protection-parameter-credentials>
                    <clear-password password=""StorePassword""/>
                </protection-parameter-credentials>
            </credential-store>
        </credential-stores>

        <authentication-rules>
            <rule use-configuration=""default-config""/>
        </authentication-rules>
        <authentication-configurations>
            <configuration name=""default-config"">
                <set-user-name name=""quickstartUser""/>
                <credentials>
                    <credential-store-reference store=""mycredstore"" alias=""quickstartUser""/>
                </credentials>
                <sasl-mechanism-selector selector=""SCRAM-SHA-512""/>
                <providers>
                    <use-service-loader />
                </providers>
            </configuration>
        </authentication-configurations>
    </authentication-client>
</configuration>
{code}

The provider configuration in wildfly-config.xml is specified correctly:
{code:java}
<providers>
     <use-service-loader />
</providers>
{code}

The problem seems to be in PasswordFactory.getInstance() in KeyStoreCredentialStore where we aren't setting the providers we have configured. Instead, it seems to use INSTALLED_PROVIDERS which does not have the Elytron providers. 



",2020/06/01 11:56 AM
ELY-1974,"The following use an invalid package: -

{code:java}
            ""org.wildfly.security.http.bearer.WildFlyElytronHttpBearerProvider"",
            ""org.wildfly.security.http.bearer.WildFlyElytronHttpClientCertProvider"",
            ""org.wildfly.security.http.bearer.WildFlyElytronHttpDigestProvider"",
            ""org.wildfly.security.http.bearer.WildFlyElytronHttpFormProvider"",
            ""org.wildfly.security.http.bearer.WildFlyElytronHttpSpnegoProvider"",
{code}",2020/05/27 12:33 PM
ELY-1953,"This is a regression in behavior of *elytron-tool.sh* with respect to 7.3.0.GA-CR4.
Basically, it was noticed that some commands involving a custom credential store returned a exit code of *0* and no error when executed against 7.3.0.GA-CR4 distribution, while the same commands are failing with various error codes against 7.4.0.CD19-CR1. 
See _Steps to Reproduce_ for an example. ",2020/04/15 3:55 AM
ELY-1952,"Method redefine in SSLConfiguratorImpl ignores some of the SSLParameters passed in, eg. cipher suites, protocols, needClientAuth, and others. Because of this, the assert in the code snippet below fails:

```
SSLParameters sslParameters = clientSslSocket.getSSLParameters();
sslParameters.setNeedClientAuth(true);
clientSslSocket.setSSLParameters(sslParameters);
Assert.assertTrue(clientSslSocket.getSSLParameters().getNeedClientAuth());
```

This issue is to address that.",2020/04/09 10:52 AM
ELY-1940,"Trace logging shows:

{code}
2020-03-10 13:51:38,549 DEBUG [org.wildfly.security] (management task-1) Found entry [uid=dguthrie,ou=users,dc=example,dc=com].
2020-03-10 13:51:38,550 DEBUG [org.wildfly.security] (management task-1) Identity for principal [dguthrie] found at [uid=dguthrie,ou=users,dc=example,dc=com].
2020-03-10 13:51:38,581 DEBUG [org.wildfly.security] (management task-1) Credential direct evidence verification failed. DN: [uid=dguthrie,ou=users,dc=example,dc=com]
2020-03-10 13:51:38,581 DEBUG [org.wildfly.security] (management task-1) Context [javax.naming.ldap.InitialLdapContext@25061db2] was closed. Connection closed or just returned to the pool.
2020-03-10 13:51:38,581 TRACE [org.wildfly.security] (management task-1) Handling AuthenticationCompleteCallback: fail
2020-03-10 13:51:38,582 TRACE [org.jboss.remoting.remote.server] (management task-1) Server sending authentication rejected: javax.security.sasl.SaslException: ELY05013: Authentication mechanism password not verified
{code}
  
Where ""Credential direct evidence verification failed. DN [uid=dguthrie,ou=users,dc=example,dc=com]"" is missing the exception or even a reason.

In DirectEvidenceVerifier.java around line 102 in the Exception handler it has

{code}
log.debugf(""Credential direct evidence verification failed. DN: [%s]"", distinguishedName,e);
{code}

In this case, the ""e"" is the exception, but that parameter position is for the string formatting for which there is no token in the formatter.  I believe what they meant to write was:

{code}
log.debugf(e, ""Credential direct evidence verification failed. DN: [%s]"", distinguishedName);
{code}

See [GitHub|https://github.com/jbossas/wildfly-elytron/blob/96c2273dc0503a23d153b25b3eb55de986e53003/src/main/java/org/wildfly/security/auth/realm/ldap/DirectEvidenceVerifier.java#L102]

where the first parameter is the exception.  A customer is migrating from legacy to elytron, and they have been using the LDAP error codes in the log for their internal IT to help figure out why people failed login. It's also invaluable for support.
",2020/03/12 2:23 AM
ELY-1929,This was previously fixed under ELY-1924 for the 1.x branch however the 1.10.x branch is also showing failures with OpenJDK11.,2020/02/07 8:25 AM
ELY-1926,"When using WebServicesClientConfigProviderImpl class from wildfly-elytron-client exception is thrown:

class configured for PasswordFactory (provider: WildFlyElytronPasswordProvider) cannot be found. org.wildfly.security.password.impl.PasswordFactorySpiImpl

This issue is to fix this.",2020/01/27 3:21 AM
ELY-1924,NoData,2020/01/22 11:59 AM
ELY-1908,"missing comma
{code:java}
stringBuilder.append(""syslog-format"").append(event.getFormat().toString());
{code}
should be 
{code:java}
stringBuilder.append("",syslog-format"").append(event.getFormat().toString());
{code}",2019/11/19 8:48 AM
ELY-1905,Refactor the tests method of validating SSL sessions as it is currently based on checking session IDs which are essentially obsolete with TLS1.3,2019/11/13 1:58 PM
ELY-1898,"In several places in the API, `SecurityFactory<Credential>` is used, but its bound is too strict, disallowing passing in specific instances, e.g. `SecurityFactory<GSSKerberosCredential>`.
These should all be replaced with `SecurityFactory<? extends Credential>`.

An example of code that doesn't work:

{code:java}
SecurityFactory<GSSKerberosCredential> ksf = ...;
CredentialSource cs = CredentialSource.fromSecurityFactory(ksf); // Compiler error: required SecurityFactory<Credential> provided SecurityFactory<GSSCredential>
{code}

Similar issue in the following method:

{code:java}
MechanismConfiguration.setServerCredential(SecurityFactory<Credential> credentialFactory)
{code}",2019/11/05 8:49 AM
ELY-1876,"When KeyStoreCredentialStore is initialized with Provider[], getKeyStoreInstance will not log trace messages.",2019/09/06 11:29 AM
ELY-1874,"Currently, the maxCertPath is added as a parameter to PXIXBuilderParameters to be checked only when building the path. It should be updated to create a new PKIXCertPathChecker to be checked when validating the path as well for the case when the full path is passed in and does not need to be built",2019/09/04 2:41 PM
ELY-1872,"It looks like elytron-tool.sh doesn't work well with symbolic links.

The soft link becomes a credential store - in a ""standard"" file - with the newly added alias but the original credential store will not be updated.


",2019/08/31 5:07 PM
ELY-1868,The ```testFailureInfiniteReconnectAttempts``` test in ```SyslogAuditEndpointTest``` is currently not testing the functionality correctly but not making continuous attempts before being interrupted,2019/08/29 9:41 AM
ELY-1866,"The symbolic link  https://github.com/wildfly-security/wildfly-elytron/blob/1.x/LICENSE.txt is broken, pointing to non-existent file

{code:java}
$ find | grep LICENSE.txt | xargs file
./tool/LICENSE.txt:                             symbolic link to src/main/resources/META-INF/LICENSE.txt
./tool/src/main/resources/META-INF/LICENSE.txt: ASCII text
./LICENSE.txt:                                  broken symbolic link to src/main/resources/META-INF/LICENSE.txt
{code}

From above findings it seems the link should be redirected to 
{code:java}
tool/src/main/resources/META-INF/LICENSE.txt
{code}
",2019/08/29 5:09 AM
ELY-1864,"ELY-1712 introduced a way to limit reconnect attempts. The UDP implementation attempts to endlessly reconnect and re-send the message. With a TCP connection the connection will be retried, but the message is swallowed and not re-sent after re-connection. UDP should do the same thing.

The reconnect attempts should be checked for both TCP and UDP. Once reached the endpoint should just shutdown and throw an error.",2019/08/27 1:41 PM
ELY-1862,"Found during QE's coverity scan:

{code}
*** CID 1485949:  SpotBugs: Correctness  (FB.IL_INFINITE_RECURSIVE_LOOP)
/auth/server/base/src/main/java/org/wildfly/security/auth/server/event/SecurityEventVisitor.java:
129 in org.wildfly.security.auth.server.event.SecurityEventVisitor.handleSyslogAuditEvent(org.wildfly.security.auth.server.event.SyslogAuditEvent,
java.lang.Object)()
123          *
124          * @param event the security event
125          * @param param the visitor parameter
126          * @return the visitor return value
127          */
128         public R handleSyslogAuditEvent(final SyslogAuditEvent
event, final P param) {
>>>     CID 1485949:  SpotBugs: Correctness  (FB.IL_INFINITE_RECURSIVE_LOOP)
>>>     There is an apparent infinite recursive loop.
129             return handleSyslogAuditEvent(event, param);
130         }
131
{code}",2019/08/26 11:36 AM
ELY-1851,"Elytron LdapRealm fails to follow a referral when ldaps is used (the {{ThreadLocalSSLSocketFactory}} is not set).

With a configuration similar to this one ({{memberOf}} is used to locate groups):

{code:xml}
<ldap-realm name=""ldap-realm"" dir-context=""ldap-dir-context"" direct-verification=""true"">
     <identity-mapping rdn-identifier=""sAMAccountName"" use-recursive-search=""true"" search-base-dn=""DC=redhat,DC=com"">
        <attribute-mapping>
            <attribute reference=""memberOf"" from=""cn"" to=""Roles"" role-recursion=""3""/>
        </attribute-mapping>
    </identity-mapping>
</ldap-realm>
...
<dir-context name=""ldap-dir-context"" url=""ldaps://ldap.redhat.com:636"" principal=""cn=Administrator,cn=Users,DC=redhat,DC=com"" referral-mode=""FOLLOW"" ssl-context=""ldaps-context"">
    <credential-reference store=""credstore"" alias=""ldap_password""/>
</dir-context>
{code}

If we have a group (or user) which contains a {{memberOf}} of another ldap, something like the following:

{noformat}
dn: CN=group-with-external-members,OU=Groups,DC=redhat,DC=com
...
memberOf: CN=group-in-another-domain,OU=Groups,DC=lab,DC=redhat,DC=com
{noformat}

The following exception is thrown when a referral is returned for a group that is inside another ldapserver of the forest:

{noformat}
TRACE [org.jboss.remoting.remote.server] (management task-1) Server sending authentication rejected: java.lang.RuntimeException: ELY01079: ldap-realm realm failed to obtain attributes for entry [CN=group-with-external-members,OU=Groups,DC=redhat,DC=com]
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.extractFilteredAttributesFromSearch(LdapSecurityRealm.java:808)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.lambda$null$4(LdapSecurityRealm.java:768)
    at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
    at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
    at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
    at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
    at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.forEachAttributeValue(LdapSecurityRealm.java:841)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.lambda$extractFilteredAttributes$6(LdapSecurityRealm.java:766)
    at java.util.stream.Collectors.lambda$toMap$58(Collectors.java:1321)
    at java.util.stream.ReduceOps$3ReducingSink.accept(ReduceOps.java:169)
    at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
    at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.extractAttributes(LdapSecurityRealm.java:828)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.extractFilteredAttributes(LdapSecurityRealm.java:754)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getAttributes(LdapSecurityRealm.java:516)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.getAuthorizationIdentity(LdapSecurityRealm.java:497)
    at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.doAuthorization(ServerAuthenticationContext.java:1923)
    at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.authorize(ServerAuthenticationContext.java:1952)
    at org.wildfly.security.auth.server.ServerAuthenticationContext.authorize(ServerAuthenticationContext.java:509)
    at org.wildfly.security.auth.server.ServerAuthenticationContext.authorize(ServerAuthenticationContext.java:489)
    at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:872)
    at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:839)
    at org.wildfly.security.sasl.util.SSLQueryCallbackHandler.handle(SSLQueryCallbackHandler.java:60)
    at org.wildfly.security.sasl.util.TrustManagerSaslServerFactory.lambda$createSaslServer$0(TrustManagerSaslServerFactory.java:96)
    at org.wildfly.security.sasl.plain.PlainSaslServer.evaluateResponse(PlainSaslServer.java:146)
    at org.wildfly.security.sasl.util.AuthenticationCompleteCallbackSaslServerFactory$1.evaluateResponse(AuthenticationCompleteCallbackSaslServerFactory.java:58)
    at org.wildfly.security.sasl.util.AuthenticationTimeoutSaslServerFactory$DelegatingTimeoutSaslServer.evaluateResponse(AuthenticationTimeoutSaslServerFactory.java:106)
    at org.wildfly.security.sasl.util.SecurityIdentitySaslServerFactory$1.evaluateResponse(SecurityIdentitySaslServerFactory.java:59)
    at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:245)
    at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:217)
    at org.jboss.remoting3.remote.ServerConnectionOpenListener$AuthStepRunnable.run(ServerConnectionOpenListener.java:486)
    at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:942)
    at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
    at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)
    at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)
    at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1378)
    at java.lang.Thread.run(Thread.java:748)
Caused by: org.wildfly.security.auth.server.RealmUnavailableException: ELY01108: ldap-realm realm identity search failed
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.search(LdapSecurityRealm.java:1141)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.extractFilteredAttributesFromSearch(LdapSecurityRealm.java:797)
    ... 46 more
Caused by: javax.naming.CommunicationException: ldap.lab.redhat.com:636 [Root exception is java.lang.IllegalStateException: ELY04025: DirContext tries to connect without ThreadLocalSSLSocketFactory thread local setting]
    at com.sun.jndi.ldap.LdapReferralContext.<init>(LdapReferralContext.java:96)
    at com.sun.jndi.ldap.LdapReferralException.getReferralContext(LdapReferralException.java:151)
    at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1861)
    at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1769)
    at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1786)
    at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:418)
    at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:396)
    at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:297)
    at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:297)
    at org.wildfly.security.auth.realm.ldap.DelegatingLdapContext.search(DelegatingLdapContext.java:335)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.searchWithPagination(LdapSecurityRealm.java:1161)
    at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapSearch.search(LdapSecurityRealm.java:1038)
    ... 47 more
Caused by: java.lang.IllegalStateException: ELY04025: DirContext tries to connect without ThreadLocalSSLSocketFactory thread local setting
    at org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory.getDefault(ThreadLocalSSLSocketFactory.java:46)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:498)
    at com.sun.jndi.ldap.Connection.createSocket(Connection.java:296)
    at com.sun.jndi.ldap.Connection.<init>(Connection.java:215)
    at com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:137)
    at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1609)
    at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2749)
    at com.sun.jndi.ldap.LdapCtx.<init>(LdapCtx.java:319)
    at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:192)
    at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:151)
    at com.sun.jndi.url.ldap.ldapURLContextFactory.getObjectInstance(ldapURLContextFactory.java:52)
    at org.jboss.as.naming.context.ObjectFactoryBuilder$ReferenceUrlContextFactoryWrapper.getObjectInstance(ObjectFactoryBuilder.java:293)
    at javax.naming.spi.NamingManager.getObjectInstance(NamingManager.java:300)
    at com.sun.jndi.ldap.LdapReferralContext.<init>(LdapReferralContext.java:119)
    ... 58 more
{noformat}

The reason seems to be that the {{ThreadLocalSSLSocketFactory}} is not set when doing a search, so, if a referral is returned the new search created inside the current one has no access to the {{SSLSocketFactory}} in the thread local.",2019/07/23 4:25 AM
ELY-1850,"The credential store allows different types to be stored under the same alias, removal requires the type to be specified so the correct entry can be removed.

However there is no way to list the types stored under a specific alias so unless you know how the store was populated it can be impossible to remove an alias.",2019/07/22 12:47 PM
ELY-1849,"Registering the DIGEST SASL mech with WildFlyElytronSaslDigestProvider does not register all the necessary password factories, causing the mech to fail with 

{{Caused by java.lang.IllegalStateException: java.security.NoSuchAlgorithmException: ELY08028: Invalid algorithm ""digest-md5""}}",2019/07/22 5:41 AM
ELY-1847,"
{noformat}
Caused by: java.lang.NoSuchMethodException: org.wildfly.security.http.bearer.BearerTokenAuthenticationMechanism.<init>(java.security.Provider)
    at java.lang.Class.getConstructor0(Class.java:3082)
    at java.lang.Class.getConstructor(Class.java:1825)
    at org.wildfly.security.WildFlyElytronProvider$ProviderService.newInstance(WildFlyElytronProvider.java:339)
{noformat}",2019/07/17 3:02 PM
ELY-1845,"Elytron wildfly-elytron-realm module contains wrong name in pom.xml (WildFly Elytron - Realm JDBC). It was probably copy-paste error from wildfly-elytron-realm-jdbc module:

{noformat}
[mkopecky@dhcp-10-40-5-141 elytron] $ cat ./auth/realm/base/pom.xml | grep name
    <name>WildFly Elytron - Realm JDBC</name>
[mkopecky@dhcp-10-40-5-141 elytron] $ cat ./auth/realm/jdbc/pom.xml | grep name
    <name>WildFly Elytron - Realm JDBC</name>
[mkopecky@dhcp-10-40-5-141 elytron] $ 
{noformat}",2019/07/15 7:07 AM
ELY-1843,"The NonceManager creates a ScheduledThreadPoolExecutor in

https://github.com/wildfly-security/wildfly-elytron/blob/master/http/digest/src/main/java/org/wildfly/security/http/digest/NonceManager.java#L49

but there is no way to shut it down, thus resulting in a thread leak when stopping an application.",2019/07/12 11:30 AM
ELY-1839,"The schemas are currently located in ""./tests/base/src/main/resources/schema"" these may be needed for testing purposes but these should be in a module somewhere exposed as public API.

This could also potentially be a new module that just contains schemas if needed.",2019/07/02 9:30 AM
ELY-1831,When manipulating an existing store the store password should only be prompted for once - it is either valid or it is not.  It is only during the creation of the store it should be prompted for twice.,2019/06/24 2:52 PM
ELY-1826,"When JBoss EAP is configured to authenticate management interfaces with LDAPS and RBAC enabled authentication works unless the security manager is enabled. When security manager is enabled the exception [1] occurs in console and exception [2] is logged in server.log

[1]
{code}
""Failed to connect to the controller: Unable to authenticate against controller at ... Authentication failed: all available authentication mechanisms failed: PLAIN: javax.security.sasl.SaslException: PLAIN: Server rejected authentication""
{code}

[2]
{code}
2019-05-15 09:30:45,434 DEBUG [org.wildfly.security] (management task-3) Could not create [class javax.naming.ldap.InitialLdapContext]. Failed to connect to LDAP server.: javax.naming.CommunicationException: myldap.mydomain:636 [Root exception is java.lang.ClassNotFoundException: org/wildfly/security/auth/realm/ldap/ThreadLocalSSLSocketFactory]
	at com.sun.jndi.ldap.Connection.<init>(Connection.java:238)
	at com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:137)
	at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1609)
	at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2749)
	at com.sun.jndi.ldap.LdapCtx.<init>(LdapCtx.java:319)
	at com.sun.jndi.ldap.LdapCtxFactory.getUsingURL(LdapCtxFactory.java:192)
	at com.sun.jndi.ldap.LdapCtxFactory.getUsingURLs(LdapCtxFactory.java:210)
	at com.sun.jndi.ldap.LdapCtxFactory.getLdapCtxInstance(LdapCtxFactory.java:153)
	at com.sun.jndi.ldap.LdapCtxFactory.getInitialContext(LdapCtxFactory.java:83)
	at org.jboss.as.naming.InitialContext.getDefaultInitCtx(InitialContext.java:116)
	at org.jboss.as.naming.InitialContext.init(InitialContext.java:101)
	at javax.naming.ldap.InitialLdapContext.<init>(InitialLdapContext.java:154)
	...
	at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:245)
	at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:217)
	at org.jboss.remoting3.remote.ServerConnectionOpenListener$AuthStepRunnable.run(ServerConnectionOpenListener.java:486)
	at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:949)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: org/wildfly/security/auth/realm/ldap/ThreadLocalSSLSocketFactory
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.sun.jndi.ldap.VersionHelper12.loadClass(VersionHelper12.java:72)
	at com.sun.jndi.ldap.Connection.createSocket(Connection.java:293)
	at com.sun.jndi.ldap.Connection.<init>(Connection.java:215)
	... 42 more
{code}

",2019/06/06 11:21 AM
ELY-1807,We presently have two ElytronMessages interfaces in the 'org.wildfly.security.auth.util' package - each of these must be in a unique package.,2019/05/10 1:02 PM
ELY-1805,NoData,2019/05/08 10:51 AM
ELY-1794,If a login FORM submission is received this should be higher priority than any previously cached identity.,2019/04/24 7:47 AM
ELY-1792,"The {{org.wildfly.security.tool.VaultCommandTest}} {{bulkConversionBasicTest}}, {{testDuplicateOptions}}, {{singleConversionBasicTest}} tests result in error on IBM Java:

{noformat}
java.lang.RuntimeException: java.lang.Exception: ELYTOOL00012: Problem converting vault (enc-dir=""target/test-classes/vault-v1/vault_data/"";keystore=""target/test-classes/vault-v1/vault-jceks.keystore"")
	at org.wildfly.security.tool.AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput(AbstractCommandTest.java:132)
	at org.wildfly.security.tool.AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput(AbstractCommandTest.java:116)
	at org.wildfly.security.tool.VaultCommandTest.bulkConversionBasicTest(VaultCommandTest.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:90)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:55)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.lang.Exception: ELYTOOL00012: Problem converting vault (enc-dir=""target/test-classes/vault-v1/vault_data/"";keystore=""target/test-classes/vault-v1/vault-jceks.keystore"")
	at org.wildfly.security.tool.VaultCommand.execute(VaultCommand.java:190)
	at org.wildfly.security.tool.AbstractCommandTest.executeCommandAndCheckStatusAndGetOutput(AbstractCommandTest.java:130)
	... 30 more
Caused by: java.io.IOException: com.sun.crypto.provider.SealedObjectForKeyProtector
	at com.ibm.crypto.provider.JceKeyStore.engineLoad(Unknown Source)
	at java.security.KeyStore.load(KeyStore.java:1456)
	at org.wildfly.security.tool.VaultCommand.getVaultCredentialStoreProtectionParameter(VaultCommand.java:402)
	at org.wildfly.security.tool.VaultCommand.convert(VaultCommand.java:290)
	at org.wildfly.security.tool.VaultCommand.execute(VaultCommand.java:183)
	... 31 more
{noformat}

Probably because the {{tool/src/test/resources/vault-v1/vault-jceks.keystore}} file is not generated by IBM Java.",2019/04/17 5:10 AM
ELY-1790,"We are hitting regression in our tests against WF master
{code}
01:48:56,706 INFO  [com.redhat.eap.qe.cli.CommandExecutor] (main) Command:[/home/hudson/hudson_workspace/workspace/eap-7.x-security-fips-matrix/d6d35f0f/openjdk-1.8.0/bin/java, -jar, /home/hudson/hudson_workspace/workspace/eap-7.x-security-fips-matrix/d6d35f0f/fips-testsuite/fips/target/dist/jboss-eap/bin/wildfly-elytron-tool.jar, credential-store, -c, -a, secret-key, -x, pass123+, -p, pass123+, -l, /home/hudson/hudson_workspace/workspace/eap-7.x-security-fips-matrix/d6d35f0f/fips-testsuite/fips/target/FipsCsElytronToolTestCase/workaround_dir, -u, keyStoreType=PKCS11;external=true;keyAlias=my-key;externalPath=/home/hudson/hudson_workspace/workspace/eap-7.x-security-fips-matrix/d6d35f0f/fips-testsuite/fips/target/FipsCsElytronToolTestCase/secure-data-file, --debug]
01:48:57,255 INFO  [com.redhat.eap.qe.cli.CommandExecutor] (main) Process output:
01:48:57,255 INFO  [com.redhat.eap.qe.cli.CommandExecutor] (main) 
01:48:57,256 ERROR [com.redhat.eap.qe.cli.CommandExecutor] (main) Process error:
01:48:57,257 ERROR [com.redhat.eap.qe.cli.CommandExecutor] (main) Exception encountered executing the command:
org.wildfly.security.credential.store.CredentialStoreException: ELY09508: Cannot write credential to store
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.store(KeyStoreCredentialStore.java:402)
	at org.wildfly.security.credential.store.CredentialStore.store(CredentialStore.java:242)
	at org.wildfly.security.credential.store.CredentialStore.store(CredentialStore.java:226)
	at org.wildfly.security.tool.CredentialStoreCommand.execute(CredentialStoreCommand.java:242)
	at org.wildfly.security.tool.ElytronTool.main(ElytronTool.java:84)
Caused by: java.security.NoSuchAlgorithmException: class configured for PasswordFactory (provider: WildFlyElytron) cannot be found.
	at java.security.Provider$Service.getImplClass(Provider.java:1649)
	at java.security.Provider$Service.newInstanceGeneric(Provider.java:1660)
	at java.security.Provider$Service.newInstance(Provider.java:1584)
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:119)
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:76)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.store(KeyStoreCredentialStore.java:276)
	... 4 more
Caused by: java.lang.ClassNotFoundException: org.wildfly.security.password.impl.PasswordFactorySpiImpl
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.security.Provider$Service.getImplClass(Provider.java:1636)
	... 9 more
{code}",2019/04/17 12:49 AM
ELY-1768,"let's enable checkstyle again to avoid ugly code, trailing spaces, unused imports, etc...",2019/03/12 2:33 PM
ELY-1707,"On 1.6.x  branch I am having trouble to test with JDK11
{{noformat}}
git checkout 1.6.x 
. java_oracle_8.sh
mvn clean test -DskipTests
. java_oracle_11.sh
mvn test -Dmaven.main.skip=true
...
Error occurred during initialization of boot layer
java.lang.module.FindException: Module java.corba not found

Results :

Tests run: 0, Failures: 0, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 17.427 s
[INFO] Finished at: 2018-11-05T09:49:17+01:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project wildfly-elytron: ExecutionException The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
[ERROR] Command was /bin/sh -c cd /home/mchoma/git-repo/wildfly-elytron && /home/mchoma/app/oracle-jdk-11+28/bin/java -javaagent:/home/mchoma/.m2/repository/org/jmockit/jmockit/1.33/jmockit-1.33.jar --add-modules java.corba,java.sql --illegal-access=permit -Djdk.attach.allowAttachSelf=true -jar /home/mchoma/git-repo/wildfly-elytron/target/surefire/surefirebooter10245887984403962786.jar /home/mchoma/git-repo/wildfly-elytron/target/surefire/surefire10250982648577178380tmp /home/mchoma/git-repo/wildfly-elytron/target/surefire/surefire_04789553250451761755tmp
...
{{noformat}}

Workaround exists. I havet to redefine {noformat}modular.jdk.args{noformat} from

{noformat}<modular.jdk.args>--add-modules java.corba,java.sql --illegal-access=permit</modular.jdk.args>{noformat}

to

{noformat}-Dmodular.jdk.args=""--add-modules java.sql --illegal-access=permit""{noformat}",2018/11/05 3:57 AM
ELY-1699,"We see this failing with ratio 1:100 with error ""ELY10038: Unexpected HTTP status code in response from ACME server ""404"": ""Not Found""""

{noformat}
org.wildfly.security.x500.cert.acme.AcmeException: ELY10038: Unexpected HTTP status code in response from ACME server ""404"": ""Not Found""
	at org.wildfly.security.x500.cert.acme.AcmeClientSpi.handleAcmeErrorResponse(AcmeClientSpi.java:907)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpi.sendGetRequest(AcmeClientSpi.java:728)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpi.getResourceUrls(AcmeClientSpi.java:183)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpi.getResourceUrl(AcmeClientSpi.java:711)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpi.revokeCertificate(AcmeClientSpi.java:639)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpiTest.revokeCertificate(AcmeClientSpiTest.java:334)
	at org.wildfly.security.x500.cert.acme.AcmeClientSpiTest.testRevokeCertificateWithReason(AcmeClientSpiTest.java:324)
{noformat}

{noformat}
00:27:53,593 INFO  (nioEventLoopGroup-3-2) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> returning response:

	{
	  ""statusCode"" : 200,
	  ""headers"" : {
	    ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	    ""Replay-Nonce"" : [ ""NT_I4byOA1qs22GwXEcNp9RNyoq4hO6JTBMh1iUK3yI"" ],
	    ""Content-Type"" : [ ""application/json"" ],
	    ""Link"" : [ ""<https://boulder:4431/terms/v7>;rel=\""terms-of-service\"""" ],
	    ""connection"" : [ ""keep-alive"" ]
	  },
	  ""body"" : ""{\n  \""id\"": 384,\n  \""key\"": {\n    \""kty\"": \""RSA\"",\n    \""n\"": \""puL-WcMYUJ2Ajdy1UsUgNzjn6ecDxiWd7NGUGq267SOLwhKjSWWMwkopfcg5VMjPJWEE38IIXyjW5nFKCqFAIf3Zlih_1SLcjgVFbibn-oMGFLZs9ggr2bjRGJsbsJQIOKmgVs2y3l5RcIyF2M-UOx4GtAUQJsYittchBLxqjs0SBjWdtpWzaX4fwTCzx48RXuZhky_mKAyKbhAYnIGdDhcVIZsff6zzEM1bpJED6OBZh6pyP-N0kOxcGmPPCHMf0MzwjnK8VrFPEaIIfQAbUC1rTauiqZX7glEnN2kYqOwl8g3nf5fbX6sUuDU15fV0cmdUthy8_GHyE2qdzjPRLw\"",\n    \""e\"": \""AQAB\""\n  },\n  \""contact\"": [\n    \""mailto:certificates@example.com\"",\n    \""mailto:admin@example.com\""\n  ],\n  \""initialIp\"": \""127.0.0.1\"",\n  \""createdAt\"": \""2018-04-23T11:10:28-04:00\"",\n  \""status\"": \""valid\""\n}\n""
	}

 for request:

	{
	  ""method"" : ""POST"",
	  ""path"" : ""/acme/acct/384"",
	  ""body"" : ""{\""protected\"":\""eyJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NDAwMS9hY21lL2FjY3QvMzg0Iiwibm9uY2UiOiJma0Q4QkRreW5mSEUxVUVTcFV2SHRDTGE0UzJXa0NJd3BYZE80N1EzdnpBIiwidXJsIjoiaHR0cDovL2xvY2FsaG9zdDo0MDAxL2FjbWUvYWNjdC8zODQifQ\"",\""payload\"":\""e30\"",\""signature\"":\""cyg9Mgmgw4KcTGB96Uz1XPflyZCXgBYWRTiuppLLBMVYBG-eZvrCvzkjqlBTXfmixpBaCPoYU9PnNg3FEYgYzut8zgOsrvcgyu7byYdxnO9LxtxFCnLYPp8xGyoRD9W3owAxcbKnwTf3rmxhSKBRCDZnGs-JuZqJc25kbK4tLNZLaPfdyBS3oaE7xzxKrz6waLCIt9_CoRlSjqc9ZY9P8syUVdkdmdMtlyZJPJNt-keteulOA2_4xZzUV0RdxswlivT3v5Zz9bDuj5JPtHx-1NHSjRhLcM2pl2wk9pvm35q4_au4DjiP5enP-x_-qn6fXJuNUsuUdv_DHjmWLYL7Vw\""}"",
	  ""headers"" : {
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ],
	    ""Content-Length"" : [ ""599"" ],
	    ""Content-Type"" : [ ""application/jose+json"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 for response action:

	{
	  ""statusCode"" : 200,
	  ""headers"" : {
	    ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	    ""Replay-Nonce"" : [ ""NT_I4byOA1qs22GwXEcNp9RNyoq4hO6JTBMh1iUK3yI"" ],
	    ""Content-Type"" : [ ""application/json"" ],
	    ""Link"" : [ ""<https://boulder:4431/terms/v7>;rel=\""terms-of-service\"""" ]
	  },
	  ""body"" : ""{\n  \""id\"": 384,\n  \""key\"": {\n    \""kty\"": \""RSA\"",\n    \""n\"": \""puL-WcMYUJ2Ajdy1UsUgNzjn6ecDxiWd7NGUGq267SOLwhKjSWWMwkopfcg5VMjPJWEE38IIXyjW5nFKCqFAIf3Zlih_1SLcjgVFbibn-oMGFLZs9ggr2bjRGJsbsJQIOKmgVs2y3l5RcIyF2M-UOx4GtAUQJsYittchBLxqjs0SBjWdtpWzaX4fwTCzx48RXuZhky_mKAyKbhAYnIGdDhcVIZsff6zzEM1bpJED6OBZh6pyP-N0kOxcGmPPCHMf0MzwjnK8VrFPEaIIfQAbUC1rTauiqZX7glEnN2kYqOwl8g3nf5fbX6sUuDU15fV0cmdUthy8_GHyE2qdzjPRLw\"",\n    \""e\"": \""AQAB\""\n  },\n  \""contact\"": [\n    \""mailto:certificates@example.com\"",\n    \""mailto:admin@example.com\""\n  ],\n  \""initialIp\"": \""127.0.0.1\"",\n  \""createdAt\"": \""2018-04-23T11:10:28-04:00\"",\n  \""status\"": \""valid\""\n}\n""
	}

00:27:53,601 INFO  (nioEventLoopGroup-3-3) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> resetting all expectations and request logs

00:27:53,618 INFO  (nioEventLoopGroup-3-4) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> creating expectation:

	{
	  ""httpRequest"" : {
	    ""method"" : ""GET"",
	    ""path"" : ""/directory""
	  },
	  ""times"" : {
	    ""remainingTimes"" : 1,
	    ""unlimited"" : false
	  },
	  ""timeToLive"" : {
	    ""unlimited"" : true
	  },
	  ""httpResponse"" : {
	    ""headers"" : {
	      ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	      ""Content-Type"" : [ ""application/json"" ]
	    },
	    ""body"" : ""{\n  \""FpVd7yM-nVU\"": \""https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\"",\n  \""keyChange\"": \""http://localhost:4001/acme/key-change\"",\n  \""meta\"": {\n    \""caaIdentities\"": [\n      \""happy-hacker-ca.invalid\""\n    ],\n    \""termsOfService\"": \""https://boulder:4431/terms/v7\"",\n    \""website\"": \""https://github.com/letsencrypt/boulder\""\n  },\n  \""newAccount\"": \""http://localhost:4001/acme/new-acct\"",\n  \""newNonce\"": \""http://localhost:4001/acme/new-nonce\"",\n  \""newOrder\"": \""http://localhost:4001/acme/new-order\"",\n  \""revokeCert\"": \""http://localhost:4001/acme/revoke-cert\""\n}\n""
	  }
	}

00:27:53,634 INFO  (nioEventLoopGroup-3-1) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> creating expectation:

	{
	  ""httpRequest"" : {
	    ""method"" : ""HEAD"",
	    ""path"" : ""/acme/new-nonce""
	  },
	  ""times"" : {
	    ""remainingTimes"" : 1,
	    ""unlimited"" : false
	  },
	  ""timeToLive"" : {
	    ""unlimited"" : true
	  },
	  ""httpResponse"" : {
	    ""statusCode"" : 204,
	    ""headers"" : {
	      ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	      ""Replay-Nonce"" : [ ""-mlJhcox_6FFuDwNhcmL06FWD6uL7K7lam9Jel-MqqM"" ]
	    }
	  }
	}

00:27:53,656 INFO  (nioEventLoopGroup-3-2) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> creating expectation:

	{
	  ""httpRequest"" : {
	    ""method"" : ""POST"",
	    ""path"" : ""/acme/new-acct"",
	    ""body"" : ""{\""protected\"":\""eyJhbGciOiJSUzI1NiIsImp3ayI6eyJlIjoiQVFBQiIsImt0eSI6IlJTQSIsIm4iOiJwdUwtV2NNWVVKMkFqZHkxVXNVZ056am42ZWNEeGlXZDdOR1VHcTI2N1NPTHdoS2pTV1dNd2tvcGZjZzVWTWpQSldFRTM4SUlYeWpXNW5GS0NxRkFJZjNabGloXzFTTGNqZ1ZGYmlibi1vTUdGTFpzOWdncjJialJHSnNic0pRSU9LbWdWczJ5M2w1UmNJeUYyTS1VT3g0R3RBVVFKc1lpdHRjaEJMeHFqczBTQmpXZHRwV3phWDRmd1RDeng0OFJYdVpoa3lfbUtBeUtiaEFZbklHZERoY1ZJWnNmZjZ6ekVNMWJwSkVENk9CWmg2cHlQLU4wa094Y0dtUFBDSE1mME16d2puSzhWckZQRWFJSWZRQWJVQzFyVGF1aXFaWDdnbEVuTjJrWXFPd2w4ZzNuZjVmYlg2c1V1RFUxNWZWMGNtZFV0aHk4X0dIeUUycWR6alBSTHcifSwibm9uY2UiOiItbWxKaGNveF82RkZ1RHdOaGNtTDA2RldENnVMN0s3bGFtOUplbC1NcXFNIiwidXJsIjoiaHR0cDovL2xvY2FsaG9zdDo0MDAxL2FjbWUvbmV3LWFjY3QifQ\"",\""payload\"":\""eyJvbmx5UmV0dXJuRXhpc3RpbmciOnRydWV9\"",\""signature\"":\""lztzTXBmbrxXGMspfEetHDGKdZ2NrpQTioysqHIa9aaL5dy8bPmKZ_Vmz68-xnUJcjK-5FMCn5vtYEKAJlJ7W3wVYzthcVuYlv-b6FNw3IYsdSSHMr5RLm0rSt9EwYd-BI4bCoT7dioYpCMHzTrd-3X8QjDS4fx1o6D-po_Hwkt4PWx5Yoo9ExlykM5cHOQlCQENPk3Pn0M4_8XkfH1QTvVTIm4A4lbo_Eko1aU9PgvWbNsqkEhRzH7rBb5FUlxFgRoSHuTJwn6uJL-H0cfYQUn-J5JyD5C-P8su3M7NoAXCj0vy_84TziHMxe1C8fI-A64M6CtlL9qGm5MwPgv8Gg\""}""
	  },
	  ""times"" : {
	    ""remainingTimes"" : 1,
	    ""unlimited"" : false
	  },
	  ""timeToLive"" : {
	    ""unlimited"" : true
	  },
	  ""httpResponse"" : {
	    ""statusCode"" : 200,
	    ""headers"" : {
	      ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	      ""Replay-Nonce"" : [ ""zbQR7CL_GSx0oydZ0AVoNEh7omY_XONdWFpYOfeFVQc"" ],
	      ""Link"" : [ ""<https://boulder:4431/terms/v7>;rel=\""terms-of-service\"""" ],
	      ""Location"" : [ ""http://localhost:4001/acme/acct/384"" ]
	    }
	  }
	}

00:27:53,700 INFO  (nioEventLoopGroup-3-3) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> creating expectation:

	{
	  ""httpRequest"" : {
	    ""method"" : ""POST"",
	    ""path"" : ""/acme/revoke-cert"",
	    ""body"" : ""{\""protected\"":\""eyJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NDAwMS9hY21lL2FjY3QvMzg0Iiwibm9uY2UiOiJ6YlFSN0NMX0dTeDBveWRaMEFWb05FaDdvbVlfWE9OZFdGcFlPZmVGVlFjIiwidXJsIjoiaHR0cDovL2xvY2FsaG9zdDo0MDAxL2FjbWUvcmV2b2tlLWNlcnQifQ\"",\""payload\"":\""eyJjZXJ0aWZpY2F0ZSI6Ik1JSUZaekNDQkUtZ0F3SUJBZ0lUQVBfNDBNVEh3LWw1M3lpOWVOMnptclFkX1RBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSb01uQndlU0JvTW1OclpYSWdabUZyWlNCRFFUQWVGdzB4T0RBME16QXhPRFF4TURoYUZ3MHhPREEzTWpreE9EUXhNRGhhTUI0eEhEQWFCZ05WQkFNVEUyaHRlSFJ1ZFd0c2JHaDRlR3hpYUM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDWUpyX3BaQkNTeV9LZHdLd1c0TDdyNnhWYVB1R0dna1JKY3lnTE5EWUhNd2JObm9zM3FnckpEMk0tRW5HOWlrSmlIRzd5VUtfVHRGNWZrVFA3UEROUzNlallkVTl1RTFHeTM1VTcyVGVzbVpzSC1aNy11NHJsc1JxdzVXcURDUjBGeW1PR0xuUEpVa3hGN29PRlFHc1lwZ3h3T1JVV0g5TlBEUzZTT3RTWF9XbUJ0S015VGM5QW9GRjBlRHM3NlBmOWl5eXZONjh4ejF6Y3g5aENnbDB5ZVNXTFhUNHV1SUJibHIxNXZhdzdCVVFNMnBGdE9aNGFIcWRiTDUtQ05TOWVxNUk2WTRpMW1yQVBEWklkN2xMOHAxY2tQLXI0dlh0a0VVdmxEaXFNMzdiRlB3enZDMWVVeGtOanNTdnQ0OGh4TTBtMU82cHZhTVB2Qm1CWGxHOUZBZ01CQUFHamdnS2JNSUlDbHpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQl93UUNNQUF3SFFZRFZSME9CQllFRkl3VXBFcGpUbmhUTl9XN3JlckkwT3V2alVMck1COEdBMVVkSXdRWU1CYUFGUHQ0VHhMNVlCV0RMSjhYZnpRWnN5NDI2a0dKTUdRR0NDc0dBUVVGQndFQkJGZ3dWakFpQmdnckJnRUZCUWN3QVlZV2FIUjBjRG92THpFeU55NHdMakF1TVRvME1EQXlMekF3QmdnckJnRUZCUWN3QW9Za2FIUjBjRG92TDJKdmRXeGtaWEk2TkRRek1DOWhZMjFsTDJsemMzVmxjaTFqWlhKME1CNEdBMVVkRVFRWE1CV0NFMmh0ZUhSdWRXdHNiR2g0ZUd4aWFDNWpiMjB3SndZRFZSMGZCQ0F3SGpBY29CcWdHSVlXYUhSMGNEb3ZMMlY0WVcxd2JHVXVZMjl0TDJOeWJEQmhCZ05WSFNBRVdqQllNQWdHQm1lQkRBRUNBVEJNQmdNcUF3UXdSVEFpQmdnckJnRUZCUWNDQVJZV2FIUjBjRG92TDJWNFlXMXdiR1V1WTI5dEwyTndjekFmQmdnckJnRUZCUWNDQWpBVERCRkVieUJYYUdGMElGUm9iM1VnVjJsc2REQ0NBUVFHQ2lzR0FRUUIxbmtDQkFJRWdmVUVnZklBOEFCMUFOMlpOUHlsNXlTQXlWWm9mWUUwbVFoSnNrbjN0V25ZeDd5clAxekI4MjVrQUFBQll4Z1NzYVFBQUFRREFFWXdSQUlnTUFGb19yNFl0aWNfc1lpVmxpaE10ZGZSZDFnclNYSUl1U2pwQzNZT1NOZ0NJRzdMWTlkMGl2cVV2czJ3Y0Z1Q0tNZkFsdDFNWTNvcjR6cGJlelFsNWpvREFIY0FGdWhwd2RHVjZ0ZkQtSmNhNF9CMkFmZU00YmFkTWFoU0dMYURmekdvRlFnQUFBRmpHQkt4cFFBQUJBTUFTREJHQWlFQTRYSmZVd3JVbkxWUGxRbF9IVVFxakRUVkFRdDJIN29BdXNrWUhiT3EtYTRDSVFEcGZwa3pNbkxudlNxay02QU5ZRWRKb0p5Q0M3M1ZwdHo0WG1MVnJMNHNtekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBc1VEMUJ6M2NWQzA4NXF4a2VkYzJqd3FUSEk0UF9OaERrQVFmSGhrQ0VlaFoyVTVmRE1YWXFwZDh0UUluZUdoZU1ZTkQ4OWRFQXYyXzI5SXNGXzhKNC1uSURrLU1XQkFsQm43VUtES2xDbEdza0RDenJPajF6clJwOUtscTNLaElFSkUzT01nTGIyM3pNbERLeWRIcXA5OGtTc25hQmFoS1VlV3l1WXcxdmNwemZ3TjE0UG9xMW1jRnJWUFAxcWRBNG1NMTVFVHgyV0tZdTFWaWIySVVESmx2STNYbUg5SFR5ODZYRTRMNXFTd20xalJFbzZ5a3FDTmhSMHJMeHhHeXhDRldWVXVLNG9SaFR3YmF0VzEzR3JvSlhGdGNQeVVuRGJkSU9iRzIwLV9DME9ZMk9Rc1pWQTNWTC1IQ2c3ckt6QnZOSTNlaVkzVVNMYVBMM1I0dWhnIiwicmVhc29uIjoxMH0\"",\""signature\"":\""eP8PR2UEdU-HW7hM0XyeDWuPADRh_XKwmNM8QmowJzn4WLYkp-pHbnpGnID0aRTAjFQsvvPmkWIrNN9TMCgwfr5EqP7xoU1uGS3J6uNydZI4TyjGZaJ9v1I9sqb5Zw_Q5cht-vSMnxznmuEu3K_6jrDLq9x-U22sNFyA_aoqu5odPNJl_l2D2ZHaPbO19NjOfc2-mgBKR4y850oEzz8vKsFcPjtASFMoC3Ulyc2kDHuUeH9HL3W4DqvD0ygVhcbh5R9NRzwefj1h2YSD_8QJj20DprPSReJ_LxZTZzy3-oB3WWibLUaVS6xr0ZbMCPQSp_rTSRWpekWoM7vm_XwdCQ\""}""
	  },
	  ""times"" : {
	    ""remainingTimes"" : 1,
	    ""unlimited"" : false
	  },
	  ""timeToLive"" : {
	    ""unlimited"" : true
	  },
	  ""httpResponse"" : {
	    ""statusCode"" : 200,
	    ""headers"" : {
	      ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	      ""Replay-Nonce"" : [ ""q4qaFhcWgftkiRaaeEZskz_fp9ue2OJGRDW3mYBGCNk"" ]
	    }
	  }
	}

00:27:53,712 INFO  (nioEventLoopGroup-3-2) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> request:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory"",
	  ""headers"" : {
	    ""content-length"" : [ ""0"" ],
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 matched expectation:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory""
	}

00:27:53,713 INFO  (nioEventLoopGroup-3-2) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> returning response:

	{
	  ""headers"" : {
	    ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	    ""Content-Type"" : [ ""application/json"" ],
	    ""connection"" : [ ""keep-alive"" ]
	  },
	  ""body"" : ""{\n  \""FpVd7yM-nVU\"": \""https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\"",\n  \""keyChange\"": \""http://localhost:4001/acme/key-change\"",\n  \""meta\"": {\n    \""caaIdentities\"": [\n      \""happy-hacker-ca.invalid\""\n    ],\n    \""termsOfService\"": \""https://boulder:4431/terms/v7\"",\n    \""website\"": \""https://github.com/letsencrypt/boulder\""\n  },\n  \""newAccount\"": \""http://localhost:4001/acme/new-acct\"",\n  \""newNonce\"": \""http://localhost:4001/acme/new-nonce\"",\n  \""newOrder\"": \""http://localhost:4001/acme/new-order\"",\n  \""revokeCert\"": \""http://localhost:4001/acme/revoke-cert\""\n}\n""
	}

 for request:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory"",
	  ""headers"" : {
	    ""content-length"" : [ ""0"" ],
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 for response action:

	{
	  ""headers"" : {
	    ""Cache-Control"" : [ ""public, max-age=0, no-cache"" ],
	    ""Content-Type"" : [ ""application/json"" ]
	  },
	  ""body"" : ""{\n  \""FpVd7yM-nVU\"": \""https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417\"",\n  \""keyChange\"": \""http://localhost:4001/acme/key-change\"",\n  \""meta\"": {\n    \""caaIdentities\"": [\n      \""happy-hacker-ca.invalid\""\n    ],\n    \""termsOfService\"": \""https://boulder:4431/terms/v7\"",\n    \""website\"": \""https://github.com/letsencrypt/boulder\""\n  },\n  \""newAccount\"": \""http://localhost:4001/acme/new-acct\"",\n  \""newNonce\"": \""http://localhost:4001/acme/new-nonce\"",\n  \""newOrder\"": \""http://localhost:4001/acme/new-order\"",\n  \""revokeCert\"": \""http://localhost:4001/acme/revoke-cert\""\n}\n""
	}

00:27:53,714 INFO  (nioEventLoopGroup-3-4) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> request:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory"",
	  ""headers"" : {
	    ""content-length"" : [ ""0"" ],
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 did not match expectation:

	{
	  ""method"" : ""HEAD"",
	  ""path"" : ""/acme/new-nonce""
	}

 because:

	method matches = false
	path matches = false
	query string parameters match = true
	body matches = true
	headers match = true
	cookies match = true
	keep-alive matches = true
	ssl matches = true

00:27:53,715 INFO  (nioEventLoopGroup-3-4) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> request:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory"",
	  ""headers"" : {
	    ""content-length"" : [ ""0"" ],
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 did not match expectation:

	{
	  ""method"" : ""POST"",
	  ""path"" : ""/acme/new-acct"",
	  ""body"" : ""{\""protected\"":\""eyJhbGciOiJSUzI1NiIsImp3ayI6eyJlIjoiQVFBQiIsImt0eSI6IlJTQSIsIm4iOiJwdUwtV2NNWVVKMkFqZHkxVXNVZ056am42ZWNEeGlXZDdOR1VHcTI2N1NPTHdoS2pTV1dNd2tvcGZjZzVWTWpQSldFRTM4SUlYeWpXNW5GS0NxRkFJZjNabGloXzFTTGNqZ1ZGYmlibi1vTUdGTFpzOWdncjJialJHSnNic0pRSU9LbWdWczJ5M2w1UmNJeUYyTS1VT3g0R3RBVVFKc1lpdHRjaEJMeHFqczBTQmpXZHRwV3phWDRmd1RDeng0OFJYdVpoa3lfbUtBeUtiaEFZbklHZERoY1ZJWnNmZjZ6ekVNMWJwSkVENk9CWmg2cHlQLU4wa094Y0dtUFBDSE1mME16d2puSzhWckZQRWFJSWZRQWJVQzFyVGF1aXFaWDdnbEVuTjJrWXFPd2w4ZzNuZjVmYlg2c1V1RFUxNWZWMGNtZFV0aHk4X0dIeUUycWR6alBSTHcifSwibm9uY2UiOiItbWxKaGNveF82RkZ1RHdOaGNtTDA2RldENnVMN0s3bGFtOUplbC1NcXFNIiwidXJsIjoiaHR0cDovL2xvY2FsaG9zdDo0MDAxL2FjbWUvbmV3LWFjY3QifQ\"",\""payload\"":\""eyJvbmx5UmV0dXJuRXhpc3RpbmciOnRydWV9\"",\""signature\"":\""lztzTXBmbrxXGMspfEetHDGKdZ2NrpQTioysqHIa9aaL5dy8bPmKZ_Vmz68-xnUJcjK-5FMCn5vtYEKAJlJ7W3wVYzthcVuYlv-b6FNw3IYsdSSHMr5RLm0rSt9EwYd-BI4bCoT7dioYpCMHzTrd-3X8QjDS4fx1o6D-po_Hwkt4PWx5Yoo9ExlykM5cHOQlCQENPk3Pn0M4_8XkfH1QTvVTIm4A4lbo_Eko1aU9PgvWbNsqkEhRzH7rBb5FUlxFgRoSHuTJwn6uJL-H0cfYQUn-J5JyD5C-P8su3M7NoAXCj0vy_84TziHMxe1C8fI-A64M6CtlL9qGm5MwPgv8Gg\""}""
	}

 because:

	method matches = false
	path matches = false
	query string parameters match = true
	body matches = false
	headers match = true
	cookies match = true
	keep-alive matches = true
	ssl matches = true

00:27:53,716 INFO  (nioEventLoopGroup-3-4) [org.mockserver.mock.HttpStateHandler] <LoggingFormatter.java:34> request:

	{
	  ""method"" : ""GET"",
	  ""path"" : ""/directory"",
	  ""headers"" : {
	    ""content-length"" : [ ""0"" ],
	    ""Accept"" : [ ""text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2"" ],
	    ""User-Agent"" : [ ""Elytron ACME Client/1.7.0.CR2"" ],
	    ""Connection"" : [ ""keep-alive"" ],
	    ""Host"" : [ ""localhost:4001"" ],
	    ""Accept-Language"" : [ ""en-US"" ]
	  },
	  ""keepAlive"" : true,
	  ""secure"" : false
	}

 did not match expectation:

	{
	  ""method"" : ""POST"",
	  ""path"" : ""/acme/revoke-cert"",
	  ""body"" : ""{\""protected\"":\""eyJhbGciOiJSUzI1NiIsImtpZCI6Imh0dHA6Ly9sb2NhbGhvc3Q6NDAwMS9hY21lL2FjY3QvMzg0Iiwibm9uY2UiOiJ6YlFSN0NMX0dTeDBveWRaMEFWb05FaDdvbVlfWE9OZFdGcFlPZmVGVlFjIiwidXJsIjoiaHR0cDovL2xvY2FsaG9zdDo0MDAxL2FjbWUvcmV2b2tlLWNlcnQifQ\"",\""payload\"":\""eyJjZXJ0aWZpY2F0ZSI6Ik1JSUZaekNDQkUtZ0F3SUJBZ0lUQVBfNDBNVEh3LWw1M3lpOWVOMnptclFkX1RBTkJna3Foa2lHOXcwQkFRc0ZBREFmTVIwd0d3WURWUVFEREJSb01uQndlU0JvTW1OclpYSWdabUZyWlNCRFFUQWVGdzB4T0RBME16QXhPRFF4TURoYUZ3MHhPREEzTWpreE9EUXhNRGhhTUI0eEhEQWFCZ05WQkFNVEUyaHRlSFJ1ZFd0c2JHaDRlR3hpYUM1amIyMHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDWUpyX3BaQkNTeV9LZHdLd1c0TDdyNnhWYVB1R0dna1JKY3lnTE5EWUhNd2JObm9zM3FnckpEMk0tRW5HOWlrSmlIRzd5VUtfVHRGNWZrVFA3UEROUzNlallkVTl1RTFHeTM1VTcyVGVzbVpzSC1aNy11NHJsc1JxdzVXcURDUjBGeW1PR0xuUEpVa3hGN29PRlFHc1lwZ3h3T1JVV0g5TlBEUzZTT3RTWF9XbUJ0S015VGM5QW9GRjBlRHM3NlBmOWl5eXZONjh4ejF6Y3g5aENnbDB5ZVNXTFhUNHV1SUJibHIxNXZhdzdCVVFNMnBGdE9aNGFIcWRiTDUtQ05TOWVxNUk2WTRpMW1yQVBEWklkN2xMOHAxY2tQLXI0dlh0a0VVdmxEaXFNMzdiRlB3enZDMWVVeGtOanNTdnQ0OGh4TTBtMU82cHZhTVB2Qm1CWGxHOUZBZ01CQUFHamdnS2JNSUlDbHpBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQl93UUNNQUF3SFFZRFZSME9CQllFRkl3VXBFcGpUbmhUTl9XN3JlckkwT3V2alVMck1COEdBMVVkSXdRWU1CYUFGUHQ0VHhMNVlCV0RMSjhYZnpRWnN5NDI2a0dKTUdRR0NDc0dBUVVGQndFQkJGZ3dWakFpQmdnckJnRUZCUWN3QVlZV2FIUjBjRG92THpFeU55NHdMakF1TVRvME1EQXlMekF3QmdnckJnRUZCUWN3QW9Za2FIUjBjRG92TDJKdmRXeGtaWEk2TkRRek1DOWhZMjFsTDJsemMzVmxjaTFqWlhKME1CNEdBMVVkRVFRWE1CV0NFMmh0ZUhSdWRXdHNiR2g0ZUd4aWFDNWpiMjB3SndZRFZSMGZCQ0F3SGpBY29CcWdHSVlXYUhSMGNEb3ZMMlY0WVcxd2JHVXVZMjl0TDJOeWJEQmhCZ05WSFNBRVdqQllNQWdHQm1lQkRBRUNBVEJNQmdNcUF3UXdSVEFpQmdnckJnRUZCUWNDQVJZV2FIUjBjRG92TDJWNFlXMXdiR1V1WTI5dEwyTndjekFmQmdnckJnRUZCUWNDQWpBVERCRkVieUJYYUdGMElGUm9iM1VnVjJsc2REQ0NBUVFHQ2lzR0FRUUIxbmtDQkFJRWdmVUVnZklBOEFCMUFOMlpOUHlsNXlTQXlWWm9mWUUwbVFoSnNrbjN0V25ZeDd5clAxekI4MjVrQUFBQll4Z1NzYVFBQUFRREFFWXdSQUlnTUFGb19yNFl0aWNfc1lpVmxpaE10ZGZSZDFnclNYSUl1U2pwQzNZT1NOZ0NJRzdMWTlkMGl2cVV2czJ3Y0Z1Q0tNZkFsdDFNWTNvcjR6cGJlelFsNWpvREFIY0FGdWhwd2RHVjZ0ZkQtSmNhNF9CMkFmZU00YmFkTWFoU0dMYURmekdvRlFnQUFBRmpHQkt4cFFBQUJBTUFTREJHQWlFQTRYSmZVd3JVbkxWUGxRbF9IVVFxakRUVkFRdDJIN29BdXNrWUhiT3EtYTRDSVFEcGZwa3pNbkxudlNxay02QU5ZRWRKb0p5Q0M3M1ZwdHo0WG1MVnJMNHNtekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBc1VEMUJ6M2NWQzA4NXF4a2VkYzJqd3FUSEk0UF9OaERrQVFmSGhrQ0VlaFoyVTVmRE1YWXFwZDh0UUluZUdoZU1ZTkQ4OWRFQXYyXzI5SXNGXzhKNC1uSURrLU1XQkFsQm43VUtES2xDbEdza0RDenJPajF6clJwOUtscTNLaElFSkUzT01nTGIyM3pNbERLeWRIcXA5OGtTc25hQmFoS1VlV3l1WXcxdmNwemZ3TjE0UG9xMW1jRnJWUFAxcWRBNG1NMTVFVHgyV0tZdTFWaWIySVVESmx2STNYbUg5SFR5ODZYRTRMNXFTd20xalJFbzZ5a3FDTmhSMHJMeHhHeXhDRldWVXVLNG9SaFR3YmF0VzEzR3JvSlhGdGNQeVVuRGJkSU9iRzIwLV9DME9ZMk9Rc1pWQTNWTC1IQ2c3ckt6QnZOSTNlaVkzVVNMYVBMM1I0dWhnIiwicmVhc29uIjoxMH0\"",\""signature\"":\""eP8PR2UEdU-HW7hM0XyeDWuPADRh_XKwmNM8QmowJzn4WLYkp-pHbnpGnID0aRTAjFQsvvPmkWIrNN9TMCgwfr5EqP7xoU1uGS3J6uNydZI4TyjGZaJ9v1I9sqb5Zw_Q5cht-vSMnxznmuEu3K_6jrDLq9x-U22sNFyA_aoqu5odPNJl_l2D2ZHaPbO19NjOfc2-mgBKR4y850oEzz8vKsFcPjtASFMoC3Ulyc2kDHuUeH9HL3W4DqvD0ygVhcbh5R9NRzwefj1h2YSD_8QJj20DprPSReJ_LxZTZzy3-oB3WWibLUaVS6xr0ZbMCPQSp_rTSRWpekWoM7vm_XwdCQ\""}""
	}

 because:

	method matches = false
	path matches = false
	query string parameters match = true
	body matches = false
	headers match = true
	cookies match = true
	keep-alive matches = true
	ssl matches = true

{noformat}
",2018/10/15 2:35 AM
ELY-1695,"When running the testsuite with multiple profiles (default-test,java8-test,java9-test), the following error happens for the second and third (java8-test and java8-test) profiles:
{code}
Running org.wildfly.security.ldap.LdapTestSuite
Tests run: 63, Failures: 2, Errors: 0, Skipped: 0, Time elapsed: 19.83 sec <<< FAILURE! - in org.wildfly.security.ldap.LdapTestSuite
testX509Auth(org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild)  Time elapsed: 0.121 sec  <<< FAILURE!
java.lang.AssertionError
        at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.testX509AuthInternal(X509EvidenceVerificationSuiteChild.java:80)
        at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.testX509Auth(X509EvidenceVerificationSuiteChild.java:49)
        at org.wildfly.security.ldap.DirContextFactoryRule$1.evaluate(DirContextFactoryRule.java:218)

testX509AuthBinary(org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild)  Time elapsed: 0.116 sec  <<< FAILURE!
java.lang.AssertionError
        at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.testX509AuthInternal(X509EvidenceVerificationSuiteChild.java:80)
        at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.testX509AuthBinary(X509EvidenceVerificationSuiteChild.java:54)
        at org.wildfly.security.ldap.DirContextFactoryRule$1.evaluate(DirContextFactoryRule.java:218)


Results :

Failed tests: 
  X509EvidenceVerificationSuiteChild.testX509Auth:49->testX509AuthInternal:80
  X509EvidenceVerificationSuiteChild.testX509AuthBinary:54->testX509AuthInternal:80
{code}",2018/10/10 2:43 PM
ELY-1692,"Elytron enforces JDK9+ jdk, but is not possible to run tests with jdk 8.
{noformat}
java -version
java version ""11"" 2018-09-25
Java(TM) SE Runtime Environment 18.9 (build 11+28)
Java HotSpot(TM) 64-Bit Server VM 18.9 (build 11+28, mixed mode)

mvn clean test -Dtest=MechanismDatabaseTest -Dmaven.test.redirectTestOutputToFile=true -Djava8.home=/home/mchoma/app/jdk8u172-b11 -X
...
[DEBUG] Forking command line: /bin/sh -c cd /home/mchoma/git-repo/wildfly-elytron && /home/mchoma/app/jdk-11+28/bin/java
{noformat}

Also in surefire reports java8 folder there is java 11 logged 
{noformat}
    <property name=""java.vendor"" value=""Oracle Corporation""/>
    <property name=""java.vm.info"" value=""mixed mode""/>
    <property name=""java.vm.version"" value=""11+28""/>
{noformat}

Setting to blocker as currently I dont see way how to run tests on jdk8.",2018/10/09 3:36 AM
ELY-1680,"{code}
[ERROR] testGetCertificateChainBinary(org.wildfly.security.ldap.KeyStoreSuiteChild)  Time elapsed: 0.057 s  <<< FAILURE!
org.junit.ComparisonFailure: expected:<CN=[firefly_binary], OU=Elytron, O=Elyt...> but was:<CN=[localhost], OU=Elytron, O=Elyt...>
	at org.wildfly.security.ldap.KeyStoreSuiteChild.testGetCertificateChainBinary(KeyStoreSuiteChild.java:136)
	at org.wildfly.security.ldap.DirContextFactoryRule$1.evaluate(DirContextFactoryRule.java:218)
{code}

If I switch order of certificates in chain, then test passes.
{code}
diff --git a/src/test/java/org/wildfly/security/ldap/KeyStoreSuiteChild.java b/src/test/java/org/wildfly/security/ldap/KeyStoreSuiteChild.java
index d8095867a..cda635beb 100644
--- a/src/test/java/org/wildfly/security/ldap/KeyStoreSuiteChild.java
+++ b/src/test/java/org/wildfly/security/ldap/KeyStoreSuiteChild.java
@@ -133,8 +133,8 @@ public class KeyStoreSuiteChild {
         Certificate[] chain = keyStore.getCertificateChain(""firefly_binary"");
         Assert.assertNotNull(chain);
         Assert.assertEquals(2, chain.length);
-        Assert.assertEquals(""CN=firefly_binary, OU=Elytron, O=Elytron, L=Elytron, ST=Elytron, C=UK"", ((X509Certificate)chain[0]).getSubjectDN().toString());
-        Assert.assertEquals(""CN=localhost, OU=Elytron, O=Elytron, L=Elytron, ST=Elytron, C=UK"", ((X509Certificate)chain[1]).getSubjectDN().toString());
+        Assert.assertEquals(""CN=firefly_binary, OU=Elytron, O=Elytron, L=Elytron, ST=Elytron, C=UK"", ((X509Certificate)chain[1]).getSubjectDN().toString());
+        Assert.assertEquals(""CN=localhost, OU=Elytron, O=Elytron, L=Elytron, ST=Elytron, C=UK"", ((X509Certificate)chain[0]).getSubjectDN().toString());
     }
{code}

-For some reason I want able to debug code with -Dmaven.surefire.debug (Breakpoint was never hit) to find out which calls switch the order.-
It takes long (5min) for debugger to attach to code.",2018/09/25 5:42 AM
ELY-1677,"*Issue*
Currently, Elytron will send back a 403 Response when an invalid bearer token is sent. For the built-in JWT validator (the token validation we are using), this [includes a few checks like signature, expiration time, audience and issuer|https://github.com/wildfly-security/wildfly-elytron/blob/1.7.0.CR1/src/main/java/org/wildfly/security/auth/realm/token/validator/JwtValidator.java#L94].

It seems that the current [BearerTokenAuthenticationMechanism|https://github.com/wildfly-security/wildfly-elytron/blob/1.7.0.CR1/src/main/java/org/wildfly/security/http/impl/BearerTokenAuthenticationMechanism.java#L108] does not differentiate between failed authentication and failed authorization, returning a 403 in both cases. This produces conflicting and erroneous results. Did I fail to authenticate (say, expired JWT) or did I authenticate but do not have access to the resource in question?

This would also be closer in line with [RFC 6750 (The OAuth 2.0 Authorization Framework: Bearer Token Usage)|https://tools.ietf.org/html/rfc6750#section-3] which includes an example of an expired (invalid) token.

{quote}
 And in response to a protected resource request with an
   authentication attempt using an expired access token:

     HTTP/1.1 401 Unauthorized
     WWW-Authenticate: Bearer realm=""example"",
                       error=""invalid_token"",
                       error_description=""The access token expired""
{quote}


*Potential Solution*
Perhaps this could be ameliorated by something akin to the following change in BearerTokenAuthenticationMechanism::evaluateRequest by differentiating between failure to authorize and failure to authenticate the token. Merely a quick, unvetted example as I haven't had enough time to dig in to the source.

{code}
if (verifyCallback.isVerified()) {
	AuthorizeCallback authorizeCallback = new AuthorizeCallback(null, null);

	handleCallback(authorizeCallback);

	if (authorizeCallback.isAuthorized()) {
	    httpBearer.debugf(""Token authentication successful."");
	    handleCallback(new IdentityCredentialCallback(new BearerTokenCredential(tokenEvidence.getToken()), true));
	    handleCallback(AuthenticationCompleteCallback.SUCCEEDED);
	    request.authenticationComplete();
	    return;
	}
	else{
		httpBearer.debugf(""Token authorization failed message."");
		request.authenticationFailed(""Some token unauthorized message"", response -> response.setStatusCode(FORBIDDEN));
		return;
	}  
}
httpBearer.debugf(""Token authentication failed."");
request.authenticationFailed(""Invalid bearer token"", response -> response.setStatusCode(UNAUTHORIZED));
return;
{code}",2018/09/24 1:39 PM
ELY-1674,"AFAICT the ECHDE_PSK suites use PSK authentication, not ECDHE key authentication.",2018/09/20 3:23 PM
ELY-1673,We should exclude the list of draft ciphers from the mechanism database.,2018/09/20 3:22 PM
ELY-1672,"AEAD is not a digest (PRF) function, it's a description of a message authentication strategy.  We should only use the actual digest names in the mechanism database.",2018/09/20 3:21 PM
ELY-1671,"JDK 10 Error:
{noformat}
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 1.854 s
[INFO] Finished at: 2018-09-19T13:50:48+01:00
[INFO] Final Memory: 26M/108M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.0.0-M1:javadoc (default-cli) on project wildfly-elytron: An error has occurred in Javadoc report generation:
[ERROR] Exit code: 1 - javadoc: warning - The old Doclet and Taglet APIs in the packages
[ERROR] com.sun.javadoc, com.sun.tools.doclets and their implementations
[ERROR] are planned to be removed in a future JDK release. These
[ERROR] components have been superseded by the new APIs in jdk.javadoc.doclet.
[ERROR] Users are strongly recommended to migrate to the new APIs.
[ERROR] javadoc: error - invalid flag: -Xdoclint:none
[ERROR] 
[ERROR] Command line was: /home/darranl/applications/java/jdk-10.0.2/bin/javadoc @options @argfile
[ERROR] 
[ERROR] Refer to the generated Javadoc files in '/home/darranl/src/community/wildfly-elytron/target/site/apidocs/api-javadoc' dir.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
{noformat}

JDK 11 Error:
{noformat}
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 5.908 s
[INFO] Finished at: 2018-10-01T10:19:12-04:00
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.0.0-M1:javadoc (default-cli) on project wildfly-elytron: An error has occurred in Javadoc report generation: 
[ERROR] Exit code: 1 - /home/jucook/Documents/WildFly/WildFly-Elytron/wildfly-elytron/src/main/java/org/wildfly/security/manager/JDKSpecific.java:20: error: cannot find symbol
[ERROR] import sun.reflect.Reflection;
[ERROR]                   ^
[ERROR]   symbol:   class Reflection
[ERROR]   location: package sun.reflect
[ERROR] 
[ERROR] Command line was: /home/jucook/JDKs/Java11/OpenJDK/openjdk-11-ea+26_linux-x64_bin/jdk-11/bin/javadoc @options @argfile
[ERROR] 
[ERROR] Refer to the generated Javadoc files in '/home/jucook/Documents/WildFly/WildFly-Elytron/wildfly-elytron/target/site/apidocs/api-javadoc' dir.
[ERROR] 
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
{noformat}",2018/09/19 8:50 AM
ELY-1664,"Check Trace logging of ssl context creation. How I read code logging should apply after throw expression. That wouldn never happen. Also there is another throw of exception with SSLUtils::throwIt.
{code:java|title=org.wildfly.security.ssl.SSLUtils}
        // now return a factory that will return the best match is can create.
        final String[] supportedProtocols = protocolSelector.evaluate(preferredProviderByAlgorithm.keySet().toArray(NO_STRINGS));
        if (supportedProtocols.length > 0) {
            return () -> {
                for (String protocol : supportedProtocols) {
                    List<Provider> providerList = preferredProviderByAlgorithm.getOrDefault(protocol, Collections.emptyList());
                        for (Provider provider : providerList) {
                            try {
                                return SSLContext.getInstance(protocol, provider);
                            } catch (NoSuchAlgorithmException ignored) {}
                        }
                }
                throw ElytronMessages.log.noAlgorithmForSslProtocol();
            };
        }

        if (log.isTraceEnabled()) {
            log.tracef(""No %s provided by providers in %s: %s"", SERVICE_TYPE, SSLUtils.class.getSimpleName(), Arrays.toString(providerSupplier.get()));
        }

        return SSLUtils::throwIt;
{code}",2018/09/11 7:03 AM
ELY-1663,"Rarely 1:30 it happens there occures error accessing http management interface secured with TLS with BC FIPS

{code}
Operation {""operation"" => ""add"",""address"" => [(""subsystem"" => ""elytron""),(""server-ssl-context"" => ""test-server-ssl-context"")],""key-manager"" => ""key-manager-name_test-server-ssl-context"",""cipher-suite-filter"" => ""TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA256,TLS_DHE_DSS_WITH_AES_256_CBC_SHA,TLS_DHE_DSS_WITH_AES_256_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_3DES_EDE_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA256,TLS_RSA_WITH_AES_256_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA256"",""trust-manager"" => ""trust-manager-name_test-server-ssl-context"",""protocols"" => [""TLSv1.2""],""need-client-auth"" => true} failed: {""outcome"" => ""failed"",""failure-description"" => {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.ssl-context.test-server-ssl-context"" => ""java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
    Caused by: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria""}},""rolled-back"" => true}

ERROR [org.jboss.msc.service.fail] (MSC service thread 1-2) MSC000001: Failed to start service org.wildfly.security.ssl-context.test-server-ssl-context: org.jboss.msc.service.StartException in service org.wildfly.security.ssl-context.test-server-ssl-context: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
	at org.wildfly.extension.elytron.SSLDefinitions$6.lambda$getValueSupplier$1(SSLDefinitions.java:982)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1736)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1698)
	at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1556)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1378)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
	at org.wildfly.security.ssl.SSLUtils.lambda$createSslContextFactory$1(SSLUtils.java:130)
	at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:340)
	at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:53)
	at org.wildfly.extension.elytron.SSLDefinitions$6.lambda$getValueSupplier$1(SSLDefinitions.java:980)
	... 9 more
{code}

Some facts
* It happens only on management interface BC FIPS TLS tests
* It does not occur on Undertow secured with BC FIPS
* Previously there was issue with similar error but that happened everywhere https://issues.jboss.org/browse/ELY-1618 
",2018/09/11 2:51 AM
ELY-1660,"The testClientNotTrustedByServer test in org.wildfly.security.sasl.entity.EntityTest currently fails on OpenJDK 9 with the failure:
{code}
javax.security.sasl.SaslException: ELY05053: Callback handler failed for unknown reason [Caused by java.lang.NullPointerException]
        at org.wildfly.security.sasl.util.AbstractSaslParticipant.tryHandleCallbacks(AbstractSaslParticipant.java:124)
        at org.wildfly.security.sasl.entity.EntitySaslClient.evaluateMessage(EntitySaslClient.java:168)
        at org.wildfly.security.sasl.util.AbstractSaslParticipant.evaluateMessage(AbstractSaslParticipant.java:199)
        at org.wildfly.security.sasl.util.AbstractSaslClient.evaluateChallenge(AbstractSaslClient.java:79)
        at org.wildfly.security.sasl.entity.EntityTest.testClientNotTrustedByServer(EntityTest.java:504)
Caused by: java.lang.NullPointerException
        at java.base/java.util.ArrayList.<init>(ArrayList.java:178)
        at org.wildfly.security.auth.client.AuthenticationConfiguration$ClientCallbackHandler.handle(AuthenticationConfiguration.java:1744)
        at org.wildfly.security.sasl.util.AbstractSaslParticipant.tryHandleCallbacks(AbstractSaslParticipant.java:120)
        ... 4 more
{code}
Output of java -version:
{code}
openjdk version ""9""
OpenJDK Runtime Environment (build 9+181)
OpenJDK 64-Bit Server VM (build 9+181, mixed mode)
{code}",2018/08/28 4:09 PM
ELY-1642,"{{mvn test}} results in compilation error:

{noformat}
[ERROR] /home/okotek/git/wildfly-elytron/src/main/java/org/wildfly/security/manager/WildFlySecurityManager.java:[58,19] cannot find symbol
  symbol:   class Reflection
  location: package sun.reflect
{noformat}

Blocks testing on JDK 11, setting to Critical.",2018/08/15 11:51 AM
ELY-1640,"For ELY-1629, {{AcmeClientSpi.changeAccountKey()}} was updated to include both {{newKey}} and {{oldKey}} in the inner payload for the account key change request to prepare for the ACME v2 key rollover [breaking change|https://community.letsencrypt.org/t/acme-v2-draft-13-compliant-key-rollover/68953]. Currently, specifying both works fine since Let's Encrypt's staging server will expect {{oldKey}} and ignore {{newKey}} and Let's Encrypt's production server will expect {{newKey}} and ignore {{oldKey}}. However, once the new ACME v2 key rollover changes are available in Let's Encrypt's production server on Aug. 23rd, we can update this method to only include the {{oldKey}} in the inner payload. ",2018/08/14 2:00 PM
ELY-1639,"Fix of ELY-1622 introduced regression. It is not possible to do 1 way ssl (no key-store-ssl-certificate in wildfly-config.xml) with exception 

{code}
14:13:56,143 ERROR [org.jboss.as.cli.impl.CliLauncher] Error processing CLI: org.jboss.as.cli.CliInitializationException: Failed to connect to the controller
        at org.jboss.as.cli.impl.CliLauncher.initCommandContext(CliLauncher.java:330)
        at org.jboss.as.cli.impl.CliLauncher.main(CliLauncher.java:291)
        at org.jboss.as.cli.CommandLineMain.main(CommandLineMain.java:45)
        at org.jboss.modules.Module.run(Module.java:352)
        at org.jboss.modules.Module.run(Module.java:320)
        at org.jboss.modules.Main.main(Main.java:593)
Caused by: org.jboss.as.cli.CommandLineException: Failed to resolve host 'localhost'
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1256)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1203)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1198)
        at org.jboss.as.cli.impl.CliLauncher.initCommandContext(CliLauncher.java:328)
        ... 5 more
Caused by: java.io.IOException: Failed to obtain SSLContext
        at org.jboss.as.cli.impl.CLIModelControllerClient.<init>(CLIModelControllerClient.java:156)
        at org.jboss.as.cli.impl.ModelControllerClientFactory$2.getClient(ModelControllerClientFactory.java:85)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1222)
        ... 8 more
Caused by: java.security.KeyManagementException: FIPS mode: only SunJSSE KeyManagers may be used
        at sun.security.ssl.SSLContextImpl.chooseKeyManager(SSLContextImpl.java:149)
        at sun.security.ssl.SSLContextImpl.engineInit(SSLContextImpl.java:66)
        at javax.net.ssl.SSLContext.init(SSLContext.java:282)
        at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:372)
        at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:53)
        at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getSSLContext(AuthenticationContextConfigurationClient.java:221)
        at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getSSLContext(AuthenticationContextConfigurationClient.java:208)
        at org.jboss.as.cli.impl.CLIModelControllerClient.<init>(CLIModelControllerClient.java:153)
        ... 10 more
 {code}

It is because after fix Fix of ELY-1622 custom keymanager is used. But it is forbidden by jdk FIPS PKCS11.",2018/08/13 8:42 AM
ELY-1636,Update {{AcmeChallenge.Type}} to be able to handle newly introduced / unknown challenge types to avoid issues with {{AcmeChallenge.Type.forName()}} returning null if/when new challenge types is encountered.,2018/08/10 5:59 PM
ELY-1634,"We are having trouble getting LDAPS referrals working with an Elytron LDAP realm. The issue is the following stack trace.

{code}
javax.security.sasl.SaslException: ELY05012: Authentication mechanism server-side authentication failed [Caused by org.wildfly.security.auth.server.RealmUnavailableException: ELY01153: Direct LDAP verification failed with DN [redacted] and absolute DN [null]]
        at org.wildfly.security.sasl.plain.PlainSaslServer.evaluateResponse(PlainSaslServer.java:121)
        at org.wildfly.security.sasl.util.AuthenticationCompleteCallbackSaslServerFactory$1.evaluateResponse(AuthenticationCompleteCallbackSaslServerFactory.java:58)
        at org.wildfly.security.sasl.util.AuthenticationTimeoutSaslServerFactory$DelegatingTimeoutSaslServer.evaluateResponse(AuthenticationTimeoutSaslServerFactory.java:106)
        at org.wildfly.security.sasl.util.SecurityIdentitySaslServerFactory$1.evaluateResponse(SecurityIdentitySaslServerFactory.java:59)
        at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:245)
        at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:217)
        at org.jboss.remoting3.remote.ServerConnectionOpenListener$AuthStepRunnable.run(ServerConnectionOpenListener.java:486)
        at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:926)
        at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
        at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)
        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)
        at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1349)
        at java.lang.Thread.run(Thread.java:748)
Caused by: org.wildfly.security.auth.server.RealmUnavailableException: ELY01153: Direct LDAP verification failed with DN [redacted] and absolute DN [null]
        at org.wildfly.security.auth.realm.ldap.DirectEvidenceVerifier$1.verifyEvidence(DirectEvidenceVerifier.java:104)
        at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:609)
        at org.wildfly.security.auth.realm.AggregateSecurityRealm$Identity.verifyEvidence(AggregateSecurityRealm.java:155)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1977)
        at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:759)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:992)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handleOne(ServerAuthenticationContext.java:902)
        at org.wildfly.security.auth.server.ServerAuthenticationContext$1.handle(ServerAuthenticationContext.java:839)
        at org.wildfly.security.sasl.util.SSLQueryCallbackHandler.handle(SSLQueryCallbackHandler.java:60)
        at org.wildfly.security.sasl.util.TrustManagerSaslServerFactory.lambda$createSaslServer$0(TrustManagerSaslServerFactory.java:96)
        at org.wildfly.security.sasl.plain.PlainSaslServer.evaluateResponse(PlainSaslServer.java:117)
        ... 12 more
Caused by: javax.naming.CommunicationException: ldap.acme.com:636 [Root exception is java.lang.ClassNotFoundException: org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory from [Module ""org.wildfly.extension.io"" version 5.0.0.Final from local module loader @7586beff (finder: local module finder @3b69e7d1 (roots: redacted))]]
        at com.sun.jndi.ldap.Connection.<init>(Connection.java:226)
        at com.sun.jndi.ldap.LdapClient.<init>(LdapClient.java:137)
        at com.sun.jndi.ldap.LdapClient.getInstance(LdapClient.java:1615)
        at com.sun.jndi.ldap.LdapCtx.connect(LdapCtx.java:2749)
        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2699)
        at com.sun.jndi.ldap.LdapCtx.ensureOpen(LdapCtx.java:2673)
        at com.sun.jndi.ldap.LdapCtx.reconnect(LdapCtx.java:2669)
        at org.wildfly.security.auth.realm.ldap.DelegatingLdapContext.reconnect(DelegatingLdapContext.java:181)
        at org.wildfly.security.auth.realm.ldap.DirectEvidenceVerifier$1.verifyEvidence(DirectEvidenceVerifier.java:97)
        ... 22 more
Caused by: java.lang.ClassNotFoundException: org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory from [Module ""org.wildfly.extension.io"" version 5.0.0.Final from local module loader @7586beff (finder: local module finder @3b69e7d1 (roots: redacted))]
        at org.jboss.modules.ModuleClassLoader.findClass(ModuleClassLoader.java:255)
        at org.jboss.modules.ConcurrentClassLoader.performLoadClassUnchecked(ConcurrentClassLoader.java:410)
        at org.jboss.modules.ConcurrentClassLoader.performLoadClass(ConcurrentClassLoader.java:398)
        at org.jboss.modules.ConcurrentClassLoader.loadClass(ConcurrentClassLoader.java:116)
        at java.lang.Class.forName0(Native Method)
        at java.lang.Class.forName(Class.java:348)
        at com.sun.jndi.ldap.VersionHelper12.loadClass(VersionHelper12.java:72)
        at com.sun.jndi.ldap.Connection.createSocket(Connection.java:281)
        at com.sun.jndi.ldap.Connection.<init>(Connection.java:203)
        ... 30 more
{code}

As you can see the Sun/Oracle LDAP classes try to load the class {{org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory}} using the TCCL which is the {{org.wildfly.extension.io}} module loader. This will not work as ThreadLocalSSLSocketFactor is in the module {{org.wildfy.security.elytron-private}}.",2018/08/10 4:50 AM
ELY-1633,"AuthenticationConfiguration seems to employ double checked locking but but incorrectly does not declare the variable as volatile.

https://en.wikipedia.org/wiki/Double-checked_locking#Usage_in_Java",2018/08/10 4:17 AM
ELY-1626,"Programmatic web authentication (HttpServletRequest.login()) does not trigger sso (JSESSIONIDSSO does not get created) when using elytron/undertow.

This worked fine in EAP 6 (eap 5 too but it was a bit different as
HttpServletRequest.login() wasn't available at that time).",2018/08/08 10:33 AM
ELY-1622,"I am trying to connect from jboss-cli.sh to EAP server. To reproduce the problem it is enough BC FIPS is used only on client side.
{code:java|titlejboss-cli.log}
11:50:25,147 ERROR [org.jboss.as.cli.impl.CliLauncher] Error processing CLI: org.jboss.as.cli.CliInitializationException: Failed to connect to the controller
        at org.jboss.as.cli.impl.CliLauncher.initCommandContext(CliLauncher.java:330)
        at org.jboss.as.cli.impl.CliLauncher.main(CliLauncher.java:291)
        at org.jboss.as.cli.CommandLineMain.main(CommandLineMain.java:45)
        at org.jboss.modules.Module.run(Module.java:352)
        at org.jboss.modules.Module.run(Module.java:320)
        at org.jboss.modules.Main.main(Main.java:593)
Caused by: org.jboss.as.cli.CommandLineException: Failed to resolve host 'localhost'
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1256)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1203)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1198)
        at org.jboss.as.cli.impl.CliLauncher.initCommandContext(CliLauncher.java:328)
        ... 5 more
Caused by: java.io.IOException: Failed to obtain SSLContext
        at org.jboss.as.cli.impl.CLIModelControllerClient.<init>(CLIModelControllerClient.java:156)
        at org.jboss.as.cli.impl.ModelControllerClientFactory$2.getClient(ModelControllerClientFactory.java:85)
        at org.jboss.as.cli.impl.CommandContextImpl.connectController(CommandContextImpl.java:1222)
        ... 8 more
Caused by: java.security.KeyManagementException: java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
        at org.bouncycastle.jsse.provider.ProvSSLContextSpi.selectKeyManager(ProvSSLContextSpi.java:589)
        at org.bouncycastle.jsse.provider.ProvSSLContextSpi.engineInit(ProvSSLContextSpi.java:531)
        at javax.net.ssl.SSLContext.init(SSLContext.java:282)
        at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:372)
        at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:53)
        at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getSSLContext(AuthenticationContextConfigurationClient.java:221)
        at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.getSSLContext(AuthenticationContextConfigurationClient.java:208)
        at org.jboss.as.cli.impl.CLIModelControllerClient.<init>(CLIModelControllerClient.java:153)
        ... 10 more
Caused by: java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
        at sun.security.jca.GetInstance.getInstance(GetInstance.java:159)
        at javax.net.ssl.KeyManagerFactory.getInstance(KeyManagerFactory.java:137)
        at org.bouncycastle.jsse.provider.ProvSSLContextSpi.selectKeyManager(ProvSSLContextSpi.java:583)
        ... 17 more
{code}

When I use non-FIPS java with CLI I can make it work. It does occure also when connecting to default unsecured port 9990.
When I use BCFKS truststore on server side, e.g. in 2-way http communication it works.

I believe problem is I cant configure algorithm for keymanager on client side in wildfly-config.xml. (At least I don't see how could I do so).
BC provider does not know SunX509 arlgorithm, rather X509, X.509 or PKIX could be used.",2018/08/02 7:04 AM
ELY-1618,"When I configure BouncyCastleJsseProvider to by only possible provider providing TLS TLS does not work with exception

{code} 
14:07:53,905 TRACE [org.wildfly.security] (MSC service thread 1-4) No SSLContext provided by providers in SSLUtils: [BCFIPS version 1.01, BCJSSE version 1.0005, SUN version 1.8, ApacheXMLDSig version 2.11, SunJCE version 1.8, TLSP version 1.0, WildFlyElytron version 1.0]
14:07:53,906 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-4) MSC000001: Failed to start service org.wildfly.security.ssl-context.test-server-ssl-context: org.jboss.msc.service.StartException in service org.wildfly.security.ssl-context.test-server-ssl-context: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
	at org.wildfly.extension.elytron.SSLDefinitions$6.lambda$getValueSupplier$1(SSLDefinitions.java:926)
	at org.wildfly.extension.elytron.TrivialService.start(TrivialService.java:53)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1736)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.execute(ServiceControllerImpl.java:1698)
	at org.jboss.msc.service.ServiceControllerImpl$ControllerTask.run(ServiceControllerImpl.java:1556)
	at org.jboss.threads.ContextClassLoaderSavingRunnable.run(ContextClassLoaderSavingRunnable.java:35)
	at org.jboss.threads.EnhancedQueueExecutor.safeRun(EnhancedQueueExecutor.java:1985)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.doRunTask(EnhancedQueueExecutor.java:1487)
	at org.jboss.threads.EnhancedQueueExecutor$ThreadBody.run(EnhancedQueueExecutor.java:1378)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
	at org.wildfly.security.ssl.SSLUtils.throwIt(SSLUtils.java:142)
	at org.wildfly.security.ssl.SSLContextBuilder.lambda$build$0(SSLContextBuilder.java:340)
	at org.wildfly.security.OneTimeSecurityFactory.create(OneTimeSecurityFactory.java:53)
	at org.wildfly.extension.elytron.SSLDefinitions$6.lambda$getValueSupplier$1(SSLDefinitions.java:924)
	... 9 more

14:07:53,910 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 1) WFLYCTL0013: Operation (""add"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""server-ssl-context"" => ""test-server-ssl-context"")
]) - failure description: {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.ssl-context.test-server-ssl-context"" => ""java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria
    Caused by: java.security.NoSuchAlgorithmException: ELY04001: No algorithm found matching TLS/SSL protocol selection criteria""}}
{code}

After debugging it seems problem is this:
Supported protocols resolved from BCJSSE version 1.0005 are [TLS, TLSV1, TLSV1.2, DEFAULT, TLSV1.1]
Whereas Elytron class org.wildfly.security.ssl.Protocol use constants TLSv1, TLSv1.1, TLSv1.2, ... It means lower case ""v""
And thus ProtocolSelector.evaluate does return empty set.

Possible solution to this particular problem will be make Protocol case insensitive. It means define enum constants in upper case and adjust methods to use .toUpperCase(). But I am probably not aware of all consequences of such change.
",2018/07/27 8:59 AM
ELY-1616,"The ""key-attribute"" (""userPKCS12"") should not be necessary to use LdapKeyStore as truststore.
See Steps to Reproduce for more information.",2018/07/26 7:52 AM
ELY-1601,"Unhandled null value of withIdentities in
https://github.com/wildfly-security/wildfly-elytron/blob/master/src/main/java/org/wildfly/security/auth/server/SecurityIdentity.java#L526

Also it looks securityIdentity is added into withIdentities multiple-times.",2018/06/12 11:32 AM
ELY-1595,"With ELY-1572 source compatibility check was disabled because of bug in japicmp-base-0.12.0 . With new release of japicmp it should be fixed and source compatibility can be checked again.

[1] https://github.com/wildfly-security/wildfly-elytron/pull/1145#issuecomment-393063711
[2] Also related ELY-1587",2018/05/30 4:30 AM
ELY-1592,"Use case: Administrator wants to connect to CLI using kerberos ticket. It is not possible in CD13 with error

{code}
Client authentication failed: javax.security.sasl.SaslException: ELY05108: Unable to create response token [Caused by GSSException: No valid credentials provided (Mechanism level: Attempt to obtain new INITIATE credentials failed! (null))]
{code}

Attaching logs of server and client for CD12 (OK) and CD13 (NOK)

In server log there is missing message {{Server received authentication request}} so it makes me think problem is on client side.

Comparing client logs there is difference
* CD13
{code}
11:32:58,924 TRACE [org.jboss.remoting.remote.client] Client authentication failed: javax.security.sasl.SaslException: ELY05108: Unable to create response token [Caused by GSSException: No valid credentials provided (Mechanism level: Attempt to obtain new INITIATE credentials failed! (null))]
{code}
* CD12 
compared to CD12
{code}
11:31:16,946 TRACE [org.wildfly.security.sasl.gssapi] GSSContext established, transitioning to negotiate security layer.
{code}",2018/05/24 5:54 AM
ELY-1589,"XSD validation of test-wildfly-config.xml in tests fails because of invalid XSD:

{noformat}Src-resolve: Cannot Resolve The Name 'resource-type' To A(n) 'simpleType Definition' Component.{noformat}

Problem is, ""resource-type"" (which is complexType) is used as type of an attribute (not of an element) in certificate-revocation-list-type.

Edit: there is much more errors when trying to verify testing XMLs against XSDs.",2018/05/22 7:05 AM
ELY-1587,"Debugging revealed certificate use {{utf8String}} representation whereas Elytron is expecting {{printableString}}

In rfc 5280 [1] chapter 4.1.2.4. Issuer there is specified value of subject/issuer can be of 5 types

{code}
   DirectoryString ::= CHOICE {
         teletexString           TeletexString (SIZE (1..MAX)),
         printableString         PrintableString (SIZE (1..MAX)),
         universalString         UniversalString (SIZE (1..MAX)),
         utf8String              UTF8String (SIZE (1..MAX)),
         bmpString               BMPString (SIZE (1..MAX)) }
{code}

However Elytron X500 principal decoder [2] can handle only 2 of them PRINTABLE_STRING_TYPE and IA5_STRING_TYPE (not sure which type of rfc does that match) [2]

Definitely missing {{utf8String}} (my case). Also revise for backward compatibility {{teletexString}}, {{bmpString}} and {{universalString}}

[1] https://www.ietf.org/rfc/rfc5280.txt
[2] https://github.com/wildfly-security/wildfly-elytron/blob/32ff7c17965b3ecae6be7ce1c9b96ab642ddc4ad/src/main/java/org/wildfly/security/x500/util/X500PrincipalUtil.java#L95",2018/05/21 5:42 AM
ELY-1572,"As part of ELY-1523 japicmp was configured to force binary and source compatibility.
By last discussion, only binary compatibility is required.

{panel}
*Honza Kalina*	jaspicmp reports it as source incompatibility, not as binary incompatibility - so it maybe it is false positive, as I would say it should be source-compatible...
*Darran Lofthouse*	Binary is the only one we are really interested in, i.e. will an update to a later version of Elytron break something.  Most of our backwards compatibility strategy is more about breaking things and upsetting people
{panel}

Japicmp currently reports adding default method into interface as source incompatible change (see  https://github.com/siom79/japicmp/issues/201) -> blocks adding IV into MaskedPassword in ELY-867",2018/05/02 4:05 AM
ELY-1570,"I CAN connect to Wildfly with
JConsole
JVisualVM

I cannot connect with 
Java Mission Control (JMC).  



I believe this is an issue with some new code that fails to recognize that ""classLoader"" can be null in the Java SE / Eclipse OSI environment

 ClassLoader classLoader = WildFlyElytronProvider.class.getClassLoader();

com.oracle.jmc.rjmx.ConnectionException caused by javax.security.sasl.SaslException [Caused by java.lang.NullPointerException]
	at com.oracle.jmc.rjmx.internal.RJMXConnection.connect(RJMXConnection.java:406)
	at com.oracle.jmc.rjmx.internal.ServerHandle.doConnect(ServerHandle.java:88)
	at com.oracle.jmc.rjmx.internal.ServerHandle.connect(ServerHandle.java:78)
	at com.oracle.jmc.console.ui.editor.internal.ConsoleEditor$ConnectJob.run(ConsoleEditor.java:73)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
Caused by: javax.security.sasl.SaslException [Caused by java.lang.NullPointerException]
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:426)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:242)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:591)
	at ...asynchronous invocation...(Unknown Source)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:570)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:532)
	at org.jboss.remoting3.EndpointImpl.connect(EndpointImpl.java:520)
	at org.jboss.remotingjmx.RemotingConnector.internalRemotingConnect(RemotingConnector.java:268)
	at org.jboss.remotingjmx.RemotingConnector.internalConnect(RemotingConnector.java:156)
	at org.jboss.remotingjmx.RemotingConnector.connect(RemotingConnector.java:103)
	at com.oracle.jmc.rjmx.internal.RJMXConnection.connectJmxConnector(RJMXConnection.java:451)
	at com.oracle.jmc.rjmx.internal.RJMXConnection.establishConnection(RJMXConnection.java:427)
	at com.oracle.jmc.rjmx.internal.RJMXConnection.connect(RJMXConnection.java:399)
	... 4 more
Caused by: java.lang.NullPointerException
	at org.wildfly.security.WildFlyElytronProvider$ProviderService.getImplementationClass(WildFlyElytronProvider.java:429)
	at org.wildfly.security.WildFlyElytronProvider$ProviderService.newInstance(WildFlyElytronProvider.java:413)
	at org.wildfly.security.sasl.util.SecurityProviderSaslClientFactory.createSaslClient(SecurityProviderSaslClientFactory.java:94)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ProtocolSaslClientFactory.createSaslClient(ProtocolSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.FilterMechanismSaslClientFactory.createSaslClient(FilterMechanismSaslClientFactory.java:102)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.LocalPrincipalSaslClientFactory.createSaslClient(LocalPrincipalSaslClientFactory.java:76)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.lambda$createSaslClient$0(PrivilegedSaslClientFactory.java:64)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.createSaslClient(PrivilegedSaslClientFactory.java:64)
	at org.wildfly.security.auth.client.AuthenticationConfiguration.createSaslClient(AuthenticationConfiguration.java:1348)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.createSaslClient(AuthenticationContextConfigurationClient.java:395)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:420)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:242)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:591)


",2018/04/30 10:40 AM
ELY-1568,"I am getting error in my IDE during xml validation

* {noformat}
cvc-complex-type.2.4.b: The content of element 'providers' is not complete. One of '{""urn:elytron:client:1.1"":global}' is expected.
{noformat}
While having this snippet in my wildfly-config.xml
{code:xml|title=wildfly-config.xml}
<providers>
    <use-service-loader/>
</providers>
{code}

* {noformat}
cvc-complex-type.2.4.b: The content of element 'configuration' is not complete. One of '{""urn:elytron:client:
 1.1"":set-host, ""urn:elytron:client:1.1"":set-port, ""urn:elytron:client:1.1"":set-protocol, ""urn:elytron:client:
 1.1"":abstract-user-spec, ""urn:elytron:client:1.1"":set-mechanism-realm, ""urn:elytron:client:1.1"":rewrite-user-
 name-regex, ""urn:elytron:client:1.1"":set-mechanism-properties, ""urn:elytron:client:1.1"":set-authorization-
 name, ""urn:elytron:client:1.1"":abstract-sasl-factories}' is expected.
{noformat}
While having this snippet in my wildfly-config.xml
{code:xml|title=wildfly-config.xml}
    <configuration name=""default"">
        <sasl-mechanism-selector selector=""EXTERNAL""/>
        <credentials>
            <key-store-reference key-store-name=""keystore"">
                <key-store-clear-password password=""${password}""/>
            </key-store-reference>
        </credentials>
        <providers>
            <use-service-loader/>
        </providers>
    </configuration>
{code}


Based on [1] I think elements in xsd:all should contain minOccurs=""0"" explicitly. E.g. <xsd:element ref=""abstract-user-spec"" minOccurs=""0""/>.

I see this problem in providers-type and authentication-configuration-type -, key-pair-type and certificate-type-

[1] https://www.w3schools.com/xml/el_all.asp
",2018/04/25 3:35 AM
ELY-1564,"In PasswordKeyMapper an exception is logged with the default algorithm name instead of the algorithm used to instantiate PasswordFactory object. 

{code:java|title=PasswordKeyMapper.java}
        final PasswordFactory passwordFactory;
        try {
            passwordFactory = PasswordFactory.getInstance(algorithmName, providers);
        } catch (NoSuchAlgorithmException e) {
            throw log.couldNotObtainPasswordFactoryForAlgorithm(algorithmName, e);
        }

...

        try {
            Password password = passwordFactory.generatePassword(passwordSpec);
            if (log.isTraceEnabled()) {
                log.tracef(""Key Mapper: Password credential created using algorithm column value [%s]"", algorithmName);
            }
            return new PasswordCredential(password);
        } catch (InvalidKeySpecException e) {
            throw log.invalidPasswordKeySpecificationForAlgorithm(this.defaultAlgorithm, e);
        }
{code}",2018/04/18 9:07 AM
ELY-1561,"The TCCL is not set, so the chances of finding {{com.sun.security.auth.module.Krb5LoginModule}} or {{com.ibm.security.auth.module.Krb5LoginModule}} are essentially completely dependent on the environment.  However since the class is always the same, and we can safely assume that we should have a dependency on that module, we should set TCCL around the initialization of the {{LoginContext}}.",2018/04/11 7:02 PM
ELY-1557,"For example:
https://github.com/wildfly-security/wildfly-elytron/blob/1.2.4.Final/src/main/java/org/wildfly/security/auth/client/ElytronXmlParser.java#L2431",2018/04/06 5:23 AM
ELY-1554,"In WFLY-10163 was Apache Directory upgraded for wildfly to 2.0.0-M24.
To be consistent, DS should be upgraded in elytron too.",2018/04/03 10:38 AM
ELY-1553,"There is a difference between required Permission for {{ElytronXmlParser.parseAuthenticationClientConfiguration()}} method in version 1.1.7.Final (JBoss EAP 7.1.0.GA) and 1.2.4.Final (JBoss EAP 7.2.0.CD12.CR1) when runs with Security Manager. Version 1.2.4.Final newly requires Permission {{java.security.SecurityPermission putProviderProperty.WildFlyElytron}}. It fails with following Exception:
{code}
java.security.AccessControlException: WFSM000001: Permission check failed (permission ""(""java.security.SecurityPermission"" ""putProviderProperty.WildFlyElytron"")"" in code source ""(vfs:/content/WildflyConfigXmlReproducerServlet.war/WEB-INF/classes <no signer certificates>)"" of ""ModuleClassLoader for Module ""deployment.WildflyConfigXmlReproducerServlet.war"" from Service Module Loader"")
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:295)
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:192)
	at java.lang.SecurityManager.checkSecurityAccess(SecurityManager.java:1759)
	at org.wildfly.security.manager.WildFlySecurityManager.checkSecurityAccess(WildFlySecurityManager.java:581)
	at java.security.Provider.check(Provider.java:658)
	at java.security.Provider.putService(Provider.java:1120)
	at org.wildfly.security.WildFlyElytronProvider.putHttpAuthenticationMechanismImplementations(WildFlyElytronProvider.java:232)
	at org.wildfly.security.WildFlyElytronProvider.<init>(WildFlyElytronProvider.java:142)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$static$0(ElytronXmlParser.java:131)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:159)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:147)
	at org.wildfly.security.auth.client.ElytronXmlParser$DeferredSupplier.get(ElytronXmlParser.java:2826)
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:116)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseClearPassword$49(ElytronXmlParser.java:2252)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseCredentialsType$31(ElytronXmlParser.java:1065)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$andThenOp$27(ElytronXmlParser.java:1042)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseCredentialsType$38(ElytronXmlParser.java:1108)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationConfigurationType$22(ElytronXmlParser.java:836)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$andThenOp$27(ElytronXmlParser.java:1042)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationConfigurationType$26(ElytronXmlParser.java:884)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationRuleType$11(ElytronXmlParser.java:716)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseRulesType$12(ElytronXmlParser.java:742)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:351)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:227)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:188)
	at com.redhat.eap.qe.elytron.authnctx.WildflyConfigXmlReproducerServlet.parseAndCreateAuthenticationClientConfiguration(WildflyConfigXmlReproducerServlet.java:51)
	at com.redhat.eap.qe.elytron.authnctx.WildflyConfigXmlReproducerServlet.doGet(WildflyConfigXmlReproducerServlet.java:44)
	...
{code}

In case this change is expected then Release Notes Jira should be created.

The same Permission is needed when authentication context is obtained from server configuration (through default-authentication-context in elytron subsystem):
{code}
java.security.AccessControlException: WFSM000001: Permission check failed (permission ""(""java.security.SecurityPermission"" ""putProviderProperty.WildFlyElytron"")"" in code source ""(vfs:/content/direct-call-dep.war/WEB-INF/classes <no signer certificates>)"" of ""ModuleClassLoader for Module ""deployment.direct-call-dep.war"" from Service Module Loader"")
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:295)
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:192)
	at java.lang.SecurityManager.checkSecurityAccess(SecurityManager.java:1759)
	at org.wildfly.security.manager.WildFlySecurityManager.checkSecurityAccess(WildFlySecurityManager.java:581)
	at java.security.Provider.check(Provider.java:658)
	at java.security.Provider.putService(Provider.java:1120)
	at org.wildfly.security.WildFlyElytronProvider.putHttpAuthenticationMechanismImplementations(WildFlyElytronProvider.java:232)
	at org.wildfly.security.WildFlyElytronProvider.<init>(WildFlyElytronProvider.java:142)
	at org.wildfly.security.auth.client.AuthenticationConfiguration.lambda$static$0(AuthenticationConfiguration.java:169)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:159)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:147)
	at org.wildfly.security.sasl.util.SecurityProviderSaslClientFactory.createSaslClient(SecurityProviderSaslClientFactory.java:85)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ProtocolSaslClientFactory.createSaslClient(ProtocolSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.FilterMechanismSaslClientFactory.createSaslClient(FilterMechanismSaslClientFactory.java:102)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.LocalPrincipalSaslClientFactory.createSaslClient(LocalPrincipalSaslClientFactory.java:76)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.lambda$createSaslClient$0(PrivilegedSaslClientFactory.java:64)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.createSaslClient(PrivilegedSaslClientFactory.java:64)
	at org.wildfly.security.auth.client.AuthenticationConfiguration.createSaslClient(AuthenticationConfiguration.java:1348)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.createSaslClient(AuthenticationContextConfigurationClient.java:395)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:420)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:242)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:591)
{code} 

or when authentication context is created programatically:
{code}
java.security.AccessControlException: WFSM000001: Permission check failed (permission ""(""java.security.SecurityPermission"" ""putProviderProperty.WildFlyElytron"")"" in code source ""(vfs:/content/programatically-set-dep.war/WEB-INF/classes <no signer certificates>)"" of ""ModuleClassLoader for Module ""deployment.programatically-set-dep.war"" from Service Module Loader"")
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:295)
	at org.wildfly.security.manager.WildFlySecurityManager.checkPermission(WildFlySecurityManager.java:192)
	at java.lang.SecurityManager.checkSecurityAccess(SecurityManager.java:1759)
	at org.wildfly.security.manager.WildFlySecurityManager.checkSecurityAccess(WildFlySecurityManager.java:581)
	at java.security.Provider.check(Provider.java:658)
	at java.security.Provider.putService(Provider.java:1120)
	at org.wildfly.security.WildFlyElytronProvider.putHttpAuthenticationMechanismImplementations(WildFlyElytronProvider.java:232)
	at org.wildfly.security.WildFlyElytronProvider.<init>(WildFlyElytronProvider.java:142)
	at org.wildfly.security.auth.client.AuthenticationConfiguration.lambda$static$0(AuthenticationConfiguration.java:169)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:159)
	at org.wildfly.security.util.ProviderUtil$1.get(ProviderUtil.java:147)
	at org.wildfly.security.sasl.util.SecurityProviderSaslClientFactory.createSaslClient(SecurityProviderSaslClientFactory.java:85)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ProtocolSaslClientFactory.createSaslClient(ProtocolSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.ServerNameSaslClientFactory.createSaslClient(ServerNameSaslClientFactory.java:50)
	at org.wildfly.security.sasl.util.FilterMechanismSaslClientFactory.createSaslClient(FilterMechanismSaslClientFactory.java:102)
	at org.wildfly.security.sasl.util.AbstractDelegatingSaslClientFactory.createSaslClient(AbstractDelegatingSaslClientFactory.java:66)
	at org.wildfly.security.sasl.util.LocalPrincipalSaslClientFactory.createSaslClient(LocalPrincipalSaslClientFactory.java:76)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.lambda$createSaslClient$0(PrivilegedSaslClientFactory.java:64)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.wildfly.security.sasl.util.PrivilegedSaslClientFactory.createSaslClient(PrivilegedSaslClientFactory.java:64)
	at org.wildfly.security.auth.client.AuthenticationConfiguration.createSaslClient(AuthenticationConfiguration.java:1348)
	at org.wildfly.security.auth.client.AuthenticationContextConfigurationClient.createSaslClient(AuthenticationContextConfigurationClient.java:395)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:420)
	at org.jboss.remoting3.remote.ClientConnectionOpenListener$Capabilities.handleEvent(ClientConnectionOpenListener.java:242)
	at org.xnio.ChannelListeners.invokeChannelListener(ChannelListeners.java:92)
	at org.xnio.conduits.ReadReadyHandler$ChannelListenerHandler.readReady(ReadReadyHandler.java:66)
	at org.xnio.nio.NioSocketConduit.handleReady(NioSocketConduit.java:89)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:591)
{code}",2018/03/27 4:53 AM
ELY-1552,"In org.​wildfly.​security.​http.​impl.​DigestAuthenticationMechanism.​digestUriMatchesRequestUri(org.​wildfly.​security.​http.​HttpServerRequest, byte[]): Found a call to a method which will perform a byte to String (or String to byte) conversion, and will assume that the default platform encoding is suitable.

{code}
 private boolean digestUriMatchesRequestUri(HttpServerRequest request, byte[] digestUri) {
        if (!validateUri) {
            return true;
        }

        java.net.URI requestURI = request.getRequestURI();
        String digestUriStr = new String(digestUri);

{code}

https://scan7.coverity.com/reports.htm#v20225/p11778/fileInstanceId=49333269&defectInstanceId=10309296&mergedDefectId=1466832",2018/03/26 3:32 PM
ELY-1550,"Synchronization in audit endpoint implementations leads to a great performance drop.
We see the issue in {{FileAuditEndpoint.accept(EventPriority, String)}}, but similar code is also in the {{SyslogAuditEndpoint}}.

Check the attached recording (FlightRecorder) in jmc (Java Mission Control).

It can be seen in these tabs
- Threads > Contention
- Threads > Thread Dumps
- Threads > Lock Instances",2018/03/22 12:27 PM
ELY-1549,"Given SPNEGO + FORM authentication configuration. AND SPNEGO is SESSION,CONNECTION or default (SESSIN) scoped. And running on IBM java.
When invalid kerberos ticket is send 
Then status code 401 is returned with http form. 

There is agreement in such case SPNEGO+FORM 200 should return with form.
",2018/03/22 11:24 AM
ELY-1547,"When the client sends an initial SPNEGO token with Kerberos as preferred mechanism and includes an invalid kerberos token, then client expects to see the {{WWW-Authenticate}} HTTP header with SPNEGO response {{negTokenResp[ negState = reject ]}}.

As stated in [SPNEGO specification|https://tools.ietf.org/html/rfc4178#section-4.2.2] negstat is required in first reply:

{code:borderStyle=dashed}
negState

...

      This field is REQUIRED in the first reply from the target, and is

      OPTIONAL thereafter.  When negState is absent, the actual state

      should be inferred from the state of the negotiated mechanism

      context.
{code}",2018/03/20 1:31 PM
ELY-1540,"The build fails at the last step with this exception:

{noformat}
[INFO] --- japicmp-maven-plugin:0.11.0:cmp (default) @ wildfly-elytron ---
[INFO] Written file '/home/david/src/java/wildfly-elytron/target/japicmp/japicmp.diff'.
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 02:50 min
[INFO] Finished at: 2018-03-09T10:05:46-06:00
[INFO] Final Memory: 62M/206M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0:cmp (default) on project wildfly-elytron: Execution default of goal com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0:cmp failed: A required class was missing while executing com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0:cmp: javax/xml/bind/JAXBException
[ERROR] -----------------------------------------------------
[ERROR] realm =    plugin>com.github.siom79.japicmp:japicmp-maven-plugin:0.11.0
[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy
[ERROR] urls[0] = file:/home/david/.m2/repository/com/github/siom79/japicmp/japicmp-maven-plugin/0.11.0/japicmp-maven-plugin-0.11.0.jar
[ERROR] urls[1] = file:/home/david/.m2/repository/org/sonatype/aether/aether-util/1.11/aether-util-1.11.jar
[ERROR] urls[2] = file:/home/david/.m2/repository/org/sonatype/sisu/sisu-inject-bean/2.1.1/sisu-inject-bean-2.1.1.jar
[ERROR] urls[3] = file:/home/david/.m2/repository/org/sonatype/sisu/sisu-guice/2.9.4/sisu-guice-2.9.4-no_aop.jar
[ERROR] urls[4] = file:/home/david/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar
[ERROR] urls[5] = file:/home/david/.m2/repository/org/codehaus/plexus/plexus-utils/2.0.6/plexus-utils-2.0.6.jar
[ERROR] urls[6] = file:/home/david/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar
[ERROR] urls[7] = file:/home/david/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar
[ERROR] urls[8] = file:/home/david/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar
[ERROR] urls[9] = file:/home/david/.m2/repository/com/github/siom79/japicmp/japicmp/0.11.0/japicmp-0.11.0.jar
[ERROR] urls[10] = file:/home/david/.m2/repository/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar
[ERROR] urls[11] = file:/home/david/.m2/repository/com/google/guava/guava/18.0/guava-18.0.jar
[ERROR] urls[12] = file:/home/david/.m2/repository/org/apache/maven/reporting/maven-reporting-impl/2.3/maven-reporting-impl-2.3.jar
[ERROR] urls[13] = file:/home/david/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar
[ERROR] urls[14] = file:/home/david/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar
[ERROR] urls[15] = file:/home/david/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.6/maven-shared-utils-0.6.jar
[ERROR] urls[16] = file:/home/david/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar
[ERROR] urls[17] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.2/doxia-sink-api-1.2.jar
[ERROR] urls[18] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-core/1.2/doxia-core-1.2.jar
[ERROR] urls[19] = file:/home/david/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar
[ERROR] urls[20] = file:/home/david/.m2/repository/org/apache/httpcomponents/httpclient/4.0.2/httpclient-4.0.2.jar
[ERROR] urls[21] = file:/home/david/.m2/repository/org/apache/httpcomponents/httpcore/4.0.1/httpcore-4.0.1.jar
[ERROR] urls[22] = file:/home/david/.m2/repository/commons-codec/commons-codec/1.3/commons-codec-1.3.jar
[ERROR] urls[23] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.2/doxia-site-renderer-1.2.jar
[ERROR] urls[24] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.2/doxia-decoration-model-1.2.jar
[ERROR] urls[25] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.2/doxia-module-xhtml-1.2.jar
[ERROR] urls[26] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.2/doxia-module-fml-1.2.jar
[ERROR] urls[27] = file:/home/david/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar
[ERROR] urls[28] = file:/home/david/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.7/plexus-velocity-1.1.7.jar
[ERROR] urls[29] = file:/home/david/.m2/repository/org/apache/velocity/velocity/1.5/velocity-1.5.jar
[ERROR] urls[30] = file:/home/david/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar
[ERROR] urls[31] = file:/home/david/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar
[ERROR] urls[32] = file:/home/david/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar
[ERROR] urls[33] = file:/home/david/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar
[ERROR] urls[34] = file:/home/david/.m2/repository/commons-digester/commons-digester/1.6/commons-digester-1.6.jar
[ERROR] urls[35] = file:/home/david/.m2/repository/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar
[ERROR] urls[36] = file:/home/david/.m2/repository/commons-logging/commons-logging/1.0.4/commons-logging-1.0.4.jar
[ERROR] urls[37] = file:/home/david/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.2.1/maven-reporting-api-2.2.1.jar
[ERROR] urls[38] = file:/home/david/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.1/doxia-logging-api-1.1.jar
[ERROR] urls[39] = file:/home/david/.m2/repository/org/codehaus/groovy/groovy-jsr223/2.4.6/groovy-jsr223-2.4.6.jar
[ERROR] urls[40] = file:/home/david/.m2/repository/org/codehaus/groovy/groovy/2.4.6/groovy-2.4.6.jar
[ERROR] Number of foreign imports: 1
[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]
[ERROR] 
[ERROR] -----------------------------------------------------
[ERROR] : javax.xml.bind.JAXBException
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException
{noformat}

Maybe because JAXB is not an included module by default on Java 9.  Might need an {{--add-module}} somewhere?",2018/03/09 4:36 PM
ELY-1536,"Server sends ""stale=true"" when invalid nonce is used.
Client should repeat authentication with new nonce, but it ignores it instead.

rfc2831:
{panel}
If the response is valid, the server MAY choose to deem that
   authentication has succeeded. However, if it has been too long since
   the previous authentication, or for any other reason, the server MAY
   send a new ""digest-challenge"" with a new value for nonce. The
   challenge MAY contain a ""stale"" directive with value ""true"", which
   says that the client may respond to the challenge using the password
   it used in the previous response; otherwise, the client must solicit
   the password anew from the user. This permits the server to make sure
   that the user has presented their password recently. (The directive
   name refers to the previous nonce being stale, not to the last use of
   the password.) Except for the handling of ""stale"", after sending the
   ""digest-challenge"" authentication proceeds as in the case of initial
   authentication.
{panel}",2018/03/05 8:58 AM
ELY-1535,"I was trying to be a good person and implement the Mozilla ""Modern"" cipher suite described here:

https://wiki.mozilla.org/Security/Server_Side_TLS

I'm doing this in a keycloak server. The config line there looks like

{noformat}
        <https-listener security-realm=""ApplicationRealm""
                        enabled-protocols=""SSLv2Hello,TLSv1.2""
                        enabled-cipher-suites=""TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256""        
                       name=""default""
                       socket-binding=""httpish""
                       enable-http2=""true""        
                       proxy-address-forwarding=""true""        
        />
{noformat}

But I got this:

{noformat}
13:20:46,574 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-1) MSC000001: Failed to start service org.wildfly.undertow.listener.default: org.jboss.msc.service.StartException in serv
ice org.wildfly.undertow.listener.default: Failed to start service
        at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1978)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalArgumentException: ELY05016: Unrecognized token ""TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"" in mechanism selection string ""TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256""
        at org.wildfly.security.ssl.CipherSuiteSelector.fromString(CipherSuiteSelector.java:423)
        at org.wildfly.extension.undertow.HttpsListenerService.startListening(HttpsListenerService.java:120)
        at org.wildfly.extension.undertow.ListenerService.start(ListenerService.java:169)
        at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:2032)
        at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1955)
{noformat}

With a little digging it appears that CipherSuiteSelector doesn't know what CHACHA20 or POLY1305 are.  See:

https://github.com/wildfly-security/wildfly-elytron/blame/master/src/main/java/org/wildfly/security/ssl/CipherSuiteSelector.java

",2018/03/02 7:49 PM
ELY-1529,"OAuth2SaslClientV10Test or OAuth2SaslClientV11Test intermittently fails during MockWebServer binding, for example for OAuth2SaslClientV10Test:

{code}
java.net.BindException: Address already in use (Bind failed)
 	at java.net.PlainSocketImpl.socketBind(Native Method)
 	at java.net.AbstractPlainSocketImpl.bind(AbstractPlainSocketImpl.java:387)
 	at java.net.ServerSocket.bind(ServerSocket.java:375)
 	at okhttp3.mockwebserver.MockWebServer.start(MockWebServer.java:317)
 	at okhttp3.mockwebserver.MockWebServer.start(MockWebServer.java:300)
 	at okhttp3.mockwebserver.MockWebServer.start(MockWebServer.java:289)
 	at org.wildfly.security.sasl.oauth2.OAuth2SaslClientV10Test.onBefore(OAuth2SaslClientV10Test.java:82)
{code}

When this happens it causes only one of test methods to fail. Other tests in OAuth2SaslClientV10Test/OAuth2SaslClientV11Test finish successfully. It seems this test issue is not depended on any platform or JDK.

Part of log when test fails:
{code}
...
04:44:06,995 TRACE (main) [org.wildfly.security] <ServerAuthenticationContext.java:1015> Handling AuthenticationCompleteCallback: succeed
04:44:06,995 TRACE (main) [org.wildfly.security] <ServerAuthenticationContext.java:1032> Handling SecurityIdentityCallback: identity = SecurityIdentity{principal=jdoe, securityDomain=org.wildfly.security.auth.server.SecurityDomain@e7f11d, authorizationIdentity=org.wildfly.security.auth.realm.token.TokenSecurityRealm$TokenRealmIdentity$1@3d687a, realmInfo=RealmInfo{name='oauth-realm', securityRealm=org.wildfly.security.auth.realm.token.TokenSecurityRealm@a370f4}, creationTime=2018-02-27T09:44:06.981Z}
04:44:06,996 INFO  (MockWebServer 50831) [okhttp3.mockwebserver.MockWebServer] <MockWebServer.java:349> MockWebServer[50831] done accepting connections: Socket closed
04:44:12,006 INFO  (MockWebServer 50831) [okhttp3.mockwebserver.MockWebServer] <MockWebServer.java:323> MockWebServer[50831] starting to accept connections
04:44:12,006 TRACE (main) [org.wildfly.security] <AuthenticationContextConfigurationClient.java:121> getAuthenticationConfiguration uri=protocol://test7.org, protocolDefaultPort=-1, abstractType=null, abstractTypeAuthority=null, MatchRule=[host=test7.org], AuthenticationConfiguration=[AuthenticationConfiguration:principal=anonymous,set-host=test7.org,set-protocol=protocol,credentials-present,providers-supplier=org.wildfly.security.auth.client.ElytronXmlParser$DeferredSupplier@18ca3c8,mechanism-properties={wildfly.sasl.local-user.quiet-auth=true}]
04:44:12,008 TRACE (main) [org.wildfly.security] <SecurityProviderSaslClientFactory.java:114> Created SaslClient for mechanism OAUTHBEARER, using Provider WildFlyElytron and protocol protocol
...
{code}

It also causes that Exception is thrown during {{@After}} for the same test, example for OAuth2SaslClientV10Test:
{code}
java.io.IOException: Gave up waiting for executor to shut down
	at okhttp3.mockwebserver.MockWebServer.shutdown(MockWebServer.java:375)
	at org.wildfly.security.sasl.oauth2.OAuth2SaslClientV10Test.onAfter(OAuth2SaslClientV10Test.java:88)
{code}

After those exceptions in {{@Before}} and {{@After}} are thrown for some particular test then all following tests works correctly.",2018/02/27 8:22 AM
ELY-1519,"Currently in clustered environment Security Identity is restored during 
* failover
* load balancer change node (not sticky behaviour)
* session passivation/activation

This is mainly expected and good. It ensures performance gain because no additional SPNEGO negotiation is performed. But it can make troubles for kerberos ticket propagation, as kerberos ticket can't be serialized and restored. 

So idea is to have flag to turn this default behaviour off. When user authenticate to app1 on serverA and then wants to access app1 on serverB, SPNEGO authentication will be activated and kerberos ticket will be negotiated and will be available on serverB as well.
",2018/02/20 9:12 AM
ELY-1510,"If you try to access unprotected resource with no Authorization header, BearerTokenAuthenticationMechanism sees it as a failed authentication so 401 is sent.",2018/02/08 1:25 PM
ELY-1508,NoData,2018/02/07 12:31 PM
ELY-1507,"https://tools.ietf.org/html/rfc7519

JwtValidator implements iss clam as optional, samy way as stated in RFC7519. The validator is supposed to ignore iss check if its issuers set was empty, however even though it logs that issuer check is ignored it still checks it and rejects all tokens that do not contain iss claim.",2018/02/02 5:36 AM
ELY-1503,"Session-scoped (default) SPNEGO authentication does not work on </distributable> deployments.

Works on CONNECTION and NONE scoped.

{code}
07:09:42,554 ERROR [io.undertow.request] (default task-63) UT005023: Exception handling request to /3246302d-d806-4441-ab87-1cf291a618d5/protected/SimpleSecuredServlet: java.lang.IllegalArgumentException: org.infinispan.commons.marshall.NotSerializableException: sun.security.jgss.GSSContextImpl
	at org.wildfly.clustering.web.infinispan.session.coarse.CoarseSessionAttributes.setAttribute(CoarseSessionAttributes.java:71)
	at org.wildfly.clustering.web.undertow.session.DistributableSession.setAttribute(DistributableSession.java:176)
	at io.undertow.servlet.spec.HttpSessionImpl.setAttribute(HttpSessionImpl.java:169)
	at org.wildfly.extension.undertow.ApplicationSecurityDomainDefinition$ApplicationSecurityDomainService$4.setAttachment(ApplicationSecurityDomainDefinition.java:676)
	at org.wildfly.security.http.impl.SpnegoAuthenticationMechanism.evaluateRequest(SpnegoAuthenticationMechanism.java:199)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:114)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:114)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:115)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:94)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:78)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:100)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:326)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:812)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.infinispan.commons.marshall.NotSerializableException: sun.security.jgss.GSSContextImpl
{code}
",2018/01/26 1:19 AM
ELY-1500,"Effectivelly Elytron contains infinite recursion implemented.
{code:java|title=FactoryCredentialSource.java}
    @Override
    public SupportLevel getCredentialAcquireSupport(Class<? extends Credential> credentialType, String algorithmName, AlgorithmParameterSpec parameterSpec) throws IOException {
        return getCredentialAcquireSupport(credentialType, algorithmName, parameterSpec) != null ? SupportLevel.SUPPORTED : SupportLevel.UNSUPPORTED;
    }
{code}

[1] https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=46596205&defectInstanceId=9782368&mergedDefectId=1464361",2018/01/25 9:20 AM
ELY-1499,"Despite the fact ServerAuthenticationContext is AutoClosable. Newly created instance in HttpAuthenticator#login() is not closed and no reference is passed outside of method, so is left unclosed forever. 

[1] https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=46513446&defectInstanceId=9767772&mergedDefectId=1464362",2018/01/25 9:11 AM
ELY-1494,"This happens on HP-UX in KeyStoreCredentialStoreTest. It probably related to ELY-1295 fix. Fix have to take HP-UX JDK in account as well.
 
Btw. Isn't there more elegant way how to enable tests for PKCS12. Necessary hack seems to be problematic.

{noformat}
java.lang.SecurityException: JCE cannot authenticate the provider WildFlyElytron
        at javax.crypto.JceSecurity.getInstance(JceSecurity.java:118)
        at javax.crypto.SecretKeyFactory.getInstance(SecretKeyFactory.java:244)
        at  org.wildfly.security.credential.store.impl.KeyStoreCredentialStoreTest.installWildFlyElytronProvider(KeyStoreCredentialStoreTest.java:117)
Caused  by: java.lang.SecurityException: Cannot verify  jar:file:/hudson_workspace/workspace/wildfly-elytron-unit-tests/8cc93d85/wildfly-elytron/target/classes/!/
        at javax.crypto.JarVerifier.verifySingleJar(JarVerifier.java:448)
        at javax.crypto.JarVerifier.verifyJars(JarVerifier.java:363)
        at javax.crypto.JarVerifier.verify(JarVerifier.java:289)
        at javax.crypto.JceSecurity.verifyProviderJar(JceSecurity.java:164)
        at javax.crypto.JceSecurity.getVerificationResult(JceSecurity.java:190)
        at javax.crypto.JceSecurity.getInstance(JceSecurity.java:114)
        ... 2 more
Caused  by: java.security.PrivilegedActionException:  java.io.FileNotFoundException:  /hudson_workspace/workspace/wildfly-elytron-unit-tests/8cc93d85/wildfly-elytron/target/classes  (Is a directory)
        at java.security.AccessController.doPrivileged(Native Method)
        at javax.crypto.JarVerifier.verifySingleJar(JarVerifier.java:426)
        ... 7 more
Caused  by: java.io.FileNotFoundException:  /hudson_workspace/workspace/wildfly-elytron-unit-tests/8cc93d85/wildfly-elytron/target/classes  (Is a directory)
        at java.util.zip.ZipFile.open(Native Method)
        at java.util.zip.ZipFile.<init>(ZipFile.java:225)
        at java.util.zip.ZipFile.<init>(ZipFile.java:155)
        at java.util.jar.JarFile.<init>(JarFile.java:166)
        at java.util.jar.JarFile.<init>(JarFile.java:103)
        at javax.crypto.JarVerifier$2.run(JarVerifier.java:440)
        at javax.crypto.JarVerifier$2.run(JarVerifier.java:427)
        ... 9 more
{noformat}

[1] https://jenkins.hosts.mwqe.eng.bos.redhat.com/hudson/view/EAP7/view/EAP7-Security/view/Wildfly-Elytron/job/wildfly-elytron-unit-tests/40/jdk=jdk1.8_hpux,label=eap-sustaining&&hpux11v3/testReport/",2018/01/22 2:01 AM
ELY-1493,"On solaris 10 (slow machine) there occured timeout for task task2Future.get(1, TimeUnit.SECONDS) on line 492. 

Prolong timeout will probably reduce occurences. 

{noformat}
java.lang.RuntimeException: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException
         at  org.wildfly.security.credential.store.KeystorePasswordStoreTest.testAccessFromMultipleCredentialStores(KeystorePasswordStoreTest.java:459)
         at  org.wildfly.security.credential.store.KeystorePasswordStoreTest.testParallelAccessToCS(KeystorePasswordStoreTest.java:439)
Caused by: java.util.concurrent.ExecutionException: java.util.concurrent.TimeoutException
        at java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122)
        at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:205)
         at  org.wildfly.security.credential.store.KeystorePasswordStoreTest.testAccessFromMultipleCredentialStores(KeystorePasswordStoreTest.java:457)
        ... 1 more
Caused by: java.util.concurrent.TimeoutException
        at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)
        at org.wildfly.security.credential.store.KeystorePasswordStoreTest$1.call(KeystorePasswordStoreTest.java:492)
        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
        at java.base/java.lang.Thread.run(Thread.java:844)
{noformat}


[1] https://jenkins.hosts.mwqe.eng.bos.redhat.com/hudson/view/EAP7/view/EAP7-Security/view/Wildfly-Elytron/job/wildfly-elytron-unit-tests/40/jdk=java18_default,label=eap-sustaining&&solaris10&&sparc/testReport/
",2018/01/22 1:41 AM
ELY-1492,"This occures in TS on JDK9 on Windows in tests:
* org.wildfly.security.sasl.gssapi.CommunicationSuiteChild
* org.wildfly.security.sasl.gs2.Gs2SuiteChild

{noformat}
javax.security.auth.login.LoginException: 
java.nio.file.InvalidPathException: Illegal char <:> at index 2: /W:/workspace/wildfly-elytron-unit-tests/4ad7c91f/wildfly-elytron/target/test-classes/krb5.conf
	at java.base/sun.nio.fs.WindowsPathParser.normalize(WindowsPathParser.java:182)
	at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:153)
	at java.base/sun.nio.fs.WindowsPathParser.parse(WindowsPathParser.java:77)
	at java.base/sun.nio.fs.WindowsPath.parse(WindowsPath.java:92)
	at java.base/sun.nio.fs.WindowsFileSystem.getPath(WindowsFileSystem.java:229)
	at java.base/java.nio.file.Paths.get(Paths.java:84)
	at java.security.jgss/sun.security.krb5.Config.lambda$loadConfigFile$0(Config.java:639)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:429)
	at java.security.jgss/sun.security.krb5.Config.loadConfigFile(Config.java:638)
	at java.security.jgss/sun.security.krb5.Config.<init>(Config.java:176)
	at java.security.jgss/sun.security.krb5.Config.refresh(Config.java:115)
	at jdk.security.auth/com.sun.security.auth.module.Krb5LoginModule.login(Krb5LoginModule.java:528)
	at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:726)
	at java.base/javax.security.auth.login.LoginContext.access$000(LoginContext.java:194)
	at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
	at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
	at java.base/javax.security.auth.login.LoginContext.login(LoginContext.java:574)
	at org.wildfly.security.sasl.gssapi.JaasUtil.login(JaasUtil.java:71)
	at org.wildfly.security.sasl.gssapi.JaasUtil.loginClient(JaasUtil.java:53)
	at org.wildfly.security.sasl.gs2.Gs2SuiteChild.init(Gs2SuiteChild.java:102)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:564)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at mockit.integration.junit4.internal.JUnit4TestRunnerDecorator.executeClassMethod(JUnit4TestRunnerDecorator.java:92)
	at mockit.integration.junit4.internal.JUnit4TestRunnerDecorator.invokeExplosively(JUnit4TestRunnerDecorator.java:30)
	at mockit.integration.junit4.internal.MockFrameworkMethod.invokeExplosively(MockFrameworkMethod.java:37)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)

	at java.base/javax.security.auth.login.LoginContext.invoke(LoginContext.java:821)
	at java.base/javax.security.auth.login.LoginContext.access$000(LoginContext.java:194)
	at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:665)
	at java.base/javax.security.auth.login.LoginContext$4.run(LoginContext.java:663)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:663)
	at java.base/javax.security.auth.login.LoginContext.login(LoginContext.java:574)
	at org.wildfly.security.sasl.gssapi.JaasUtil.login(JaasUtil.java:71)
	at org.wildfly.security.sasl.gssapi.JaasUtil.loginClient(JaasUtil.java:53)
	at org.wildfly.security.sasl.gs2.Gs2SuiteChild.init(Gs2SuiteChild.java:102)
{noformat}

[1] https://jenkins.hosts.mwqe.eng.bos.redhat.com/hudson/view/EAP7/view/EAP7-Security/view/Wildfly-Elytron/job/wildfly-elytron-unit-tests/41/jdk=jdk1.9,label=eap-sustaining&&w2k12r2&&x86_64/testReport/",2018/01/22 1:31 AM
ELY-1487,"DIGEST-SHA-256 and DIGEST-SHA-512-256 are not correctly registered:

When trying to deploy application using one of them for authentication:
{code}
org.jboss.arquillian.container.spi.client.container.DeploymentException: Cannot deploy DigestSha256MechTestCase.war: {""WFLYCTL0062: Composite operation failed and was rolled back. Steps that failed:"" => {""Operation step-1"" => {""WFLYCTL0080: Failed services"" => {""jboss.undertow.deployment.default-server.default-host./DigestSha256MechTestCase"" => ""java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
    Caused by: java.lang.RuntimeException: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.
    Caused by: java.lang.IllegalStateException: WFLYUT0084: There are no mechanisms available from the HttpAuthenticationFactory.""}}}}
{code}

Problem is mechanisms are missing in output of {{ServerMechanismFactoryImpl.getMechanismNames()}}.",2018/01/12 11:42 AM
ELY-1479,"super.getNegotiatedProperty() is not called in AbstractGssapiMechanism#getNegotiatedProperty, although it is called in similar cases in Gs2SaslServer, DigestSaslServer, AnonymousSaslClient.

{code:java|title=AbstractGssapiMechanism.java}
    @Override
    public Object getNegotiatedProperty(String propName) {
        assertComplete();

        switch (propName) {
            case Sasl.QOP:
                return selectedQop.getName();
            case Sasl.MAX_BUFFER:
                return Integer.toString(actualMaxReceiveBuffer != 0 ? actualMaxReceiveBuffer : configuredMaxReceiveBuffer);
            case Sasl.RAW_SEND_SIZE:
                return Integer.toString(maxBuffer);
        }

        return null;
    }
{code}

This coverity report is not caused by recent change in AbstractGssapiMechanism but rather Gs2SaslServer and DigestSaslServer

[1] https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=44847684&defectInstanceId=9457508&mergedDefectId=1463150",2018/01/04 2:50 AM
ELY-1477,NoData,2018/01/03 9:18 AM
ELY-1476,"Each of these ens up being backed by their own lambda, if we add a Supplier<Provider[]> INSTALLED_PROVDERS = Security::getProviders to ProviderUtil all can share this.",2018/01/03 8:42 AM
ELY-1475,"In case when empty username is passed to FormAuthenticationMechanism.attemptAuthentication then IllegalArgumentException is thrown from constructor of NameCallback. This happens in cases when form is sent with empty value for j_username.

See exception:
{code}
ERROR [io.undertow.request] (default task-18) UT005023: Exception handling request to /depForm/j_security_check: java.lang.IllegalArgumentException
	at javax.security.auth.callback.NameCallback.<init>(NameCallback.java:90)
	at org.wildfly.security.http.impl.UsernamePasswordAuthenticationMechanism.authenticate(UsernamePasswordAuthenticationMechanism.java:60)
	at org.wildfly.security.http.impl.FormAuthenticationMechanism.attemptAuthentication(FormAuthenticationMechanism.java:172)
	at org.wildfly.security.http.impl.FormAuthenticationMechanism.evaluateRequest(FormAuthenticationMechanism.java:106)
	at org.wildfly.security.http.util.SetMechanismInformationMechanismFactory$1.evaluateRequest(SetMechanismInformationMechanismFactory.java:114)
	at org.wildfly.security.http.util.SecurityIdentityServerMechanismFactory$1.evaluateRequest(SecurityIdentityServerMechanismFactory.java:77)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.authenticate(HttpAuthenticator.java:115)
	at org.wildfly.security.http.HttpAuthenticator$AuthenticationExchange.access$100(HttpAuthenticator.java:94)
	at org.wildfly.security.http.HttpAuthenticator.authenticate(HttpAuthenticator.java:78)
	at org.wildfly.elytron.web.undertow.server.SecurityContextImpl.authenticate(SecurityContextImpl.java:100)
	at io.undertow.servlet.handlers.security.ServletAuthenticationCallHandler.handleRequest(ServletAuthenticationCallHandler.java:55)
	at io.undertow.server.handlers.DisableCacheHandler.handleRequest(DisableCacheHandler.java:33)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.security.handlers.AuthenticationConstraintHandler.handleRequest(AuthenticationConstraintHandler.java:53)
	at io.undertow.security.handlers.AbstractConfidentialityHandler.handleRequest(AbstractConfidentialityHandler.java:46)
	at io.undertow.servlet.handlers.security.ServletConfidentialityConstraintHandler.handleRequest(ServletConfidentialityConstraintHandler.java:64)
	at io.undertow.servlet.handlers.security.ServletSecurityConstraintHandler.handleRequest(ServletSecurityConstraintHandler.java:59)
	at io.undertow.security.handlers.AbstractSecurityContextAssociationHandler.handleRequest(AbstractSecurityContextAssociationHandler.java:43)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.security.jacc.JACCContextIdHandler.handleRequest(JACCContextIdHandler.java:61)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at org.wildfly.extension.undertow.deployment.GlobalRequestControllerHandler.handleRequest(GlobalRequestControllerHandler.java:68)
	at io.undertow.server.handlers.PredicateHandler.handleRequest(PredicateHandler.java:43)
	at io.undertow.servlet.handlers.ServletInitialHandler.handleFirstRequest(ServletInitialHandler.java:292)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$100(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:138)
	at io.undertow.servlet.handlers.ServletInitialHandler$2.call(ServletInitialHandler.java:135)
	at io.undertow.servlet.core.ServletRequestContextThreadSetupAction$1.call(ServletRequestContextThreadSetupAction.java:48)
	at io.undertow.servlet.core.ContextClassLoaderSetupAction$1.call(ContextClassLoaderSetupAction.java:43)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at org.wildfly.extension.undertow.deployment.UndertowDeploymentInfoService$UndertowThreadSetupAction.lambda$create$0(UndertowDeploymentInfoService.java:1508)
	at io.undertow.servlet.handlers.ServletInitialHandler.dispatchRequest(ServletInitialHandler.java:272)
	at io.undertow.servlet.handlers.ServletInitialHandler.access$000(ServletInitialHandler.java:81)
	at io.undertow.servlet.handlers.ServletInitialHandler$1.handleRequest(ServletInitialHandler.java:104)
	at io.undertow.server.Connectors.executeRootHandler(Connectors.java:326)
	at io.undertow.server.HttpServerExchange$1.run(HttpServerExchange.java:812)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
{code}

It seems that [1] should also check {{username.length() == 0}}.

[1] https://github.com/wildfly-security/wildfly-elytron/blob/32ff7c17965b3ecae6be7ce1c9b96ab642ddc4ad/src/main/java/org/wildfly/security/http/impl/FormAuthenticationMechanism.java#L165
",2018/01/03 7:26 AM
ELY-1471,"We currently load every single implementation class just to identify it's name.

Whilst this makes refactoring easier it causes a heavy hit to the ClassLoader just to install the provider even though only a small subset of it's services tend to be used at once.
",2017/12/21 7:55 AM
ELY-1468,"When more mechanismTypes is provided but the Kerberos mechanism is not listed as the supported one then authentication should fail. And 401 should be returned, but 403 is on IBM java.

This issue was hidden by ELY-1340.",2017/12/14 8:11 AM
ELY-1464,"By only caching the name of the identity the server authentication context -> security domain -> security realm chain is called for each subsequent request when we should have been able to re-use an existing identity.
",2017/12/13 7:42 AM
ELY-1463,NoData,2017/12/13 7:40 AM
ELY-1460,"To specify external secret file location externalPath is intended. However in case of PKCS11 it can't be achieved.

{code}
10:53:03,403 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-1) MSC000001: Failed to start service org.wildfly.security.credential-store.fips-credential-store: org.jboss.msc.service.StartException in service org.wildfly.security.credential-store.fips-credential-store: WFLYELY00004: Unable to start the service.
	at org.wildfly.extension.elytron.CredentialStoreService.start(CredentialStoreService.java:134)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:2032)
	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1955)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.wildfly.security.credential.store.CredentialStoreException: ELY09514: Unable to initialize credential store
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.setupExternalStorage(KeyStoreCredentialStore.java:954)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.load(KeyStoreCredentialStore.java:828)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.initialize(KeyStoreCredentialStore.java:214)
	at org.wildfly.security.credential.store.CredentialStore.initialize(CredentialStore.java:159)
	at org.wildfly.extension.elytron.CredentialStoreService.start(CredentialStoreService.java:126)
	... 5 more
Caused by: java.nio.file.NoSuchFileException: /home/mchoma/workspace/git-repositories/tests-security/fips/fips-credential-store
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	at sun.nio.fs.UnixFileSystemProvider.newByteChannel(UnixFileSystemProvider.java:214)
	at java.nio.file.Files.newByteChannel(Files.java:361)
	at java.nio.file.Files.newByteChannel(Files.java:407)
	at java.nio.file.spi.FileSystemProvider.newInputStream(FileSystemProvider.java:384)
	at java.nio.file.Files.newInputStream(Files.java:152)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.setupExternalStorage(KeyStoreCredentialStore.java:943)
	... 9 more

10:53:03,409 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 4) WFLYCTL0013: Operation (""add"") failed - address: ([
    (""subsystem"" => ""elytron""),
    (""credential-store"" => ""fips-credential-store"")
]) - failure description: {""WFLYCTL0080: Failed services"" => {""org.wildfly.security.credential-store.fips-credential-store"" => ""WFLYELY00004: Unable to start the service.
    Caused by: org.wildfly.security.credential.store.CredentialStoreException: ELY09514: Unable to initialize credential store
    Caused by: java.nio.file.NoSuchFileException: /home/mchoma/workspace/git-repositories/tests-security/fips/fips-credential-store""}}
{code}

Problem seems to be in method
{code:java|title=KeyStoreCredentialStore.java}
    private void setupExternalStorage(final String keyContainingKeyStoreType, final Path keyContainingKeyStoreLocation) throws CredentialStoreException {
        KeyStore keyContainingKeyStore = getKeyStoreInstance(keyContainingKeyStoreType);
        keyStore = getKeyStoreInstance(""JCEKS"");
        externalStorage = new ExternalStorage();
        try {
            final char[] storePassword = getStorePassword(protectionParameter);
            if (keyContainingKeyStoreLocation != null) {
                try (InputStream is = Files.newInputStream(keyContainingKeyStoreLocation)) {
                    keyContainingKeyStore.load(is, storePassword);
                }
            } else {
                // keystore without file (e.g. PKCS11)
                synchronized (EmptyProvider.getInstance()) {
                    keyContainingKeyStore.load(null, storePassword);
                }
            }
            externalStorage.init(cryptographicAlgorithm, encryptionKeyAlias, keyContainingKeyStore, storePassword, keyStore);
        } catch(IOException | GeneralSecurityException e) {
            throw log.cannotInitializeCredentialStore(e);
        }
    }
{code}

Although location is not specified in CLI command keyContainingKeyStoreLocation is not null. Because once location is not specified it becomes name of CS, in this case fips-credential-store (This default is in elytron subsystem).",2017/12/07 10:28 AM
ELY-1458,"With IBM java
{noformat}
java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr4fp6-20170518_02(SR4 FP6))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20170516_348050 (JIT enabled, AOT enabled)
J9VM - R28_20170516_1905_B348050
JIT  - tr.r14.java_20170516_348050
GC   - R28_20170516_1905_B348050_CMPRSS
J9CL - 20170516_348050)
JCL - 20170516_01 based on Oracle jdk8u131-b11
{noformat}

run test
{noformat}
 mvn test -Dtest=SelfSignedX509CertificateAndSigningKeyTest

[INFO] Running org.wildfly.security.x500.cert.SelfSignedX509CertificateAndSigningKeyTest
[ERROR] Tests run: 9, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 2.372 s <<< FAILURE! - in org.wildfly.security.x500.cert.SelfSignedX509CertificateAndSigningKeyTest
[ERROR] testSelfSignedCertificateWithStringExtensionValues(org.wildfly.security.x500.cert.SelfSignedX509CertificateAndSigningKeyTest)  Time elapsed: 0.274 s  <<< FAILURE!
java.lang.AssertionError
	at org.wildfly.security.x500.cert.SelfSignedX509CertificateAndSigningKeyTest.testSelfSignedCertificateWithStringExtensionValues(SelfSignedX509CertificateAndSigningKeyTest.java:197)

{noformat}

This is test line failing
{code:java|title=SelfSignedX509CertificateAndSigningKeyTest.java}
        byte[] authorityInfoAccessExtension = certificate.getExtensionValue(X500.OID_PE_AUTHORITY_INFO_ACCESS);
        assertNotNull(authorityInfoAccessExtension);
{code}",2017/12/04 4:41 AM
ELY-1457,"{noformat}
mvn clean install -DskipTests
mvn surefire:test -fae -Dmaven.test.failure.ignore=true

[WARNING] Corrupted stdin stream in forked JVM 1. See the dump file /home/mchoma/workspace/git-repositories/wildfly-elytron/target/surefire-reports/2017-11-30T17-02-48_325-jvmRun1.dumpstream

ExecutionException The forked VM terminated without properly saying goodbye. VM crash or System.exit called?
Command was /bin/sh -c cd /home/mchoma/workspace/git-repositories/wildfly-elytron && /usr/java/jdk1.8.0_131/jre/bin/java '-javaagent:${org.jmockit:jmockit:jar}' -jar /home/mchoma/workspace/git-repositories/wildfly-elytron/target/surefire/surefirebooter575191532113315054.jar /home/mchoma/workspace/git-repositories/wildfly-elytron/target/surefire 2017-11-30T17-02-48_325-jvmRun1 surefire4127140177271714029tmp surefire_06835135917194901533tmp
Error occurred in starting fork, check output in log
Process Exit Code: 1
{noformat}

*  ""mvn test"" works just fine.
*  ""mvn surefire:test"" used to be necessary for running testsuite with IBM JDK, as TS was not compilable with IBM JDK (this is not true anymore). So TS was build with Oracle JDK and run with IBM JDK. 
*  ""mvn surefire:test"" used to work back in July.",2017/12/04 4:30 AM
ELY-1456,"Two same sql queries are performed on authentication attempt using jdbc-realm.

{noformat}
2017-11-29T15:53:32.399596Z   338 Query select password from user where email = 'alberto@myapp.com'
2017-11-29T15:53:32.400879Z   338 Query select role, 'Roles' from user_role_auth where email = 'alberto@myapp.com'
2017-11-29T15:53:32.402531Z   338 Query select password from user where email = 'alberto@myapp.com'
{noformat}",2017/11/30 4:47 AM
ELY-1453,"SigTest check reveals:
{noformat}
Hidden class found:
org.wildfly.security.auth.server.event.RealmDefiniteOutcomeAuthenticationEvent
in method public
{org.wildfly.security.auth.server.event.RealmEventVisitor%1}
org.wildfly.security.auth.server.event.RealmEventVisitor.handleDefiniteOutcomeAuthenticationEvent(org.wildfly.security.auth.server.event.RealmDefiniteOutcomeAuthenticationEvent,{org.wildfly.security.auth.server.event.RealmEventVisitor%0})
in class org.wildfly.security.auth.server.event.RealmEventVisitor
{noformat}

Fix could be as easy as make RealmDefiniteOutcomeAuthenticationEvent public.

But I still left for developers judgement if make constructor of RealmDefiniteOutcomeAuthenticationEvent package private. Thus RealmDefiniteOutcomeAuthenticationEvent can't be inherited from. If that was reason for not marking this class as public originally.
",2017/11/22 7:29 AM
ELY-1448,"Backwards compatibility has been broken on the public handleCallbacks methods so this needs to be fixed.

However this class should not really be a public API, it has been picked up in the package as we have the AuthenticationMechanismException which does need to be public.

The entire class should be deprecated and the impl moved to a private package.
",2017/11/17 12:57 PM
ELY-1447,NoData,2017/11/15 2:56 PM
ELY-1436,"User reported problem with getting work jdbc_realm with bcrypt mapper. He had configured org.wildfly.security to log TRACE messages, but log does not provide any useful information regarding mapping password from DB.

In this case seems problem was in mixing base64 vs. modular crypt format.

Looking into PasswordKeyMapper there is a lot of logic and lot of steps which can get wrong. So logging some TRACE messages can hint user what is going on and what went wrong.

Also I have noticed there is unhandled exception. Please at least log some TRACE message.

{code:java|title=PasswordKeyMapper.java}
} catch (InvalidKeySpecException e) {
	// fall out (unlikely but possible)
}
{code}

[1] https://developer.jboss.org/message/977727
",2017/11/07 4:58 AM
ELY-1430,"When Elytron JACC policy resource is defined, there is WARN logged during server shutdown:

{{WARN  [org.wildfly.security] (MSC service thread 1-8) ELY08509: Calling any of the Policy.getPermissions() methods is not supported; please see the Java Authorization Contract for Containers (JACC) specification (section ""1.4 Requirements"", item 1) and the Java SE API specification for the Policy.getPermissions() methods for more information.  Instead, use the Policy.implies() method for authorization checking.}}

This is suspicious behaviour. Customers that monitor logs for warnings have to deal with this. Setting Critical.",2017/10/30 11:43 AM
ELY-1428,"Trying to configure ejb client 2-way TLS authentication with Elytron. I am getting ""Invalid algorithm ""clear"" without use of programatically registering Elytron provider.

{noformat}
Security.addProvider(new WildFlyElytronProvider());
{noformat}

Specifying this in {{wildfly-config.xml}} doesn't help:
{noformat}
<providers>
            <use-service-loader/>
</providers>
{noformat}

Example of {{wildfly-config.xml}} where I need this when using it with EJB client:
{code:xml}
<configuration>
    <authentication-client xmlns=""urn:elytron:1.0"">
        <authentication-rules>
            <rule use-configuration=""default""/>
        </authentication-rules>
        <authentication-configurations>
            <configuration name=""default"">
                <credentials>
                    <key-store-reference key-store-name=""client-keystore"" alias=""joe"">
                        <key-store-clear-password password=""abcdef""/>
                    </key-store-reference>
                </credentials>
            </configuration>
        </authentication-configurations>
        <key-stores>
            <key-store name=""client-keystore"" type=""JKS"">
                <file name=""${keystore.path:src/main/resources/client.keystore}""/>
                <key-store-clear-password password=""abcdef""/>
            </key-store>
            <key-store name=""client-truststore"" type=""JKS"">
                <file name=""${truststore.path:src/main/resources/client.truststore}""/>
            </key-store>
        </key-stores>
        <ssl-contexts>
            <ssl-context name=""client-ssl-context"">
                <trust-store key-store-name=""client-truststore""/>
                <key-store-ssl-certificate key-store-name=""client-keystore"" alias=""joe"">
                    <key-store-clear-password password=""abcdef""/>
                </key-store-ssl-certificate>
            </ssl-context>
        </ssl-contexts>
        <ssl-context-rules>
            <rule use-ssl-context=""client-ssl-context""/>
        </ssl-context-rules>
    </authentication-client>
</configuration>
{code}

Without installing the Elytron provider, the client will fail with this error:
{noformat}
Exception in thread ""main"" java.lang.ExceptionInInitializerError
	at org.wildfly.security.auth.client.AuthenticationContext.lambda$static$0(AuthenticationContext.java:49)
	at org.wildfly.common.context.ContextManager.getPrivileged(ContextManager.java:282)
	at org.wildfly.security.auth.client.AuthenticationContext.captureCurrent(AuthenticationContext.java:81)
	at org.wildfly.naming.client.ProviderEnvironment$1.get(ProviderEnvironment.java:89)
	at org.wildfly.naming.client.ProviderEnvironment$1.get(ProviderEnvironment.java:87)
	at org.jboss.ejb.client.EJBClientInvocationContext.<init>(EJBClientInvocationContext.java:87)
	at org.jboss.ejb.client.EJBInvocationHandler.invoke(EJBInvocationHandler.java:154)
	at org.jboss.ejb.client.EJBInvocationHandler.invoke(EJBInvocationHandler.java:100)
	at com.sun.proxy.$Proxy2.hello(Unknown Source)
	at client.Client.main(Client.java:21)
Caused by: org.wildfly.security.auth.client.InvalidAuthenticationConfigurationException: org.wildfly.client.config.ConfigXMLParseException: ELY01135: Failed to load keystore data
	at file:/home/jmartisk/Workspace/mock-artifacts/ejbclient/eap7.1-elytron-certificate-auth-with-two-way-ssl/client/target/classes/META-INF/wildfly-config.xml:9:87
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:40)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.<clinit>(DefaultAuthenticationContextProvider.java:36)
	... 10 more
Caused by: org.wildfly.client.config.ConfigXMLParseException: ELY01135: Failed to load keystore data
	at file:/home/jmartisk/Workspace/mock-artifacts/ejbclient/eap7.1-elytron-certificate-auth-with-two-way-ssl/client/target/classes/META-INF/wildfly-config.xml:9:87
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseKeyStoreRefType$44(ElytronXmlParser.java:1410)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseCredentialsType$28(ElytronXmlParser.java:952)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$andThenOp$26(ElytronXmlParser.java:939)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseCredentialsType$36(ElytronXmlParser.java:997)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationConfigurationType$21(ElytronXmlParser.java:733)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$andThenOp$26(ElytronXmlParser.java:939)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationConfigurationType$25(ElytronXmlParser.java:781)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseAuthenticationRuleType$10(ElytronXmlParser.java:613)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseRulesType$11(ElytronXmlParser.java:639)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:337)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:214)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:175)
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:38)
	... 12 more
Caused by: java.security.NoSuchAlgorithmException: ELY08028: Invalid algorithm ""clear""
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:121)
	at org.wildfly.security.password.PasswordFactory.getInstance(PasswordFactory.java:75)
	at org.wildfly.security.auth.client.ElytronXmlParser.lambda$parseKeyStoreRefType$44(ElytronXmlParser.java:1376)
	... 24 more
{noformat}

Using credential-store-reference clear-text cause similar error.

There is example of clear passwords which works, so it will be problem of this specific elements:
{code:xml}
<authentication-client xmlns=""urn:elytron:1.0"">
        <authentication-rules>
            <rule use-configuration=""default""/>
        </authentication-rules>
        <authentication-configurations>
            <configuration name=""default"">
                <sasl-mechanism-selector selector=""DIGEST-MD5""/>
                <set-user-name name=""joe""/>
                <credentials>
                    <clear-password password=""joeIsAwesome2013!""/>
                </credentials>
            </configuration>
        </authentication-configurations>
    </authentication-client>	
{code}

",2017/10/30 5:36 AM
ELY-1426,"In following patch was introduced bug:

https://github.com/wildfly-security/wildfly-elytron/pull/851/files#diff-dc83c9f75c0f78bbdfd49f49d56514faR332

DigestSaslClient requests URP digest for default userName (authzid), not for authentication name (from NameCallback).
Code is ok for server side, but not for client side, where credential callback params should require name obtained by NameCallback.",2017/10/26 12:32 PM
ELY-1404,"SASL property *com.sun.security.sasl.digest.utf8* does not behave as default when its default value is explicitely configured.
When we ommit this explicit property setting then everything is fine.

This property is described here [1] and *true* is default value. Property is defined in wildfly-core project org.wildfly.security.sasl.WildFlySasl.USE_UTF8.
Here is how to set it [2].

Please check Steps to Reproduce, there is how to update test.

[1] https://doc-stage.usersys.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html-single/how_to_configure_server_security/#sasl_auth_mechanism_props_ref

[2] https://doc-stage.usersys.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.1/html-single/how_to_configure_server_security/#sasl_auth_mechanism_props_specify",2017/10/16 9:43 AM
ELY-1397,Javadoc generated using {{mvn javadoc:javadoc@full-javadoc}} does not include non-exported packages.,2017/10/11 5:48 AM
ELY-1396,"When an element's length is greater than 127 bytes, {{DEREncoder#writeLength}} successfully writes the length octets using the long form where bit 8 of first octet has value ""1"" and bits 7-1 give the number of additional length octets and the second and following octets give the length. However, the value returned by {{writeLength}} in this case is currently just the number of additional length octets. When such an element is part of a SET, this results in the wrong accumulated length for the SET. The value returned by {{writeLength}} should also include the first octet. ",2017/10/10 5:29 PM
ELY-1394,"ElytronClient - sslContext cannot use credential-store-reference clear-text password for key-store-ssl-certificate.

When you define clear-text password with ""<key-store-clear-password password=\""Elytron\""/>\n""
instead of credential-store clear-text password then everything works fine.",2017/10/10 2:16 AM
ELY-1391,Check if all elements in elytron-1_0.xsd are parsed correctly in ElytronXmlParser and vice versa.,2017/10/06 3:30 PM
ELY-1384,"It should be defined as follows as per [RFC 5280 Section 4.2.1.2 |https://tools.ietf.org/html/rfc5280#section-4.2.1.2]:

{code}
SubjectKeyIdentifier ::= KeyIdentifier
KeyIdentifier ::= OCTET STRING
{code}",2017/10/05 3:54 PM
ELY-1380,"The Elytron SASL mechanism implementations don't throw {{IllegalStateException}}  when calling the {{getNegotiatedProperty()}} method before the negotiation is finished.

The contract of the {{Object javax.security.sasl.SaslClient.getNegotiatedProperty(String propName)}} says:
bq. Retrieves the negotiated property. This method can be called only after the authentication exchange has completed (i.e., when isComplete() returns true); otherwise, an IllegalStateException is thrown.

The same is valid for the {{SaslServer}} interface.",2017/10/04 9:43 AM
ELY-1373,"Given SPNEGO + FORM authentication configuration. And running on IBM java.
When invalid kerberos ticket is send 
Then status code 200 is returned with http form. 

While on Oracle JDK {{gssContext.isEstablished()}} returns true for invalid client ticket (negotiate with wrong domain JBOSS.COM), so SPNEGO mechanism sends bare challenge after failed authorization, on IBM JDK it returns false immediately, so mechanism fail without sending challenge - to be consistent should be send in both cases.
",2017/09/22 7:33 AM
ELY-1369,"Elytron HTTP DIGEST authentication comply to rfc2617 - which means MD5 is used by default (it means it is hardcode, with no way to configure another hash algorithm). But MD5 could make troubles in fips environment [5].

{code:java|title=DigestAuthenticationMechanism.java}
        String algorithm = convertToken(ALGORITHM, responseTokens.get(ALGORITHM));
        if (MD5.equals(algorithm) == false) {
            throw log.mechUnsupportedAlgorithm(getMechanismName(), algorithm);
        }
{code}

There exists proposed rfc7616 which makes algorithm configurable, work on new DIGEST features are covered by [1]. [~dlofthouse] is it planned for [1] to target 7.1? 

[1] https://issues.jboss.org/browse/ELY-286
[2] https://developer.jboss.org/wiki/ElytronHTTPDigestNonceHandling-Design
[3] https://tools.ietf.org/html/rfc2617
[4] https://tools.ietf.org/html/rfc7616
[5] https://access.redhat.com/support/cases/#/case/01761455",2017/09/20 5:38 AM
ELY-1367,"There is used {{new StringBuilder('{');}} in SimpleSecurityEventFormatter, but the param is interpreted as initial capacity of the builder.",2017/09/13 5:44 AM
ELY-1359,"When TRACE logging is set there is password logged into log.

{code}
14:41:28,701 DEBUG [org.wildfly.security] (default task-36) Creating [class javax.naming.directory.InitialDirContext] with environment:
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.security.credentials] with value [[s, e, c, r, e, t]]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.ldap.factory.socket] with value [org.wildfly.security.auth.realm.ldap.ThreadLocalSSLSocketFactory]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.security.authentication] with value [simple]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.provider.url] with value [ldaps://localhost.localdomain:15636 ldaps://localhost.localdomain:15637 ldaps://localhost.localdomain:15638]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [com.sun.jndi.ldap.read.timeout] with value [60000]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [com.sun.jndi.ldap.connect.pool] with value [false]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [com.sun.jndi.ldap.connect.timeout] with value [5000]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.security.principal] with value [uid=admin,ou=system]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.referral] with value [ignore]
14:41:28,701 DEBUG [org.wildfly.security] (default task-36)     Property [java.naming.factory.initial] with value [com.sun.jndi.ldap.LdapCtxFactory]
{code}

There was similar PicketBox issue in past based on customer request[1]

[1] https://bugzilla.redhat.com/show_bug.cgi?id=1020663",2017/09/07 9:05 AM
ELY-1353,There's no point to having a special/separate kerberosSecurityFactory on AuthenticationConfiguration.  The callback handling code path for this would work exactly the same if the Kerberos credential were instead stored on the regular CredentialSource in the configuration.,2017/09/01 2:40 PM
ELY-1352,"Certain common constructs are unnecessarily complicated or effectively impossible for everyday users to configure in the management model (such as ""if these principals match, use these permissions, else use these permissions"") due to the lack of backend support for a default case in the {{SimplePermissionMapper}}.

Add a way to introduce a {{Mapping}} which matches all principals.  The most general way to do this simply is to change the principal set into a principal predicate.",2017/08/31 1:32 PM
ELY-1351,"It's not possible to create an Elytron security domain without a security realm (default-realm attribute is mandatory).

When an administrator wants to allow just ANONYMOUS access, he/she has to use a dummy security realm to configure such a security domain. It should be possible to have domain without realms too.",2017/08/31 12:34 PM
ELY-1346,NoData,2017/08/24 9:36 PM
ELY-1345,"[~tomazcerar] 's commit broke my older fix for ELY-534. Due to that, some tests are erroring again with a {{ExceptionInInitializerError}}  -javaagent:${org.jmockit:jmockit:jar} is still required, even with {{ibm-java-sdk-8.0-4.10-x86_64}} and jmockit 1.33",2017/08/24 6:46 AM
ELY-1330,"Using GS2-KRB5-PLUS mechanism should be forced when channel binding is possible (server-ssl-context is used) and GS2-KRB5 should not be allowed in such case.

Currently the GS2-KRB5 authentication passes even if the SSL server context is used (channel binding possible).

This is a follow up to JBEAP-11396 and JBEAP-12231 which were aimed on SCRAM PLUS mechanisms. Most of the related discussion takes place on JBEAP-11396.",2017/08/10 9:23 AM
ELY-1328,"Invalid initial token is used on server for *GS2-KRB5-PLUS* SASL mechanism. The  {{Gs2SaslServer}} uses a GSSContext to accept the token. It expects AP_REQ is comming (*{{AP_REQ_ID=256}}*), but the incomming tokenId has value *{{669}}* (value of first 2 bytes of token body).

Setting blocker as this mechanism is required by EAP7-530 and EAP7-142.

Following exception is thrown:
{noformat}
GSSException: Defective token detected (Mechanism level: AP_REQ token id does not match!)
        at sun.security.jgss.krb5.InitSecContextToken.<init>(InitSecContextToken.java:96)
        at sun.security.jgss.krb5.Krb5Context.acceptSecContext(Krb5Context.java:829)
        at sun.security.jgss.GSSContextImpl.acceptSecContext(GSSContextImpl.java:342)
        at sun.security.jgss.GSSContextImpl.acceptSecContext(GSSContextImpl.java:285)
        at org.wildfly.security.sasl.gs2.Gs2SaslServer.evaluateMessage(Gs2SaslServer.java:212)
        at org.wildfly.security.sasl.util.AbstractSaslParticipant.evaluateMessage(AbstractSaslParticipant.java:180)
        at org.wildfly.security.sasl.util.AbstractSaslServer.evaluateResponse(AbstractSaslServer.java:52)
        at org.wildfly.security.sasl.util.AuthenticationCompleteCallbackSaslServerFactory$1.evaluateResponse(AuthenticationCompleteCallbackSaslServerFactory.java:58)
        at org.wildfly.security.sasl.util.AuthenticationTimeoutSaslServerFactory$DelegatingTimeoutSaslServer.evaluateResponse(AuthenticationTimeoutSaslServerFactory.java:106)
        at org.wildfly.security.sasl.util.SecurityIdentitySaslServerFactory$1.evaluateResponse(SecurityIdentitySaslServerFactory.java:57)
        at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:245)
        at org.xnio.sasl.SaslUtils.evaluateResponse(SaslUtils.java:217)
        at org.jboss.remoting3.remote.ServerConnectionOpenListener$AuthStepRunnable.run(ServerConnectionOpenListener.java:486)
        at org.jboss.remoting3.EndpointImpl$TrackingExecutor.lambda$execute$0(EndpointImpl.java:898)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:748)
{noformat}
",2017/08/10 8:29 AM
ELY-1313,"*This is backport of ELY-1308*

BouncyCastle external CredentialStore fail to store secret:
{code}
KeyStoreCredentialStore: flushing failed: java.lang.NullPointerException
	at org.bouncycastle.jcajce.provider.BaseCipher.engineGetParameters(Unknown Source)
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1020)
	at javax.crypto.Cipher.init(Cipher.java:1245)
	at javax.crypto.Cipher.init(Cipher.java:1186)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore$ExternalStorage.saveSecretKey(KeyStoreCredentialStore.java:1299)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore$ExternalStorage.store(KeyStoreCredentialStore.java:1283)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.flush(KeyStoreCredentialStore.java:779)
	at org.wildfly.security.credential.store.CredentialStore.flush(CredentialStore.java:364)
	at org.wildfly.extension.elytron.CredentialStoreResourceDefinition.storeSecret(CredentialStoreResourceDefinition.java:517)
{code}",2017/07/31 9:58 AM
ELY-1308,"BouncyCastle external CredentialStore fail to store secret:
{code}
KeyStoreCredentialStore: flushing failed: java.lang.NullPointerException
	at org.bouncycastle.jcajce.provider.BaseCipher.engineGetParameters(Unknown Source)
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1020)
	at javax.crypto.Cipher.init(Cipher.java:1245)
	at javax.crypto.Cipher.init(Cipher.java:1186)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore$ExternalStorage.saveSecretKey(KeyStoreCredentialStore.java:1299)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore$ExternalStorage.store(KeyStoreCredentialStore.java:1283)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.flush(KeyStoreCredentialStore.java:779)
	at org.wildfly.security.credential.store.CredentialStore.flush(CredentialStore.java:364)
	at org.wildfly.extension.elytron.CredentialStoreResourceDefinition.storeSecret(CredentialStoreResourceDefinition.java:517)
{code}",2017/07/25 9:42 AM
ELY-1306,"elytron-tool.sh --help printing before help output unnecessary bad message:
*Missing arguments. Printing general help message:*

This message is unnecessary because of I want to print general help message.

{code}
[hsvabek@dhcp-10-40-5-17 bin]$ ./elytron-tool.sh --help
Missing arguments. Printing general help message:
usage: ./elytron-tool.sh credential-store [-a <alias> | -e <alias> | -r <alias> | -v] [-c] [-d]  [-f] [-h] [-i <arg>] [-l <loc>] [-n <type>] [-o <providers>] [-p <pwd>] [-q <cs-provider>]  [-s <arg>] [-t <type>] [-u <arg>]  [-x <secret to store>]
{code}",2017/07/25 3:56 AM
ELY-1305,"Run script without any parameter must show help output, not error message.

{code}
[hsvabek@dhcp-10-40-5-17 bin]$ ./elytron-tool.sh 
Command or alias """" not found.
{code}",2017/07/25 3:37 AM
ELY-1301,"Add a test like this to `PemTest`:

{code}
    @Test
    public void testParsePemX509CertificateCacert() throws Exception {
        URL url = PemTest.class.getResource(""/ca/cacert.pem"");
        byte[] bytes = Files.readAllBytes(Paths.get(url.toURI()));
        assertNotNull(Pem.parsePemX509Certificate(CodePointIterator.ofUtf8Bytes(bytes)));
    }
{code}

Run the test with IBM JDK

{code}
export JAVA_HOME=path/to/ibm/java8
 
$JAVA_HOME/bin/java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr3fp12-20160919_01(SR3 FP12))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796 (JIT enabled, AOT enabled)
J9VM - R28_Java8_SR3_20160915_0912_B318796
JIT  - tr.r14.java.green_20160818_122998
GC   - R28_Java8_SR3_20160915_0912_B318796_CMPRSS
J9CL - 20160915_318796)
JCL - 20160914_01 based on Oracle jdk8u101-b13

mvn clean test -Dtest=PemTest#testParsePemX509CertificateCacert
{code}

Expected: The test should pass on IBM JDK just as it passes on Oracle/OpenJDK

Actual: The test hangs on IBM JDK",2017/07/21 10:10 AM
ELY-1300,"Add a test like this to `PemTest`:

{code}
    @Test
    public void testParsePemX509Certificate01() throws Exception {
        URL url = PemTest.class.getResource(""/ca/certs/01.pem"");
        byte[] bytes = Files.readAllBytes(Paths.get(url.toURI()));
        assertNotNull(Pem.parsePemX509Certificate(CodePointIterator.ofUtf8Bytes(bytes)));
    }
{code}

Note that {{ca/certs/01.pem}} should start with non-PEM content

{code}
Certificate:
    Data:
...
{code}

followed by the PEM content:

{code}
-----BEGIN CERTIFICATE-----
{code}

Run the test

{code}
mvn clean test -Dtest=PemTest#testParsePemX509Certificate01
{code}

Expected: Not quite sure if the parser should accept this. In any case, the following code works on Oracle/OpenJDK (while it does not on IBM JDK):

{code}
        CertificateFactory certificateFactory = CertificateFactory.getInstance(""X.509"");
        InputStream is = X509EvidenceVerificationSuiteChild.class.getResourceAsStream(""/ca/certs/01.pem"");
        Assert.assertNotNull((X509Certificate) certificateFactory.generateCertificate(is));
{code}

Actual: 

{code}
testParsePemX509Certificate01(org.wildfly.security.util.PemTest)  Time elapsed: 0.116 sec  <<< ERROR!
java.lang.IllegalArgumentException: ELY03010: Malformed PEM content at offset 1
	at org.wildfly.security.pem.Pem.parsePemContent(Pem.java:79)
	at org.wildfly.security.pem.Pem.parsePemX509Certificate(Pem.java:272)
	at org.wildfly.security.util.PemTest.testParsePemX509Certificate01(PemTest.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
{code}",2017/07/21 9:59 AM
ELY-1299,"{code}
export JAVA_HOME=path/to/ibm/java8

$JAVA_HOME/bin/java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr3fp12-20160919_01(SR3 FP12))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796 (JIT enabled, AOT enabled)
J9VM - R28_Java8_SR3_20160915_0912_B318796
JIT  - tr.r14.java.green_20160818_122998
GC   - R28_Java8_SR3_20160915_0912_B318796_CMPRSS
J9CL - 20160915_318796)
JCL - 20160914_01 based on Oracle jdk8u101-b13

mvn clean test -Dtest=LdapTestSuite
{code}

Expected: the selected test suite passes

Actual: {{X509EvidenceVerificationSuiteChild.testX509Auth()}} fails with the following exception:

{code}
java.security.cert.CertificateException: Unable to initialize, java.io.IOException: insufficient data
	at com.ibm.security.x509.X509CertImpl.<init>(X509CertImpl.java:268)
	at java.security.cert.CertificateFactory.generateCertificate(CertificateFactory.java:407)
	at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.loadCertificate(X509EvidenceVerificationSuiteChild.java:74)
	at org.wildfly.security.ldap.X509EvidenceVerificationSuiteChild.testX509Auth(X509EvidenceVerificationSuiteChild.java:65)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.wildfly.security.ldap.DirContextFactoryRule$1.evaluate(DirContextFactoryRule.java:61)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
{code}",2017/07/21 7:47 AM
ELY-1298,"A followup of ELY-1293

{{System.currentTimeMillis()}} is native in IBM JDK and at the same time, IBM JDK does not support  java.lang.instrument API for native methods. Therefore, {{System.currentTimeMillis()}} cannot be mocked on IBM JDK using jmockit.

{code}
export JAVA_HOME=path/to/ibm/java8

$JAVA_HOME/bin/java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr3fp12-20160919_01(SR3 FP12))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796 (JIT enabled, AOT enabled)
J9VM - R28_Java8_SR3_20160915_0912_B318796
JIT  - tr.r14.java.green_20160818_122998
GC   - R28_Java8_SR3_20160915_0912_B318796_CMPRSS
J9CL - 20160915_318796)
JCL - 20160914_01 based on Oracle jdk8u101-b13

mvn clean test 
{code}

Expected: the tests mocking {{System.currentTimeMillis()}} should pass
Actual: the tests mocking {{System.currentTimeMillis()}} throw the following exception or similar:

{code}
java.lang.UnsupportedOperationException: class redefinition failed: attempted to change method modifiers
	at org.wildfly.security.audit.PeriodicRotatingFileAuditEndpointTest$1.<init>(PeriodicRotatingFileAuditEndpointTest.java:212)
	at org.wildfly.security.audit.PeriodicRotatingFileAuditEndpointTest.mockTime(PeriodicRotatingFileAuditEndpointTest.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
{code}

This is currently the case with 

* GssapiCompatibilitySuiteChild",2017/07/21 6:52 AM
ELY-1297,NoData,2017/07/20 1:06 PM
ELY-1295,"{code}
export JAVA_HOME=path/to/ibm/java8
 
$JAVA_HOME/bin/java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr3fp12-20160919_01(SR3 FP12))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796 (JIT enabled, AOT enabled)
J9VM - R28_Java8_SR3_20160915_0912_B318796
JIT  - tr.r14.java.green_20160818_122998
GC   - R28_Java8_SR3_20160915_0912_B318796_CMPRSS
J9CL - 20160915_318796)
JCL - 20160914_01 based on Oracle jdk8u101-b13
 
mvn clean test -Dtest=KeyStoreCredentialStoreTest
{code}

Expected: KeyStoreCredentialStoreTest should pass

Actual: First, the ""hack to make JCE believe that it has verified the signature of the WildFlyElytronProvider JAR"" [1] throws

{code}
java.lang.ClassNotFoundException: javax.crypto.JceSecurity
	at java.lang.Class.forNameImpl(Native Method)
	at java.lang.Class.forName(Class.java:278)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStoreTest.installWildFlyElytronProvider(KeyStoreCredentialStoreTest.java:89)
...
{code}

because {{javax.crypto.JceSecurity}} does not exist in IBM JRE.

It looks like the hack is actually not necessary anymore, because {{KeyStoreCredentialStoreTest}} is passing also without the hack on both Oracle JDK and OpenJDK.

But once the hack is removed, on IBM JDK, {{shouldSupportKeyStoreFormat}} passes with format=JCEKS but fails with format=PKCS12 throwing the following exeception:

{code}
org.wildfly.security.credential.store.CredentialStoreException: ELY09504: Cannot acquire a credential from the credential store
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.retrieve(KeyStoreCredentialStore.java:464)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStoreTest.shouldSupportKeyStoreFormat(KeyStoreCredentialStoreTest.java:137)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
Caused by: java.security.UnrecoverableKeyException: Get Key failed: 1.2.840.113549.1.7.1 SecretKeyFactory not available
	at java.security.KeyStore.getEntry(KeyStore.java:1532)
	at org.wildfly.security.credential.store.impl.KeyStoreCredentialStore.retrieve(KeyStoreCredentialStore.java:462)
	... 10 more
Caused by: java.security.NoSuchAlgorithmException: 1.2.840.113549.1.7.1 SecretKeyFactory not available
	... 12 more
{code}


[1] https://github.com/wildfly-security/wildfly-elytron/pull/661/commits/72967600a98dee832e151ff8f6fb64af0a84bd14#diff-faa6b27609575ef29472bcc75c87eb36R87",2017/07/20 8:23 AM
ELY-1294,"Credential-store command \-\-salt option is validated only when is \-\-summary is used too.
It is caused by generation MASKed password for summary output[1].
It is at least strange and confusing to user: without \-\-summary is passed, with \-\-summary is failed (entry is stored in storage successfully).

*How to reproduce*
{code}
[hsvabek@dhcp-10-40-5-17 bin]$ ./elytron-tool.sh credential-store   --add secret_alias --password pass123 --create -x secret_password -l store005.jceks -s 1234567890 -i 230 --summary  --debug
Alias ""secret_alias"" has been successfully stored
Exception encountered executing the command:
java.security.InvalidAlgorithmParameterException: Salt must be 8 bytes long
        at com.sun.crypto.provider.PBES1Core.init(PBES1Core.java:234)
        at com.sun.crypto.provider.PBES1Core.init(PBES1Core.java:331)
        at com.sun.crypto.provider.PBEWithMD5AndDESCipher.engineInit(PBEWithMD5AndDESCipher.java:228)
        at javax.crypto.Cipher.implInit(Cipher.java:810)
        at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
        at javax.crypto.Cipher.init(Cipher.java:1539)
        at javax.crypto.Cipher.init(Cipher.java:1470)
        at org.wildfly.security.util.PasswordBasedEncryptionUtil$Builder.createAndInitCipher(PasswordBasedEncryptionUtil.java:506)
        at org.wildfly.security.util.PasswordBasedEncryptionUtil$Builder.build(PasswordBasedEncryptionUtil.java:589)
        at org.wildfly.security.tool.MaskCommand.computeMasked(MaskCommand.java:117)
        at org.wildfly.security.tool.CredentialStoreCommand.execute(CredentialStoreCommand.java:287)
        at org.wildfly.security.tool.ElytronTool.main(ElytronTool.java:81)
{code}


[1] https://github.com/wildfly-security/wildfly-elytron-tool/blob/1.0.0.CR2/src/main/java/org/wildfly/security/tool/CredentialStoreCommand.java#L286",2017/07/20 4:42 AM
ELY-1293,"{{System.currentTimeMillis()}} is native in IBM JDK and at the same time, IBM JDK does not support  java.lang.instrument API for native methods. Therefore, {{System.currentTimeMillis()}} cannot be mocked on IBM JDK using jmockit.

{code}
export JAVA_HOME=path/to/ibm/java8

$JAVA_HOME/bin/java -version
java version ""1.8.0""
Java(TM) SE Runtime Environment (build pxa6480sr3fp12-20160919_01(SR3 FP12))
IBM J9 VM (build 2.8, JRE 1.8.0 Linux amd64-64 Compressed References 20160915_318796 (JIT enabled, AOT enabled)
J9VM - R28_Java8_SR3_20160915_0912_B318796
JIT  - tr.r14.java.green_20160818_122998
GC   - R28_Java8_SR3_20160915_0912_B318796_CMPRSS
J9CL - 20160915_318796)
JCL - 20160914_01 based on Oracle jdk8u101-b13

mvn clean test 
{code}

Expected: the tests mocking {{System.currentTimeMillis()}} should pass
Actual: the tests mocking {{System.currentTimeMillis()}} throw the following exception or similar:

{code}
java.lang.UnsupportedOperationException: class redefinition failed: attempted to change method modifiers
	at org.wildfly.security.audit.PeriodicRotatingFileAuditEndpointTest$1.<init>(PeriodicRotatingFileAuditEndpointTest.java:212)
	at org.wildfly.security.audit.PeriodicRotatingFileAuditEndpointTest.mockTime(PeriodicRotatingFileAuditEndpointTest.java:212)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:508)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
{code}

This is the case with 

* PeriodicRotatingFileAuditEndpointTest
* SizeRotatingFileAuditEndpointTest
* GssapiCompatibilitySuiteChild",2017/07/19 4:10 PM
ELY-1292,{{XmlConfigurationTest.testCertificateInCredentials}} does not terminate on IBM JDK.,2017/07/19 2:41 PM
ELY-1303,"WildFly Elytron Tool, Vault command should support set security provider to convert vaults to custom credential store implementation.

Something similar to credential-store command.
http://undertheelytron.blogspot.cz/2017/07/custom-test-credential-store.html",2017/07/19 8:11 AM
ELY-1290,"Only MD5 and SHA-1 hash algorithms are valid in OneTimePasswordImpl.

{code:title=/subsystem=elytron/filesystem-realm=a:read-operation-description(name=set-password)}
           ""otp"" => {
                ""type"" => OBJECT,
                ""description"" => ""A one-time password, used by the OTP SASL mechanism."",
                ""expressions-allowed"" => false,
                ""required"" => false,
                ""nillable"" => true,
                ""value-type"" => {
                    ""algorithm"" => {
                        ""type"" => STRING,
                        ""description"" => ""The algorithm used to encrypt the password."",
                        ""expressions-allowed"" => false,
                        ""required"" => false,
                        ""nillable"" => true,
                        ""default"" => ""otp-sha1"",
                        ""allowed"" => [
                            ""otp-md5"",
                            ""otp-sha1""
                        ]
                    },
                    ""hash"" => {
                        ""type"" => STRING,
                        ""description"" => ""The hash represented by this password."",
                        ""expressions-allowed"" => true,
                        ""required"" => true,
                        ""nillable"" => false,
                        ""min-length"" => 1L,
                        ""max-length"" => 2147483647L
                    },
                    ""seed"" => {
                        ""type"" => STRING,
                        ""description"" => ""The seed used to generate the hash."",
                        ""expressions-allowed"" => true,
                        ""required"" => true,
                        ""nillable"" => false,
                        ""min-length"" => 1L,
                        ""max-length"" => 2147483647L
                    },
                    ""sequence"" => {
                        ""type"" => INT,
                        ""description"" => ""The sequence number used to generate the hash."",
                        ""expressions-allowed"" => true,
                        ""required"" => true,
                        ""nillable"" => false
                    }
                }
            }
{code}

Extend list to more secure hash algorithms, e.g. digest-sha-256 digest-sha-512?

For example MD5 is not allowed in FIPS mode [1]. Although SHA-1 is, it is generally considered to be not secure anymore.


[1] http://csrc.nist.gov/publications/fips/fips140-2/fips1402annexa.pdf
",2017/07/17 12:31 PM
ELY-1289,"The {{ldap-realm.otp-credential-mapper.seed-from}} attribute in Elytron subsystem refers to an LDAP attribute which stores an OTP seed. The LDAP-attribute value currently has to be Base64 encoded, which seems to be wrong.

The problem is in the Elytron class {{org.wildfly.security.auth.realm.ldap.OtpCredentialLoader}} which handles the encoding/decoding.

The [OTP RFC 2289|https://tools.ietf.org/html/rfc2289] says
{noformat}
   The seed MUST consist of purely alphanumeric characters and MUST be
   of one to 16 characters in length. The seed is a string of characters
   that MUST not contain any blanks and SHOULD consist of strictly
   alphanumeric characters from the ISO-646 Invariant Code Set.  The
   seed MUST be case insensitive and MUST be internally converted to
   lower case before it is processed.
{noformat}

I.e. There is no need to Base64-encode the String bytes.

*Suggested fix*
Don't encode/decode the LDAP attribute value.",2017/07/14 9:07 AM
ELY-1286,"The channel binding type should be ""tls-server-end-point"" as referenced below:

http://www.iana.org/assignments/channel-binding-types/channel-binding-types.xhtml
https://tools.ietf.org/html/rfc5929",2017/07/13 3:49 PM
ELY-1283,"The *\*-PLUS* SASL mechanisms (i.e. variants with channel binding) should be preferred by Elytron over the non-plus ones.

The channel binding [RFC-5056|https://tools.ietf.org/html/rfc5056#section-2.1] in section 2.1 states:

{noformat}
      *  If the authentication protocol used by the application supports
         channel binding, the application SHOULD use it.
{noformat}
",2017/07/13 8:08 AM
ELY-1281,"The SecurityDomain.authenticate() method creates a SecurityIdentity that inherits its credentials from the calling identity.

The usage of ServerAuthenticationContext is correct (it inherits the current identity as the captured identity).  Capturing the identity is necessary to perform run-as authorizations without an authentication step.  However the credentials should probably not be propagated from the captured identity in any case.
",2017/07/11 11:18 AM
ELY-1278,"Coverity found possible NPE occurense, as according to javadoc for {{SSLSession().getLocalCertificates()}} may return null [1], but {{X500.asX509CertificateArray}} can't consume null parameter and NPE will be thrown in that case.

{code:java|title=ServerAuthenticationContext.java} 
                } else if (callback instanceof SSLCallback) {
                    SSLCallback sslCallback = (SSLCallback) callback;

                    try {
                        peerCerts = X500.asX509CertificateArray(sslCallback.getSslSession().getPeerCertificates());
                    } catch (SSLPeerUnverifiedException e) {
                        log.trace(""Peer unverified"", e);
                        peerCerts = null;
                    }
                    serverCerts = X500.asX509CertificateArray(sslCallback.getSslSession().getLocalCertificates());
                    handleOne(callbacks, idx + 1);
                }
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=26379676&defectInstanceId=5932898&mergedDefectId=1449008


[1] https://docs.oracle.com/javase/8/docs/api/javax/net/ssl/SSLSession.html#getLocalCertificates--",2017/07/03 7:09 AM
ELY-1275,"When {{ldap-realm}} with {{x509-credential-mapper}} is used in {{security-domain}} which is referenced from {{server-ssl-context}} then authorization fails. It seems it is caused by using {{ServerAuthenticationContext.NameAssignedState}} in [1] which fails in [2] due to [3]. This issue causes that {{x509-credential-mapper}} cannot work in {{server-ssl-context}}.

Server log:
{code}
2017-06-30 15:01:22,019 TRACE [org.wildfly.security] (default task-2) X500 principal [CN=clientSubjectDn, OU=EAP QE, O=Red Hat, L=Brno, ST=Czech Republic, C=CZ] decoded as name [clientSubjectDn] (attribute values: [clientSubjectDn])
2017-06-30 15:01:22,022 TRACE [org.wildfly.security] (default task-2) Principal assigning: [CN=clientSubjectDn, OU=EAP QE, O=Red Hat, L=Brno, ST=Czech Republic, C=CZ], pre-realm rewritten: [clientSubjectDn], realm name: [ldap-realm-subject-dn], post-realm rewritten: [clientSubjectDn], realm rewritten: [clientSubjectDn]
2017-06-30 15:01:22,023 DEBUG [org.wildfly.security] (default task-2) Obtaining lock for identity [clientSubjectDn]...
2017-06-30 15:01:22,028 DEBUG [org.wildfly.security] (default task-2) Obtained lock for identity [clientSubjectDn].
2017-06-30 15:01:22,044 DEBUG [org.wildfly.security] (default task-2) Creating [class javax.naming.directory.InitialDirContext] with environment:
2017-06-30 15:01:22,045 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.credentials] with value [[s, e, c, r, e, t]]
2017-06-30 15:01:22,045 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.authentication] with value [simple]
2017-06-30 15:01:22,045 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.provider.url] with value [ldap://localhost:10389]
2017-06-30 15:01:22,045 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.read.timeout] with value [60000]
2017-06-30 15:01:22,045 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.pool] with value [false]
2017-06-30 15:01:22,046 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.timeout] with value [5000]
2017-06-30 15:01:22,046 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.principal] with value [uid=admin,ou=system]
2017-06-30 15:01:22,046 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.referral] with value [ignore]
2017-06-30 15:01:22,046 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.factory.initial] with value [com.sun.jndi.ldap.LdapCtxFactory]
2017-06-30 15:01:22,081 DEBUG [org.wildfly.security] (default task-2) [javax.naming.ldap.InitialLdapContext@6ca3ef32] successfully created. Connection established to LDAP server.
2017-06-30 15:01:22,084 DEBUG [org.wildfly.security] (default task-2) Trying to create identity for principal [clientSubjectDn].
2017-06-30 15:01:22,086 DEBUG [org.wildfly.security] (default task-2) Executing search [(uid={0})] in context [o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org] with arguments [clientSubjectDn]. Returning attributes are [null]. Binary attributes are [null].
2017-06-30 15:01:22,152 DEBUG [org.wildfly.security] (default task-2) Found entry [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,152 DEBUG [org.wildfly.security] (default task-2) Identity for principal [clientSubjectDn] found at [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2) Context [javax.naming.ldap.InitialLdapContext@6ca3ef32] was closed. Connection closed or just returned to the pool.
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2) Creating [class javax.naming.directory.InitialDirContext] with environment:
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.credentials] with value [[s, e, c, r, e, t]]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.authentication] with value [simple]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.provider.url] with value [ldap://localhost:10389]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.read.timeout] with value [60000]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.pool] with value [false]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.timeout] with value [5000]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.principal] with value [uid=admin,ou=system]
2017-06-30 15:01:22,153 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.referral] with value [ignore]
2017-06-30 15:01:22,154 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.factory.initial] with value [com.sun.jndi.ldap.LdapCtxFactory]
2017-06-30 15:01:22,179 DEBUG [org.wildfly.security] (default task-2) [javax.naming.ldap.InitialLdapContext@75395ba6] successfully created. Connection established to LDAP server.
2017-06-30 15:01:22,180 DEBUG [org.wildfly.security] (default task-2) Trying to create identity for principal [clientSubjectDn].
2017-06-30 15:01:22,180 DEBUG [org.wildfly.security] (default task-2) Executing search [(uid={0})] in context [o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org] with arguments [clientSubjectDn]. Returning attributes are [businessCategory]. Binary attributes are [].
2017-06-30 15:01:22,195 DEBUG [org.wildfly.security] (default task-2) Found entry [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,197 DEBUG [org.wildfly.security] (default task-2) Identity for principal [clientSubjectDn] found at [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,198 DEBUG [org.wildfly.security] (default task-2) Context [javax.naming.ldap.InitialLdapContext@75395ba6] was closed. Connection closed or just returned to the pool.
2017-06-30 15:01:22,200 TRACE [org.wildfly.security] (default task-2) X500 principal [CN=clientSubjectDn, OU=EAP QE, O=Red Hat, L=Brno, ST=Czech Republic, C=CZ] decoded as name [clientSubjectDn] (attribute values: [clientSubjectDn])
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2) Creating [class javax.naming.directory.InitialDirContext] with environment:
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.credentials] with value [[s, e, c, r, e, t]]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.authentication] with value [simple]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.provider.url] with value [ldap://localhost:10389]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.read.timeout] with value [60000]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.pool] with value [false]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [com.sun.jndi.ldap.connect.timeout] with value [5000]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.security.principal] with value [uid=admin,ou=system]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.referral] with value [ignore]
2017-06-30 15:01:22,205 DEBUG [org.wildfly.security] (default task-2)     Property [java.naming.factory.initial] with value [com.sun.jndi.ldap.LdapCtxFactory]
2017-06-30 15:01:22,212 DEBUG [org.wildfly.security] (default task-2) [javax.naming.ldap.InitialLdapContext@22d42495] successfully created. Connection established to LDAP server.
2017-06-30 15:01:22,213 DEBUG [org.wildfly.security] (default task-2) Trying to create identity for principal [clientSubjectDn].
2017-06-30 15:01:22,214 DEBUG [org.wildfly.security] (default task-2) Executing search [(uid={0})] in context [o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org] with arguments [clientSubjectDn]. Returning attributes are [businessCategory]. Binary attributes are [].
2017-06-30 15:01:22,227 DEBUG [org.wildfly.security] (default task-2) Found entry [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,227 DEBUG [org.wildfly.security] (default task-2) Identity for principal [clientSubjectDn] found at [uid=clientSubjectDn,ou=People,o=X509CredentialMapperTestCasec588011e,o=primary,dc=jboss,dc=org].
2017-06-30 15:01:22,227 TRACE [org.wildfly.security] (default task-2) X509 client certificate accepted by X509EvidenceVerifier
2017-06-30 15:01:22,227 DEBUG [org.wildfly.security] (default task-2) Context [javax.naming.ldap.InitialLdapContext@22d42495] was closed. Connection closed or just returned to the pool.
2017-06-30 15:01:22,228 TRACE [org.wildfly.security] (default task-2) Authentication succeed for principal [CN=clientSubjectDn, OU=EAP QE, O=Red Hat, L=Brno, ST=Czech Republic, C=CZ]
2017-06-30 15:01:22,240 ERROR [org.xnio.nio] (default I/O-4) XNIO000011: Task io.undertow.protocols.ssl.SslConduit$5$1@46b65284 failed with an exception: java.lang.RuntimeException: ELY01112: Authentication cannot succeed; not authorized
	at sun.security.ssl.Handshaker.checkThrown(Handshaker.java:1429)
	at sun.security.ssl.SSLEngineImpl.checkTaskThrown(SSLEngineImpl.java:535)
	at sun.security.ssl.SSLEngineImpl.readNetRecord(SSLEngineImpl.java:813)
	at sun.security.ssl.SSLEngineImpl.unwrap(SSLEngineImpl.java:781)
	at io.undertow.protocols.ssl.ALPNHackSSLEngine.unwrap(ALPNHackSSLEngine.java:265)
	at javax.net.ssl.SSLEngine.unwrap(SSLEngine.java:624)
	at io.undertow.server.protocol.http.ALPNLimitingSSLEngine.unwrap(ALPNLimitingSSLEngine.java:73)
	at io.undertow.protocols.ssl.SslConduit.doUnwrap(SslConduit.java:749)
	at io.undertow.protocols.ssl.SslConduit.doHandshake(SslConduit.java:646)
	at io.undertow.protocols.ssl.SslConduit.access$900(SslConduit.java:63)
	at io.undertow.protocols.ssl.SslConduit$5$1.run(SslConduit.java:1046)
	at org.xnio.nio.WorkerThread.safeRun(WorkerThread.java:592)
	at org.xnio.nio.WorkerThread.run(WorkerThread.java:472)
Caused by: java.lang.IllegalStateException: ELY01112: Authentication cannot succeed; not authorized
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.succeed(ServerAuthenticationContext.java:1947)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.succeed(ServerAuthenticationContext.java:492)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.doClientTrustCheck(SecurityDomainTrustManager.java:123)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.checkClientTrusted(SecurityDomainTrustManager.java:72)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1869)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:230)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:919)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:916)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1369)
	at io.undertow.protocols.ssl.SslConduit$5.run(SslConduit.java:1034)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

Since there is no documentation for this scenario it is possible that this is just a configuration issue - in that case please provide valid configuration for this scenario.

[1] https://github.com/wildfly-security/wildfly-elytron/blob/889b2a5d3ed4fbcc759418105535cd4735c46d90/src/main/java/org/wildfly/security/ssl/SecurityDomainTrustManager.java#L120
[2] https://github.com/wildfly-security/wildfly-elytron/blob/889b2a5d3ed4fbcc759418105535cd4735c46d90/src/main/java/org/wildfly/security/ssl/SecurityDomainTrustManager.java#L122
[3] https://github.com/wildfly-security/wildfly-elytron/blob/889b2a5d3ed4fbcc759418105535cd4735c46d90/src/main/java/org/wildfly/security/auth/server/ServerAuthenticationContext.java#L1943",2017/06/30 9:16 AM
ELY-1274,"X509EvidenceVerifier.SubjectDnCertificateVerifier verifies Subject DN based on String.equals method [1]. It means that valid Subject DN can be incorrectly denied because it includes (or does not include) space before comma etc.

Example:
When passed certificate includes DN {{CN=user,OU=EAP QE,...}} and LDAP entry includes entry with attribute value {{CN=user, OU=EAP QE, ...}} then it is not successfully verified.

[1] https://github.com/wildfly-security/wildfly-elytron/blob/889b2a5d3ed4fbcc759418105535cd4735c46d90/src/main/java/org/wildfly/security/auth/realm/ldap/X509EvidenceVerifier.java#L127",2017/06/30 9:12 AM
ELY-1273,"When any of attribute {{digest-from}}, {{certificate-from}}, {{serial-number-from}}, {{subject-dn-from}} from {{x509-credential-mapper}} in {{ldap-realm}} includes attribute which does not occur in searched entry in LDAP then internal NPE is thrown. It is caused by missing null checks.

Thrown exception for {{digest-from}}:
{code}
java.lang.NullPointerException
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$DigestCertificateVerifier.verifyCertificate(X509EvidenceVerifier.java:153)
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$1.verifyEvidence(X509EvidenceVerifier.java:225)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:618)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1937)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:730)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.doClientTrustCheck(SecurityDomainTrustManager.java:121)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.checkClientTrusted(SecurityDomainTrustManager.java:72)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1869)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:230)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:919)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:916)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1369)
	at io.undertow.protocols.ssl.SslConduit$5.run(SslConduit.java:1034)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

Thrown exception for {{certificate-from}}:
{code}
java.lang.NullPointerException
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$EncodedCertificateVerifier.verifyCertificate(X509EvidenceVerifier.java:190)
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$1.verifyEvidence(X509EvidenceVerifier.java:225)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:618)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1937)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:730)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.doClientTrustCheck(SecurityDomainTrustManager.java:121)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.checkClientTrusted(SecurityDomainTrustManager.java:72)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1869)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:230)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:919)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:916)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1369)
	at io.undertow.protocols.ssl.SslConduit$5.run(SslConduit.java:1034)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

Thrown exception for {{serial-number-from}}:
{code}
java.lang.NullPointerException
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$SerialNumberCertificateVerifier.verifyCertificate(X509EvidenceVerifier.java:98)
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$1.verifyEvidence(X509EvidenceVerifier.java:225)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:618)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1937)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:730)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.doClientTrustCheck(SecurityDomainTrustManager.java:121)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.checkClientTrusted(SecurityDomainTrustManager.java:72)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1869)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:230)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:919)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:916)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1369)
	at io.undertow.protocols.ssl.SslConduit$5.run(SslConduit.java:1034)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}

Thrown exception for {{subject-dn-from}}:
{code}
java.lang.NullPointerException
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$SubjectDnCertificateVerifier.verifyCertificate(X509EvidenceVerifier.java:125)
	at org.wildfly.security.auth.realm.ldap.X509EvidenceVerifier$1.verifyEvidence(X509EvidenceVerifier.java:225)
	at org.wildfly.security.auth.realm.ldap.LdapSecurityRealm$LdapRealmIdentity.verifyEvidence(LdapSecurityRealm.java:618)
	at org.wildfly.security.auth.server.ServerAuthenticationContext$NameAssignedState.verifyEvidence(ServerAuthenticationContext.java:1937)
	at org.wildfly.security.auth.server.ServerAuthenticationContext.verifyEvidence(ServerAuthenticationContext.java:730)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.doClientTrustCheck(SecurityDomainTrustManager.java:121)
	at org.wildfly.security.ssl.SecurityDomainTrustManager.checkClientTrusted(SecurityDomainTrustManager.java:72)
	at sun.security.ssl.ServerHandshaker.clientCertificate(ServerHandshaker.java:1869)
	at sun.security.ssl.ServerHandshaker.processMessage(ServerHandshaker.java:230)
	at sun.security.ssl.Handshaker.processLoop(Handshaker.java:979)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:919)
	at sun.security.ssl.Handshaker$1.run(Handshaker.java:916)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.security.ssl.Handshaker$DelegatedTask.run(Handshaker.java:1369)
	at io.undertow.protocols.ssl.SslConduit$5.run(SslConduit.java:1034)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
{code}",2017/06/30 9:10 AM
ELY-1268,"The set-password operation on identities in filesystem-realm doesn't support OTP credentials.  So identity with OneTimePassword can't be created in the filesystem-realm (Elytron subsystem).

",2017/06/27 9:59 AM
ELY-1263,"Coverity found potential dereference of null object , because {{file.getParentFile()}} can return null in some circumstances.
 
{code:java|title=PeriodicRotatingFileAuditEndpoint.java}
 @Override
    protected void preWrite(Instant instant) {
        final long recordMillis = instant.toEpochMilli();
        if (recordMillis >= nextRollover) {
            try {
                final File file = getFile();
                if (file == null) {
                    // no file is set; a direct output stream or writer was specified
                    return;
                }
                closeStreams(); // close the original file (some OSes won't let you move/rename a file that is open)
                final Path target =  file.getParentFile().toPath().resolve(file.getName() + nextSuffix);
                Files.move(file.toPath(), target, StandardCopyOption.REPLACE_EXISTING);
                setFile(file);
            } catch (IOException e) {
                audit.unableToRotateLogFile(e);
            }
            calcNextRollover(recordMillis);
        }
    }
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=25046999&defectInstanceId=5660941&mergedDefectId=1445725",2017/06/26 3:04 AM
ELY-1255,"When Elytron client configuration file includes configuration.authentication-client.authentication-configurations.configuration.credentials.certificate element then ConfigXMLParseException is thrown during parsing of configuration file. 

For following configuration file:
{code}
<configuration>
    <authentication-client xmlns=""urn:elytron:1.0"">
        <authentication-rules>
            <rule use-configuration=""default""/>
        </authentication-rules>
        <authentication-configurations>
            <configuration name=""default"">
                <sasl-mechanism-selector selector=""PLAIN""/>                
                <credentials>
                    <certificate>
                        <private-key-pem>
                        -----BEGIN ENCRYPTED PRIVATE KEY-----
                        MIIFDjBABgkqhkiG9w0BBQ0wMzAbBgkqhkiG9w0BBQwwDgQI/UbK4uSM+lICAggA
                        MBQGCCqGSIb3DQMHBAjqSiGAFsiVUwSCBMg1UIOetO6ZNmBehx3pzNVqefIYE6wc
                        5roz1Yz0ZLroq9zFn8kGGe65XlZRD8jO7+pYgglHwII0s05P2YPRx8boHgNvf/de
                        cYmPXOuT2W7obUQTRlM0TzJpjP+74cwmxeM0L/mvhRlQKgkHyFzIj3f0lJxlrCS5
                        FiN8xM7YuDZ+nZwSil6pF+bCO/V/TAEsuR15eG2UHZuMeFgL9xez7ZPJPKDyeXIo
                        deMz2sv63keJ6nIEAxq46+m53HKFcOs3kCCa/M2LQg0uxxA3YyjLiVu8U0k/ox7L
                        rQ3XVBA11oBSUM9+vFl9CMW/7do/5niL3JNrz+e1FpG6ViG2MT+3+na7YfN+7ffp
                        FUSblMFR9Px00uBfqVHufCzKotNX0VqbEGGCE40i1Tpq5ZWCob4R6/42zW+BctJO
                        ZxUeiJJaXAoccvJiZRraicte6OpDMWZXPIKMR+FIc1YXuWYv3BHHhfZKhLm8tuxb
                        eSNE8vRR/exfV1z+YoZ0nvwOhpBOK7yQl9iqOy+eQ7e7h85yv15XFX2cOjPgY4bO
                        M3wN6H41K5eUock6UYaKLY2qzVlyI0rwV1aYnnrGeA5gHkfAFdPNpxm7+ejUAi2z
                        am117gT3NXKCLq0SsV55wjonAcN9ghN8X46tWZIO0chlNpVOHZSUz/NtavOrmZwZ
                        UcFajPKvoT3V7t8hGD1Tg1AdChahlIjT5dzDQBaHtJLbz7qPljHuAvvZR/bapTdW
                        97zMxp3zRQbyHqPmu6BFUASgXHnKLY6Cu1a0w+AhVaemWLLVeHMweWlLsLAHxSo4
                        qkqIkn8rMr9V92/nVaE6fEnmplnWTI3VY3t0vzI5gztwq7Q0ChlAttgG+BMpYOps
                        4H7dO55iz7hZFdYrZlEXBON6VTfQFhnUPuuJHHBRK1E/GEvoA6whRV7bLSrgvtEW
                        6AgFLgb8FWt9mWvf15PAptcvN/AxHGM2ymPyXqh32a+rvfPjdPgFIaCtEQmuGyoV
                        NpEwg+iV7TAnEzQ1u0BcOPKr+dKKrkGzahT1Mj1ZFLG0M2J60Hv4oItMXMwvb7vq
                        nnubuLwkI8dWdVgmNXIU415i546VoeRuMXY2F7hLEHUKAahcDy5PnmrEj34IVW0w
                        qodBW+MeykUA9O+WndUoLI5bTnsGXNS/vZ17LwwcaGyrj2M8bTkqCMvdx8HXGnJ2
                        hNN+INazIbIq7FBcQZfEHH1uJsDKy5Niqk3uKysfByyPzehcY6QxseJgqztIRqLR
                        HDeymrgOn5k8HRgA4ePKOQwQe2r2vY+3ExydvL7irHMgD7EaSnUIE8KK1Aq39mQz
                        ZVWigJGII05HGk/vOQP4s804hjkyS8X+CNXpMzi/2bgmzKp4aPCS1yyx2m+8eP7B
                        Qs5h9YxqUh24HC7EGNkx31M4OuL1h1CmkT7uk9uCOREuRnhxClLvTL1Pu8f8OjbN
                        jd2W1c/X7spOsvBg7OMD8aBpxI7qWSSWwIe5dsbNbCCDeHkZpJ4GDqxtLLv4+tEO
                        XozNTlPhyF0eURRzrVyEL8C5OaSGLEfo3kFCJdS7eQX2TyttILOV9plP4YaFUw91
                        DOZj1vjPVgRJSAr98/UlzE23yGfB1gUG/kUG2+HPgu2jS5TE7Mlsk6Wy5Q+3Ga+b
                        wD4=
                        -----END ENCRYPTED PRIVATE KEY-----
                        </private-key-pem>
                        <pem>
                        -----BEGIN CERTIFICATE-----
                        MIIDWTCCAkGgAwIBAgIEQFuxgzANBgkqhkiG9w0BAQsFADBcMQswCQYDVQQGEwJD
                        WjEXMBUGA1UEBxMOQ3plY2ggUmVwdWJsaWMxDzANBgNVBAsTBkVBUCBRRTEQMA4G
                        A1UEChMHUmVkIEhhdDERMA8GA1UEAxMIY2xpZW50RG4wIBcNMTcwNjIwMDYxMzU5
                        WhgPMjIxNzA1MDMwNjEzNTlaMFwxCzAJBgNVBAYTAkNaMRcwFQYDVQQHEw5DemVj
                        aCBSZXB1YmxpYzEPMA0GA1UECxMGRUFQIFFFMRAwDgYDVQQKEwdSZWQgSGF0MREw
                        DwYDVQQDEwhjbGllbnREbjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
                        AJsXwctr7ckEMiLtsyXaFiSaB03F5z5fVzyg89WMxqWMhfRPitDIFBGN8t3/fEML
                        s5I3g1dlQDwtVl9AlwHDLfwxFdLZIuDodRr6KzcTrbavDSRczGMCF+ntPo6KBBL1
                        /UZLUW5y332bi7Tkc87NYN9zJ+3307fHrxGmCyeF6as7s/+uKJ0gY4JVjS/9XXec
                        K8gtlye/AbBZyJhpPiM71aoQy+LecYdSB/cRBQII0XGtsusguCFGnSSA80J79TLP
                        THaJG0trarktvORvnmNQz45Atxhpr9shv4xkbNWHR+qAiFO9N1w7uVFZOZUWEb9/
                        bQEFlSo0LtMPgLomKGvg8/0CAwEAAaMhMB8wHQYDVR0OBBYEFO01U/yTywCdzOUl
                        hZmElDjVVcZXMA0GCSqGSIb3DQEBCwUAA4IBAQAEy+IphU7QjlWgn2kkKI6RAX6p
                        LAWGUlbNnfw7V131of9qz9lctRnFWazbuych/i5/oCvBj+0gyf6+PvpsfB7qlZwH
                        3H+jMNNoCrMp5MutLe9SYcfmvYkYGym77K4e8BiuDlfw3whE4B274nD99Y+e9CcY
                        FuUx3yepXY9FDo58mE05zLSXhn31uIulnUGbL1iDB1yeCFG/6J7z+AkCBPKzbgFX
                        3UZid9MUn45RDf8BlP6zG+px/cE2XlaZa+0LGSH9vvvVykD18cthsLHe71Q+Y2hC
                        vWvHG8wdujBxWg7A+H38x48i0PR6lNTsjEgTZbUgYM/SQtKvX2gNaR3z2YPU
                        -----END CERTIFICATE-----
                        </pem>
                    </certificate>
                </credentials>
                <providers>
                    <use-service-loader/>
                </providers>
            </configuration>
        </authentication-configurations>     
    </authentication-client>
</configuration>
{code}

following exception is thrown:
{code}
org.wildfly.client.config.ConfigXMLParseException: parser must be on START_ELEMENT to read next text
	at file:/path/to/some/wildfly-config.xml:13:89
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:40)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.<clinit>(DefaultAuthenticationContextProvider.java:36)
	... 16 more
Caused by: org.wildfly.client.config.ConfigXMLParseException: parser must be on START_ELEMENT to read next text
	at file:/path/to/some/wildfly-config.xml:13:89
	at com.sun.org.apache.xerces.internal.impl.XMLStreamReaderImpl.getElementText(XMLStreamReaderImpl.java:835)
	at org.wildfly.client.config.BasicXMLStreamReader.getElementText(BasicXMLStreamReader.java:87)
	at org.wildfly.client.config.AbstractDelegatingXMLStreamReader.getElementText(AbstractDelegatingXMLStreamReader.java:80)
	at org.wildfly.client.config.AbstractDelegatingXMLStreamReader.getElementText(AbstractDelegatingXMLStreamReader.java:80)
	at org.wildfly.security.auth.client.ElytronXmlParser.parsePem(ElytronXmlParser.java:1169)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseCertificateType(ElytronXmlParser.java:1116)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseCredentialsType(ElytronXmlParser.java:961)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationConfigurationType(ElytronXmlParser.java:714)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationConfigurationsType(ElytronXmlParser.java:341)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientType(ElytronXmlParser.java:273)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:185)
	at org.wildfly.security.auth.client.ElytronXmlParser.parseAuthenticationClientConfiguration(ElytronXmlParser.java:146)
	at org.wildfly.security.auth.client.DefaultAuthenticationContextProvider.lambda$static$0(DefaultAuthenticationContextProvider.java:38)
	... 18 more
{code}
",2017/06/20 7:55 AM
ELY-1252,"Elytron client configuration file can include {{hashed-password}} or {{crypt-password}} as credentials for configuration. Internally this value is parsed in {{ElytronXmlParser}} and results to instance of {{PasswordSpec}}. However we do not see any SASL mechanism supported by Elytron which is able to work with it.

In case when {{hashed-password}} or {{crypt-password}} seems that cannot be actually used with Elytron then we suggest to remove elements {{hashed-password}} or {{crypt-password}} from Elytron client configuration file. Remove them also from elytron-1_0.xsd file. Otherwise please provide configuration which is able to work with {{hashed-password}} or {{crypt-password}} as credentials for configuration on client side.

We request blocker flag since configuration should not include elements which actually do nothing. Once we release them it can be hard to remove them in later application server version.",2017/06/19 7:38 AM
ELY-1251,"In fix of JBEAP-11209, there were {{allow-all-sasl-mechanisms}}, {{allow-sasl-mechanisms}} and {{forbid-sasl-mechanisms}} removed from {{ElytronXmlParser}}. However these elements have not been removed from {{elytron-1_0.xsd}} file. They must be removed from that XSD file too.",2017/06/19 7:21 AM
ELY-1250,"Until DR18 (and in 7.0 as well) we succesfully called ejb with these options.

{code:java|title=EjbClientCode.java}
    private Properties getCtxProperties(String username, String password) {
        Properties props = new Properties();
        props.put(""org.jboss.ejb.client.scoped.context"", true);
        props.put(Context.URL_PKG_PREFIXES, ""org.jboss.ejb.client.naming"");
        props.put(""remote.connections"", ""main"");
        props.put(""remote.connection.main.host"", hostname);
        props.put(""remote.connection.main.port"", ""8080"");
        if (username != null && password != null) {
            props.put(""remote.connection.main.username"", username);
            props.put(""remote.connection.main.password"", password);
        }
        props.put(""remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT"", ""false"");
        props.put(""remote.connection.main.connect.options.org.jboss.remoting3.RemotingOptions.SASL_PROTOCOL"", ""remote"");
        props.put(""remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED"", ""false"");
        return props;
    }
{code}

In DR18 ejb calls hangs. 

{code:title=server.log}
14:27:47,057 INFO  [org.jboss.ejb.client] (main) EJBCLIENT000064: org.jboss.ejb.client.naming.ejb.ejbURLContextFactory is deprecated; new applications should use org.wildfly.naming.client.WildFlyInitialContextFactory instead
14:27:47,064 INFO  [org.wildfly.naming] (main) WildFly Naming version 1.0.0.Beta15-redhat-1
14:27:47,076 INFO  [org.wildfly.naming] (main) WFNAM00049: Usage of the legacy ""remote.connections"" property is deprecated; please use javax.naming.Context#PROVIDER_URL instead
14:27:47,088 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.endpoint:name=Remoting (anonymous)-1039159201
14:27:47,088 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.endpoint:name=Remoting (anonymous)-1039159201
14:27:47,088 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.endpoint:name=Remoting (anonymous)-1039159201
14:27:47,088 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.endpoint:name=Remoting (anonymous)-1039159201
14:27:47,088 TRACE [org.jboss.remoting.endpoint] (main) Completed open of endpoint (anonymous) <3df04fa1>
14:27:47,088 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 1 of endpoint (anonymous) <3df04fa1> (opened Connection provider for remote)
14:27:47,089 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) remote-1876700598
14:27:47,089 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) remote-1876700598
14:27:47,089 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) remote-1876700598
14:27:47,089 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) remote-1876700598
14:27:47,089 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'remote': Remoting remote connection provider 6fdc2db6 for endpoint (anonymous) <3df04fa1>
14:27:47,089 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 2 of endpoint (anonymous) <3df04fa1> (opened Connection provider for remote+tls)
14:27:47,089 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) remote+tls-383127665
14:27:47,089 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) remote+tls-383127665
14:27:47,089 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) remote+tls-383127665
14:27:47,089 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) remote+tls-383127665
14:27:47,089 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'remote+tls': Remoting remote connection provider 16d61071 for endpoint (anonymous) <3df04fa1>
14:27:47,089 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 3 of endpoint (anonymous) <3df04fa1> (opened Connection provider for remoting)
14:27:47,090 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) remoting-838733029
14:27:47,090 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) remoting-838733029
14:27:47,090 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) remoting-838733029
14:27:47,090 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) remoting-838733029
14:27:47,090 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'remoting': Remoting remote connection provider 31fe0ce5 for endpoint (anonymous) <3df04fa1>
14:27:47,090 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 4 of endpoint (anonymous) <3df04fa1> (opened Connection provider for remote+http)
14:27:47,090 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) remote+http-1795925655
14:27:47,090 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) remote+http-1795925655
14:27:47,090 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) remote+http-1795925655
14:27:47,090 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) remote+http-1795925655
14:27:47,090 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'remote+http': Remoting remote connection provider 6b0ba697 for endpoint (anonymous) <3df04fa1>
14:27:47,090 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 5 of endpoint (anonymous) <3df04fa1> (opened Connection provider for remote+https)
14:27:47,090 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) remote+https-447059608
14:27:47,091 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) remote+https-447059608
14:27:47,091 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) remote+https-447059608
14:27:47,091 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) remote+https-447059608
14:27:47,091 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'remote+https': Remoting remote connection provider 1aa59698 for endpoint (anonymous) <3df04fa1>
14:27:47,091 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 6 of endpoint (anonymous) <3df04fa1> (opened Connection provider for http-remoting)
14:27:47,091 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) http-remoting-981876983
14:27:47,091 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) http-remoting-981876983
14:27:47,091 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) http-remoting-981876983
14:27:47,091 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) http-remoting-981876983
14:27:47,091 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'http-remoting': Remoting remote connection provider 3a8640f7 for endpoint (anonymous) <3df04fa1>
14:27:47,091 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 7 of endpoint (anonymous) <3df04fa1> (opened Connection provider for https-remoting)
14:27:47,091 FINER [javax.management.mbeanserver] (main) ObjectName = jboss.remoting.handler:name=Remoting (anonymous) https-remoting-1015658596
14:27:47,091 FINER [javax.management.mbeanserver] (main) name = jboss.remoting.handler:name=Remoting (anonymous) https-remoting-1015658596
14:27:47,092 FINER [javax.management.mbeanserver] (main) Send create notification of object jboss.remoting.handler:name=Remoting (anonymous) https-remoting-1015658596
14:27:47,092 FINER [javax.management.mbeanserver] (main) JMX.mbean.registered jboss.remoting.handler:name=Remoting (anonymous) https-remoting-1015658596
14:27:47,092 TRACE [org.jboss.remoting.endpoint] (main) Adding connection provider registration named 'https-remoting': Remoting remote connection provider 3c89b864 for endpoint (anonymous) <3df04fa1>
14:27:47,093 TRACE [org.wildfly.security] (main) getAuthenticationConfiguration uri=remote+http://localhost.localdomain:8080, protocolDefaultPort=-1, abstractType=jndi, abstractTypeAuthority=jboss, purpose=operate, MatchRule=[], AuthenticationConfiguration=[AuthenticationConfiguration:principal=anonymous,set-host=localhost.localdomain,set-port=8080,providers-supplier=org.wildfly.security.auth.client.ElytronXmlParser$DeferredSupplier@17d816b3,sasl-mechanism-selector=(true),mechanism-properties={wildfly.sasl.local-user.quiet-auth=true}]
14:27:47,111 INFO  [org.jboss.ejb.client] (main) JBoss EJB Client version 4.0.0.Beta27-redhat-1
14:27:47,176 TRACE [org.jboss.remoting.endpoint] (main) Allocated tick to 8 of endpoint (anonymous) <3df04fa1> (opened Connection to remote://localhost.localdomain:8080)
14:27:47,177 TRACE [org.jboss.remoting.remote] (main) Attempting to connect to ""remote://localhost.localdomain:8080"" with options {}
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Selected on sun.nio.ch.EPollSelectorImpl@4cb9755d
14:27:47,177 TRACE [org.xnio.nio] (XNIO-1 I/O-1) Running task org.xnio.nio.WorkerThread$SynchTask@51262ca9
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Beginning select on sun.nio.ch.EPollSelectorImpl@4cb9755d
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Selected on sun.nio.ch.EPollSelectorImpl@4cb9755d
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Beginning select on sun.nio.ch.EPollSelectorImpl@4cb9755d
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Selected on sun.nio.ch.EPollSelectorImpl@4cb9755d
14:27:47,177 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Selected key sun.nio.ch.SelectionKeyImpl@47d9c01 for java.nio.channels.SocketChannel[connection-pending local=/0.0.0.0:45737 remote=localhost.localdomain/127.0.0.1:8080]
14:27:47,177 TRACE [org.xnio.nio] (XNIO-1 I/O-1) Running task org.xnio.AbstractIoFuture$NotifierRunnable@12b137f5
14:27:47,179 TRACE [org.jboss.remoting.endpoint] (XNIO-1 I/O-1) Allocated tick to 9 of endpoint (anonymous) <3df04fa1> (opened org.jboss.remoting3.EndpointImpl$TrackingExecutor@4bb2dc67)
14:27:47,179 TRACE [org.jboss.remoting.remote.connection] (XNIO-1 I/O-1) Initialized connection from localhost.localdomain/127.0.0.1:8080 to /127.0.0.1:45737 with options {}
14:27:47,179 TRACE [org.jboss.remoting.endpoint] (XNIO-1 task-5) Resource closed count 00000008 of endpoint (anonymous) <3df04fa1> (closed org.jboss.remoting3.EndpointImpl$TrackingExecutor@4bb2dc67)
14:27:47,179 TRACE [org.jboss.remoting.remote] (XNIO-1 I/O-1) Setting read listener to org.jboss.remoting3.remote.ClientConnectionOpenListener$Greeting@3fe64581
14:27:47,179 TRACE [org.xnio.nio.selector] (XNIO-1 I/O-1) Beginning select on sun.nio.ch.EPollSelectorImpl@4cb9755d
{code}

It appears {{org.jboss.remoting3.RemotingOptions.SASL_PROTOCOL}} is making problems here. If I remove this ejb call is sucesfull. 

Same happens with org.wildfly.naming.client.WildFlyInitialContextFactory when protocol of PROVIDER_URL and SASL_PROTOCOL does not match.
{code}
    private Properties getBasicCtxProperties(String timeout) {
        Properties props = new Properties();
        props.put(""org.jboss.ejb.client.scoped.context"", true);
        props.put(Context.INITIAL_CONTEXT_FACTORY, ""org.wildfly.naming.client.WildFlyInitialContextFactory"");
        props.put(Context.PROVIDER_URL, ""http-remoting://""+hostname+"":8080"");
        if (timeout != null) {
            props.put(""remote.connection.main.connect.timeout"", timeout);
        }
        props.put(""remote.connection.main.connect.options.org.xnio.Options.SASL_POLICY_NOPLAINTEXT"", ""false"");
        props.put(""remote.connection.main.connect.options.org.jboss.remoting3.RemotingOptions.SASL_PROTOCOL"", ""remote"");
        props.put(""remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED"", ""false"");
        return props;
    }
{code}

Setting to blocker:
- it can make difficulties by migrating from legacy client configuration to new client configuration
- in second case (non-deprecated configuration), there should be rather some sort of validaiton check, then let client hang.

[1] https://github.com/jboss-remoting/jboss-remoting/blob/master/src/main/java/org/jboss/remoting3/RemotingOptions.java#L316",2017/06/19 2:22 AM
ELY-1246,"There are elements in the {{elytron-1_0.xsd}} that the parser does not accept. While I didn't check them all here are at least a few that are in the XSD that the parser will reject:

* {{allow-sasl-mechanisms}} 
* {{allow-all-sasl-mechanisms}}
* {{forbid-sasl-mechanisms}}

This may be all of them, but it should likely be validated that those are the only ones.",2017/06/15 11:27 AM
ELY-1244,{{JwtSecurityRealmTest.testUnsecuredJwt}} should be usable for verification of ELY-1193.,2017/06/14 8:39 AM
ELY-1238,"Elytron client, wildfly-config.xml, User is not able to use credential-store-reference with clear-text password to access credential store. Store name and alias must be incorrectly defined.

There must work these two scenarious:
* User uses only clear-text password <credential-store-reference clear-text=""pass123""/>
* User uses password obtained from another credential store <credential-store-reference store=""CS_STORE_NAME"" alias=""pwd""/> and both ""store"" and ""alias"" must be defined.

I see problem in ElytronXmlParser [1], where is always used ""storeName"" and then ""alias"" to create new CredentialStoreCredentialSource(credentialStore, alias);

*How to reproduce*
* Please use files which are attached
* set right path to cs.jceks in wildfly-config.xml
* run EAP server
* run client
{code}
[hsvabek@dhcp-10-40-5-166 bin]$ ./jboss-cli.sh -c -Dwildfly.config.url=wildfly-config.xml
java.lang.ExceptionInInitializerError: org.wildfly.client.config.ConfigXMLParseException: ELY09503: Credential store name ""null"" not defined
        at file:/home/hsvabek/securityworkspace/VERIFICATION/2017_06_08_wfly-config.xml/jboss-eap-7.1/bin/wildfly-config.xml:9:4: ELY09503: Credential store name ""null"" not defined
        at file:/home/hsvabek/securityworkspace/VERIFICATION/2017_06_08_wfly-config.xml/jboss-eap-7.1/bin/wildfly-config.xml:9:4
{code}
When you set correct store to credential-store-reference, then you get error about ""alias is required...""






[1] https://github.com/wildfly-security/wildfly-elytron/blob/1.1.0.Beta47/src/main/java/org/wildfly/security/auth/client/ElytronXmlParser.java#L1569",2017/06/09 4:20 AM
ELY-1237,"Coverity found possible resource leak. On 2 places there is created ServerAuthenticationContext in SecurityIdentity but is not closed.


{code}
    public SecurityIdentity createRunAsIdentity(Principal principal, boolean authorize) throws SecurityException {
        Assert.checkNotNullParam(""principal"", principal);
        // rewrite principal
        final SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            sm.checkPermission(SET_RUN_AS_PERMISSION);
        }

        final ServerAuthenticationContext context = securityDomain.createNewAuthenticationContext(this, MechanismConfigurationSelector.constantSelector(MechanismConfiguration.EMPTY));
        try {
            if (! (context.importIdentity(this) && context.authorize(principal, authorize))) {
                throw log.runAsAuthorizationFailed(this.principal, principal, null);
            }
        } catch (RealmUnavailableException e) {
            throw log.runAsAuthorizationFailed(this.principal, context.getAuthenticationPrincipal(), e);
        }
        return context.getAuthorizedIdentity();
    }

    public SecurityIdentity createRunAsAnonymous(boolean authorize) throws SecurityException {
        final SecurityManager sm = System.getSecurityManager();
        if (sm != null) {
            sm.checkPermission(SET_RUN_AS_PERMISSION);
        }

        final ServerAuthenticationContext context = securityDomain.createNewAuthenticationContext(this, MechanismConfigurationSelector.constantSelector(MechanismConfiguration.EMPTY));
        if (! context.authorizeAnonymous(authorize)) {
            throw log.runAsAuthorizationFailed(principal, AnonymousPrincipal.getInstance(), null);
        }
        return context.getAuthorizedIdentity();
    }
{code}

In SecurityDomainTrustManager newly created ServerAuthenticationContext is closed in try-with-resource

{code}
try (final ServerAuthenticationContext authenticationContext = securityDomain.createNewAuthenticationContext(mechanismConfigurationSelector)) {
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=22525060&defectInstanceId=5116909&mergedDefectId=1440894&fileStart=376&fileEnd=625",2017/06/09 2:11 AM
ELY-1235,"Coverity found possible dereference of null.

executePrincipalQuery() can return {{null}} and {{credential.matches()}} is called without check

{code:java|title=JdbcSecurityRealm.java}
     @Override
156        public <C extends Credential> C getCredential(final Class<C> credentialType, final String algorithmName, final AlgorithmParameterSpec parameterSpec) throws RealmUnavailableException {
157            Assert.checkNotNullParam(""credentialType"", credentialType);
158            for (QueryConfiguration configuration : JdbcSecurityRealm.this.queryConfiguration) {
159                for (KeyMapper keyMapper : configuration.getColumnMappers(KeyMapper.class)) {
160                    if (keyMapper.getCredentialAcquireSupport(credentialType, algorithmName, parameterSpec).mayBeSupported()) {
161                        final Credential credential = executePrincipalQuery(configuration, r -> keyMapper.map(r, providers));
162                        if (credential.matches(credentialType, algorithmName, parameterSpec)) {
163                            return credentialType.cast(credential);
164                        }
165                    }
166                }
167            }
168
169            return null;
170        }
{code}

https://scan7.coverity.com/reports.htm#v23632/p11778/fileInstanceId=22329013&defectInstanceId=5071812&mergedDefectId=1440468",2017/06/08 5:46 AM
ELY-1233,"During verification of JBEAP-9297 I have found another occurences where logging should be justified. 
In some cases not logging exception can hide original cause of problem.

But justification is necessary if extending loggin won't introduce unnecessary logs, but it does not seems to me this should be case.

{code}
[mchoma@localhost wildfly-elytron]$ grep -r "".*\.debug([^\""]"" --include=*.java .
./src/main/java/org/wildfly/security/auth/realm/FileSystemSecurityRealm.java:                ElytronMessages.log.debug(e);
./src/main/java/org/wildfly/security/auth/realm/FileSystemSecurityRealm.java:                            ElytronMessages.log.debug(e);
./src/main/java/org/wildfly/security/auth/realm/FileSystemSecurityRealm.java:                ElytronMessages.log.debug(e);
./src/main/java/org/wildfly/security/auth/realm/FileSystemSecurityRealm.java:                                    ElytronMessages.log.debug(e);
./src/main/java/org/wildfly/security/http/util/SecurityProviderServerMechanismFactory.java:                            log.debug(e);
./src/main/java/org/wildfly/security/http/util/SecurityProviderServerMechanismFactory.java:                            log.debug(e);
./src/main/java/org/wildfly/security/http/util/ServiceLoaderServerMechanismFactory.java:                log.debug(e);
./src/main/java/org/wildfly/security/http/util/ServiceLoaderServerMechanismFactory.java:                log.debug(e);
./src/main/java/org/wildfly/security/sasl/util/SecurityProviderSaslClientFactory.java:                            log.debug(e);
./src/main/java/org/wildfly/security/sasl/util/SecurityProviderSaslClientFactory.java:                            log.debug(e);
./src/main/java/org/wildfly/security/sasl/util/SecurityProviderSaslServerFactory.java:                                log.debug(e);
./src/main/java/org/wildfly/security/sasl/util/SecurityProviderSaslServerFactory.java:                            log.debug(e);

[mchoma@localhost wildfly-elytron]$ grep -r "".*\.trace([^\""]"" --include=*.java .
./src/main/java/org/wildfly/security/ssl/CipherSuiteSelector.java:            ElytronMessages.tls.trace(b);
./src/main/java/org/wildfly/security/ssl/CipherSuiteSelector.java:                    ElytronMessages.tls.trace(b);
./src/main/java/org/wildfly/security/http/impl/DigestAuthenticationMechanism.java:                        log.trace(e);
{code}

These are OK
{code}
./src/main/java/org/wildfly/security/ssl/CipherSuiteSelector.java:            ElytronMessages.tls.trace(b);
./src/main/java/org/wildfly/security/ssl/CipherSuiteSelector.java:                    ElytronMessages.tls.trace(b);
{code}

Setting to Critical priority, as this could reveal useful information during process of troubleshooting.",2017/06/07 8:01 AM
