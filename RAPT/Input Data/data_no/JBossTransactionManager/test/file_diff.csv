file_diff,commit_time,file_diff_id
"@@ -308,7 +308,7 @@ public int topLevelAbort()
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -321,6 +321,19 @@ public int topLevelAbort()
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+					 
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {
+				    	    	    jtaLogger.i18NLogger.warn_resources_arjunacore_rollbackerror(XAHelper.xidToString(_tranID),
+                                _theXAResource.toString(), XAHelper.printXAErrorCode(e2), e2);
+
+                                		    removeConnection();
+
+                                		    return TwoPhaseOutcome.FINISH_ERROR;
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,1
"@@ -0,0 +1,136 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.xa;
+
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+public class JTATest {
+
+	@Test
+	public void test() throws Exception {
+
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager
+				.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		XARMERRXAResource rollbackCalled = new XARMERRXAResource(true);
+		assertTrue(theTransaction.enlistResource(rollbackCalled));
+
+		tm.rollback();
+		assertTrue(rollbackCalled.getRollbackCalled());
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+		private boolean rollbackCalled;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		public boolean getRollbackCalled() {
+			return rollbackCalled;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			rollbackCalled = true;
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,2
"@@ -330,7 +330,7 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -343,6 +343,18 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {	
+                                		jtaxLogger.i18NLogger.warn_jtax_resources_jts_orbspecific_xaerror(""XAResourceRecord.rollback"",
+                                XAHelper.printXAErrorCode(e2), _theXAResource.toString(), XAHelper.xidToString(_tranID), e2);
+
+                                		    removeConnection();
+
+                                		    throw new UNKNOWN();
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,3
"@@ -0,0 +1,146 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.jts.xa;
+ 
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+import com.arjuna.ats.internal.jts.ORBManager;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.orbportability.OA;
+import com.arjuna.orbportability.ORB;
+import com.arjuna.orbportability.RootOA;
+
+public class JTSTest {
+	@Test
+	public void test() throws Exception {
+
+		ORB myORB = ORB.getInstance(""test"");
+		RootOA myOA = OA.getRootOA(myORB);
+		myORB.initORB(new String[] {}, null);
+		myOA.initOA();
+
+		ORBManager.setORB(myORB);
+		ORBManager.setPOA(myOA);
+		jtaPropertyManager.getJTAEnvironmentBean().setTransactionManagerClassName(com.arjuna.ats.internal.jta.transaction.jts.TransactionManagerImple.class.getName());
+		jtaPropertyManager.getJTAEnvironmentBean().setUserTransactionClassName(com.arjuna.ats.internal.jta.transaction.jts.UserTransactionImple.class.getName());
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(true)));
+
+		tm.rollback();
+
+		myOA.destroy();
+		myORB.shutdown();
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,4
"@@ -366,25 +366,25 @@ public void close() throws SQLException
 	                    }
 	                }
 
+	                tx.registerSynchronization(new ConnectionSynchronization(null, _transactionalDriverXAConnectionConnection));
 	                if (delayClose)
 	                {
-        	                tx.registerSynchronization(new ConnectionSynchronization(_theConnection, _transactionalDriverXAConnectionConnection));
+        	                tx.registerSynchronization(new ConnectionSynchronization(_theConnection, null));
 
                                 _theConnection = null;
 	                }
 	            }
 	            else
 	                throw new SQLException(jdbcLogger.i18NLogger.get_closeerrorinvalidtx(tx.toString()));
+	        } else {
+	            _transactionalDriverXAConnectionConnection.closeCloseCurrentConnection();
 	        }
 
 	        if (!delayClose)  // close now
 	        {
-	            if (_theModifier != null)
-	                _transactionalDriverXAConnectionConnection.closeCloseCurrentConnection();
-
-	           
-	            if (_theConnection != null && !_theConnection.isClosed())
+	            if (!_theConnection.isClosed()) {
 	                _theConnection.close();
+	            }
 
 	            _theConnection = null;
 	        }",2016-05-06T09:39:08Z,5
"@@ -57,14 +57,18 @@ public void afterCompletion(int status)
     {
 	try
 	{
-	    _theConnection.close();
+	    if (_theConnection != null && !_theConnection.isClosed()) {
+	        _theConnection.close();
+	    }
 	}
 	catch (Exception ex)
 	{
 	}
 	try
 	{
-	    _recoveryConnection.closeCloseCurrentConnection();
+	    if (_recoveryConnection != null) {
+	        _recoveryConnection.closeCloseCurrentConnection();
+	    }
 	}
 	catch (Exception ex)
 	{",2016-05-06T09:39:08Z,6
"@@ -54,6 +54,7 @@
               <exclude>**/DBPlugin.java</exclude>
               <exclude>**/*JNDISetup.java</exclude>
               <exclude>**/*SimpleJdbcTest.java</exclude>
+              <exclude>**/*StableConnections.java</exclude>
             </excludes>
           </configuration>
         </plugin>
@@ -154,6 +155,16 @@
     </dependency>
   </dependencies>
   <profiles>
+	<profile>
+		<id>postgresql</id>
+		<dependencies>
+			<dependency>
+				<groupId>postgresql</groupId>
+				<artifactId>postgresql</artifactId>
+				<version>${version.postgresql}</version>
+			</dependency>
+		</dependencies>
+	</profile>
       <profile>
           <id>release</id>
           <build>",2016-05-06T09:39:08Z,7
"@@ -0,0 +1,94 @@
+package com.hp.mwtests.ts.jdbc.basic;
+
+import static org.junit.Assert.fail;
+
+import java.lang.reflect.InvocationTargetException;
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+import javax.naming.InitialContext;
+import javax.naming.NamingException;
+import javax.sql.DataSource;
+import javax.sql.XADataSource;
+
+import org.junit.Before;
+import org.junit.Test;
+import org.springframework.jdbc.datasource.DriverManagerDataSource;
+
+public class StableConnections {
+    private static final String DB_USER1 = ""postgres"";
+    private static final String DB_HOST = ""127.0.0.1"";
+    private static final String DB_SID = ""postgres"";
+
+    @Before
+    public void setup() throws InstantiationException, IllegalAccessException, IllegalArgumentException, InvocationTargetException, NoSuchMethodException, SecurityException, ClassNotFoundException, NamingException, SQLException {
+        System.setProperty(""java.naming.factory.initial"",
+            ""org.apache.naming.java.javaURLContextFactory"");
+        System.setProperty(""java.naming.factory.url.pkgs"", ""org.apache.naming"");
+        getDataSource(DB_USER1);
+    }
+
+    @Test
+    public void test() throws SQLException {
+        for (int i = 0; i < 2; i++) {
+            try (Connection connection = DriverManager.getConnection(""jdbc:arjuna:java:/comp/env/jdbc/"" + DB_USER1, DB_USER1, DB_USER1)) {
+
+                PreparedStatement statement = connection.prepareStatement(""SELECT COUNT(*) FROM pg_stat_activity"");
+                ResultSet resultSet = statement.executeQuery();
+                if (!resultSet.next() || resultSet.getLong(1) != 1) {
+                    fail();
+                }
+            }
+        }
+    }
+
+    private static DataSource getDataSource(String user)
+        throws NamingException, SQLException, InstantiationException,
+        IllegalAccessException, IllegalArgumentException,
+        InvocationTargetException, NoSuchMethodException,
+        SecurityException, ClassNotFoundException {
+        InitialContext initialContext = prepareInitialContext();
+
+        Class clazz = Class.forName(""org.postgresql.xa.PGXADataSource"");
+        XADataSource xaDataSource = (XADataSource) clazz.newInstance();
+        clazz.getMethod(""setServerName"", new Class[] { String.class }).invoke(
+            xaDataSource, new Object[] { DB_HOST });
+        clazz.getMethod(""setDatabaseName"", new Class[] { String.class })
+            .invoke(xaDataSource, new Object[] { DB_SID });
+        clazz.getMethod(""setUser"", new Class[] { String.class }).invoke(
+            xaDataSource, new Object[] { user });
+        clazz.getMethod(""setPassword"", new Class[] { String.class }).invoke(
+            xaDataSource, new Object[] { user });
+        clazz.getMethod(""setPortNumber"", new Class[] { int.class }).invoke(
+            xaDataSource, new Object[] { 5432 });
+
+        final String name = ""java:/comp/env/jdbc/"" + user;
+        initialContext.bind(name, xaDataSource);
+
+        DriverManagerDataSource dataSource = new DriverManagerDataSource(
+            ""jdbc:arjuna:"" + name);
+        dataSource
+            .setDriverClassName(""com.arjuna.ats.jdbc.TransactionalDriver"");
+
+        return dataSource;
+    }
+
+    private static InitialContext prepareInitialContext()
+        throws NamingException {
+        final InitialContext initialContext = new InitialContext();
+
+        try {
+            initialContext.lookup(""java:/comp/env/jdbc"");
+        } catch (NamingException ne) {
+            initialContext.createSubcontext(""java:"");
+            initialContext.createSubcontext(""java:/comp"");
+            initialContext.createSubcontext(""java:/comp/env"");
+            initialContext.createSubcontext(""java:/comp/env/jdbc"");
+        }
+
+        return initialContext;
+    }
+}",2016-05-06T09:39:08Z,8
"@@ -228,6 +228,16 @@
 	</dependencies>
 
   <profiles>
+	<profile>
+		<id>postgresql</id>
+		<dependencies>
+			<dependency>
+				<groupId>postgresql</groupId>
+				<artifactId>postgresql</artifactId>
+				<version>${version.postgresql}</version>
+			</dependency>
+		</dependencies>
+	</profile>
     <profile>
       <id>IDE</id>
       <build>",2016-05-06T09:39:08Z,9
"@@ -165,11 +165,48 @@ function tx_bridge_tests {
   [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS failed""
 }
 
+function enable_qa_trace {
+cat << 'EOF' > dist/narayana-full-5.0.0.M2-SNAPSHOT/etc/log4j.xml
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!DOCTYPE log4j:configuration SYSTEM ""log4j.dtd"">
+
+<log4j:configuration xmlns:log4j=""http://jakarta.apache.org/log4j/"">
+
+    <appender name=""console"" class=""org.apache.log4j.ConsoleAppender"">
+        <param name=""Target"" value=""System.out""/>
+        <param name=""Threshold"" value=""TRACE""/>
+
+        <layout class=""org.apache.log4j.PatternLayout"">
+            <param name=""ConversionPattern"" value=""%d{ABSOLUTE} {%8.8t} (%x) [%-5p,%-10c{1}] %m%n""/>
+        </layout>
+    </appender>
+
+    <appender name=""file"" class=""org.apache.log4j.FileAppender"">
+        <param name=""File"" value=""logs/test.log""/>
+        <param name=""Append"" value=""false""/>
+        <param name=""Threshold"" value=""TRACE""/>
+
+        <layout class=""org.apache.log4j.PatternLayout"">
+            <param name=""ConversionPattern"" value=""%d [%t] %p - %m%n""/>
+        </layout>
+    </appender>
+
+    <category name=""com.arjuna"">
+        <level value=""TRACE""/>
+        <appender-ref ref=""console""/>
+        <appender-ref ref=""file""/>
+    </category>
+</log4j:configuration>
+EOF
+}
+
 function qa_tests_once {
   echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
   unset orb
 
+  [ $QA_TRACE = 1 ] && enable_qa_trace
+
   # look for an argument of the form orb=<something>
   for i in $@; do
     [ ${i%%=*} = ""orb"" ] && orb=${i##*=}
@@ -217,7 +254,16 @@ function qa_tests_once {
     [ x$QA_TARGET = x ] || target=$QA_TARGET # the caller can force the build to run a specific target
 
     # run the ant target
-    ant -f run-tests.xml $target $QA_PROFILE
+    if [ ""x$QA_TESTGROUP"" != ""x"" ]; then
+      if [ ""x$QA_STRESS"" != ""x"" ]; then
+        for i in {1..200}; do echo run $i; ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP onetest; [ $? = 0 ] || break; done
+      else
+        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP onetest;
+      fi
+    else
+      ant -f run-tests.xml $target $QA_PROFILE
+    fi
+
     ok=$?
     # archive the jtsremote test output (use a name related to the orb that was used for the tests)
     mv ""$WORKSPACE/qa/TEST-*.txt"" $WORKSPACE/qa/testoutput 2>/dev/null",2013-01-21T21:35:52Z,10
"@@ -1948,6 +1948,13 @@ protected synchronized final void phase2Abort (boolean reportHeuristics)
         }
     }
 
+    /*
+     * Various optimisations which are possible during synchronous prepare are
+     * not possible for asynchronous prepare due to lack of ordering. For instance
+     * dynamically determining one-phase optimisation while running through the
+     * intentions list and getting read-only responses from N-1 participants.
+     */
+    
     protected int async_prepare(boolean reportHeuristics) {
         int p = TwoPhaseOutcome.PREPARE_OK;
         Collection<AbstractRecord> lastResourceRecords = new ArrayList<AbstractRecord>();
@@ -2006,7 +2013,10 @@ protected int async_prepare(boolean reportHeuristics) {
      * all the records indicate that they are readonly records. Such records do
      * not take part in the second phase commit processing.
      *
-     * @return <code>TwoPhaseOutcome</code> indicating outcome.
+     * @return <code>TwoPhaseOutcome</code> indicating outcome. Note that if
+     * 1PC optimisation is enabled then it is possible for prepare to dynamically
+     * optimise and commit if the first N-1 participants return read-only, causing the
+     * protcol to commit the last participant rather than go through prepare.
      */
 
     protected synchronized final int prepare (boolean reportHeuristics)
@@ -2081,6 +2091,22 @@ protected synchronized final int prepare (boolean reportHeuristics)
             }
         }
 
+        /*
+         * Now let's see if we are able to dynamically optimise 1PC. As we went
+         * through prepare, if the first N-1 participants returned read-only
+         * then we returned read-only from doPrepare but left one entry on
+         * the intentions list.
+         */
+
+        if ((p == TwoPhaseOutcome.PREPARE_READONLY) && (pendingList.size() == 1))
+        {
+            onePhaseCommit(reportHeuristics);
+
+            ActionManager.manager().remove(get_uid());
+
+            return TwoPhaseOutcome.PREPARE_ONE_PHASE_COMMITTED;
+        }
+        
         if ((p != TwoPhaseOutcome.PREPARE_OK)
                 && (p != TwoPhaseOutcome.PREPARE_READONLY))
         {
@@ -2485,7 +2511,7 @@ private int doPrepare (boolean reportHeuristics)
            */
 
         int overallTwoPhaseOutcome = TwoPhaseOutcome.PREPARE_READONLY;
-
+        
         /*
         * March down the pendingList and pass the head of the list to the
         * main work routine until either we run out of elements, or one of
@@ -2507,6 +2533,23 @@ private int doPrepare (boolean reportHeuristics)
             }
 
             keepGoing = ( individualTwoPhaseOutcome == TwoPhaseOutcome.PREPARE_OK) || ( individualTwoPhaseOutcome == TwoPhaseOutcome.PREPARE_READONLY);
+            
+            /*
+             * If we are allowed to do 1PC optimisation then check to see if the first N-1
+             * participants returned read-only and there's a single entry left on the
+             * intentions list.
+             */
+            
+            if (keepGoing && TxControl.onePhase)
+            {
+                /*
+                 * If N-1 returned read-only and 1 record left then exit prepare now and force
+                 * a call to commitOnePhase on the last record.
+                 */
+                
+                if ((pendingList.size() == 1) && (overallTwoPhaseOutcome == TwoPhaseOutcome.PREPARE_READONLY))
+                    keepGoing = false;
+            }
         }
 
         return overallTwoPhaseOutcome;",2013-03-06T22:07:00Z,11
"@@ -53,6 +53,11 @@
 public class TwoPhaseOutcome
 {
 
+    /*
+     * WARNING!!
+     * Do not re-order this list.
+     */
+    
     public static final int PREPARE_OK = 0;  // prepared OK
     public static final int PREPARE_NOTOK = 1; // did not prepare so force roll back
     public static final int PREPARE_READONLY = 2; // only used to read the state, so no need for second phase
@@ -65,6 +70,7 @@ public class TwoPhaseOutcome
     public static final int NOT_PREPARED = 9;  // participant told to do second phase operation when it hadn't seen the first phase
     public static final int ONE_PHASE_ERROR = 10;  // WARNING this has different meanings depending upon nested or top-level usage.
     public static final int INVALID_TRANSACTION = 11;  // invalid!
+    public static final int PREPARE_ONE_PHASE_COMMITTED = 12;  // dynamic one-phase commit optimisation during prepare
 
     public TwoPhaseOutcome (int outcome)
     {
@@ -113,6 +119,8 @@ public static String stringForm (int res)
 	    return ""TwoPhaseOutcome.ONE_PHASE_ERROR"";
 	case INVALID_TRANSACTION:
 	    return ""TwoPhaseOutcome.INVALID_TRANSACTION"";
+	case PREPARE_ONE_PHASE_COMMITTED:
+	    return ""TwoPhaseOutcome.PREPARE_ONE_PHASE_COMMITTED"";
 	default:
 	    return ""Unknown"";
 	}",2013-03-06T22:07:00Z,12
"@@ -0,0 +1,95 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.arjuna.atomicaction;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertTrue;
+
+import org.junit.Test;
+
+import com.arjuna.ats.arjuna.AtomicAction;
+import com.arjuna.ats.arjuna.coordinator.ActionStatus;
+import com.arjuna.ats.arjuna.coordinator.BasicAction;
+import com.arjuna.ats.internal.arjuna.thread.ThreadActionData;
+import com.hp.mwtests.ts.arjuna.resources.BasicRecord;
+import com.hp.mwtests.ts.arjuna.resources.OnePhaseAbstractRecord;
+
+public class OnePhaseCommitUnitTest
+{
+    @Test
+    public void testBasic () throws Exception
+    {
+        AtomicAction A = new AtomicAction();
+        OnePhaseAbstractRecord rec = new OnePhaseAbstractRecord();
+        
+        A.begin();
+        
+        A.add(rec);
+        
+        A.commit();
+        
+        assertTrue(rec.onePhaseCalled());
+    }
+    
+    @Test
+    public void testFailed () throws Exception
+    {
+        AtomicAction A = new AtomicAction();
+        OnePhaseAbstractRecord rec1 = new OnePhaseAbstractRecord();
+        BasicRecord rec2 = new BasicRecord();
+        
+        A.begin();
+        
+        A.add(rec1);
+        A.add(rec2);
+        
+        A.commit();
+        
+        assertTrue(!rec1.onePhaseCalled());
+    }
+    
+    @Test
+    public void testDynamic () throws Exception
+    {
+        AtomicAction A = new AtomicAction();
+        OnePhaseAbstractRecord rec1 = new OnePhaseAbstractRecord();
+        OnePhaseAbstractRecord rec2 = new OnePhaseAbstractRecord();
+        
+        A.begin();
+        
+        /*
+         * Because these are the same record type, we know that they will
+         * be called in the order in which they were registered.
+         * 
+         * There are two records, so 1PC will not be triggered initially. But
+         * the first record will return read-only from prepare, which will
+         * then trigger 1PC to happen dynamically.
+         */
+        
+        A.add(rec1);
+        A.add(rec2);
+        
+        A.commit();
+        
+        assertTrue(!rec1.onePhaseCalled());
+        assertTrue(rec2.onePhaseCalled());
+    }
+}",2013-03-06T22:07:00Z,13
"@@ -85,7 +85,6 @@ public int topLevelPrepare()
 
     public void print(PrintWriter strm)
     {
-        strm.println(""Shutdown for:"");
         super.print(strm);
     }
 ",2013-03-06T22:07:00Z,14
"@@ -0,0 +1,173 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Limited,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.  
+ *
+ * $Id: BasicRecord.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.arjuna.resources;
+
+import java.io.PrintWriter;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.coordinator.AbstractRecord;
+import com.arjuna.ats.arjuna.coordinator.RecordType;
+import com.arjuna.ats.arjuna.coordinator.TwoPhaseOutcome;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.state.OutputObjectState;
+
+public class OnePhaseAbstractRecord extends AbstractRecord
+{
+
+    public OnePhaseAbstractRecord()
+    {
+        super(new Uid());
+    }
+
+    public boolean onePhaseCalled ()
+    {
+        return _onePhaseCalled;
+    }
+    
+    public int typeIs()
+    {
+        return RecordType.USER_DEF_FIRST0;
+    }
+    
+    public int nestedOnePhaseCommit ()
+    {
+        _onePhaseCalled = true;
+        
+        return TwoPhaseOutcome.FINISH_OK;
+    }
+
+    public int topLevelOnePhaseCommit ()
+    {
+        _onePhaseCalled = true;
+        
+        return TwoPhaseOutcome.FINISH_OK;
+    }
+    
+    public int nestedAbort()
+    {
+        return TwoPhaseOutcome.FINISH_ERROR;
+    }
+
+    public int nestedCommit()
+    {
+        return TwoPhaseOutcome.FINISH_ERROR;
+    }
+
+    public int nestedPrepare()
+    {
+        return TwoPhaseOutcome.PREPARE_NOTOK;
+    }
+
+    public int topLevelAbort()
+    {
+        return TwoPhaseOutcome.FINISH_ERROR;
+    }
+
+    public int topLevelCommit()
+    {
+        return TwoPhaseOutcome.FINISH_ERROR;
+    }
+
+    public int topLevelPrepare()
+    {
+        return TwoPhaseOutcome.PREPARE_READONLY;
+    }
+
+    public void print(PrintWriter strm)
+    {
+        super.print(strm);
+    }
+
+    public boolean doSave()
+    {
+        return true;
+    }
+
+    public boolean save_state(OutputObjectState os, int ot)
+    {
+        return true;
+    }
+
+    public boolean restore_state(InputObjectState os, int ot)
+    {
+        return true;
+    }
+
+    public String type()
+    {
+        return ""/StateManager/AbstractRecord/OnePhaseAbstractRecord"";
+    }
+
+    public boolean shouldAdd(AbstractRecord a)
+    {
+        return false;
+    }
+
+    public boolean shouldMerge(AbstractRecord a)
+    {
+        return false;
+    }
+
+    public boolean shouldReplace(AbstractRecord a)
+    {
+        return false;
+    }
+
+    public boolean shouldAlter(AbstractRecord a)
+    {
+        return false;
+    }
+
+    public void merge(AbstractRecord a)
+    {
+    }
+
+    public void alter(AbstractRecord a)
+    {
+    }
+
+    /**
+     * @return <code>Object</code> to be used to order.
+     */
+
+    public Object value()
+    {
+        return null;
+    }
+
+    public void setValue(Object o)
+    {
+    }
+
+    private boolean _onePhaseCalled = false;
+}
+",2013-03-06T22:07:00Z,15
"@@ -26,6 +26,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
@@ -45,6 +46,7 @@
 import org.jboss.byteman.contrib.bmunit.BMScript;
 import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
 import org.jboss.byteman.rule.exception.ExecuteException;
+import org.jfree.io.IOUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -293,14 +295,24 @@ public void run() {
 
 		synchronized (lock) {
 			while (lock.getCount() < 2) {
-				lock.wait();
+				lock.wait(300000);
+			}
+			
+			if (lock.getCount() < 2) {
+				fail(""Did not get notification for both recovery runs, deadlock in recovery manager scan detected"");
+				ProcessBuilder processBuilder = new ProcessBuilder(""/bin/sh"", ""-c"", ""kill -3 $PPID"");  
+				processBuilder.redirectErrorStream(true);
+				Process process = processBuilder.start();       
+				InputStream inputStream = process.getInputStream();       
+				IOUtils.getInstance().copyStreams(inputStream, System.out);
 			}
 		}
 
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 3);
+		// JBTM-1260 simultaneous recover can cause spurious Xid rollback of normally completed Xid, should not be an issue
+		assertTrue("""" + completionCounter.getRollbackCount(""1000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""1000"")));
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 3);
+		assertTrue("""" + completionCounter.getRollbackCount(""2000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""2000"")));
 
 	}
 ",2012-09-20T09:04:36Z,16
"@@ -26,6 +26,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
@@ -45,6 +46,7 @@
 import org.jboss.byteman.contrib.bmunit.BMScript;
 import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
 import org.jboss.byteman.rule.exception.ExecuteException;
+import org.jfree.io.IOUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -293,14 +295,24 @@ public void run() {
 
 		synchronized (lock) {
 			while (lock.getCount() < 2) {
-				lock.wait();
+				lock.wait(300000);
+			}
+			
+			if (lock.getCount() < 2) {
+				fail(""Did not get notification for both recovery runs, deadlock in recovery manager scan detected"");
+				ProcessBuilder processBuilder = new ProcessBuilder(""/bin/sh"", ""-c"", ""kill -3 $PPID"");  
+				processBuilder.redirectErrorStream(true);
+				Process process = processBuilder.start();       
+				InputStream inputStream = process.getInputStream();       
+				IOUtils.getInstance().copyStreams(inputStream, System.out);
 			}
 		}
 
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 3);
+		// JBTM-1260 simultaneous recover can cause spurious Xid rollback of normally completed Xid, should not be an issue
+		assertTrue("""" + completionCounter.getRollbackCount(""1000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""1000"")));
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 3);
+		assertTrue("""" + completionCounter.getRollbackCount(""2000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""2000"")));
 
 	}
 ",2012-09-20T09:04:36Z,16
"@@ -106,7 +106,9 @@ public class RecoveryManager
 
     public static synchronized final RecoveryManager manager () throws IllegalArgumentException
     {
-	return manager(RecoveryManager.INDIRECT_MANAGEMENT);
+   	if (_recoveryManager == null)    		
+   		return manager(RecoveryManager.INDIRECT_MANAGEMENT);
+    return _recoveryManager;
     }
 
     /**",2013-02-06T14:42:32Z,17
"@@ -33,6 +33,7 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.HashSet;
 import java.util.Hashtable;
@@ -153,11 +154,11 @@ public synchronized void periodicWorkFirstPass()
 		// the start scan to make sure that we have loaded all the XAResources we possibly can to assist subordinate transactions recovering
 
 		// scan using statically configured plugins;
-		_resources = resourceInitiatedRecovery();
+		List<XAResource> resources = resourceInitiatedRecovery();
 		// scan using dynamically configured plugins:
-		_resources.addAll(resourceInitiatedRecoveryForRecoveryHelpers());
+		resources.addAll(resourceInitiatedRecoveryForRecoveryHelpers());
 
-		for (XAResource xaResource : _resources) {
+		for (XAResource xaResource : resources) {
 			try {
 				// This calls out to remote systems and may block. Consider
 				// using alternate concurrency
@@ -238,8 +239,11 @@ private XAResource getNewXAResource(Xid xid)
 				RecoveryXids xids = _xidScans.get(theKey);
 
 				// JBTM-1255 moved stale check back to bottomUpRecovery
-				if (xids.contains(xid))
+				if (xids.contains(xid)) {
+					// This Xid is going to be recovered by the AtomicAction
+					xids.remove(xid);
 					return theKey;
+				}
 			}
 		}
 
@@ -403,7 +407,9 @@ record = _recoveryManagerClass.getResource(theUid);
 	 * @see XARecoveryModule#getNewXAResource(XAResourceRecord)
 	 */
     private void bottomUpRecovery() {
-			for (XAResource xaResource : _resources) {
+    	if (_xidScans != null) {
+            List<XAResource> resources = Collections.list(_xidScans.keys());
+			for (XAResource xaResource : resources) {
 				try {
 					// This calls out to remote systems and may block. Consider
 					// using alternate concurrency
@@ -415,6 +421,7 @@ private void bottomUpRecovery() {
 					jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
 				}
 			}
+    	}
 
 
         // JBTM-895 garbage collection is now done when we return XAResources {@see XARecoveryModule#getNewXAResource(XAResourceRecord)}
@@ -546,7 +553,7 @@ private final void xaRecoveryFirstPass(XAResource xares)
 
 				return;
 			}
-
+			
 			RecoveryXids xidsToRecover = null;
 
 			if (_xidScans == null)
@@ -555,7 +562,7 @@ private final void xaRecoveryFirstPass(XAResource xares)
 			{
                 refreshXidScansForEquivalentXAResourceImpl(xares, trans);
 
-				xidsToRecover = _xidScans.get(xares);
+                xidsToRecover = _xidScans.get(xares);
 
 				if (xidsToRecover == null)
 				{
@@ -885,7 +892,7 @@ private void clearAllFailures()
 
 	private InputObjectState _uids = new InputObjectState();
 
-	private List<XAResource> _resources;
+//	private List<XAResource> _resources;
 
 	private boolean requireFirstPass = true;
 ",2013-02-06T14:42:32Z,18
"@@ -0,0 +1,17 @@
+########################################################################
+#
+# byteman script used to ensure that tests can synchronize with various
+# actions performed by the recovery code
+
+#########################################################################
+RULE Fail 2PC
+CLASS  com.arjuna.ats.arjuna.coordinator.BasicAction
+METHOD phase2Commit
+AT ENTRY
+BIND NOTHING
+IF readCounter(""phase2commit"") == 0
+	DO debug(""Called""),
+	incrementCounter(""phase2commit"");
+	com.arjuna.ats.arjuna.coordinator.ActionManager.manager().remove($this.get_uid());
+   	RETURN
+ENDRULE",2013-02-06T14:42:32Z,19
"@@ -0,0 +1,131 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Ltd,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: CrashRecovery.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.recovery;
+
+import static org.junit.Assert.assertTrue;
+
+import java.lang.reflect.Field;
+import java.util.Arrays;
+
+import javax.transaction.HeuristicMixedException;
+import javax.transaction.HeuristicRollbackException;
+import javax.transaction.NotSupportedException;
+import javax.transaction.RollbackException;
+import javax.transaction.SystemException;
+
+import org.jboss.byteman.contrib.bmunit.BMScript;
+import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import com.arjuna.ats.arjuna.common.RecoveryEnvironmentBean;
+import com.arjuna.ats.arjuna.common.recoveryPropertyManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.RecoveryXids;
+import com.arjuna.ats.jta.common.JTAEnvironmentBean;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+
+@RunWith(BMUnitRunner.class)
+@BMScript(""fail2pc"")
+public class CrashRecovery2 {
+	@Test
+	public void test() throws NotSupportedException, SystemException,
+			IllegalStateException, RollbackException, SecurityException,
+			HeuristicMixedException, HeuristicRollbackException,
+			NoSuchFieldException, IllegalArgumentException,
+			IllegalAccessException {
+		recoveryPropertyManager.getRecoveryEnvironmentBean()
+				.setRecoveryBackoffPeriod(1);
+
+		// ok, now drive a TX to completion. the script should ensure that the
+		// recovery
+
+		TestXAResource firstResource = new TestXAResource();
+		TestXAResource secondResource = new TestXAResource();
+
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager
+				.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		theTransaction.enlistResource(firstResource);
+		theTransaction.enlistResource(secondResource);
+
+		tm.commit();
+
+		TestXAResourceRecovery.setResources(firstResource, secondResource);
+
+		assertTrue(firstResource.commitCount() == 0);
+		assertTrue(firstResource.commitCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+
+		RecoveryEnvironmentBean recoveryEnvironmentBean = recoveryPropertyManager
+				.getRecoveryEnvironmentBean();
+		recoveryEnvironmentBean
+				.setRecoveryModuleClassNames(Arrays
+						.asList(new String[] {
+								""com.arjuna.ats.internal.arjuna.recovery.AtomicActionRecoveryModule"",
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule"" }));
+
+		JTAEnvironmentBean jtaEnvironmentBean = jtaPropertyManager
+				.getJTAEnvironmentBean();
+		jtaEnvironmentBean
+				.setXaResourceRecoveryClassNames(Arrays
+						.asList(new String[] { ""com.hp.mwtests.ts.jta.recovery.TestXAResourceRecovery"" }));
+		jtaEnvironmentBean
+				.setXaResourceOrphanFilterClassNames(Arrays
+						.asList(new String[] {
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.JTATransactionLogXAResourceOrphanFilter"",
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.JTANodeNameXAResourceOrphanFilter"" }));
+		jtaEnvironmentBean.setXaRecoveryNodes(Arrays
+				.asList(new String[] { ""1"" }));
+
+		RecoveryManager manager = RecoveryManager
+				.manager(RecoveryManager.DIRECT_MANAGEMENT);
+		manager.initialize();
+
+		Field safetyIntervalMillis = RecoveryXids.class
+				.getDeclaredField(""safetyIntervalMillis"");
+		safetyIntervalMillis.setAccessible(true);
+		safetyIntervalMillis.set(null, 0);
+
+		manager.scan();
+
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(firstResource.commitCount() == 1);
+		assertTrue(firstResource.commitCount() == 1);
+	}
+}",2013-02-06T14:42:32Z,20
"@@ -0,0 +1,93 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.recovery;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+public class TestXAResource implements XAResource {
+	private Xid xid;
+	private int commitCount;
+	private int rollbackCount;
+
+	public TestXAResource(Xid xid) {
+		this.xid = xid;
+	}
+
+	public TestXAResource() {
+	}
+
+	public Xid[] recover(int flag) throws XAException {
+		return new Xid[] { xid };
+	}
+
+	public boolean isSameRM(XAResource xares) throws XAException {
+		return false;
+	}
+
+	public int prepare(Xid xid) throws XAException {
+		this.xid = xid;
+		return XA_OK;
+	}
+
+	public void commit(Xid id, boolean onePhase) throws XAException {
+		System.out.println(""committed"");
+		xid = null;
+		commitCount++;
+	}
+
+	public void rollback(Xid xid) throws XAException {
+		System.out.println(""rolled back"");
+		xid = null;
+		rollbackCount++;
+	}
+
+	public void forget(Xid xid) throws XAException {
+	}
+
+	public int getTransactionTimeout() throws XAException {
+		return 0;
+	}
+
+	public boolean setTransactionTimeout(int seconds) throws XAException {
+		return true;
+	}
+
+	public void start(Xid xid, int flags) throws XAException {
+	}
+
+	public void end(Xid xid, int flags) throws XAException {
+	}
+
+	public Xid getXid() {
+		return xid;
+	}
+
+	public int commitCount() {
+		return commitCount;
+	}
+
+	public int rollbackCount() {
+		return rollbackCount;
+	}
+
+}",2013-02-06T14:42:32Z,21
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.recovery;
+
+import java.sql.SQLException;
+import java.util.Stack;
+
+import javax.transaction.xa.XAResource;
+
+import com.arjuna.ats.jta.recovery.XAResourceRecovery;
+
+public class TestXAResourceRecovery implements XAResourceRecovery {
+
+	private static Stack<XAResource> resources = new Stack<XAResource>();
+
+	public XAResource getXAResource() throws SQLException {
+		return resources.pop();
+	}
+
+	public boolean initialise(String p) throws SQLException {
+		return true;
+	}
+
+	public boolean hasMoreResources() {
+		return resources.size() > 0;
+	}
+
+	public static void setResources(XAResource resource, XAResource resource2) {
+		resources.push(resource);
+		resources.push(resource2);
+	}
+}",2013-02-06T14:42:32Z,22
"@@ -0,0 +1,288 @@
+/*
+ * Copyright 2013, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2013
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.commitmarkable;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+import java.io.File;
+import java.sql.Connection;
+import java.util.Enumeration;
+import java.util.Vector;
+
+import javax.naming.InitialContext;
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.h2.jdbcx.JdbcDataSource;
+import org.jnp.server.NamingBeanImpl;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import com.arjuna.ats.arjuna.AtomicAction;
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryModule;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.internal.arjuna.common.UidHelper;
+import com.arjuna.ats.internal.arjuna.tools.log.EditableAtomicAction;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.CommitMarkableResourceRecordRecoveryModule;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;
+import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;
+
+public class TestCommitMarkableResourceReturnUnknownOutcomeFrom1PCCommit {
+
+    private NamingBeanImpl namingBeanImpl = null;
+
+    private String resetPropertiesFile;
+
+    protected RecoveryManager manager;
+
+    private JDBCConnectableResource nonXAResource;
+    private SimpleXAResource xaResource;
+
+    @Before
+    public final void setup() throws Exception {
+
+        File file = new File(System.getProperty(""user.dir"") + ""/ObjectStore"");
+        if (file.exists()) {
+            Utils.removeRecursive(file.toPath());
+        }
+
+        System.setProperty(""java.naming.factory.initial"", ""org.jnp.interfaces.NamingContextFactory"");
+        System.setProperty(""java.naming.factory.url.pkgs"", ""org.jboss.naming:org.jnp.interfaces"");
+        namingBeanImpl = new NamingBeanImpl();
+        namingBeanImpl.start();
+
+        resetPropertiesFile = System.getProperty(""com.arjuna.ats.arjuna.common.propertiesFile"");
+        if (resetPropertiesFile == null) {
+            System.setProperty(""com.arjuna.ats.arjuna.common.propertiesFile"", ""commitmarkableresourcejbossts-properties.xml"");
+        }
+        manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);
+    }
+
+    @After
+    public final void tearDown() {
+
+        namingBeanImpl.stop();
+        namingBeanImpl = null;
+
+        if (resetPropertiesFile != null) {
+            System.setProperty(""com.arjuna.ats.arjuna.common.propertiesFile"", resetPropertiesFile);
+        } else {
+            System.clearProperty(""com.arjuna.ats.arjuna.common.propertiesFile"");
+        }
+    }
+
+    @Test
+    public void testRMFAILAfterCommit() throws Exception {
+        jtaPropertyManager.getJTAEnvironmentBean().setNotifyCommitMarkableResourceRecoveryModuleOfCompleteBranches(false);
+        final JdbcDataSource dataSource = new JdbcDataSource();
+        dataSource.setURL(""jdbc:h2:mem:JBTMDB;MVCC=TRUE;DB_CLOSE_DELAY=-1"");
+        // Test code
+        Utils.createTables(dataSource.getConnection());
+
+        // We can't just instantiate one as we need to be using the
+        // same one as
+        // the transaction
+        // manager would have used to mark the transaction for GC
+        CommitMarkableResourceRecordRecoveryModule commitMarkableResourceRecoveryModule = null;
+        Vector recoveryModules = manager.getModules();
+        if (recoveryModules != null) {
+            Enumeration modules = recoveryModules.elements();
+
+            while (modules.hasMoreElements()) {
+                RecoveryModule m = (RecoveryModule) modules.nextElement();
+
+                if (m instanceof CommitMarkableResourceRecordRecoveryModule) {
+                    commitMarkableResourceRecoveryModule = (CommitMarkableResourceRecordRecoveryModule) m;
+                } else if (m instanceof XARecoveryModule) {
+                    XARecoveryModule xarm = (XARecoveryModule) m;
+                    xarm.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
+                        public boolean initialise(String p) throws Exception {
+                            return true;
+                        }
+
+                        public XAResource[] getXAResources() throws Exception {
+                            return new XAResource[] { xaResource };
+                        }
+                    });
+                }
+            }
+        }
+        javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+        tm.begin();
+
+        Uid get_uid = ((TransactionImple) tm.getTransaction()).get_uid();
+
+        Connection localJDBCConnection = dataSource.getConnection();
+        localJDBCConnection.setAutoCommit(false);
+
+        nonXAResource = new JDBCConnectableResource(localJDBCConnection) {
+            @Override
+            public void commit(Xid arg0, boolean arg1) throws XAException {
+                super.commit(arg0, arg1);
+                throw new XAException(XAException.XAER_RMFAIL);
+            }
+        };
+        tm.getTransaction().enlistResource(nonXAResource);
+
+        xaResource = new SimpleXAResource();
+        tm.getTransaction().enlistResource(xaResource);
+
+        localJDBCConnection.createStatement().execute(""INSERT INTO foo (bar) VALUES (1)"");
+
+        tm.commit();
+
+        assertTrue(xaResource.wasCommitted());
+
+        Xid committed = ((JDBCConnectableResource) nonXAResource).getStartedXid();
+        assertNotNull(committed);
+
+        InputObjectState uids = new InputObjectState();
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        Uid uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(get_uid));
+
+        // Belt and braces but we don't expect the CMR to be removed anyway as
+        // the RM is ""offline""
+        manager.scan();
+        manager.scan();
+
+        // The recovery module has to perform lookups
+        new InitialContext().rebind(""commitmarkableresource"", dataSource);
+
+        assertTrue(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+
+        manager.scan(); // This will complete the atomicaction
+
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(Uid.nullUid()));
+
+        manager.scan(); // This is when the CMR deletes are done due to ordering
+                        // of the recovery modules
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+    }
+
+    @Test
+    public void testRMFAILAfterNoCommit() throws Exception {
+        jtaPropertyManager.getJTAEnvironmentBean().setNotifyCommitMarkableResourceRecoveryModuleOfCompleteBranches(false);
+        final JdbcDataSource dataSource = new JdbcDataSource();
+        dataSource.setURL(""jdbc:h2:mem:JBTMDB;MVCC=TRUE;DB_CLOSE_DELAY=-1"");
+        // Test code
+        Utils.createTables(dataSource.getConnection());
+
+        // We can't just instantiate one as we need to be using the
+        // same one as
+        // the transaction
+        // manager would have used to mark the transaction for GC
+        CommitMarkableResourceRecordRecoveryModule commitMarkableResourceRecoveryModule = null;
+        Vector recoveryModules = manager.getModules();
+        if (recoveryModules != null) {
+            Enumeration modules = recoveryModules.elements();
+
+            while (modules.hasMoreElements()) {
+                RecoveryModule m = (RecoveryModule) modules.nextElement();
+
+                if (m instanceof CommitMarkableResourceRecordRecoveryModule) {
+                    commitMarkableResourceRecoveryModule = (CommitMarkableResourceRecordRecoveryModule) m;
+                } else if (m instanceof XARecoveryModule) {
+                    XARecoveryModule xarm = (XARecoveryModule) m;
+                    xarm.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
+                        public boolean initialise(String p) throws Exception {
+                            return true;
+                        }
+
+                        public XAResource[] getXAResources() throws Exception {
+                            return new XAResource[] { xaResource };
+                        }
+                    });
+                }
+            }
+        }
+        javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+        tm.begin();
+
+        Uid get_uid = ((TransactionImple) tm.getTransaction()).get_uid();
+
+        Connection localJDBCConnection = dataSource.getConnection();
+        localJDBCConnection.setAutoCommit(false);
+
+        nonXAResource = new JDBCConnectableResource(localJDBCConnection) {
+            @Override
+            public void commit(Xid arg0, boolean arg1) throws XAException {
+                throw new XAException(XAException.XAER_RMFAIL);
+            }
+        };
+        tm.getTransaction().enlistResource(nonXAResource);
+
+        xaResource = new SimpleXAResource();
+        tm.getTransaction().enlistResource(xaResource);
+
+        localJDBCConnection.createStatement().execute(""INSERT INTO foo (bar) VALUES (1)"");
+
+        tm.commit();
+
+        assertTrue(xaResource.wasCommitted());
+
+        Xid committed = ((JDBCConnectableResource) nonXAResource).getStartedXid();
+        assertNotNull(committed);
+
+        InputObjectState uids = new InputObjectState();
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        Uid uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(get_uid));
+
+        // Belt and braces but we don't expect the CMR to be removed anyway as
+        // the RM is ""offline""
+        manager.scan();
+        manager.scan();
+
+        // The recovery module has to perform lookups
+        new InitialContext().rebind(""commitmarkableresource"", dataSource);
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+
+        manager.scan(); // This will make the AA a heuristic
+
+        EditableAtomicAction editableAtomicAction = new EditableAtomicAction(get_uid);
+        editableAtomicAction.deleteHeuristicParticipant(0);
+        manager.scan();
+
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(Uid.nullUid()));
+
+        manager.scan(); // This is when the CMR deletes are done due to ordering
+                        // of the recovery modules
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+    }
+}
\ No newline at end of file",2015-01-19T15:28:43Z,23
"@@ -357,6 +357,7 @@
 			</plugins>
 		</build>
 	</profile>
+
 	<profile>
 		<id>mssql-jdbc-store</id>
 		<dependencies>
@@ -416,5 +417,32 @@
       </plugins>
     </build>
   </profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <excludes>
+						  <!-- TODO breaks running with JaCoCo -->
+                          <exclude>**/ObjStoreBrowserTest.java</exclude>
+						  <!-- stress tests are not unit tests -->
+                          <exclude>**/LogStressTest2.java</exclude>
+                        </excludes>
+                        <systemProperties>
+                            <property>
+                                <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                                <value>h2jbossts-properties.xml</value>
+                            </property>
+                        </systemProperties>
+
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
+
   </profiles>
 </project>",2014-03-02T13:14:37Z,24
"@@ -223,6 +223,7 @@ public void aaTest(boolean replay) throws Exception {
 			* moved off the heuristic list and back onto the prepared list
 			*/
 			rd.synchronousScan();
+			Thread.sleep(1000); // odd without the delay running under Jacoco fails
 		}
 
 		/*",2014-03-02T13:14:37Z,25
"@@ -83,4 +83,21 @@
       <scope>provided</scope>
     </dependency>
   </dependencies>
+  <profiles>
+    <profile>
+      <id>codeCoverage</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <!-- Skip because all surefire tests are skipped -->
+              <skip>true</skip>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>",2014-03-02T13:14:37Z,7
"@@ -388,5 +388,31 @@
 			</dependency>
 		</dependencies>
 	</profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                      <excludes>
+                        <exclude>**/commitmarkable/**</exclude>
+                        <!-- byteman and Jacoco seem to be interfering with each other -->
+                        <exclude>**/recovery/CrashRecovery.java</exclude>
+                        <exclude>**/recovery/CrashRecovery2.java</exclude>
+                      </excludes>
+
+                      <systemProperties>
+                        <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>h2jbossts-properties.xml</value>
+                        </property>
+                      </systemProperties>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
   </profiles>
 </project>",2014-03-02T13:14:37Z,26
"@@ -0,0 +1,17 @@
+<!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd"">
+<properties>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+
+	<entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.tablePrefix"">Action</entry>
+	<entry key=""ObjectStoreEnvironmentBean.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.tablePrefix"">stateStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+</properties>",2014-03-02T13:14:37Z,27
"@@ -271,5 +271,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 </project>",2014-03-02T13:14:37Z,28
"@@ -272,24 +272,12 @@
             </goals>
             <configuration>
               <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
             </configuration>
           </execution>
         </executions>
         </plugin>
         </plugins>
       </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
       <profile>
           <id>community</id>",2014-03-02T13:14:37Z,29
"@@ -275,40 +275,6 @@
           </plugin>
         </plugins>
       </build>
-    </profile>
-    <profile>
-      <id>codeCoverage</id>
-      <build>
-        <plugins>
-        <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-shade-plugin</artifactId>
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>shade</goal>
-            </goals>
-            <configuration>
-              <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
-            </configuration>
-          </execution>
-        </executions>
-        </plugin>
-        </plugins>
-      </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
      <profile>
           <id>community</id>",2014-03-02T13:14:37Z,30
"@@ -1,17 +1,6 @@
 Narayana
 ========
 
-NOTE: PATCHED EMMA JAR
-----------------------
-This build uses a patch of the EMMA Jar, the source code for the patch is available from:
-
-	https://svn.jboss.org/repos/labs/labs/jbosstm/workspace/emma
-
-If you are building the ""codeCoverage"" profile and are using a different maven installation to the one provided in tools/maven you need to make sure you have the following options:
-
-	-Demma.jar.location=/full/path/to/checkout/location/ext/
-
-
 Requirements
 ------------
 To build Narayana you should have installed:",2014-03-02T13:14:37Z,31
"@@ -24,6 +24,7 @@
 import java.io.IOException;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
 import java.util.ArrayList;
 
 import org.jboss.stm.InvalidAnnotationException;
@@ -130,14 +131,14 @@ public synchronized boolean save_state (OutputObjectState os, int ot)
                     Field[] fields = _theObject.getClass().getDeclaredFields(); // get all fields including private
                 
                     _fields = new ArrayList<Field>();
-                    
+
                     try
                     {
                         for (Field afield : fields)
                         {
                             // ignore if flagged with @NotState
-                            
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }
@@ -221,7 +222,8 @@ public synchronized boolean restore_state (InputObjectState os, int ot)
                         {
                             // ignore if flagged with @NotState
                             
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }",2014-03-02T13:14:37Z,32
"@@ -106,7 +106,6 @@
                   <include>org.jboss.narayana.xts:ws-t11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:wstx11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:bridge:jar:api:${project.version}</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -123,7 +122,6 @@
               <artifactSet>
                 <includes>
                   <include>org.jboss.narayana.xts</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -230,16 +228,6 @@
     </dependency>
   </dependencies>
   <profiles>
-    <profile>
-      <id>codeCoverage</id>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
-    </profile>
     <profile>
         <id>release</id>
         <build>",2014-03-02T13:14:37Z,33
"@@ -227,6 +227,33 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <version>${version.org.jacoco}</version>
+                        <!-- Disable all XTS code coverage since they run under arquillian control.
+						     The current Jacoco config needs updating to include arquillian controlled tests
+                          -->
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <goals>
+                                    <goal>prepare-agent</goal>
+                                </goals>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+
     </profiles>
     <modules>
         <module>unit</module>",2014-03-02T13:14:37Z,34
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,35
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,36
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,37
"@@ -24,6 +24,7 @@
     <packaging>pom</packaging>
     <name>Narayana: ext</name>
     <description>Narayana: Ext All</description>
+
     <profiles>
         <profile>
             <id>codeCoverage</id>
@@ -34,16 +35,19 @@
                         <artifactId>maven-install-plugin</artifactId>
                         <executions>
                             <execution>
-                                <id>copy-patched-emma</id>
+                                <!-- install shaded jacoco ant jar (for use by the QA suite)
+                                     NB the shaded jar is not available via maven
+								-->
+                                <id>copy-jacoco</id>
                                 <phase>validate</phase>
                                 <goals>
                                     <goal>install-file</goal>
                                 </goals>
                                 <configuration>
-                                    <file>${basedir}/emma.jar</file>
-                                    <groupId>emma</groupId>
-                                    <artifactId>emma</artifactId>
-                                    <version>${version.emma}</version>
+                                    <file>${basedir}/jacocoant.jar</file>
+                                    <groupId>org.jacoco</groupId>
+                                    <artifactId>jacoco-ant</artifactId>
+                                    <version>${version.org.jacoco}</version>
                                     <packaging>jar</packaging>
                                 </configuration>
                             </execution>",2014-03-02T13:14:37Z,38
"@@ -460,6 +460,7 @@
     <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>
     <version.org.jboss.as.plugins.jboss-as-maven-plugin>7.4.Final</version.org.jboss.as.plugins.jboss-as-maven-plugin>
     <version.org.apache.maven.plugins.maven-antrun-plugin>1.7</version.org.apache.maven.plugins.maven-antrun-plugin>
+    <version.org.jacoco>0.6.3.201306030806</version.org.jacoco>
   </properties>
   <modules>
     <module>ext</module>
@@ -509,119 +510,118 @@
           </plugins>
       </build>
     </profile>
-        <profile>
-            <id>codeCoverage</id>
-            <build>
-                <plugins>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-jar-plugin</artifactId>
+      <profile>
+          <id>codeCoverage</id>
+          <build>
+          <plugins>
+          <plugin>
+              <groupId>org.jacoco</groupId>
+              <artifactId>jacoco-maven-plugin</artifactId>
+              <version>${version.org.jacoco}</version>
+              <executions>
+                  <!--
+                     Prepares the property pointing to the JaCoCo runtime agent which
+                     is passed as VM argument when Maven the Surefire plugin is executed.
+                 -->
+                  <execution>
+                      <id>pre-unit-test</id>
+                      <goals>
+                          <goal>prepare-agent</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
+                          <!--
+                             Sets the name of the property containing the settings
+                             for JaCoCo runtime agent.
+                         -->
+                          <propertyName>surefireArgLine</propertyName>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-surefire-plugin</artifactId>
+                  </execution>
+                  <!--
+                     Ensures that the code coverage report for unit tests is created after
+                     unit tests have been run.
+                 -->
+                  <execution>
+                      <id>post-unit-test</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>report</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
-                        <additionalClasspathElements>
-                          <additionalClasspathElement>${emma.jar.location}/emma.jar</additionalClasspathElement>
-                        </additionalClasspathElements>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <!-- Sets the output directory for the code coverage report. -->
+                          <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-antrun-plugin</artifactId>
-                      <executions>
-                        <execution>
-                          <id>instrument</id>
-                          <phase>process-classes</phase>
-                          <configuration>
-                            <target>
-                                  <java classname=""emma"">
-                                    <arg value=""instr""/>
-                                    <arg value=""-ix""/>
-                                    <arg value=""-com.arjuna.ArjunaOTS.*,-org.omg.CORBA.*,-org.omg.CosTransactions.*,-org.omg.XA.*,-*.logging.*,-org.jboss.jbossts.xts.servicetests.*,-com.jboss.transaction.wstf.test.*,-com.jboss.transaction.txinterop.test.*""/>
-                                    <arg value=""-instrpath""/>
-                                    <arg value=""${project.build.directory}/classes/""/>
-                                    <arg value=""-outfile""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-outdir""/>
-                                    <arg value=""${project.build.directory}/generated-classes/emma/""/>
-                                    <arg value=""-merge""/>
-                                    <arg value=""y""/>
-                                    <arg value=""-outmode""/>
-                                    <arg value=""fullcopy""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                        <execution>
-                          <id>create-report</id>
-                          <phase>install</phase>
-                          <configuration>
-                            <target>
-                              <taskdef resource=""net/sf/antcontrib/antlib.xml"" classpathref=""maven.plugin.classpath"" />
-                              <if>
-                                <available file=""${project.build.directory}/test-classes/coverage.ec""/>
-                                <then>
-                                  <java classname=""emma"">
-                                    <arg value=""report""/>
-                                    <arg value=""-r""/>
-                                    <arg value=""html""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/test-classes/coverage.ec""/>
-                                    <arg value=""-Dreport.html.out.file=${project.build.directory}/coverage.html""/>
-                                    <arg value=""-Dreport.metrics=method:70,block:70,line:80,class:100""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                                </then>
-                              </if>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                      </executions>
-                      <dependencies>
-                        <dependency>
-                            <groupId>ant-contrib</groupId>
-                            <artifactId>ant-contrib</artifactId>
-                            <version>1.0b3</version>
-                            <exclusions>
-                                <exclusion>
-                                    <groupId>ant</groupId>
-                                    <artifactId>ant</artifactId>
-                                </exclusion>
-                            </exclusions>
-                        </dependency>
-                        <dependency>
-                            <groupId>org.apache.ant</groupId>
-                            <artifactId>ant-nodeps</artifactId>
-                            <version>1.8.1</version>
-                        </dependency>
-                      </dependencies>
-                    </plugin>
-                  </plugins>
-                </build>
-                <properties>
-                  <maven.compiler.argument.target>1.6</maven.compiler.argument.target>
-                  <maven.compiler.argument.source>1.6</maven.compiler.argument.source>
-                  <version.emma>2.0.12224-adinn</version.emma>
-                </properties>
-              </profile>
+                  </execution>
+                  <execution>
+                      <id>check</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>check</goal>
+                      </goals>
+                      <configuration>
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <rules>
+                              <rule>
+                                <element>BUNDLE</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>INSTRUCTION</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.0</minimum>
+                                  </limit>
+								  <!--
+                                  <limit>
+                                    <counter>CLASS</counter>
+                                    <value>MISSEDCOUNT</value>
+                                    <maximum>0</maximum>
+                                  </limit>
+								  -->
+                                </limits>
+                              </rule>
+							  <!--
+                              <rule>
+                                <element>CLASS</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>LINE</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.20</minimum>
+                                  </limit>
+                                </limits>
+                              </rule>
+							  -->
+                          </rules>
+                      </configuration>
+                  </execution>
+              </executions>
+          </plugin>
+          <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <configuration>
+                  <!-- Sets the VM argument line used when unit tests are run. -->
+                  <argLine>${surefireArgLine}</argLine>
+                  <systemProperties>
+                      <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>jbossts-properties.xml</value>
+                      </property>
+                  </systemProperties>
+              </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+
     <profile>
       <id>community</id>
       <properties>",2014-03-02T13:14:37Z,39
"@@ -35,12 +35,24 @@
   Paths are relative to the JVM's working dir - don't expect to be able to execute this from anywhere but 'qa'.
 
 -->
-<project name=""QA Tests for JBossTS"" default=""junit"" basedir=""."">
+<project name=""QA Tests for JBossTS"" default=""junit"" basedir="".""
+         xmlns:jacoco=""antlib:org.jacoco.ant"">
   <taskdef resource=""net/sf/antcontrib/antlib.xml"">
       <classpath>
           <pathelement location=""ant-contrib-1.0b3.jar""/>
       </classpath>
   </taskdef>
+
+  <!-- code coverage settings -->
+  <property name=""code.coverage"" value=""false""/>
+  <property name=""output.dir"" location=""testoutput"" />
+  <property name=""output.report.dir"" location=""${output.dir}/site/jacoco"" />
+  <property name=""output.exec.file"" location=""${output.dir}/jacoco-qa.exec"" />
+
+  <taskdef uri=""antlib:org.jacoco.ant"" resource=""org/jacoco/ant/antlib.xml"">
+      <classpath path=""../ext/jacocoant.jar"" />
+  </taskdef>
+
   <!-- set this property to the location of a JBossTS core build -->
   <property name=""org.jboss.jbossts.qa.ts.home"" location=""dist""/>
   <property name=""narayana.version"" value=""5.0.2.Final-SNAPSHOT""/>
@@ -350,6 +362,32 @@
   </target>
   <!-- ##################################### -->
   <!-- This is where all the hard work happens - use junit to coordinate multi-process tests: -->
+  <path id=""junit.classpath"">
+    <!--
+      This is the classpath for the test framework, not the test components e.g. clients/servers.
+      Those are configured via TaskImpl.properties instead.
+
+      The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
+      test methods, which link against the test classes, which in turn link against JBossTS.
+      Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
+      On the up side, you get better diagnostic messages and code management/navigation in IDEs.
+    -->
+    <pathelement location=""ext/junit.jar""/>
+    <fileset dir=""tests/build"">
+      <include name=""jbossts-*-qa.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
+      <exclude name=""narayana-jts-idlj.jar""/>
+      <exclude name=""narayana-jts-jacorb.jar""/>
+      <include name=""*.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
+      <include name=""*.jar""/>
+      <include name=""*.zip""/>
+    </fileset>
+    <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
+  </path>
+
   <macrodef name=""junit-tests"">
     <attribute name=""tests""/>
     <attribute name=""methods"" default=""""/>
@@ -466,73 +504,65 @@
       <echo message=""Running junit test group @{tests} from basedir=${basedir}""/>
       <!-- this runs forked because the product config file it uses has relative paths in it, so we need to guarantee
             the working dir is the same as the location of this script. -->
-      <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
-        <classpath>
-          <!--
-                This is the classpath for the test framework, not the test components e.g. clients/servers.
-                Those are configured via TaskImpl.properties instead.
+      <if>
+        <equals arg1=""${code.coverage}"" arg2=""true"" />
+		  <then>
+            <jacoco:coverage destfile=""${output.exec.file}"" append=""true"" >
+              <!-- NB cannot call junit as a macrodef because the jacoco:coverage does not support it - so duplicate it -->
+              <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+                <classpath refid=""junit.classpath""/>
+                <formatter type=""plain""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+                <sysproperty key=""names"" value="".*""/>
+                <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              </junit>
+            </jacoco:coverage>
+		  </then>
+		  <else>
+            <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+              <classpath refid=""junit.classpath""/>
+              <formatter type=""plain""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+              <sysproperty key=""names"" value="".*""/>
+              <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              <!--<jvmarg value=""-Xdebug""/>-->
+              <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
+            </junit>
+		  </else>
+      </if>
+    </sequential>
+  </macrodef>
 
-                The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
-                test methods, which link against the test classes, which in turn link against JBossTS.
-                Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
-                On the up side, you get better diagnostic messages and code management/navigation in IDEs.
-                -->
-          <pathelement location=""ext/junit.jar""/>
-          <fileset dir=""tests/build"">
-            <include name=""jbossts-*-qa.jar""/>
-          </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
-            <exclude name=""narayana-jts-idlj.jar""/>
-            <exclude name=""narayana-jts-jacorb.jar""/>
-            <include name=""*.jar""/>
+  <target name=""jacoco-report"">
+    <jacoco:report>
+
+      <!-- Specify the collected execution data from the QA test run -->
+      <executiondata>
+        <file file=""${output.exec.file}"" />
+      </executiondata>
+
+      <structure name=""Narayana QA Report"">
+        <classfiles>
+          <fileset dir="".."" >
+		    <exclude name=""**/idlj/**""/>
           </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
-            <include name=""*.jar""/>
-            <include name=""*.zip""/>
+        </classfiles>
+        <sourcefiles encoding=""UTF-8"">
+          <fileset dir="".."">
+            <include name=""**/*.java""/>
           </fileset>
-          <!-- Commented out as this is just running the same tests again?
-        <fileset dir=""../ArjunaJTS/jts/build/lib"">
-          <include name=""jts_tests.jar""/>
-        </fileset> 
-        -->
-          <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
-        </classpath>
-        <formatter type=""plain""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
-        <sysproperty key=""names"" value="".*""/>
-        <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
-        <!--<jvmarg value=""-Xdebug""/>-->
-        <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
-      </junit>
-    </sequential>
-  </macrodef>
-  <!-- directory that contains emma.jar and emma_ant.jar: -->
-  <path id=""emma.lib"">
-    <pathelement location=""../ext/emma.jar""/>
-    <pathelement location=""ext/emma_ant.jar""/>
-  </path>
-  <taskdef resource=""emma_ant.properties"" classpathref=""emma.lib""/>
-  <target name=""emmareport"">
-    <emma enabled=""true"">
-      <report>
-        <fileset dir="".."">
-          <include name=""**/*.em""/>
-        </fileset>
-        <fileset dir="".."">
-          <include name=""**/*coverage.ec""/>
-        </fileset>
-        <sourcepath>
-          <dirset dir="".."">
-            <include name=""**/classes""/>
-            <include name=""**/java""/>
-          </dirset>
-        </sourcepath>
-        <html outfile=""testoutput/emma/coverage.html""/>
-      </report>
-    </emma>
+        </sourcefiles>
+      </structure>
+
+      <!-- produce multiple report formats. -->
+      <html destdir=""${output.report.dir}"" />
+      <csv destfile=""${output.report.dir}/report.csv"" />
+      <xml destfile=""${output.report.dir}/report.xml"" />
+    </jacoco:report>
   </target>
-	
+
   <!--
 
     unused groups, pending cleanup and wiring:",2014-03-02T13:14:37Z,40
"@@ -407,10 +407,12 @@ function qa_tests_once {
   echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
   unset orb
+  codeCoverage=false;
 
   # look for an argument of the form orb=<something>
   for i in $@; do
     [ ${i%%=*} = ""orb"" ] && orb=${i##*=}
+    [ $i = ""-PcodeCoverage"" ] && codeCoverage=true
   done
 
   # check to see if we were called with orb=idlj as one of the arguments
@@ -465,17 +467,17 @@ function qa_tests_once {
         ok=0
         for i in `seq 1 $QA_STRESS`; do
           echo run $i;
-          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
           if [ $? -ne 0 ]; then
             ok=1; break;
           fi
         done
       else
-        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
         ok=$?
       fi
     else
-      ant -f run-tests.xml $target $QA_PROFILE
+      ant -f run-tests.xml $target $QA_PROFILE -Dcode.coverage=$codeCoverage
       ok=$?
     fi
 
@@ -484,6 +486,11 @@ function qa_tests_once {
       cat TEST-failures.txt 
     fi
 
+    if [ $codeCoverage = true ]; then
+      echo ""generating test coverage report""
+      ant -f run-tests.xml jacoco-report
+    fi
+
     # archive the jtsremote test output (use a name related to the orb that was used for the tests)
     mv TEST-*.txt testoutput 2>/dev/null
     ant -f run-tests.xml testoutput.zip -Dtestoutput.zipname=$testoutputzip
@@ -496,7 +503,7 @@ function qa_tests {
   ok1=0;
   ok2=0;
   if [ $SUN_ORB = 1 ]; then
-    qa_tests_once ""$@"" ""orb=idlj"" ""$@"" # run qa against the Sun orb
+    qa_tests_once ""orb=idlj"" ""$@"" # run qa against the Sun orb
     ok2=$?
   fi
   if [ $JAC_ORB = 1 ]; then
@@ -510,6 +517,8 @@ function qa_tests {
   [ $ok1 = 0 -a $ok2 = 0 ] || fatal ""some qa tests failed""
 }
 
+
+
 check_if_pull_closed
 
 init_test_options",2014-03-02T13:14:37Z,10
"@@ -212,14 +212,6 @@
               </plugin>
             </plugins>
           </build>
-          <dependencies>
-            <dependency>
-              <groupId>emma</groupId>
-              <artifactId>emma</artifactId>
-              <version>${version.emma}</version>
-              <scope>test</scope>
-            </dependency>
-          </dependencies>
         </profile>
         <profile>
             <id>arq</id>",2014-03-02T13:14:37Z,41
"@@ -106,7 +106,9 @@ public class RecoveryManager
 
     public static synchronized final RecoveryManager manager () throws IllegalArgumentException
     {
-	return manager(RecoveryManager.INDIRECT_MANAGEMENT);
+   	if (_recoveryManager == null)    		
+   		return manager(RecoveryManager.INDIRECT_MANAGEMENT);
+    return _recoveryManager;
     }
 
     /**",2013-02-06T14:42:32Z,17
"@@ -33,6 +33,7 @@
 
 import java.io.IOException;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.Enumeration;
 import java.util.HashSet;
 import java.util.Hashtable;
@@ -153,11 +154,11 @@ public synchronized void periodicWorkFirstPass()
 		// the start scan to make sure that we have loaded all the XAResources we possibly can to assist subordinate transactions recovering
 
 		// scan using statically configured plugins;
-		_resources = resourceInitiatedRecovery();
+		List<XAResource> resources = resourceInitiatedRecovery();
 		// scan using dynamically configured plugins:
-		_resources.addAll(resourceInitiatedRecoveryForRecoveryHelpers());
+		resources.addAll(resourceInitiatedRecoveryForRecoveryHelpers());
 
-		for (XAResource xaResource : _resources) {
+		for (XAResource xaResource : resources) {
 			try {
 				// This calls out to remote systems and may block. Consider
 				// using alternate concurrency
@@ -238,8 +239,11 @@ private XAResource getNewXAResource(Xid xid)
 				RecoveryXids xids = _xidScans.get(theKey);
 
 				// JBTM-1255 moved stale check back to bottomUpRecovery
-				if (xids.contains(xid))
+				if (xids.contains(xid)) {
+					// This Xid is going to be recovered by the AtomicAction
+					xids.remove(xid);
 					return theKey;
+				}
 			}
 		}
 
@@ -403,7 +407,9 @@ record = _recoveryManagerClass.getResource(theUid);
 	 * @see XARecoveryModule#getNewXAResource(XAResourceRecord)
 	 */
     private void bottomUpRecovery() {
-			for (XAResource xaResource : _resources) {
+    	if (_xidScans != null) {
+            List<XAResource> resources = Collections.list(_xidScans.keys());
+			for (XAResource xaResource : resources) {
 				try {
 					// This calls out to remote systems and may block. Consider
 					// using alternate concurrency
@@ -415,6 +421,7 @@ private void bottomUpRecovery() {
 					jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
 				}
 			}
+    	}
 
 
         // JBTM-895 garbage collection is now done when we return XAResources {@see XARecoveryModule#getNewXAResource(XAResourceRecord)}
@@ -546,7 +553,7 @@ private final void xaRecoveryFirstPass(XAResource xares)
 
 				return;
 			}
-
+			
 			RecoveryXids xidsToRecover = null;
 
 			if (_xidScans == null)
@@ -555,7 +562,7 @@ private final void xaRecoveryFirstPass(XAResource xares)
 			{
                 refreshXidScansForEquivalentXAResourceImpl(xares, trans);
 
-				xidsToRecover = _xidScans.get(xares);
+                xidsToRecover = _xidScans.get(xares);
 
 				if (xidsToRecover == null)
 				{
@@ -885,7 +892,7 @@ private void clearAllFailures()
 
 	private InputObjectState _uids = new InputObjectState();
 
-	private List<XAResource> _resources;
+//	private List<XAResource> _resources;
 
 	private boolean requireFirstPass = true;
 ",2013-02-06T14:42:32Z,18
"@@ -0,0 +1,17 @@
+########################################################################
+#
+# byteman script used to ensure that tests can synchronize with various
+# actions performed by the recovery code
+
+#########################################################################
+RULE Fail 2PC
+CLASS  com.arjuna.ats.arjuna.coordinator.BasicAction
+METHOD phase2Commit
+AT ENTRY
+BIND NOTHING
+IF readCounter(""phase2commit"") == 0
+	DO debug(""Called""),
+	incrementCounter(""phase2commit"");
+	com.arjuna.ats.arjuna.coordinator.ActionManager.manager().remove($this.get_uid());
+   	RETURN
+ENDRULE",2013-02-06T14:42:32Z,19
"@@ -0,0 +1,131 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Ltd,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: CrashRecovery.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.recovery;
+
+import static org.junit.Assert.assertTrue;
+
+import java.lang.reflect.Field;
+import java.util.Arrays;
+
+import javax.transaction.HeuristicMixedException;
+import javax.transaction.HeuristicRollbackException;
+import javax.transaction.NotSupportedException;
+import javax.transaction.RollbackException;
+import javax.transaction.SystemException;
+
+import org.jboss.byteman.contrib.bmunit.BMScript;
+import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import com.arjuna.ats.arjuna.common.RecoveryEnvironmentBean;
+import com.arjuna.ats.arjuna.common.recoveryPropertyManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.RecoveryXids;
+import com.arjuna.ats.jta.common.JTAEnvironmentBean;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+
+@RunWith(BMUnitRunner.class)
+@BMScript(""fail2pc"")
+public class CrashRecovery2 {
+	@Test
+	public void test() throws NotSupportedException, SystemException,
+			IllegalStateException, RollbackException, SecurityException,
+			HeuristicMixedException, HeuristicRollbackException,
+			NoSuchFieldException, IllegalArgumentException,
+			IllegalAccessException {
+		recoveryPropertyManager.getRecoveryEnvironmentBean()
+				.setRecoveryBackoffPeriod(1);
+
+		// ok, now drive a TX to completion. the script should ensure that the
+		// recovery
+
+		TestXAResource firstResource = new TestXAResource();
+		TestXAResource secondResource = new TestXAResource();
+
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager
+				.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		theTransaction.enlistResource(firstResource);
+		theTransaction.enlistResource(secondResource);
+
+		tm.commit();
+
+		TestXAResourceRecovery.setResources(firstResource, secondResource);
+
+		assertTrue(firstResource.commitCount() == 0);
+		assertTrue(firstResource.commitCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+
+		RecoveryEnvironmentBean recoveryEnvironmentBean = recoveryPropertyManager
+				.getRecoveryEnvironmentBean();
+		recoveryEnvironmentBean
+				.setRecoveryModuleClassNames(Arrays
+						.asList(new String[] {
+								""com.arjuna.ats.internal.arjuna.recovery.AtomicActionRecoveryModule"",
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule"" }));
+
+		JTAEnvironmentBean jtaEnvironmentBean = jtaPropertyManager
+				.getJTAEnvironmentBean();
+		jtaEnvironmentBean
+				.setXaResourceRecoveryClassNames(Arrays
+						.asList(new String[] { ""com.hp.mwtests.ts.jta.recovery.TestXAResourceRecovery"" }));
+		jtaEnvironmentBean
+				.setXaResourceOrphanFilterClassNames(Arrays
+						.asList(new String[] {
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.JTATransactionLogXAResourceOrphanFilter"",
+								""com.arjuna.ats.internal.jta.recovery.arjunacore.JTANodeNameXAResourceOrphanFilter"" }));
+		jtaEnvironmentBean.setXaRecoveryNodes(Arrays
+				.asList(new String[] { ""1"" }));
+
+		RecoveryManager manager = RecoveryManager
+				.manager(RecoveryManager.DIRECT_MANAGEMENT);
+		manager.initialize();
+
+		Field safetyIntervalMillis = RecoveryXids.class
+				.getDeclaredField(""safetyIntervalMillis"");
+		safetyIntervalMillis.setAccessible(true);
+		safetyIntervalMillis.set(null, 0);
+
+		manager.scan();
+
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(secondResource.rollbackCount() == 0);
+		assertTrue(firstResource.commitCount() == 1);
+		assertTrue(firstResource.commitCount() == 1);
+	}
+}",2013-02-06T14:42:32Z,20
"@@ -0,0 +1,93 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.recovery;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+public class TestXAResource implements XAResource {
+	private Xid xid;
+	private int commitCount;
+	private int rollbackCount;
+
+	public TestXAResource(Xid xid) {
+		this.xid = xid;
+	}
+
+	public TestXAResource() {
+	}
+
+	public Xid[] recover(int flag) throws XAException {
+		return new Xid[] { xid };
+	}
+
+	public boolean isSameRM(XAResource xares) throws XAException {
+		return false;
+	}
+
+	public int prepare(Xid xid) throws XAException {
+		this.xid = xid;
+		return XA_OK;
+	}
+
+	public void commit(Xid id, boolean onePhase) throws XAException {
+		System.out.println(""committed"");
+		xid = null;
+		commitCount++;
+	}
+
+	public void rollback(Xid xid) throws XAException {
+		System.out.println(""rolled back"");
+		xid = null;
+		rollbackCount++;
+	}
+
+	public void forget(Xid xid) throws XAException {
+	}
+
+	public int getTransactionTimeout() throws XAException {
+		return 0;
+	}
+
+	public boolean setTransactionTimeout(int seconds) throws XAException {
+		return true;
+	}
+
+	public void start(Xid xid, int flags) throws XAException {
+	}
+
+	public void end(Xid xid, int flags) throws XAException {
+	}
+
+	public Xid getXid() {
+		return xid;
+	}
+
+	public int commitCount() {
+		return commitCount;
+	}
+
+	public int rollbackCount() {
+		return rollbackCount;
+	}
+
+}",2013-02-06T14:42:32Z,21
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.recovery;
+
+import java.sql.SQLException;
+import java.util.Stack;
+
+import javax.transaction.xa.XAResource;
+
+import com.arjuna.ats.jta.recovery.XAResourceRecovery;
+
+public class TestXAResourceRecovery implements XAResourceRecovery {
+
+	private static Stack<XAResource> resources = new Stack<XAResource>();
+
+	public XAResource getXAResource() throws SQLException {
+		return resources.pop();
+	}
+
+	public boolean initialise(String p) throws SQLException {
+		return true;
+	}
+
+	public boolean hasMoreResources() {
+		return resources.size() > 0;
+	}
+
+	public static void setResources(XAResource resource, XAResource resource2) {
+		resources.push(resource);
+		resources.push(resource2);
+	}
+}",2013-02-06T14:42:32Z,22
"@@ -0,0 +1,288 @@
+/*
+ * Copyright 2013, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2013
+ * @author JBoss Inc.
+ */
+package com.hp.mwtests.ts.jta.commitmarkable;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertTrue;
+
+import java.io.File;
+import java.sql.Connection;
+import java.util.Enumeration;
+import java.util.Vector;
+
+import javax.naming.InitialContext;
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.h2.jdbcx.JdbcDataSource;
+import org.jnp.server.NamingBeanImpl;
+import org.junit.After;
+import org.junit.Before;
+import org.junit.Test;
+
+import com.arjuna.ats.arjuna.AtomicAction;
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryModule;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.internal.arjuna.common.UidHelper;
+import com.arjuna.ats.internal.arjuna.tools.log.EditableAtomicAction;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.CommitMarkableResourceRecordRecoveryModule;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;
+import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;
+
+public class TestCommitMarkableResourceReturnUnknownOutcomeFrom1PCCommit {
+
+    private NamingBeanImpl namingBeanImpl = null;
+
+    private String resetPropertiesFile;
+
+    protected RecoveryManager manager;
+
+    private JDBCConnectableResource nonXAResource;
+    private SimpleXAResource xaResource;
+
+    @Before
+    public final void setup() throws Exception {
+
+        File file = new File(System.getProperty(""user.dir"") + ""/ObjectStore"");
+        if (file.exists()) {
+            Utils.removeRecursive(file.toPath());
+        }
+
+        System.setProperty(""java.naming.factory.initial"", ""org.jnp.interfaces.NamingContextFactory"");
+        System.setProperty(""java.naming.factory.url.pkgs"", ""org.jboss.naming:org.jnp.interfaces"");
+        namingBeanImpl = new NamingBeanImpl();
+        namingBeanImpl.start();
+
+        resetPropertiesFile = System.getProperty(""com.arjuna.ats.arjuna.common.propertiesFile"");
+        if (resetPropertiesFile == null) {
+            System.setProperty(""com.arjuna.ats.arjuna.common.propertiesFile"", ""commitmarkableresourcejbossts-properties.xml"");
+        }
+        manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);
+    }
+
+    @After
+    public final void tearDown() {
+
+        namingBeanImpl.stop();
+        namingBeanImpl = null;
+
+        if (resetPropertiesFile != null) {
+            System.setProperty(""com.arjuna.ats.arjuna.common.propertiesFile"", resetPropertiesFile);
+        } else {
+            System.clearProperty(""com.arjuna.ats.arjuna.common.propertiesFile"");
+        }
+    }
+
+    @Test
+    public void testRMFAILAfterCommit() throws Exception {
+        jtaPropertyManager.getJTAEnvironmentBean().setNotifyCommitMarkableResourceRecoveryModuleOfCompleteBranches(false);
+        final JdbcDataSource dataSource = new JdbcDataSource();
+        dataSource.setURL(""jdbc:h2:mem:JBTMDB;MVCC=TRUE;DB_CLOSE_DELAY=-1"");
+        // Test code
+        Utils.createTables(dataSource.getConnection());
+
+        // We can't just instantiate one as we need to be using the
+        // same one as
+        // the transaction
+        // manager would have used to mark the transaction for GC
+        CommitMarkableResourceRecordRecoveryModule commitMarkableResourceRecoveryModule = null;
+        Vector recoveryModules = manager.getModules();
+        if (recoveryModules != null) {
+            Enumeration modules = recoveryModules.elements();
+
+            while (modules.hasMoreElements()) {
+                RecoveryModule m = (RecoveryModule) modules.nextElement();
+
+                if (m instanceof CommitMarkableResourceRecordRecoveryModule) {
+                    commitMarkableResourceRecoveryModule = (CommitMarkableResourceRecordRecoveryModule) m;
+                } else if (m instanceof XARecoveryModule) {
+                    XARecoveryModule xarm = (XARecoveryModule) m;
+                    xarm.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
+                        public boolean initialise(String p) throws Exception {
+                            return true;
+                        }
+
+                        public XAResource[] getXAResources() throws Exception {
+                            return new XAResource[] { xaResource };
+                        }
+                    });
+                }
+            }
+        }
+        javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+        tm.begin();
+
+        Uid get_uid = ((TransactionImple) tm.getTransaction()).get_uid();
+
+        Connection localJDBCConnection = dataSource.getConnection();
+        localJDBCConnection.setAutoCommit(false);
+
+        nonXAResource = new JDBCConnectableResource(localJDBCConnection) {
+            @Override
+            public void commit(Xid arg0, boolean arg1) throws XAException {
+                super.commit(arg0, arg1);
+                throw new XAException(XAException.XAER_RMFAIL);
+            }
+        };
+        tm.getTransaction().enlistResource(nonXAResource);
+
+        xaResource = new SimpleXAResource();
+        tm.getTransaction().enlistResource(xaResource);
+
+        localJDBCConnection.createStatement().execute(""INSERT INTO foo (bar) VALUES (1)"");
+
+        tm.commit();
+
+        assertTrue(xaResource.wasCommitted());
+
+        Xid committed = ((JDBCConnectableResource) nonXAResource).getStartedXid();
+        assertNotNull(committed);
+
+        InputObjectState uids = new InputObjectState();
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        Uid uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(get_uid));
+
+        // Belt and braces but we don't expect the CMR to be removed anyway as
+        // the RM is ""offline""
+        manager.scan();
+        manager.scan();
+
+        // The recovery module has to perform lookups
+        new InitialContext().rebind(""commitmarkableresource"", dataSource);
+
+        assertTrue(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+
+        manager.scan(); // This will complete the atomicaction
+
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(Uid.nullUid()));
+
+        manager.scan(); // This is when the CMR deletes are done due to ordering
+                        // of the recovery modules
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+    }
+
+    @Test
+    public void testRMFAILAfterNoCommit() throws Exception {
+        jtaPropertyManager.getJTAEnvironmentBean().setNotifyCommitMarkableResourceRecoveryModuleOfCompleteBranches(false);
+        final JdbcDataSource dataSource = new JdbcDataSource();
+        dataSource.setURL(""jdbc:h2:mem:JBTMDB;MVCC=TRUE;DB_CLOSE_DELAY=-1"");
+        // Test code
+        Utils.createTables(dataSource.getConnection());
+
+        // We can't just instantiate one as we need to be using the
+        // same one as
+        // the transaction
+        // manager would have used to mark the transaction for GC
+        CommitMarkableResourceRecordRecoveryModule commitMarkableResourceRecoveryModule = null;
+        Vector recoveryModules = manager.getModules();
+        if (recoveryModules != null) {
+            Enumeration modules = recoveryModules.elements();
+
+            while (modules.hasMoreElements()) {
+                RecoveryModule m = (RecoveryModule) modules.nextElement();
+
+                if (m instanceof CommitMarkableResourceRecordRecoveryModule) {
+                    commitMarkableResourceRecoveryModule = (CommitMarkableResourceRecordRecoveryModule) m;
+                } else if (m instanceof XARecoveryModule) {
+                    XARecoveryModule xarm = (XARecoveryModule) m;
+                    xarm.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
+                        public boolean initialise(String p) throws Exception {
+                            return true;
+                        }
+
+                        public XAResource[] getXAResources() throws Exception {
+                            return new XAResource[] { xaResource };
+                        }
+                    });
+                }
+            }
+        }
+        javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+        tm.begin();
+
+        Uid get_uid = ((TransactionImple) tm.getTransaction()).get_uid();
+
+        Connection localJDBCConnection = dataSource.getConnection();
+        localJDBCConnection.setAutoCommit(false);
+
+        nonXAResource = new JDBCConnectableResource(localJDBCConnection) {
+            @Override
+            public void commit(Xid arg0, boolean arg1) throws XAException {
+                throw new XAException(XAException.XAER_RMFAIL);
+            }
+        };
+        tm.getTransaction().enlistResource(nonXAResource);
+
+        xaResource = new SimpleXAResource();
+        tm.getTransaction().enlistResource(xaResource);
+
+        localJDBCConnection.createStatement().execute(""INSERT INTO foo (bar) VALUES (1)"");
+
+        tm.commit();
+
+        assertTrue(xaResource.wasCommitted());
+
+        Xid committed = ((JDBCConnectableResource) nonXAResource).getStartedXid();
+        assertNotNull(committed);
+
+        InputObjectState uids = new InputObjectState();
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        Uid uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(get_uid));
+
+        // Belt and braces but we don't expect the CMR to be removed anyway as
+        // the RM is ""offline""
+        manager.scan();
+        manager.scan();
+
+        // The recovery module has to perform lookups
+        new InitialContext().rebind(""commitmarkableresource"", dataSource);
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+
+        manager.scan(); // This will make the AA a heuristic
+
+        EditableAtomicAction editableAtomicAction = new EditableAtomicAction(get_uid);
+        editableAtomicAction.deleteHeuristicParticipant(0);
+        manager.scan();
+
+        StoreManager.getRecoveryStore().allObjUids(new AtomicAction().type(), uids);
+        uid = UidHelper.unpackFrom(uids);
+        assertTrue(uid.equals(Uid.nullUid()));
+
+        manager.scan(); // This is when the CMR deletes are done due to ordering
+                        // of the recovery modules
+
+        assertFalse(commitMarkableResourceRecoveryModule.wasCommitted(""commitmarkableresource"", committed));
+    }
+}
\ No newline at end of file",2015-01-19T15:28:43Z,23
"@@ -357,6 +357,7 @@
 			</plugins>
 		</build>
 	</profile>
+
 	<profile>
 		<id>mssql-jdbc-store</id>
 		<dependencies>
@@ -416,5 +417,32 @@
       </plugins>
     </build>
   </profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <excludes>
+						  <!-- TODO breaks running with JaCoCo -->
+                          <exclude>**/ObjStoreBrowserTest.java</exclude>
+						  <!-- stress tests are not unit tests -->
+                          <exclude>**/LogStressTest2.java</exclude>
+                        </excludes>
+                        <systemProperties>
+                            <property>
+                                <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                                <value>h2jbossts-properties.xml</value>
+                            </property>
+                        </systemProperties>
+
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
+
   </profiles>
 </project>",2014-03-02T13:14:37Z,24
"@@ -223,6 +223,7 @@ public void aaTest(boolean replay) throws Exception {
 			* moved off the heuristic list and back onto the prepared list
 			*/
 			rd.synchronousScan();
+			Thread.sleep(1000); // odd without the delay running under Jacoco fails
 		}
 
 		/*",2014-03-02T13:14:37Z,25
"@@ -83,4 +83,21 @@
       <scope>provided</scope>
     </dependency>
   </dependencies>
+  <profiles>
+    <profile>
+      <id>codeCoverage</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <!-- Skip because all surefire tests are skipped -->
+              <skip>true</skip>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>",2014-03-02T13:14:37Z,7
"@@ -388,5 +388,31 @@
 			</dependency>
 		</dependencies>
 	</profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                      <excludes>
+                        <exclude>**/commitmarkable/**</exclude>
+                        <!-- byteman and Jacoco seem to be interfering with each other -->
+                        <exclude>**/recovery/CrashRecovery.java</exclude>
+                        <exclude>**/recovery/CrashRecovery2.java</exclude>
+                      </excludes>
+
+                      <systemProperties>
+                        <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>h2jbossts-properties.xml</value>
+                        </property>
+                      </systemProperties>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
   </profiles>
 </project>",2014-03-02T13:14:37Z,26
"@@ -0,0 +1,17 @@
+<!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd"">
+<properties>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+
+	<entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.tablePrefix"">Action</entry>
+	<entry key=""ObjectStoreEnvironmentBean.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.tablePrefix"">stateStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+</properties>",2014-03-02T13:14:37Z,27
"@@ -271,5 +271,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 </project>",2014-03-02T13:14:37Z,28
"@@ -272,24 +272,12 @@
             </goals>
             <configuration>
               <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
             </configuration>
           </execution>
         </executions>
         </plugin>
         </plugins>
       </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
       <profile>
           <id>community</id>",2014-03-02T13:14:37Z,29
"@@ -275,40 +275,6 @@
           </plugin>
         </plugins>
       </build>
-    </profile>
-    <profile>
-      <id>codeCoverage</id>
-      <build>
-        <plugins>
-        <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-shade-plugin</artifactId>
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>shade</goal>
-            </goals>
-            <configuration>
-              <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
-            </configuration>
-          </execution>
-        </executions>
-        </plugin>
-        </plugins>
-      </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
      <profile>
           <id>community</id>",2014-03-02T13:14:37Z,30
"@@ -1,17 +1,6 @@
 Narayana
 ========
 
-NOTE: PATCHED EMMA JAR
-----------------------
-This build uses a patch of the EMMA Jar, the source code for the patch is available from:
-
-	https://svn.jboss.org/repos/labs/labs/jbosstm/workspace/emma
-
-If you are building the ""codeCoverage"" profile and are using a different maven installation to the one provided in tools/maven you need to make sure you have the following options:
-
-	-Demma.jar.location=/full/path/to/checkout/location/ext/
-
-
 Requirements
 ------------
 To build Narayana you should have installed:",2014-03-02T13:14:37Z,31
"@@ -24,6 +24,7 @@
 import java.io.IOException;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
 import java.util.ArrayList;
 
 import org.jboss.stm.InvalidAnnotationException;
@@ -130,14 +131,14 @@ public synchronized boolean save_state (OutputObjectState os, int ot)
                     Field[] fields = _theObject.getClass().getDeclaredFields(); // get all fields including private
                 
                     _fields = new ArrayList<Field>();
-                    
+
                     try
                     {
                         for (Field afield : fields)
                         {
                             // ignore if flagged with @NotState
-                            
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }
@@ -221,7 +222,8 @@ public synchronized boolean restore_state (InputObjectState os, int ot)
                         {
                             // ignore if flagged with @NotState
                             
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }",2014-03-02T13:14:37Z,32
"@@ -106,7 +106,6 @@
                   <include>org.jboss.narayana.xts:ws-t11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:wstx11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:bridge:jar:api:${project.version}</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -123,7 +122,6 @@
               <artifactSet>
                 <includes>
                   <include>org.jboss.narayana.xts</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -230,16 +228,6 @@
     </dependency>
   </dependencies>
   <profiles>
-    <profile>
-      <id>codeCoverage</id>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
-    </profile>
     <profile>
         <id>release</id>
         <build>",2014-03-02T13:14:37Z,33
"@@ -227,6 +227,33 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <version>${version.org.jacoco}</version>
+                        <!-- Disable all XTS code coverage since they run under arquillian control.
+						     The current Jacoco config needs updating to include arquillian controlled tests
+                          -->
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <goals>
+                                    <goal>prepare-agent</goal>
+                                </goals>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+
     </profiles>
     <modules>
         <module>unit</module>",2014-03-02T13:14:37Z,34
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,35
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,36
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,37
"@@ -24,6 +24,7 @@
     <packaging>pom</packaging>
     <name>Narayana: ext</name>
     <description>Narayana: Ext All</description>
+
     <profiles>
         <profile>
             <id>codeCoverage</id>
@@ -34,16 +35,19 @@
                         <artifactId>maven-install-plugin</artifactId>
                         <executions>
                             <execution>
-                                <id>copy-patched-emma</id>
+                                <!-- install shaded jacoco ant jar (for use by the QA suite)
+                                     NB the shaded jar is not available via maven
+								-->
+                                <id>copy-jacoco</id>
                                 <phase>validate</phase>
                                 <goals>
                                     <goal>install-file</goal>
                                 </goals>
                                 <configuration>
-                                    <file>${basedir}/emma.jar</file>
-                                    <groupId>emma</groupId>
-                                    <artifactId>emma</artifactId>
-                                    <version>${version.emma}</version>
+                                    <file>${basedir}/jacocoant.jar</file>
+                                    <groupId>org.jacoco</groupId>
+                                    <artifactId>jacoco-ant</artifactId>
+                                    <version>${version.org.jacoco}</version>
                                     <packaging>jar</packaging>
                                 </configuration>
                             </execution>",2014-03-02T13:14:37Z,38
"@@ -460,6 +460,7 @@
     <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>
     <version.org.jboss.as.plugins.jboss-as-maven-plugin>7.4.Final</version.org.jboss.as.plugins.jboss-as-maven-plugin>
     <version.org.apache.maven.plugins.maven-antrun-plugin>1.7</version.org.apache.maven.plugins.maven-antrun-plugin>
+    <version.org.jacoco>0.6.3.201306030806</version.org.jacoco>
   </properties>
   <modules>
     <module>ext</module>
@@ -509,119 +510,118 @@
           </plugins>
       </build>
     </profile>
-        <profile>
-            <id>codeCoverage</id>
-            <build>
-                <plugins>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-jar-plugin</artifactId>
+      <profile>
+          <id>codeCoverage</id>
+          <build>
+          <plugins>
+          <plugin>
+              <groupId>org.jacoco</groupId>
+              <artifactId>jacoco-maven-plugin</artifactId>
+              <version>${version.org.jacoco}</version>
+              <executions>
+                  <!--
+                     Prepares the property pointing to the JaCoCo runtime agent which
+                     is passed as VM argument when Maven the Surefire plugin is executed.
+                 -->
+                  <execution>
+                      <id>pre-unit-test</id>
+                      <goals>
+                          <goal>prepare-agent</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
+                          <!--
+                             Sets the name of the property containing the settings
+                             for JaCoCo runtime agent.
+                         -->
+                          <propertyName>surefireArgLine</propertyName>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-surefire-plugin</artifactId>
+                  </execution>
+                  <!--
+                     Ensures that the code coverage report for unit tests is created after
+                     unit tests have been run.
+                 -->
+                  <execution>
+                      <id>post-unit-test</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>report</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
-                        <additionalClasspathElements>
-                          <additionalClasspathElement>${emma.jar.location}/emma.jar</additionalClasspathElement>
-                        </additionalClasspathElements>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <!-- Sets the output directory for the code coverage report. -->
+                          <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-antrun-plugin</artifactId>
-                      <executions>
-                        <execution>
-                          <id>instrument</id>
-                          <phase>process-classes</phase>
-                          <configuration>
-                            <target>
-                                  <java classname=""emma"">
-                                    <arg value=""instr""/>
-                                    <arg value=""-ix""/>
-                                    <arg value=""-com.arjuna.ArjunaOTS.*,-org.omg.CORBA.*,-org.omg.CosTransactions.*,-org.omg.XA.*,-*.logging.*,-org.jboss.jbossts.xts.servicetests.*,-com.jboss.transaction.wstf.test.*,-com.jboss.transaction.txinterop.test.*""/>
-                                    <arg value=""-instrpath""/>
-                                    <arg value=""${project.build.directory}/classes/""/>
-                                    <arg value=""-outfile""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-outdir""/>
-                                    <arg value=""${project.build.directory}/generated-classes/emma/""/>
-                                    <arg value=""-merge""/>
-                                    <arg value=""y""/>
-                                    <arg value=""-outmode""/>
-                                    <arg value=""fullcopy""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                        <execution>
-                          <id>create-report</id>
-                          <phase>install</phase>
-                          <configuration>
-                            <target>
-                              <taskdef resource=""net/sf/antcontrib/antlib.xml"" classpathref=""maven.plugin.classpath"" />
-                              <if>
-                                <available file=""${project.build.directory}/test-classes/coverage.ec""/>
-                                <then>
-                                  <java classname=""emma"">
-                                    <arg value=""report""/>
-                                    <arg value=""-r""/>
-                                    <arg value=""html""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/test-classes/coverage.ec""/>
-                                    <arg value=""-Dreport.html.out.file=${project.build.directory}/coverage.html""/>
-                                    <arg value=""-Dreport.metrics=method:70,block:70,line:80,class:100""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                                </then>
-                              </if>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                      </executions>
-                      <dependencies>
-                        <dependency>
-                            <groupId>ant-contrib</groupId>
-                            <artifactId>ant-contrib</artifactId>
-                            <version>1.0b3</version>
-                            <exclusions>
-                                <exclusion>
-                                    <groupId>ant</groupId>
-                                    <artifactId>ant</artifactId>
-                                </exclusion>
-                            </exclusions>
-                        </dependency>
-                        <dependency>
-                            <groupId>org.apache.ant</groupId>
-                            <artifactId>ant-nodeps</artifactId>
-                            <version>1.8.1</version>
-                        </dependency>
-                      </dependencies>
-                    </plugin>
-                  </plugins>
-                </build>
-                <properties>
-                  <maven.compiler.argument.target>1.6</maven.compiler.argument.target>
-                  <maven.compiler.argument.source>1.6</maven.compiler.argument.source>
-                  <version.emma>2.0.12224-adinn</version.emma>
-                </properties>
-              </profile>
+                  </execution>
+                  <execution>
+                      <id>check</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>check</goal>
+                      </goals>
+                      <configuration>
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <rules>
+                              <rule>
+                                <element>BUNDLE</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>INSTRUCTION</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.0</minimum>
+                                  </limit>
+								  <!--
+                                  <limit>
+                                    <counter>CLASS</counter>
+                                    <value>MISSEDCOUNT</value>
+                                    <maximum>0</maximum>
+                                  </limit>
+								  -->
+                                </limits>
+                              </rule>
+							  <!--
+                              <rule>
+                                <element>CLASS</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>LINE</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.20</minimum>
+                                  </limit>
+                                </limits>
+                              </rule>
+							  -->
+                          </rules>
+                      </configuration>
+                  </execution>
+              </executions>
+          </plugin>
+          <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <configuration>
+                  <!-- Sets the VM argument line used when unit tests are run. -->
+                  <argLine>${surefireArgLine}</argLine>
+                  <systemProperties>
+                      <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>jbossts-properties.xml</value>
+                      </property>
+                  </systemProperties>
+              </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+
     <profile>
       <id>community</id>
       <properties>",2014-03-02T13:14:37Z,39
"@@ -35,12 +35,24 @@
   Paths are relative to the JVM's working dir - don't expect to be able to execute this from anywhere but 'qa'.
 
 -->
-<project name=""QA Tests for JBossTS"" default=""junit"" basedir=""."">
+<project name=""QA Tests for JBossTS"" default=""junit"" basedir="".""
+         xmlns:jacoco=""antlib:org.jacoco.ant"">
   <taskdef resource=""net/sf/antcontrib/antlib.xml"">
       <classpath>
           <pathelement location=""ant-contrib-1.0b3.jar""/>
       </classpath>
   </taskdef>
+
+  <!-- code coverage settings -->
+  <property name=""code.coverage"" value=""false""/>
+  <property name=""output.dir"" location=""testoutput"" />
+  <property name=""output.report.dir"" location=""${output.dir}/site/jacoco"" />
+  <property name=""output.exec.file"" location=""${output.dir}/jacoco-qa.exec"" />
+
+  <taskdef uri=""antlib:org.jacoco.ant"" resource=""org/jacoco/ant/antlib.xml"">
+      <classpath path=""../ext/jacocoant.jar"" />
+  </taskdef>
+
   <!-- set this property to the location of a JBossTS core build -->
   <property name=""org.jboss.jbossts.qa.ts.home"" location=""dist""/>
   <property name=""narayana.version"" value=""5.0.2.Final-SNAPSHOT""/>
@@ -350,6 +362,32 @@
   </target>
   <!-- ##################################### -->
   <!-- This is where all the hard work happens - use junit to coordinate multi-process tests: -->
+  <path id=""junit.classpath"">
+    <!--
+      This is the classpath for the test framework, not the test components e.g. clients/servers.
+      Those are configured via TaskImpl.properties instead.
+
+      The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
+      test methods, which link against the test classes, which in turn link against JBossTS.
+      Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
+      On the up side, you get better diagnostic messages and code management/navigation in IDEs.
+    -->
+    <pathelement location=""ext/junit.jar""/>
+    <fileset dir=""tests/build"">
+      <include name=""jbossts-*-qa.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
+      <exclude name=""narayana-jts-idlj.jar""/>
+      <exclude name=""narayana-jts-jacorb.jar""/>
+      <include name=""*.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
+      <include name=""*.jar""/>
+      <include name=""*.zip""/>
+    </fileset>
+    <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
+  </path>
+
   <macrodef name=""junit-tests"">
     <attribute name=""tests""/>
     <attribute name=""methods"" default=""""/>
@@ -466,73 +504,65 @@
       <echo message=""Running junit test group @{tests} from basedir=${basedir}""/>
       <!-- this runs forked because the product config file it uses has relative paths in it, so we need to guarantee
             the working dir is the same as the location of this script. -->
-      <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
-        <classpath>
-          <!--
-                This is the classpath for the test framework, not the test components e.g. clients/servers.
-                Those are configured via TaskImpl.properties instead.
+      <if>
+        <equals arg1=""${code.coverage}"" arg2=""true"" />
+		  <then>
+            <jacoco:coverage destfile=""${output.exec.file}"" append=""true"" >
+              <!-- NB cannot call junit as a macrodef because the jacoco:coverage does not support it - so duplicate it -->
+              <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+                <classpath refid=""junit.classpath""/>
+                <formatter type=""plain""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+                <sysproperty key=""names"" value="".*""/>
+                <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              </junit>
+            </jacoco:coverage>
+		  </then>
+		  <else>
+            <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+              <classpath refid=""junit.classpath""/>
+              <formatter type=""plain""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+              <sysproperty key=""names"" value="".*""/>
+              <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              <!--<jvmarg value=""-Xdebug""/>-->
+              <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
+            </junit>
+		  </else>
+      </if>
+    </sequential>
+  </macrodef>
 
-                The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
-                test methods, which link against the test classes, which in turn link against JBossTS.
-                Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
-                On the up side, you get better diagnostic messages and code management/navigation in IDEs.
-                -->
-          <pathelement location=""ext/junit.jar""/>
-          <fileset dir=""tests/build"">
-            <include name=""jbossts-*-qa.jar""/>
-          </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
-            <exclude name=""narayana-jts-idlj.jar""/>
-            <exclude name=""narayana-jts-jacorb.jar""/>
-            <include name=""*.jar""/>
+  <target name=""jacoco-report"">
+    <jacoco:report>
+
+      <!-- Specify the collected execution data from the QA test run -->
+      <executiondata>
+        <file file=""${output.exec.file}"" />
+      </executiondata>
+
+      <structure name=""Narayana QA Report"">
+        <classfiles>
+          <fileset dir="".."" >
+		    <exclude name=""**/idlj/**""/>
           </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
-            <include name=""*.jar""/>
-            <include name=""*.zip""/>
+        </classfiles>
+        <sourcefiles encoding=""UTF-8"">
+          <fileset dir="".."">
+            <include name=""**/*.java""/>
           </fileset>
-          <!-- Commented out as this is just running the same tests again?
-        <fileset dir=""../ArjunaJTS/jts/build/lib"">
-          <include name=""jts_tests.jar""/>
-        </fileset> 
-        -->
-          <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
-        </classpath>
-        <formatter type=""plain""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
-        <sysproperty key=""names"" value="".*""/>
-        <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
-        <!--<jvmarg value=""-Xdebug""/>-->
-        <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
-      </junit>
-    </sequential>
-  </macrodef>
-  <!-- directory that contains emma.jar and emma_ant.jar: -->
-  <path id=""emma.lib"">
-    <pathelement location=""../ext/emma.jar""/>
-    <pathelement location=""ext/emma_ant.jar""/>
-  </path>
-  <taskdef resource=""emma_ant.properties"" classpathref=""emma.lib""/>
-  <target name=""emmareport"">
-    <emma enabled=""true"">
-      <report>
-        <fileset dir="".."">
-          <include name=""**/*.em""/>
-        </fileset>
-        <fileset dir="".."">
-          <include name=""**/*coverage.ec""/>
-        </fileset>
-        <sourcepath>
-          <dirset dir="".."">
-            <include name=""**/classes""/>
-            <include name=""**/java""/>
-          </dirset>
-        </sourcepath>
-        <html outfile=""testoutput/emma/coverage.html""/>
-      </report>
-    </emma>
+        </sourcefiles>
+      </structure>
+
+      <!-- produce multiple report formats. -->
+      <html destdir=""${output.report.dir}"" />
+      <csv destfile=""${output.report.dir}/report.csv"" />
+      <xml destfile=""${output.report.dir}/report.xml"" />
+    </jacoco:report>
   </target>
-	
+
   <!--
 
     unused groups, pending cleanup and wiring:",2014-03-02T13:14:37Z,40
"@@ -407,10 +407,12 @@ function qa_tests_once {
   echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
   unset orb
+  codeCoverage=false;
 
   # look for an argument of the form orb=<something>
   for i in $@; do
     [ ${i%%=*} = ""orb"" ] && orb=${i##*=}
+    [ $i = ""-PcodeCoverage"" ] && codeCoverage=true
   done
 
   # check to see if we were called with orb=idlj as one of the arguments
@@ -465,17 +467,17 @@ function qa_tests_once {
         ok=0
         for i in `seq 1 $QA_STRESS`; do
           echo run $i;
-          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
           if [ $? -ne 0 ]; then
             ok=1; break;
           fi
         done
       else
-        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
         ok=$?
       fi
     else
-      ant -f run-tests.xml $target $QA_PROFILE
+      ant -f run-tests.xml $target $QA_PROFILE -Dcode.coverage=$codeCoverage
       ok=$?
     fi
 
@@ -484,6 +486,11 @@ function qa_tests_once {
       cat TEST-failures.txt 
     fi
 
+    if [ $codeCoverage = true ]; then
+      echo ""generating test coverage report""
+      ant -f run-tests.xml jacoco-report
+    fi
+
     # archive the jtsremote test output (use a name related to the orb that was used for the tests)
     mv TEST-*.txt testoutput 2>/dev/null
     ant -f run-tests.xml testoutput.zip -Dtestoutput.zipname=$testoutputzip
@@ -496,7 +503,7 @@ function qa_tests {
   ok1=0;
   ok2=0;
   if [ $SUN_ORB = 1 ]; then
-    qa_tests_once ""$@"" ""orb=idlj"" ""$@"" # run qa against the Sun orb
+    qa_tests_once ""orb=idlj"" ""$@"" # run qa against the Sun orb
     ok2=$?
   fi
   if [ $JAC_ORB = 1 ]; then
@@ -510,6 +517,8 @@ function qa_tests {
   [ $ok1 = 0 -a $ok2 = 0 ] || fatal ""some qa tests failed""
 }
 
+
+
 check_if_pull_closed
 
 init_test_options",2014-03-02T13:14:37Z,10
"@@ -212,14 +212,6 @@
               </plugin>
             </plugins>
           </build>
-          <dependencies>
-            <dependency>
-              <groupId>emma</groupId>
-              <artifactId>emma</artifactId>
-              <version>${version.emma}</version>
-              <scope>test</scope>
-            </dependency>
-          </dependencies>
         </profile>
         <profile>
             <id>arq</id>",2014-03-02T13:14:37Z,41
"@@ -317,32 +317,37 @@ public void periodicWorkFirstPass() {
 							currentUid, ATOMIC_ACTION_TYPE);
 					if (state != null) {
 						if (!recoveryStore.remove_committed(currentUid,
-								CONNECTABLE_ATOMIC_ACTION_TYPE)) {
-							tsLogger.logger.error(""Could not remove a: ""
+                                CONNECTABLE_ATOMIC_ACTION_TYPE)) {
+                            tsLogger.logger.debug(""Could not remove a: ""
 									+ CONNECTABLE_ATOMIC_ACTION_TYPE + "" uid: ""
 									+ currentUid);
 						}
 					} else {
-						RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
-								CONNECTABLE_ATOMIC_ACTION_TYPE, currentUid);
-
-						if (rcaa.containsIncompleteCommitMarkableResourceRecord()) {
-							String commitMarkableResourceJndiName = rcaa
-									.getCommitMarkableResourceJndiName();
-							// Check if the resource manager is online yet
-							if (queriedResourceManagers
-									.contains(commitMarkableResourceJndiName)) {
-
-								// If it is remove the CRR and move it back and
-								// let
-								// the
-								// next stage update it
-								moveRecord(currentUid,
-										CONNECTABLE_ATOMIC_ACTION_TYPE,
-										ATOMIC_ACTION_TYPE);
-							}
-						}
+    				    state = recoveryStore.read_committed(currentUid, CONNECTABLE_ATOMIC_ACTION_TYPE);
+    				    // TX may have been in progress and cleaned up by now 
+    	                if (state != null) {
+    						RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
+    								CONNECTABLE_ATOMIC_ACTION_TYPE, currentUid, state);
+    
+    						if (rcaa.containsIncompleteCommitMarkableResourceRecord()) {
+    							String commitMarkableResourceJndiName = rcaa
+    									.getCommitMarkableResourceJndiName();
+    							// Check if the resource manager is online yet
+    							if (queriedResourceManagers
+    									.contains(commitMarkableResourceJndiName)) {
+    
+    								// If it is remove the CRR and move it back and
+    								// let
+    								// the
+    								// next stage update it
+    								moveRecord(currentUid,
+    										CONNECTABLE_ATOMIC_ACTION_TYPE,
+    										ATOMIC_ACTION_TYPE);
+    							}
+    						}
+                        }
 					}
+					
 					currentUid = transactionUidEnum.iterate();
 				}
 			} catch (ObjectStoreException | IOException ex) {
@@ -372,30 +377,34 @@ public void periodicWorkFirstPass() {
 							.getTransactionStatus(ATOMIC_ACTION_TYPE,
 									currentUid))) {
 
-						// Try to load it is a BasicAction that has a
-						// ConnectedResourceRecord
-						RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
-								ATOMIC_ACTION_TYPE, currentUid);
-						// Check if it did have a ConnectedResourceRecord
-						if (rcaa.containsIncompleteCommitMarkableResourceRecord()) {
-							String commitMarkableResourceJndiName = rcaa
-									.getCommitMarkableResourceJndiName();
-							// If it did, check if the resource manager was
-							// online
-							if (!queriedResourceManagers
-									.contains(commitMarkableResourceJndiName)) {
-								// If the resource manager wasn't online, move
-								// it
-								moveRecord(currentUid, ATOMIC_ACTION_TYPE,
-										CONNECTABLE_ATOMIC_ACTION_TYPE);
-							} else {
-								// Update the completed outcome for the 1PC
-								// resource
-								rcaa.updateCommitMarkableResourceRecord(wasCommitted(
-										commitMarkableResourceJndiName,
-										rcaa.getXid()));
-							}
-						}
+					    InputObjectState state = recoveryStore.read_committed(
+	                            currentUid, ATOMIC_ACTION_TYPE);
+	                    if (state != null) {
+    	                    // Try to load it is a BasicAction that has a
+    						// ConnectedResourceRecord
+    						RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
+    								ATOMIC_ACTION_TYPE, currentUid, state);
+    						// Check if it did have a ConnectedResourceRecord
+    						if (rcaa.containsIncompleteCommitMarkableResourceRecord()) {
+    							String commitMarkableResourceJndiName = rcaa
+    									.getCommitMarkableResourceJndiName();
+    							// If it did, check if the resource manager was
+    							// online
+    							if (!queriedResourceManagers
+    									.contains(commitMarkableResourceJndiName)) {
+    								// If the resource manager wasn't online, move
+    								// it
+    								moveRecord(currentUid, ATOMIC_ACTION_TYPE,
+    										CONNECTABLE_ATOMIC_ACTION_TYPE);
+    							} else {
+    								// Update the completed outcome for the 1PC
+    								// resource
+    								rcaa.updateCommitMarkableResourceRecord(wasCommitted(
+    										commitMarkableResourceJndiName,
+    										rcaa.getXid()));
+    							}
+    						}
+	                    }
 					}
 					currentUid = transactionUidEnum.iterate();
 				}",2014-05-09T17:32:14Z,42
"@@ -27,6 +27,7 @@
 import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
 import com.arjuna.ats.arjuna.objectstore.StateStatus;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.state.InputObjectState;
 import com.arjuna.ats.internal.jta.resources.arjunacore.CommitMarkableResourceRecord;
 import com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction;
 import com.arjuna.ats.jta.logging.jtaLogger;
@@ -63,10 +64,13 @@ public Vote checkXid(Xid xid)
 
     private boolean containsCommitMarkableResourceRecord(Uid u) {
         try {
-            RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
-                RecoverConnectableAtomicAction.CONNECTABLE_ATOMIC_ACTION_TYPE, u);
+            InputObjectState state = StoreManager.getRecoveryStore().read_committed(
+                    u, RecoverConnectableAtomicAction.CONNECTABLE_ATOMIC_ACTION_TYPE);
+            if (state != null) {
+                RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(RecoverConnectableAtomicAction.CONNECTABLE_ATOMIC_ACTION_TYPE, u, state);
 
-            return (rcaa.containsIncompleteCommitMarkableResourceRecord());
+                return (rcaa.containsIncompleteCommitMarkableResourceRecord());
+            }
         } catch (ObjectStoreException e) {
         } catch (IOException e) {
         }",2014-05-09T17:32:14Z,43
"@@ -42,13 +42,11 @@ public class RecoverConnectableAtomicAction extends AtomicAction {
 	private Xid xid;
 	private boolean hasCompleted;
 
-	public RecoverConnectableAtomicAction(String type, Uid rcvUid)
+	public RecoverConnectableAtomicAction(String type, Uid rcvUid, InputObjectState os)
 			throws ObjectStoreException, IOException {
 		super(rcvUid);
 		this.recoveringAs = type;
-
-		InputObjectState os = StoreManager.getParticipantStore()
-				.read_committed(objectUid, type());
+		
 		// Unpack BasicAction::save_state preamble
 		Header hdr = new Header();
 		unpackHeader(os, hdr);",2014-05-09T17:32:14Z,44
"@@ -2,11 +2,7 @@
 
 import java.io.File;
 import java.io.IOException;
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
+import java.util.*;
 
 import com.arjuna.ats.arjuna.StateManager;
 import com.arjuna.ats.arjuna.common.Uid;
@@ -15,10 +11,8 @@
 import com.arjuna.ats.arjuna.logging.tsLogger;
 import com.arjuna.ats.arjuna.objectstore.ObjectStoreIterator;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
-import com.arjuna.ats.arjuna.recovery.RecoveryManager;
 import com.arjuna.ats.arjuna.state.InputObjectState;
 import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
-import com.arjuna.ats.internal.arjuna.recovery.RecoveryManagerStatus;
 
 /**
  * An MBean implementation for walking an ObjectStore and creating/deleting MBeans
@@ -72,14 +66,14 @@ private OSBType(boolean enabled, String recordClass, String beanClass, String ty
 
     };
 
-    private Map<String, OSBType> osbTypeMap = new HashMap<>();
+    private Map<String, OSBType> osbTypeMap = new HashMap<String, OSBType>();
 
     // A system property for defining extra bean types for instrumenting object store types
     // The format is OSType1=BeanType1,OSType2=BeanType2,etc
     public static final String OBJ_STORE_BROWSER_HANDLERS = ""com.arjuna.ats.arjuna.tools.osb.mbean.ObjStoreBrowserHandlers"";
     private static final String STORE_MBEAN_NAME = ""jboss.jta:type=ObjectStore"";
 
-    private Map<String, List<UidWrapper>> allUids;
+    private Map<String, List<UidWrapper>> registeredMBeans = new HashMap<String, List<UidWrapper>> ();;
     private boolean exposeAllLogs = false;
 
     /**
@@ -96,17 +90,32 @@ public void start()
      */
     public void stop()
     {
-        for (List<UidWrapper> uids : allUids.values()) {
-            for (Iterator<UidWrapper> i = uids.iterator(); i.hasNext(); ) {
-                UidWrapper w = i.next();
-                i.remove();
-                w.unregister();
-            }
-        }
+        unregisterMBeans();
 
         JMXServer.getAgent().unregisterMBean(STORE_MBEAN_NAME);
     }
 
+    private void unregisterMBeans(List<UidWrapper> beans) {
+        for (UidWrapper w : beans)
+            w.unregister();
+
+        beans.clear();
+    }
+
+    private void unregisterMBeans() {
+        for (List<UidWrapper> uids : registeredMBeans.values())
+            unregisterMBeans(uids);
+
+        registeredMBeans.clear();
+    }
+
+    private void registerMBeans() {
+        for (List<UidWrapper> uids : registeredMBeans.values()) {
+            for (UidWrapper w : uids)
+                w.createAndRegisterMBean();
+        }
+    }
+
     /**
      * This method is deprecated in favour of @setType
      * The issue with this method is there is no mechanism for determining which class
@@ -170,9 +179,6 @@ private void init(String logDir) {
         for (OSBType osbType : defaultOsbTypes)
             osbTypeMap.put(osbType.typeName, osbType);
 
-        allUids = new HashMap<String, List<UidWrapper>> ();
-
-//        initTypeHandlers(defaultStateHandlers);
         initTypeHandlers(System.getProperty(OBJ_STORE_BROWSER_HANDLERS, """"));
     }
 
@@ -184,8 +190,13 @@ public ObjStoreBrowser(String logDir) {
         init(logDir);
     }
 
+    /**
+     * Dump info about all registered MBeans
+     * @param sb a buffer to contain the result
+     * @return the passed in buffer
+     */
     public StringBuilder dump(StringBuilder sb) {
-        for (Map.Entry<String, List<UidWrapper>> typeEntry : allUids.entrySet()) {
+        for (Map.Entry<String, List<UidWrapper>> typeEntry : registeredMBeans.entrySet()) {
             sb.append(typeEntry.getKey()).append('\n');
 
             for (UidWrapper uid : typeEntry.getValue())
@@ -202,18 +213,41 @@ public StringBuilder dump(StringBuilder sb) {
      * if it hasn't been registered)
      */
     public UidWrapper findUid(Uid uid) {
-        return findUid(uid.stringForm());
+        for (Map.Entry<String, List<UidWrapper>> typeEntry : registeredMBeans.entrySet())
+            for (UidWrapper w : typeEntry.getValue())
+                if (w.getUid().equals(uid))
+                    return w;
+
+        return null;
     }
 
+    /**
+     * Find the registered beand corresponding to a uid.
+     * @deprecated use {@link #findUid(com.arjuna.ats.arjuna.common.Uid)} ()} instead.
+     * @param uid the uid
+     * @return the registered bean or null if the Uid is not registered
+     */
+    @Deprecated
     public UidWrapper findUid(String uid) {
-        for (Map.Entry<String, List<UidWrapper>> typeEntry : allUids.entrySet())
+        for (Map.Entry<String, List<UidWrapper>> typeEntry : registeredMBeans.entrySet())
             for (UidWrapper w : typeEntry.getValue())
                 if (w.getUid().stringForm().equals(uid))
                     return w;
 
         return null;
     }
 
+    private boolean isRegistered(String type, Uid uid) {
+        List<UidWrapper> beans = registeredMBeans.get(type);
+
+        if (beans != null)
+            for (UidWrapper w : beans)
+                if (uid.equals(w.getUid()))
+                    return true;
+
+        return false;
+    }
+
     public void viewSubordinateAtomicActions(boolean enable) {
         OSBType osbType = osbTypeMap.get(SUBORDINATE_AA_TYPE);
 
@@ -223,7 +257,7 @@ public void viewSubordinateAtomicActions(boolean enable) {
         osbType.enabled = enable;
 
         if (!enable) {
-            for (List<UidWrapper> uids : allUids.values()) {
+            for (List<UidWrapper> uids : registeredMBeans.values()) {
                 for (Iterator<UidWrapper> i = uids.iterator(); i.hasNext(); ) {
                     UidWrapper w = i.next();
                     if (osbType.recordClass.equals(w.getClassName())) {
@@ -239,40 +273,73 @@ public void setExposeAllRecordsAsMBeans(boolean exposeAllLogs) {
         this.exposeAllLogs = exposeAllLogs;
     }
 
-    private RecoveryManagerStatus trySuspendRM() {
-        return RecoveryManager.manager().trySuspend(true);
-    }
+    /**
+     * Update registered MBeans based on the current set of Uids.
+     * @param allCurrUids any registered MBeans not in this collection will be deregistered
+     */
+    private void unregisterRemovedUids(Map<String, Collection<Uid>> allCurrUids) {
+
+        for (Map.Entry<String, List<UidWrapper>> e : registeredMBeans.entrySet()) {
+            String type = e.getKey();
+            List<UidWrapper> registeredBeansOfType = e.getValue();
+            Collection<Uid> currUidsOfType = allCurrUids.get(type);
+
+            if (currUidsOfType != null) {
+                Iterator<UidWrapper> iterator = registeredBeansOfType.iterator();
 
-    private void tryResumeRM(RecoveryManagerStatus previousStatus) {
-        if (previousStatus.equals(RecoveryManagerStatus.ENABLED))
-            RecoveryManager.manager().resume();
+                while (iterator.hasNext()) {
+                    UidWrapper w = iterator.next();
+
+                    if (!currUidsOfType.contains(w.getUid())) {
+                        w.unregister();
+                        iterator.remove();
+                    }
+                }
+            } else {
+                unregisterMBeans(registeredBeansOfType);
+            }
+        }
     }
+
     /**
      * See if any new MBeans need to be registered or if any existing MBeans no longer exist
      * as ObjectStore entries.
      */
-    public void probe() {
-        updateAllUids();
-        Iterator<String> iterator = allUids.keySet().iterator();
-        RecoveryManagerStatus rmStatus = trySuspendRM();
+    public synchronized void probe() {
+        Map<String, Collection<Uid>> currUidsForType = new HashMap<String, Collection<Uid>>();
 
-        try {
-            while (iterator.hasNext()) {
-                String tname = iterator.next();
-                List<UidWrapper> uids = allUids.get(tname);
+        for (String type : getTypes())
+            currUidsForType.put(type, getUids(type));
 
-                if (uids == null) {
-                    uids = new ArrayList<UidWrapper>();
-                    allUids.put(tname, uids);
-                }
+        // if there are any beans in registeredMBeans that don't appear in new list and unregister them
+        unregisterRemovedUids(currUidsForType); //unregisterMBeans();
+
+        for (Map.Entry<String, Collection<Uid>> e : currUidsForType.entrySet()) {
+            String type = e.getKey();
+
+            List<UidWrapper> beans = registeredMBeans.get(type);
 
-                if (exposeAllLogs || osbTypeMap.containsKey(tname))
-                    updateMBeans(uids, System.nanoTime(), true, tname);
+            if (beans == null) {
+                beans = new ArrayList<UidWrapper>();
+                registeredMBeans.put(type, beans);
+            }
+
+            for (Uid uid : e.getValue()) {
+                if (!isRegistered(type, uid)) {
+                    UidWrapper w = registerBean(uid, type, false); // can return null if type isn't instrumented
+
+                    if (w != null)
+                        beans.add(w);
+                }
             }
-        } finally {
-            tryResumeRM(rmStatus);
         }
 
+        /*
+         * now create the actual MBeans - we create all the UidWrappers before registering because
+         * the process of creating a bean can call back into the browser to probe for a particular type
+         * (see for example com.arjuna.ats.arjuna.tools.osb.mbean.ActionBean
+         */
+        registerMBeans();
     }
 
     /**
@@ -282,96 +349,66 @@ public void probe() {
      * @return the list of MBeans representing the requested ObjectStore type
      */
     public List<UidWrapper> probe(String type) {
-		if (!allUids.containsKey(type))
-            updateAllUids();
-
-        List<UidWrapper> uids = allUids.get(type);
-
-        if (uids != null && uids.size() > 0) {
-            RecoveryManagerStatus rmStatus = trySuspendRM();
-
-            try {
-                updateMBeans(uids, System.currentTimeMillis(), false, type);
-            } finally {
-                tryResumeRM(rmStatus);
-            }
-        }
-
-        return uids;
+		return registeredMBeans.get(type);
     }
 
-    /**
-     * See if any new MBeans need to be registered or if any existing MBeans no longer exist
-     * as ObjectStore entries.
-     */
-    private void updateAllUids() {
-        InputObjectState types = new InputObjectState();
-
-        try {
-            if (StoreManager.getRecoveryStore().allTypes(types)) {
-                String tname;
+    private UidWrapper registerBean(Uid uid, String type, boolean createMbean) {
+        OSBType osbType = osbTypeMap.get(type);
 
-                do {
-                    try {
-                        tname = types.unpackString();
-                    } catch (IOException e1) {
-                        tname = """";
-                    }
+        if (osbType == null && !exposeAllLogs)
+            return null;
 
-                    if (tname.length() != 0) {
-                        List<UidWrapper> uids = allUids.get(tname);
+        if (osbType != null && !osbType.enabled)
+            return null;
 
-                        if (uids == null) {
-                            uids = new ArrayList<UidWrapper>();
-                            allUids.put(tname, uids);
-                        }
-                    }
-                } while (tname.length() != 0);
-            }
-        } catch (ObjectStoreException e2) {
-            if (tsLogger.logger.isTraceEnabled())
-                tsLogger.logger.trace(e2.toString());
-        }
-    }
+        String beanType = osbType == null ? OSEntryBean.class.getName() : osbType.beanClass;
+        String stateType = osbType == null ? null : osbType.recordClass;
+        UidWrapper w = new UidWrapper(this, beanType, type, stateType, uid);
 
-    private void updateMBeans(List<UidWrapper> uids, long tstamp, boolean register, String type) {
-        OSBType osbType = osbTypeMap.get(type);
+        if (createMbean)
+            w.createAndRegisterMBean();
 
-        if (osbType != null && !osbType.enabled)
-            return;
+        return w;
+    }
 
+    private Collection<Uid> getUids(String type) {
+        Collection<Uid> uids = new ArrayList<Uid>();
         ObjectStoreIterator iter = new ObjectStoreIterator(StoreManager.getRecoveryStore(), type);
-        String beanType = osbType == null ? OSEntryBean.class.getName() : osbType.beanClass;
-        String stateType = osbType == null ? null : osbType.recordClass;
 
         while (true) {
             Uid u = iter.iterate();
 
             if (u == null || Uid.nullUid().equals(u))
                 break;
 
-            UidWrapper w = new UidWrapper(this, beanType, type, stateType, u);
-            int i = uids.indexOf(w);
-
-            if (i == -1) {
-                w.setTimestamp(tstamp);
-                uids.add(w);
-                w.createMBean();
-                if (register)
-                    w.register();
-            } else {
-                uids.get(i).setTimestamp(tstamp);
-            }
+            uids.add(u);
         }
 
-        for (Iterator<UidWrapper> i = uids.iterator(); i.hasNext(); ) {
-            UidWrapper w = i.next();
+        return uids;
+    }
+
+    private Collection<String> getTypes() {
+        Collection<String> allTypes = new ArrayList<String>();
+        InputObjectState types = new InputObjectState();
+
+        try {
+            if (StoreManager.getRecoveryStore().allTypes(types)) {
 
-            if (w.getTimestamp() != tstamp) {
-                if (register)
-                    w.unregister();
-                i.remove();
+                while (true) {
+                    try {
+                        String typeName = types.unpackString();
+                        if (typeName.length() == 0)
+                            break;
+                        allTypes.add(typeName);
+                    } catch (IOException e1) {
+                        break;
+                    }
+                }
             }
-        }
+        } catch (ObjectStoreException e) {
+            if (tsLogger.logger.isTraceEnabled())
+                tsLogger.logger.trace(e.toString());        }
+
+        return allTypes;
     }
 }",2014-11-25T20:07:49Z,45
"@@ -18,6 +18,7 @@ public class UidWrapper {
 	private Uid uid;
 	private long tstamp;
 	private OSEntryBean mbean;
+	boolean registered = false;
 
 	public UidWrapper(Uid uid) {
 		this.uid = uid;
@@ -62,11 +63,17 @@ public String getClassName() {
 	}
 
 	void register() {
-		mbean.register();
+		if (mbean != null && !registered) {
+			mbean.register();
+			registered = true;
+		}
 	}
 
 	void unregister() {
-		mbean.unregister();
+		if (mbean != null) {
+			mbean.unregister();
+			registered = false;
+		}
 	}
 
     /**
@@ -112,7 +119,7 @@ public String toString() {
 	}
 
 	public StringBuilder toString(String prefix, StringBuilder sb) {
-		return mbean.toString(prefix, sb);
+		return mbean == null ? sb : mbean.toString(prefix, sb);
 	}
 
 	public List<UidWrapper> probe(String type) {
@@ -138,4 +145,10 @@ public OSEntryBean createMBean() {
 
 		return mbean;
 	}
+
+	public void createAndRegisterMBean() {
+		if (mbean == null)
+		    createMBean();
+		register();
+	}
 }",2014-11-25T20:07:49Z,46
"@@ -125,7 +125,7 @@ private static boolean isDeployQueue(String serviceName) throws Exception {
         } else {
             prefix = ""BTR_"";
         }
-        ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging,hornetq-server=default,jms-"" + type + ""="" + prefix
+        ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging-activemq,server=default,jms-"" + type + ""="" + prefix
                 + ""*"");
         ObjectInstance[] dests = getMBeanServerConnection().queryMBeans(objName, null).toArray(new ObjectInstance[] {});
         for (int i = 0; i < dests.length; i++) {
@@ -191,7 +191,7 @@ int consumerCount(String serviceName) throws Exception {
         }
 
         Integer count = null;
-        ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging,hornetq-server=default,jms-"" + type + ""="" + prefix
+        ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging-activemq,server=default,jms-"" + type + ""="" + prefix
                 + serviceName);
         if (type.toLowerCase().equals(""queue"")) {
             count = (Integer) getMBeanServerConnection().getAttribute(objName, ""consumerCount"");
@@ -283,16 +283,16 @@ public int deployQueue(String serviceName, String serverName, boolean conversati
 
                     log.trace(serviceName);
 
-                    log.debug(""Invoking hornetq to deploy queue"");
+                    log.debug(""Invoking activemq to deploy queue"");
                     ModelNode op = new ModelNode();
                     op.get(""operation"").set(""add"");
-                    op.get(""address"").add(""subsystem"", ""messaging"");
-                    op.get(""address"").add(""hornetq-server"", ""default"");
+                    op.get(""address"").add(""subsystem"", ""messaging-activemq"");
+                    op.get(""address"").add(""server"", ""default"");
                     op.get(""address"").add(""jms-"" + type, prefix + serviceName);
                     op.get(""entries"").add(""/"" + type + ""/"" + prefix + serviceName);
                     // op.get(""jms-"" + type + ""-address"").set(""jms."" + type + ""."" + prefix + serviceName);
                     applyUpdate(op, getClient());
-                    log.debug(""Invoked hornetq to deploy queue"");
+                    log.debug(""Invoked activemq to deploy queue"");
                 }
                 log.debug(""Created: "" + serviceName);
                 // QUEUE_CREATION_TIMES.put(serviceName, currentTime);
@@ -341,8 +341,8 @@ static int undeployQueue(String serviceName) {
 
                 ModelNode op = new ModelNode();
                 op.get(""operation"").set(""remove"");
-                op.get(""address"").add(""subsystem"", ""messaging"");
-                op.get(""address"").add(""hornetq-server"", ""default"");
+                op.get(""address"").add(""subsystem"", ""messaging-activemq"");
+                op.get(""address"").add(""server"", ""default"");
                 op.get(""address"").add(""jms-"" + type, prefix + serviceName);
                 applyUpdate(op, getClient());
             }",2015-06-29T13:56:12Z,47
"@@ -191,7 +191,7 @@ public List<String> listRunningServers() {
         List<String> runningServerList = new ArrayList<String>();
 
         try {
-            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging,hornetq-server=default,jms-queue=BTR_*"");
+            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging-activemq,server=default,jms-queue=BTR_*"");
             ObjectInstance[] dests = beanServerConnection.queryMBeans(objName, null).toArray(new ObjectInstance[] {});
             for (int i = 0; i < dests.length; i++) {
                 String serviceComponentOfObjectName = dests[i].getObjectName().getCanonicalName();
@@ -221,7 +221,7 @@ public List<Integer> listRunningInstanceIds(String serverName) {
         ArrayList<Integer> ids = new ArrayList<Integer>();
 
         try {
-            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging,hornetq-server=default,jms-queue=BTR_*"");
+            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging-activemq,server=default,jms-queue=BTR_*"");
             ObjectInstance[] dests = beanServerConnection.queryMBeans(objName, null).toArray(new ObjectInstance[] {});
             for (int i = 0; i < dests.length; i++) {
                 String serviceComponentOfObjectName = dests[i].getObjectName().getCanonicalName();
@@ -604,7 +604,7 @@ public int getQueueDepth(String serverName, String serviceName) {
             } else {
                 prefix = ""BTR_"";
             }
-            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging,hornetq-server=default,jms-"" + type + ""=""
+            ObjectName objName = new ObjectName(""jboss.as:subsystem=messaging-activemq,server=default,jms-"" + type + ""=""
                     + prefix + serviceName);
             depth = (Integer) beanServerConnection.getAttribute(objName, ""messageCount"");
         } catch (Exception e) {",2015-06-29T13:56:12Z,48
"@@ -1,6 +1,6 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<messaging-deployment xmlns=""urn:jboss:messaging-deployment:1.0"">
-    <hornetq-server>
+<messaging-deployment xmlns=""urn:jboss:messaging-activemq-deployment:1.0"">
+    <server>
         <jms-destinations>
             <jms-queue name=""BTR_BTStompAdmin"">
                 <entry name=""/queue/BTR_BTStompAdmin""/>
@@ -9,5 +9,5 @@
                 <entry name=""/queue/BTR_BTDomainAdmin""/>
             </jms-queue>
         </jms-destinations>
-    </hornetq-server>
+    </server>
 </messaging-deployment>",2015-06-29T13:56:12Z,49
"@@ -415,7 +415,7 @@ bool HybridSocketSessionImpl::send(MESSAGE& message) {
                                 long long longSched = message.schedtime;
                                 scheduled = (char*) malloc(32); // #   define ULLONG_MAX      18446744073709551615ULL from /usr/include/limits.h
                                 sprintf(scheduled, ""%lld"", longSched);
-                                apr_hash_set(frame.headers, ""_HQ_SCHED_DELIVERY"", APR_HASH_KEY_STRING, scheduled);
+                                apr_hash_set(frame.headers, ""_AMQ_SCHED_DELIVERY"", APR_HASH_KEY_STRING, scheduled);
                                 LOG4CXX_TRACE(logger, ""Set the scheduled delivery time: "" << scheduled);
                         }
 ",2015-06-29T13:56:12Z,50
"@@ -102,14 +102,6 @@
 		<test.skip>true</test.skip>
 	</properties>
 	<dependencies>
-        <dependency>
-            <groupId>org.hornetq.rest</groupId>
-            <artifactId>hornetq-rest</artifactId>
-            <version>2.2.3-SNAPSHOT</version>
-            <!--
-        <version>2.2.2.Final</version>
--->
-        </dependency>
         <dependency>
             <groupId>org.jboss.netty</groupId>
             <artifactId>netty</artifactId>",2015-06-29T13:56:12Z,51
"@@ -7,15 +7,13 @@
         <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;export JAVA_OPTS=&quot;$JAVA_OPTS -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""${JBOSS_HOME}/bin/standalone.conf""/>
         <replaceregexp byline=""true"" match=""&quot;spec&quot;"" replace=""&quot;full&quot;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
         <replaceregexp byline=""true"" match=""&quot;txn-status-manager&quot;/&gt;"" replace=""&quot;txn-status-manager&quot;/&gt;&#10;            &lt;jts/&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.hornetq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;/jms-destinations&gt;"" replace=""&#10;                    &lt;jms-queue name=&quot;BTR_TestOne&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestOne&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestOne&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestTwo&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestTwo&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTC_ConvService&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTC_ConvService&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTC_ConvService&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_JAVA_Converse&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot;&gt;&#10;                        &lt;entry name=&quot;topic/BTR_JAVA_Topic&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/topic/BTR_JAVA_Topic&quot;/&gt;&#10;                    &lt;/jms-topic&gt;&lt;/jms-destinations&gt;&#10;                    &#10;            "" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.apache.activemq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""DLQ&quot;/&gt;"" replace=""DLQ&quot;/&gt;&#10;                &lt;jms-queue name=&quot;BTR_TestOne&quot; entries=&quot;queue/BTR_TestOne java:/jms/queue/BTR_TestOne&quot;/&gt;&#10;                &lt;jms-queue name=&quot;BTR_TestTwo&quot; entries=&quot;queue/BTR_TestTwo java:/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                &lt;jms-queue name=&quot;BTC_ConvService&quot; entries=&quot;queue/BTC_ConvService java:/jms/queue/BTC_ConvService&quot;/&gt;&#10;                &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot; entries=&quot;queue/BTR_JAVA_Converse java:/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot; entries=&quot;topic/BTR_JAVA_Topic java:/jms/topic/BTR_JAVA_Topic&quot;/&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;/security-setting&gt;"" replace=""&lt;/security-setting&gt;&#10;                &lt;security-setting name=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                    &lt;role name=&quot;blacktie&quot; send=&quot;true&quot; consume=&quot;true&quot;/&gt;&#10;                &lt;/security-setting&gt;&#10;                &lt;security-setting name=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                    &lt;role name=&quot;blacktie&quot; send=&quot;true&quot; consume=&quot;true&quot;/&gt;&#10;                &lt;/security-setting&gt;&#10;                &lt;security-setting name=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                    &lt;role name=&quot;dynsub&quot; send=&quot;true&quot; consume=&quot;true&quot;/&gt;&#10;                &lt;/security-setting&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
         <replaceregexp byline=""true"" match=""#guest=guest"" replace=""guest=guest,blacktie&#10;"" file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties""/>
         <echo file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties"" append=""true"">dynsub=guest,blacktie,dynsub</echo>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;dynsub&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;dynsub&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;"" replace=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;"" replace=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""activemq-ra"" replace=""hornetq-ra"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""connection-factory name=&quot;InVmConnectionFactory&quot;"" replace=""connection-factory name=&quot;InVmConnectionFactory&quot; connection-ttl=&quot;-1&quot; client-failure-check-period=&quot;86400000&quot;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""connection-factory name=&quot;activemq-ra&quot;"" replace=""connection-factory name=&quot;activemq-ra&quot; connection-ttl=&quot;-1&quot; client-failure-check-period=&quot;86400000&quot;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
 
 	<!-- Copy the required users into the AS domain -->
 	<!--",2015-06-29T13:56:12Z,52
"@@ -20,7 +20,7 @@
       <subsystem>jsf.xml</subsystem>
       <subsystem>jsr77.xml</subsystem>
       <subsystem>mail.xml</subsystem>
-      <subsystem>messaging.xml</subsystem>
+      <subsystem>messaging-activemq.xml</subsystem>
       <subsystem>naming.xml</subsystem>
       <subsystem>pojo.xml</subsystem>
       <subsystem>remoting.xml</subsystem>",2015-06-29T13:56:12Z,53
"@@ -1,6 +1,6 @@
 <?xml version='1.0' encoding='UTF-8'?>
 
-<server xmlns=""urn:jboss:domain:3.0"">
+<server xmlns=""urn:jboss:domain:4.0"">
 
     <extensions>
         <?EXTENSIONS?>
@@ -72,7 +72,7 @@
         <!-- TODO - only show this if the jacorb subsystem is added  -->
         <interface name=""unsecure"">
             <!-- Used for IIOP sockets in the standard configuration.
-                 To secure JacORB you need to setup SSL -->
+                 To secure IIOP connections you need to setup SSL -->
             <inet-address value=""${jboss.bind.address.unsecure:127.0.0.1}""/>
         </interface>
     </interfaces>",2015-06-29T13:56:12Z,54
"@@ -163,6 +163,8 @@
 				<artifactId>maven-dependency-plugin</artifactId>
 
 				<configuration>
+          <excludeGroupIds>org.jboss.spec.javax.transaction,junit,jboss.profiler.jvmti,org.apache.ant,javax,org.jboss.narayana</excludeGroupIds>
+          <excludeArtifactIds>jboss-transaction-spi</excludeArtifactIds>
 					<outputDirectory>./ext</outputDirectory>
 					<overWriteReleases>false</overWriteReleases>
 					<overWriteSnapshots>false</overWriteSnapshots>",2015-09-01T11:13:26Z,9
"@@ -478,6 +478,12 @@ function add_qa_xargs {
 
 function qa_tests_once {
   echo ""QA Test Suite $@""
+  
+  
+  # Download dependencies
+  cd $WORKSPACE
+  ant -f $WORKSPACE/qa/build.xml get.maven.libs
+  
   cd $WORKSPACE/qa
   unset orb
   codeCoverage=false;",2015-09-01T11:13:26Z,10
"@@ -29,15 +29,15 @@
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.concurrent.ConcurrentMap;
 
-import org.hornetq.core.journal.Journal;
-import org.hornetq.core.journal.JournalLoadInformation;
-import org.hornetq.core.journal.PreparedTransactionInfo;
-import org.hornetq.core.journal.RecordInfo;
-import org.hornetq.core.journal.SequentialFileFactory;
-import org.hornetq.core.journal.TransactionFailureCallback;
-import org.hornetq.core.journal.impl.AIOSequentialFileFactory;
-import org.hornetq.core.journal.impl.JournalImpl;
-import org.hornetq.core.journal.impl.NIOSequentialFileFactory;
+import org.apache.activemq.artemis.core.journal.Journal;
+import org.apache.activemq.artemis.core.journal.JournalLoadInformation;
+import org.apache.activemq.artemis.core.journal.PreparedTransactionInfo;
+import org.apache.activemq.artemis.core.journal.RecordInfo;
+import org.apache.activemq.artemis.core.journal.SequentialFileFactory;
+import org.apache.activemq.artemis.core.journal.TransactionFailureCallback;
+import org.apache.activemq.artemis.core.journal.impl.AIOSequentialFileFactory;
+import org.apache.activemq.artemis.core.journal.impl.JournalImpl;
+import org.apache.activemq.artemis.core.journal.impl.NIOSequentialFileFactory;
 
 import com.arjuna.ats.arjuna.common.Uid;
 import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
@@ -80,7 +80,7 @@ public void start() throws Exception {
         List<RecordInfo> committedRecords = new LinkedList<RecordInfo>();
         List<PreparedTransactionInfo> preparedTransactions = new LinkedList<PreparedTransactionInfo>();
         TransactionFailureCallback failureCallback = new TransactionFailureCallback() {
-            public void failedTransaction(long l, java.util.List<org.hornetq.core.journal.RecordInfo> recordInfos, java.util.List<org.hornetq.core.journal.RecordInfo> recordInfos1) {
+            public void failedTransaction(long l, java.util.List<org.apache.activemq.artemis.core.journal.RecordInfo> recordInfos, java.util.List<org.apache.activemq.artemis.core.journal.RecordInfo> recordInfos1) {
                 tsLogger.i18NLogger.warn_journal_load_error();
             }
         };",2015-07-23T13:20:32Z,55
"@@ -82,9 +82,9 @@
       <version>${project.version}</version>
     </dependency>
     <dependency>
-      <groupId>org.hornetq</groupId>
-      <artifactId>hornetq-journal</artifactId>
-      <version>${version.org.hornetq}</version>
+      <groupId>org.apache.activemq</groupId>
+      <artifactId>artemis-journal</artifactId>
+      <version>${version.org.apache.activemq}</version>
       <scope>provided</scope>
       <exclusions>
         <exclusion>",2015-07-23T13:20:32Z,24
"@@ -137,9 +137,9 @@
 
     <!-- Ensure these are in the distribution -->
     <dependency>
-      <groupId>org.hornetq</groupId>
-      <artifactId>hornetq-journal</artifactId>
-      <version>${version.org.hornetq}</version>
+      <groupId>org.apache.activemq</groupId>
+      <artifactId>artemis-journal</artifactId>
+      <version>${version.org.apache.activemq}</version>
       <exclusions>
         <exclusion>
           <groupId>io.netty</groupId>",2015-07-23T13:20:32Z,56
"@@ -415,7 +415,7 @@
     <version.org.jboss.ws>1.0.2.Final</version.org.jboss.ws>
     <version.org.jboss.resteasy>3.0.5.Final</version.org.jboss.resteasy>
     <version.org.jboss.weld>2.1.0.Final</version.org.jboss.weld>
-    <version.org.hornetq>2.4.7.Final</version.org.hornetq>
+    <version.org.apache.activemq>1.0.0</version.org.apache.activemq>
     <version.org.hibernate.javax.persistence>1.0.1.Final</version.org.hibernate.javax.persistence>
     <version.org.jboss.spec.javax.interceptor>1.0.0.Final</version.org.jboss.spec.javax.interceptor>
     <version.org.jboss.spec.javax.transaction>1.0.0.Final</version.org.jboss.spec.javax.transaction>",2015-07-23T13:20:32Z,39
"@@ -325,9 +325,9 @@
         </dependencies>
     </dependencyManagement>
     <properties>
-        <version.org.wildfly.wildfly-parent>10.0.0.Beta2-SNAPSHOT</version.org.wildfly.wildfly-parent>
-        <version.org.wildfly.core>2.0.0.Alpha9</version.org.wildfly.core>
-        <version.org.wildfly.build-tools>1.1.0.Beta1</version.org.wildfly.build-tools>
+        <version.org.wildfly.wildfly-parent>10.0.0.CR1-SNAPSHOT</version.org.wildfly.wildfly-parent>
+        <version.org.wildfly.core>2.0.0.Beta4</version.org.wildfly.core>
+        <version.org.wildfly.build-tools>1.1.0.Beta2</version.org.wildfly.build-tools>
         <version.suffix.org.jboss.javaee>.GA</version.suffix.org.jboss.javaee>
         <version.org.jboss.integration>5.1.0.GA</version.org.jboss.integration>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>",2015-08-24T09:45:06Z,57
"@@ -55,7 +55,7 @@ public interface JDBCAccess
      * @throws NamingException 
      */
 
-    public Connection getConnection () throws SQLException, NamingException;
+    public Connection getConnection () throws SQLException;
 
     /**
      * This method can be used to pass additional information to the",2013-08-22T09:46:40Z,58
"@@ -57,8 +57,9 @@
 
 public abstract class JDBCImple_driver {
 
-	protected static ThreadLocal<Connection> connection;
+	// protected Connection connection;
 	protected String tableName;
+	private JDBCAccess jdbcAccess;
 
 	public boolean commit_state(Uid objUid, String typeName)
 			throws ObjectStoreException {
@@ -70,13 +71,12 @@ public boolean commit_state(Uid objUid, String typeName)
 		PreparedStatement pstmt = null;
 		PreparedStatement pstmt2 = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			// Delete any previously committed state
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""DELETE FROM ""
-									+ tableName
-									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+					.prepareStatement(""DELETE FROM ""
+							+ tableName
+							+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -90,23 +90,22 @@ public boolean commit_state(Uid objUid, String typeName)
 
 			// now do the commit itself:
 			pstmt2 = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
-									+ StateStatus.OS_UNCOMMITTED);
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
+							+ StateStatus.OS_UNCOMMITTED);
 
 			pstmt2.setString(1, objUid.stringForm());
 			pstmt2.setString(2, typeName);
 
 			int rowcount2 = pstmt2.executeUpdate();
 			if (rowcount2 > 0) {
 				result = true;
-				connection.get().commit();
+				connection.commit();
 			} else {
-				connection.get().rollback();
+				connection.rollback();
 			}
+			connection.close();
 
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -139,12 +138,11 @@ public boolean hide_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -153,7 +151,8 @@ public boolean hide_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_1(e);
 		} finally {
@@ -178,12 +177,11 @@ public boolean reveal_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -192,7 +190,8 @@ public boolean reveal_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_2(e);
 		} finally {
@@ -223,8 +222,10 @@ public int currentState(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
-			pstmt = connection.get().prepareStatement(
-					""SELECT StateType, Hidden FROM "" + tableName
+			Connection connection = jdbcAccess.getConnection();
+			pstmt = connection
+					.prepareStatement(""SELECT StateType, Hidden FROM ""
+							+ tableName
 							+ "" WHERE UidString = ? AND TypeName = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
@@ -261,7 +262,8 @@ public int currentState(Uid objUid, String typeName)
 					break;
 				}
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 
 			// examine in reverse order:
 			if (have_OS_COMMITTED_HIDDEN) {
@@ -311,7 +313,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -339,7 +342,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 						finished = true;
 					}
 				}
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_4(e);
 			} finally {
@@ -368,7 +372,8 @@ public boolean allTypes(InputObjectState foundTypes)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -395,7 +400,8 @@ public boolean allTypes(InputObjectState foundTypes)
 					}
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_6(e);
 			} finally {
@@ -428,12 +434,11 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 
 				PreparedStatement pstmt = null;
 				try {
+					Connection connection = jdbcAccess.getConnection();
 					pstmt = connection
-							.get()
-							.prepareStatement(
-									""DELETE FROM ""
-											+ tableName
-											+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+							.prepareStatement(""DELETE FROM ""
+									+ tableName
+									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 					pstmt.setString(1, objUid.stringForm());
 					pstmt.setString(2, typeName);
@@ -443,7 +448,8 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 						result = true;
 					}
 
-					connection.get().commit();
+					connection.commit();
+					connection.close();
 				} catch (SQLException e) {
 					tsLogger.i18NLogger.warn_objectstore_JDBCImple_8(e);
 				} finally {
@@ -480,19 +486,16 @@ public InputObjectState read_state(Uid objUid, String typeName,
 
 			PreparedStatement pstmt = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
-						.prepareStatement(
-								""SELECT ObjectState FROM ""
-										+ tableName
-										+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+						.prepareStatement(""SELECT ObjectState FROM ""
+								+ tableName
+								+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 				pstmt.setString(1, objUid.stringForm());
 				pstmt.setString(2, typeName);
 				pstmt.setInt(3, stateType);
 
 				rs = pstmt.executeQuery();
-
-				connection.get().commit();
 				if (rs.next()) {
 
 					byte[] buffer = rs.getBytes(1);
@@ -504,6 +507,9 @@ public InputObjectState read_state(Uid objUid, String typeName,
 								.warn_objectstore_JDBCImple_readfailed();
 					}
 				}
+
+				connection.commit();
+				connection.close();
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_14(e);
 			} finally {
@@ -546,8 +552,8 @@ public boolean write_state(Uid objUid, String typeName,
 			PreparedStatement pstmt = null;
 			PreparedStatement pstmt2 = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
 						.prepareStatement(
 								""SELECT ObjectState, UidString, StateType, TypeName FROM ""
 										+ tableName
@@ -565,14 +571,12 @@ public boolean write_state(Uid objUid, String typeName,
 					updateBytes(rs, 1, b);
 					rs.updateRow();
 				} else {
-					connection.get().commit();
+					// TODO connection.get().commit();
 					// not in database, do insert:
 					pstmt2 = connection
-							.get()
-							.prepareStatement(
-									""INSERT INTO ""
-											+ tableName
-											+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
+							.prepareStatement(""INSERT INTO ""
+									+ tableName
+									+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
 
 					pstmt2.setInt(1, stateType);
 					pstmt2.setString(2, typeName);
@@ -582,7 +586,8 @@ public boolean write_state(Uid objUid, String typeName,
 					pstmt2.executeUpdate();
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 				result = true;
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -623,28 +628,31 @@ public boolean write_state(Uid objUid, String typeName,
 	public void initialise(final JDBCAccess jdbcAccess, String tableName,
 			ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean)
 			throws SQLException, NamingException {
+		this.jdbcAccess = jdbcAccess;
 
-		connection = new ThreadLocal<Connection>() {
+		// connection = new ThreadLocal<Connection>() {
+		//
+		// @Override
+		// protected Connection initialValue() {
+		// try {
+		// return jdbcAccess.getConnection();
+		// } catch (Exception e) {
+		// throw new RuntimeException(e);
+		// }
+		// }
+		// };
 
-			@Override
-			protected Connection initialValue() {
-				try {
-					return jdbcAccess.getConnection();
-				} catch (Exception e) {
-					throw new RuntimeException(e);
-				}
-			}
-		};
+		Connection connection = jdbcAccess.getConnection();
 
-		Statement stmt = connection.get().createStatement();
+		Statement stmt = connection.createStatement();
 
 		// table [type, object UID, format, blob]
 
 		if (jdbcStoreEnvironmentBean.getDropTable()) {
 			try {
 				stmt.executeUpdate(""DROP TABLE "" + tableName);
 			} catch (SQLException ex) {
-				checkDropTableException(ex);
+				checkDropTableException(connection, ex);
 			}
 		}
 
@@ -659,9 +667,11 @@ protected Connection initialValue() {
 		stmt.close();
 
 		// This can be the case when triggering via EmptyObjectStore
-		if (!connection.get().getAutoCommit()) {
-			connection.get().commit();
+		if (!connection.getAutoCommit()) {
+			connection.commit();
 		}
+		connection.close();
+
 		this.tableName = tableName;
 	}
 
@@ -687,7 +697,7 @@ protected String getObjectStateSQLType() {
 	protected abstract void checkCreateTableError(SQLException ex)
 			throws SQLException;
 
-	protected abstract void checkDropTableException(SQLException ex)
+	protected abstract void checkDropTableException(Connection connection, SQLException ex)
 			throws SQLException;
 
 	public int getMaxStateSize() {",2013-08-22T09:46:40Z,59
"@@ -44,11 +44,11 @@
 
 public class DataSourceJDBCAccess implements JDBCAccess {
 
+	private DataSource dataSource;
 	private String datasourceName;
 
-	public Connection getConnection() throws SQLException, NamingException {
-		Connection connection = ((DataSource) new InitialContext()
-				.lookup(datasourceName)).getConnection();
+	public Connection getConnection() throws SQLException {
+		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;
 	}
@@ -69,6 +69,12 @@ public void initialise(StringTokenizer tokenizer) {
 			throw new FatalError(
 					""The JDBC ObjectStore was not configured with a datasource name"");
 		}
+		
+		try {
+			InitialContext context = new InitialContext();
+			dataSource = (DataSource) context.lookup(datasourceName);
+		} catch (NamingException ex) {
+			throw new FatalError(toString() + "" : "" + ex, ex);
+		}
 	}
-
 }",2013-08-22T09:46:40Z,60
"@@ -39,7 +39,6 @@
 import java.util.Map;
 import java.util.StringTokenizer;
 
-import javax.naming.NamingException;
 import javax.sql.DataSource;
 
 import com.arjuna.ats.arjuna.exceptions.FatalError;
@@ -48,7 +47,7 @@
 public class DynamicDataSourceJDBCAccess implements JDBCAccess {
 	private DataSource dataSource;
 
-	public Connection getConnection() throws SQLException, NamingException {
+	public Connection getConnection() throws SQLException {
 		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;",2013-08-22T09:46:40Z,61
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,7 +39,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,62
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -42,7 +43,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42704"") && ex.getErrorCode() != -204) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,63
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,64
"@@ -37,6 +37,7 @@
 
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -59,7 +60,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""S0005"") && ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,65
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,66
"@@ -42,6 +42,7 @@
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
 import java.sql.Blob;
+import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.SQLException;
 
@@ -76,7 +77,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42000"") && ex.getErrorCode() != 942) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,67
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,13 +39,14 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42P01"")) {
 			throw ex;
 		} else {
 			// For some reason PSQL leaves the transaction in a bad state on a
 			// failed drop
-			connection.get().commit();
+			connection.commit();
 		}
 	}
 }",2013-08-22T09:46:40Z,68
"@@ -55,7 +55,7 @@ public interface JDBCAccess
      * @throws NamingException 
      */
 
-    public Connection getConnection () throws SQLException, NamingException;
+    public Connection getConnection () throws SQLException;
 
     /**
      * This method can be used to pass additional information to the",2013-08-22T09:46:40Z,58
"@@ -57,8 +57,9 @@
 
 public abstract class JDBCImple_driver {
 
-	protected static ThreadLocal<Connection> connection;
+	// protected Connection connection;
 	protected String tableName;
+	private JDBCAccess jdbcAccess;
 
 	public boolean commit_state(Uid objUid, String typeName)
 			throws ObjectStoreException {
@@ -70,13 +71,12 @@ public boolean commit_state(Uid objUid, String typeName)
 		PreparedStatement pstmt = null;
 		PreparedStatement pstmt2 = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			// Delete any previously committed state
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""DELETE FROM ""
-									+ tableName
-									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+					.prepareStatement(""DELETE FROM ""
+							+ tableName
+							+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -90,23 +90,22 @@ public boolean commit_state(Uid objUid, String typeName)
 
 			// now do the commit itself:
 			pstmt2 = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
-									+ StateStatus.OS_UNCOMMITTED);
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
+							+ StateStatus.OS_UNCOMMITTED);
 
 			pstmt2.setString(1, objUid.stringForm());
 			pstmt2.setString(2, typeName);
 
 			int rowcount2 = pstmt2.executeUpdate();
 			if (rowcount2 > 0) {
 				result = true;
-				connection.get().commit();
+				connection.commit();
 			} else {
-				connection.get().rollback();
+				connection.rollback();
 			}
+			connection.close();
 
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -139,12 +138,11 @@ public boolean hide_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -153,7 +151,8 @@ public boolean hide_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_1(e);
 		} finally {
@@ -178,12 +177,11 @@ public boolean reveal_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -192,7 +190,8 @@ public boolean reveal_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_2(e);
 		} finally {
@@ -223,8 +222,10 @@ public int currentState(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
-			pstmt = connection.get().prepareStatement(
-					""SELECT StateType, Hidden FROM "" + tableName
+			Connection connection = jdbcAccess.getConnection();
+			pstmt = connection
+					.prepareStatement(""SELECT StateType, Hidden FROM ""
+							+ tableName
 							+ "" WHERE UidString = ? AND TypeName = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
@@ -261,7 +262,8 @@ public int currentState(Uid objUid, String typeName)
 					break;
 				}
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 
 			// examine in reverse order:
 			if (have_OS_COMMITTED_HIDDEN) {
@@ -311,7 +313,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -339,7 +342,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 						finished = true;
 					}
 				}
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_4(e);
 			} finally {
@@ -368,7 +372,8 @@ public boolean allTypes(InputObjectState foundTypes)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -395,7 +400,8 @@ public boolean allTypes(InputObjectState foundTypes)
 					}
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_6(e);
 			} finally {
@@ -428,12 +434,11 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 
 				PreparedStatement pstmt = null;
 				try {
+					Connection connection = jdbcAccess.getConnection();
 					pstmt = connection
-							.get()
-							.prepareStatement(
-									""DELETE FROM ""
-											+ tableName
-											+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+							.prepareStatement(""DELETE FROM ""
+									+ tableName
+									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 					pstmt.setString(1, objUid.stringForm());
 					pstmt.setString(2, typeName);
@@ -443,7 +448,8 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 						result = true;
 					}
 
-					connection.get().commit();
+					connection.commit();
+					connection.close();
 				} catch (SQLException e) {
 					tsLogger.i18NLogger.warn_objectstore_JDBCImple_8(e);
 				} finally {
@@ -480,19 +486,16 @@ public InputObjectState read_state(Uid objUid, String typeName,
 
 			PreparedStatement pstmt = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
-						.prepareStatement(
-								""SELECT ObjectState FROM ""
-										+ tableName
-										+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+						.prepareStatement(""SELECT ObjectState FROM ""
+								+ tableName
+								+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 				pstmt.setString(1, objUid.stringForm());
 				pstmt.setString(2, typeName);
 				pstmt.setInt(3, stateType);
 
 				rs = pstmt.executeQuery();
-
-				connection.get().commit();
 				if (rs.next()) {
 
 					byte[] buffer = rs.getBytes(1);
@@ -504,6 +507,9 @@ public InputObjectState read_state(Uid objUid, String typeName,
 								.warn_objectstore_JDBCImple_readfailed();
 					}
 				}
+
+				connection.commit();
+				connection.close();
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_14(e);
 			} finally {
@@ -546,8 +552,8 @@ public boolean write_state(Uid objUid, String typeName,
 			PreparedStatement pstmt = null;
 			PreparedStatement pstmt2 = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
 						.prepareStatement(
 								""SELECT ObjectState, UidString, StateType, TypeName FROM ""
 										+ tableName
@@ -565,14 +571,12 @@ public boolean write_state(Uid objUid, String typeName,
 					updateBytes(rs, 1, b);
 					rs.updateRow();
 				} else {
-					connection.get().commit();
+					// TODO connection.get().commit();
 					// not in database, do insert:
 					pstmt2 = connection
-							.get()
-							.prepareStatement(
-									""INSERT INTO ""
-											+ tableName
-											+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
+							.prepareStatement(""INSERT INTO ""
+									+ tableName
+									+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
 
 					pstmt2.setInt(1, stateType);
 					pstmt2.setString(2, typeName);
@@ -582,7 +586,8 @@ public boolean write_state(Uid objUid, String typeName,
 					pstmt2.executeUpdate();
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 				result = true;
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -623,28 +628,31 @@ public boolean write_state(Uid objUid, String typeName,
 	public void initialise(final JDBCAccess jdbcAccess, String tableName,
 			ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean)
 			throws SQLException, NamingException {
+		this.jdbcAccess = jdbcAccess;
 
-		connection = new ThreadLocal<Connection>() {
+		// connection = new ThreadLocal<Connection>() {
+		//
+		// @Override
+		// protected Connection initialValue() {
+		// try {
+		// return jdbcAccess.getConnection();
+		// } catch (Exception e) {
+		// throw new RuntimeException(e);
+		// }
+		// }
+		// };
 
-			@Override
-			protected Connection initialValue() {
-				try {
-					return jdbcAccess.getConnection();
-				} catch (Exception e) {
-					throw new RuntimeException(e);
-				}
-			}
-		};
+		Connection connection = jdbcAccess.getConnection();
 
-		Statement stmt = connection.get().createStatement();
+		Statement stmt = connection.createStatement();
 
 		// table [type, object UID, format, blob]
 
 		if (jdbcStoreEnvironmentBean.getDropTable()) {
 			try {
 				stmt.executeUpdate(""DROP TABLE "" + tableName);
 			} catch (SQLException ex) {
-				checkDropTableException(ex);
+				checkDropTableException(connection, ex);
 			}
 		}
 
@@ -659,9 +667,11 @@ protected Connection initialValue() {
 		stmt.close();
 
 		// This can be the case when triggering via EmptyObjectStore
-		if (!connection.get().getAutoCommit()) {
-			connection.get().commit();
+		if (!connection.getAutoCommit()) {
+			connection.commit();
 		}
+		connection.close();
+
 		this.tableName = tableName;
 	}
 
@@ -687,7 +697,7 @@ protected String getObjectStateSQLType() {
 	protected abstract void checkCreateTableError(SQLException ex)
 			throws SQLException;
 
-	protected abstract void checkDropTableException(SQLException ex)
+	protected abstract void checkDropTableException(Connection connection, SQLException ex)
 			throws SQLException;
 
 	public int getMaxStateSize() {",2013-08-22T09:46:40Z,59
"@@ -44,11 +44,11 @@
 
 public class DataSourceJDBCAccess implements JDBCAccess {
 
+	private DataSource dataSource;
 	private String datasourceName;
 
-	public Connection getConnection() throws SQLException, NamingException {
-		Connection connection = ((DataSource) new InitialContext()
-				.lookup(datasourceName)).getConnection();
+	public Connection getConnection() throws SQLException {
+		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;
 	}
@@ -69,6 +69,12 @@ public void initialise(StringTokenizer tokenizer) {
 			throw new FatalError(
 					""The JDBC ObjectStore was not configured with a datasource name"");
 		}
+		
+		try {
+			InitialContext context = new InitialContext();
+			dataSource = (DataSource) context.lookup(datasourceName);
+		} catch (NamingException ex) {
+			throw new FatalError(toString() + "" : "" + ex, ex);
+		}
 	}
-
 }",2013-08-22T09:46:40Z,60
"@@ -39,7 +39,6 @@
 import java.util.Map;
 import java.util.StringTokenizer;
 
-import javax.naming.NamingException;
 import javax.sql.DataSource;
 
 import com.arjuna.ats.arjuna.exceptions.FatalError;
@@ -48,7 +47,7 @@
 public class DynamicDataSourceJDBCAccess implements JDBCAccess {
 	private DataSource dataSource;
 
-	public Connection getConnection() throws SQLException, NamingException {
+	public Connection getConnection() throws SQLException {
 		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;",2013-08-22T09:46:40Z,61
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,7 +39,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,62
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -42,7 +43,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42704"") && ex.getErrorCode() != -204) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,63
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,64
"@@ -37,6 +37,7 @@
 
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -59,7 +60,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""S0005"") && ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,65
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,66
"@@ -42,6 +42,7 @@
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
 import java.sql.Blob;
+import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.SQLException;
 
@@ -76,7 +77,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42000"") && ex.getErrorCode() != 942) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,67
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,13 +39,14 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42P01"")) {
 			throw ex;
 		} else {
 			// For some reason PSQL leaves the transaction in a bad state on a
 			// failed drop
-			connection.get().commit();
+			connection.commit();
 		}
 	}
 }",2013-08-22T09:46:40Z,68
"@@ -179,6 +179,15 @@
             <configuration>
               <useManifestOnlyJar>false</useManifestOnlyJar>
               <excludes>
+                <!-- exclude tests that load the byteman agent (BMUnitRunner) -->
+                <exclude>**/RecoveryManagerStartStopTest.java</exclude>
+                <exclude>**/LogStoreTest2.java</exclude>
+                <exclude>**/LogStoreRecoveryTest.java</exclude>
+                <exclude>**/ReaperMonitorTest.java</exclude>
+                <exclude>**/ReaperTestCase3.java</exclude>
+                <exclude>**/ReaperTestCase2.java</exclude>
+                <exclude>**/ReaperTestCase.java</exclude>
+                <!-- not sure why these are excluded -->
                 <exclude>**/resources/**</exclude>
                 <exclude>**/DummyCheckedAction.java</exclude>
                 <exclude>**/MyAccess.java</exclude>",2015-07-03T15:08:58Z,24
"@@ -151,5 +151,36 @@
         </plugins>
       </build>
     </profile>
+    <profile>
+      <id>jts-ibmorb</id>
+      <activation>
+        <property>
+          <name>!ibmorb-disabled</name>
+        </property>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>surefire-ibmorb</id>
+                <phase>test</phase>
+                <goals>
+                  <goal>test</goal>
+                </goals>
+                <configuration>
+                  <skip>false</skip>
+                  <excludes>
+                    <exclude>**/RecoveryTest.java</excldue>
+                  </excludes>
+                </configuration>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2015-07-03T15:08:58Z,7
"@@ -460,9 +460,17 @@
               <excludes>
                 <exclude>**/io/narayana/perf/product/*</exclude>
                 <exclude>**/integration/*IntegrationTest.java</exclude>
-                <!-- temporarily disable BMUnitRunner tests due to issue with the IBM java agent -->
-                <exclude>**/TestCommitMarkableResource*</exclude>
-                <exclude>**/CrashRecovery*</exclude>
+                <!-- disable BMUnitRunner tests due to issue with the IBM java agent -->
+                <exclude>**/TestCommitMarkableResourceFailAfterPrepare.java</exclude>
+                <exclude>**/TestCommitMarkableResourceFailAfterCommitTwoXAResources.java</exclude>
+                <exclude>**/TestCommitMarkableResourceFailAfterPrepareTwoXAResources.java</exclude>
+                <exclude>**/TestCommitMarkableResourceFailActivate.java</exclude>
+                <exclude>**/TestCommitMarkableResourceFailAfterCommit.java</exclude>
+                <exclude>**/TestCommitMarkableResourceGCFromCrashAfterCommit.java</exclude>
+                <exclude>**/TestCommitMarkableResourceMBeansFailAfterPrepare.java</exclude>
+                <exclude>**/CrashAfterResourcesCommitTest.java</exclude>
+                <exclude>**/CrashRecoveryCommitReturnsXA_RETRY.java</exclude>
+                <exclude>**/CrashRecovery.java</exclude>
               </excludes>
             </configuration>
           </plugin>",2015-07-03T15:08:58Z,26
"@@ -176,6 +176,38 @@
       </dependency>
   </dependencies>
   <profiles>
+    <profile>
+      <id>jts-ibmorb</id>
+      <activation>
+        <property>
+          <name>!ibmorb-disabled</name>
+        </property>
+      </activation>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>surefire-ibmorb</id>
+                <phase>test</phase>
+                <goals>
+                  <goal>test</goal>
+                </goals>
+                <configuration>
+                  <skip>false</skip>
+                  <excludes>
+                    <exclude>**/SimpleIsolatedServers.java</excldue>
+                  </excludes>
+                </configuration>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+
     <profile>
         <id>release</id>
         <build>",2015-07-03T15:08:58Z,69
"@@ -578,6 +578,11 @@
                   <skip>false</skip>
                   <systemProperties combine.children=""append"" />
                   <excludes>
+                    <!-- exclude tests that load the byteman agent (BMUnitRunner) -->
+                    <exclude>**/RecoveredServerTransactionUnitTest.java</exclude>
+                    <exclude>**/RecoveredTransactionUnitTest.java</exclude>
+
+                    <!-- not sure why these are excluded -->
                     <exclude>**/common/**</exclude>
                     <exclude>**/exceptions/**</exclude>
                     <exclude>**/orbspecific/resources/**</exclude>
@@ -589,6 +594,8 @@
                     <exclude>**/GridTest.java</exclude>
                     <exclude>**/remote/**</exclude>
                     <exclude>**/DefaultTimeout.java</exclude>
+
+                    <!-- disable JacORB and JdkORB specific tests -->
                     <exclude>**/jacorb/**</exclude>
                     <exclude>**/javaidl/**</exclude>
                     <exclude>**/JacORB*/**</exclude>",2015-07-03T15:08:58Z,70
"@@ -139,6 +139,38 @@
         </dependency>
     </dependencies>
     <profiles>
+      <profile>
+        <id>jts-ibmorb</id>
+        <activation>
+          <property>
+            <name>ibmorb-disabled</name>
+          </property>
+        </activation>
+        <build>
+          <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>surefire-ibmorb</id>
+                  <phase>test</phase>
+                  <goals>
+                    <goal>test</goal>
+                  </goals>
+                  <configuration>
+                    <skip>false</skip>
+                    <excludes>
+                      <exclude>**/SimpleIsolatedServers.java</excldue>
+                    </excludes>
+                  </configuration>
+                </execution>
+              </executions>
+            </plugin>
+          </plugins>
+        </build>
+      </profile>
+
         <profile>
             <id>arq-remote</id>
             <activation>",2015-07-03T15:08:58Z,34
"@@ -227,5 +227,77 @@
         </dependency>
       </dependencies>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-javadoc-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>javadoc</id>
+                <phase>package</phase>
+                <goals>
+                  <goal>javadoc</goal>
+                </goals>
+                <configuration>
+                  <includeDependencySources>true</includeDependencySources>
+                  <docfilessubdirs>true</docfilessubdirs>
+                  <subpackages>com.arjuna.ats:com.arjuna.common:com.arjuna.orbportability:org.jboss.narayana:org.jboss.jbossts:com.arjuna.mw:com.arjuna.wsc:com.arjuna.wsc11:com.arjuna.wst:com.arjuna.wst11</subpackages>
+                  <!-- use this instead of excludePackageNames because of MJAVADOC-299 -->
+                  <additionalparam>
+                    -exclude com.arjuna.ats.internal -exclude com.arjuna.common.internal
+                    -exclude com.arjuna.orbportability.internal -exclude com.arjuna.ats.jbossatx
+                    -exclude com.arjuna.mw.wstx -exclude org.jboss.jbossts.txbridge
+                    -exclude org.jboss.jbossts.xts -exclude org.jboss.jbossts.xts11
+                  </additionalparam>
+                  <groups>
+                    <group>
+                      <title>Core</title>
+                      <packages>com.arjuna.ats.arjuna*:com.arjuna.ats.jdbc*:com.arjuna.ats.txoj*:com.arjuna.common*</packages>
+                    </group>
+                    <group>
+                      <title>JTA</title>
+                      <packages>com.arjuna.ats.jta*</packages>
+                    </group>
+                    <group>
+                      <title>JTS</title>
+                      <packages>com.arjuna.ats.jts*:com.arjuna.orbportability*</packages>
+                    </group>
+                    <group>
+                      <title>XTS</title>
+                      <packages>com.arjuna.mw*:com.arjuna.wsc*:com.arjuna.wsc11*:com.arjuna.wst*:com.arjuna.wst11*:org.jboss.jbossts</packages>
+                    </group>
+                    <group>
+                      <title>RTS</title>
+                      <packages>org.jboss.jbossts.star*</packages>
+                    </group>
+                  </groups>
+                </configuration>
+              </execution>
+            </executions>
+          </plugin>
+          <plugin>
+            <artifactId>maven-antrun-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>pack-javadoc</id>
+                <phase>package</phase>
+                <configuration>
+                  <target>
+                    <jar destfile=""${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar""
+                        basedir=""${project.build.directory}/site/apidocs/"" />
+                  </target>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2014-11-19T14:14:28Z,56
"@@ -830,7 +830,7 @@ private void commsTimeout(TimerTask caller)
         final State current ;
         synchronized(this)
         {
-            if (timerTask != caller) {
+            if (!timerTask.equals(caller)) {
                 // the timer was cancelled but it went off before it could be cancelled
 
                 return;",2013-01-17T08:21:31Z,71
"@@ -600,7 +600,7 @@ private void sendPrepare()
         // reobtain the lock before deciding whether to schedule the timer
 
         synchronized (this) {
-            if (timerTask == newTimerTask) {
+            if (timerTask.equals(newTimerTask)) {
                 // the timer task has not been cancelled so schedule it if appropriate
                 if (state == State.STATE_PREPARING) {
                     scheduleTimer(newTimerTask);
@@ -651,7 +651,7 @@ private void sendCommit()
         // reobtain the lock before deciding whether to schedule the timer
 
         synchronized (this) {
-            if (timerTask == newTimerTask) {
+            if (timerTask.equals(newTimerTask)) {
                 // the timer task has not been cancelled so schedule it if appropriate
                 if (state == State.STATE_COMMITTING) {
                     scheduleTimer(newTimerTask);",2013-01-17T08:21:31Z,72
"@@ -712,7 +712,7 @@ private void commsTimeout(TimerTask caller)
         final State current ;
         synchronized(this)
         {
-            if (timerTask != caller) {
+            if (!timerTask.equals(caller)) {
                 // the timer was cancelled but it went off before it could be cancelled
 
                 return;",2013-01-17T08:21:31Z,73
"@@ -541,7 +541,7 @@ private void commsTimeout(TimerTask caller)
         final State current ;
         synchronized(this)
         {
-            if (timerTask != caller) {
+            if (!timerTask.equals(caller)) {
                 // the timer was cancelled but it went off before it could be cancelled
 
                 return;",2013-01-17T08:21:31Z,74
"@@ -73,7 +73,7 @@ public final Context context (String serviceType)
             // ensure we are in an activity associated with the correct service type
 
             String currentServiceType = UserActivityFactory.userActivity().serviceType();
-            if (currentServiceType == serviceType) {
+            if (currentServiceType.equals(serviceType)) {
                 service = _manager.getHighLevelService(serviceType);
             }
         }",2013-01-17T08:21:31Z,75
"@@ -92,7 +92,7 @@ public void testContext2()
 
         String currentServiceType = ua.serviceType();
 
-        if (currentServiceType != failureServiceType) {
+        if (!currentServiceType.equals(failureServiceType)) {
             fail(""invalid service type for current activity"");
         }
 
@@ -126,7 +126,7 @@ public void testContext2()
 
         currentServiceType = ua.serviceType();
 
-        if (currentServiceType != demoServiceType) {
+        if (!currentServiceType.equals(demoServiceType)) {
             fail(""invalid service type for current activity"");
         }
 ",2013-01-17T08:21:31Z,76
"@@ -21,6 +21,7 @@
 package com.arjuna.ats.jbossatx.jts;
 
 import com.arjuna.ats.internal.jts.ORBManager;
+import com.arjuna.ats.internal.jts.orbspecific.jacorb.recoverycoordinators.JacOrbRCServiceInit;
 import com.arjuna.orbportability.ORB;
 import com.arjuna.orbportability.OA;
 import com.arjuna.ats.jbossatx.logging.jbossatxLogger;
@@ -37,6 +38,8 @@ public RecoveryManagerService(org.omg.CORBA.ORB theCorbaORB) throws Exception
     {
         jbossatxLogger.i18NLogger.info_jts_RecoveryManagerService_init();
 
+        JacOrbRCServiceInit.waitForRunningORBRunner();
+
         /** Create an ORB portability wrapper around the CORBA ORB services orb **/
         ORB orb = ORB.getInstance(""jboss-atx"");
 ",2013-09-30T08:59:47Z,77
"@@ -33,6 +33,7 @@
 
 import com.arjuna.ats.jts.logging.jtsLogger;
 import com.arjuna.orbportability.ORB;
+import com.arjuna.orbportability.ORBShutdownListener;
 import com.arjuna.orbportability.RootOA;
 
 /**
@@ -69,6 +70,14 @@ public static final boolean setORB (com.arjuna.orbportability.ORB theOrb)
         {
             _theOrb = theOrb;
 
+            theOrb.setORBShutdownListener(new ORBShutdownListener() {
+
+                @Override
+                public void orbShutdown() {
+                    ORBManager.reset();
+                }
+            });
+
             return true;
         }
 ",2013-09-30T08:59:47Z,78
"@@ -168,6 +168,7 @@ private static void initORBandOA() throws InvalidName
 
             jtsLogger.i18NLogger.info_orbspecific_jacorb_recoverycoordinators_JacOrbRCServiceInit_6a();
         }
+        ORBManager.getPOA().addPreShutdown(new JacOrbRCShutdown());
     }
 
     /**
@@ -225,7 +226,7 @@ public  boolean startRCservice ()
                 _oa.rootPoa().the_POAManager().activate();
 
                 //_oa.run();
-                ORBRunner _runOA = new ORBRunner();
+                _runOA = new ORBRunner();
 
                 return true;
             } catch (Exception ex) {
@@ -255,4 +256,27 @@ public static String type ()
 
     static protected String uid4Recovery = ""0:ffff52e38d0c:c91:4140398c:0"";
 
+    private static Object orbRunnerLock = new Object();
+    private static ORBRunner _runOA;
+
+    public static void waitForRunningORBRunner() {
+        synchronized (orbRunnerLock) {
+            if (_runOA != null) {
+                try {
+                    orbRunnerLock.wait();
+                } catch (InterruptedException e) {
+                    // TODO Auto-generated catch block
+                    e.printStackTrace();
+                }
+            }
+        }
+    }
+
+    public static void orbRunnerCompleted() {
+        synchronized (orbRunnerLock) {
+            _runOA = null;
+            orbRunnerLock.notify();
+        }
+    }
+
 }
\ No newline at end of file",2013-09-30T08:59:47Z,79
"@@ -32,6 +32,8 @@
 
 package com.arjuna.ats.internal.jts.orbspecific.jacorb.recoverycoordinators;
 
+import com.arjuna.ats.internal.jts.ORBManager;
+
 public class ORBRunner extends Thread 
 {
     
@@ -64,6 +66,7 @@ public void run()
 	catch (Exception ex)
 	{
 	}
+	JacOrbRCServiceInit.orbRunnerCompleted();
     }
     
 }",2013-09-30T08:59:47Z,80
"@@ -317,6 +317,10 @@ public synchronized void shutdown (boolean waitForCompletion)
 
             // _postORBShutdown.clear();
         }
+    _orbMap.remove(_orbName);
+    if (_orbShutdownListener != null) {
+        _orbShutdownListener.orbShutdown();
+    }
     }
 
     /**
@@ -493,6 +497,10 @@ String getName ()
         return (_orbName);
     }
 
+public void setORBShutdownListener(ORBShutdownListener orbShutdownListener) {
+	_orbShutdownListener = orbShutdownListener;
+}
+
     com.arjuna.orbportability.orb.core.ORB _orb = new com.arjuna.orbportability.orb.core.ORB();
 
     private Hashtable _preORBShutdown = new Hashtable();
@@ -505,7 +513,9 @@ String getName ()
 
     private String _orbName = null;
 
-    private static HashMap _orbMap = new HashMap();
+private ORBShutdownListener _orbShutdownListener;
+
+private volatile static HashMap	 _orbMap = new HashMap();
 
     static final String ORB_INITIALISER_NS = ""com.arjuna.orbportability.orb"";
 ",2013-09-30T08:59:47Z,81
"@@ -0,0 +1,5 @@
+package com.arjuna.orbportability;
+
+public interface ORBShutdownListener {
+	public void orbShutdown();
+}",2013-09-30T08:59:47Z,82
"@@ -109,6 +109,8 @@
                 <source>
                   <includes>
                     <include>TestModule.idl</include>
+                    <include>test.idl</include>
+                    <include>orbtests.idl</include>
                   </includes>
                   <compatible>false</compatible>
                   <packagePrefixes>
@@ -120,6 +122,10 @@
                       <type>CosTransactions</type>
                       <prefix>org.omg</prefix>
                     </packagePrefix>
+                    <packagePrefix>
+                      <type>orbtests</type>
+                      <prefix>com.hp.mwtests.orbportability.orbspecific</prefix>
+                    </packagePrefix>
                   </packagePrefixes>
                   <additionalArguments>
                     <additionalArgument>-i</additionalArgument>",2012-08-05T12:51:33Z,83
"@@ -77,8 +77,6 @@
                     <additionalArgument>XA:org.omg.XA</additionalArgument>
                     <additionalArgument>-i2jpackage</additionalArgument>
                     <additionalArgument>ArjunaOTS:com.arjuna.ArjunaOTS</additionalArgument>
-                    <additionalArgument>-generate_helper</additionalArgument>
-                    <additionalArgument>portable</additionalArgument>
                   </additionalArguments>
                 </source>
               </sources>
@@ -101,12 +99,16 @@
                 <source>
                   <includes>
                     <include>TestModule.idl</include>
+                    <include>test.idl</include>
+                    <include>orbtests.idl</include>
                   </includes>
                   <additionalArguments>
                     <additionalArgument>-DORB_OTS_SUPPORT=1</additionalArgument>
                     <additionalArgument>-DORB_CURRENT_SUPPORT=1</additionalArgument>
                     <additionalArgument>-i2jpackage</additionalArgument>
                     <additionalArgument>TestModule:com.hp.mwtests.ts.jts.TestModule</additionalArgument>
+                    <additionalArgument>-i2jpackage</additionalArgument>
+                    <additionalArgument>orbtests:com.hp.mwtests.orbportability.orbspecific.orbtests</additionalArgument>
                   </additionalArguments>
                 </source>
               </sources>",2012-08-05T12:51:33Z,84
"@@ -31,6 +31,7 @@
 
 #include <CosTransactions.idl>
 
+// used by the jts module tests
 module TestModule
 {
     // grid.idl",2012-08-05T12:51:33Z,85
"@@ -22,6 +22,7 @@
 #pragma prefix ""orbspecific.orbportability.mwtests.hp.com""
 #endif
 
+// used by the orbportability module tests
 module orbtests
 {
 	interface SimpleObject",2012-08-05T12:51:33Z,86
"@@ -20,6 +20,7 @@
  */
 #include <CosTransactions.idl>
 
+// used by the jtax module tests
 module Example
 {
     interface test : CosTransactions::TransactionalObject",2012-08-05T12:51:33Z,87
"@@ -50,17 +50,62 @@
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
-        <configuration>
-          <argLine>-Xss2048k</argLine>
-          <systemProperties combine.children=""append""/>
-          <excludes>
-            <exclude>**/common/**</exclude>
-            <exclude>**/ExampleXAResource.java</exclude>
-            <exclude>**/JTSTestCase.java</exclude>
-            <exclude>**/LastOnePhaseResource.java</exclude>
-            <exclude>**/implicit/**</exclude>
-          </excludes>
-        </configuration>
+         <executions>
+            <execution>
+              <id>default-test</id>
+              <phase>test</phase>
+              <goals>
+                <goal>test</goal>
+              </goals>
+              <configuration>
+                <skip>false</skip>
+                <argLine>-Xss2048k</argLine>
+                <systemProperties combine.children=""append""/>
+                <excludes>
+                  <exclude>**/common/**</exclude>
+                  <exclude>**/ExampleXAResource.java</exclude>
+                  <exclude>**/JTSTestCase.java</exclude>
+                  <exclude>**/LastOnePhaseResource.java</exclude>
+                  <exclude>**/implicit/**</exclude>
+                </excludes>
+                <classpathDependencyExcludes>
+                  <classpathDependencyExcludes>org.jboss.narayana.jts:idlj-idl</classpathDependencyExcludes>
+                  <classpathDependencyExcludes>org.jboss.narayana.jts:idlj-idl:test-jar</classpathDependencyExcludes>
+                </classpathDependencyExcludes>
+              </configuration>
+            </execution>
+            <execution>
+              <id>surefire-idlj</id>
+              <phase>test</phase>
+              <goals>
+                <goal>test</goal>
+              </goals>
+              <configuration>
+                <skip>false</skip>
+                <argLine>-Xss2048k</argLine>
+                <systemProperties combine.children=""append""/>
+                <excludes>
+                  <exclude>**/common/**</exclude>
+                  <exclude>**/ExampleXAResource.java</exclude>
+                  <exclude>**/JTSTestCase.java</exclude>
+                  <exclude>**/LastOnePhaseResource.java</exclude>
+                  <exclude>**/implicit/**</exclude>
+                </excludes>
+                <reportsDirectory>${project.build.directory}/idlj-surefire-reports</reportsDirectory>
+                  <classpathDependencyExcludes>
+                    <classpathDependencyExcludes>org.jboss.narayana.jts:jacorb-idl</classpathDependencyExcludes>
+                    <classpathDependencyExcludes>org.jboss.narayana.jts:jacorb-idl:test-jar</classpathDependencyExcludes>
+                  </classpathDependencyExcludes>
+
+                  <systemPropertyVariables combine.children=""append"">
+                    <OrbPortabilityEnvironmentBean.orbImpleClassName>com.arjuna.orbportability.internal.orbspecific.javaidl.orb.implementations.javaidl_1_4</OrbPortabilityEnvironmentBean.orbImpleClassName>
+                    <OrbPortabilityEnvironmentBean.poaImpleClassName>com.arjuna.orbportability.internal.orbspecific.javaidl.oa.implementations.javaidl_1_4</OrbPortabilityEnvironmentBean.poaImpleClassName>
+                    <OrbPortabilityEnvironmentBean.orbDataClassName>com.arjuna.orbportability.internal.orbspecific.versions.javaidl_1_4</OrbPortabilityEnvironmentBean.orbDataClassName>
+                  </systemPropertyVariables>
+
+              </configuration>
+            </execution>
+          </executions>
       </plugin>
     </plugins>
   </build>
@@ -73,6 +118,28 @@
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
     </dependency>
+    <!-- pull in IDL stubs for each supported ORB (JacORB and Sun) -->
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>jacorb-idl</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>jacorb-idl</artifactId>
+      <type>test-jar</type>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>idlj-idl</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>idlj-idl</artifactId>
+      <type>test-jar</type>
+      <scope>test</scope>
+    </dependency>
+
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
@@ -133,129 +200,4 @@
             <scope>test</scope>
         </dependency>
   </dependencies>
-
-  <profiles>
-    <profile>
-      <id>jacorb</id>
-      <activation>
-        <activeByDefault>true</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.codehaus.mojo</groupId>
-            <artifactId>idlj-maven-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.jacorb</groupId>
-                <artifactId>jacorb-idl-compiler</artifactId>
-                <version>2.2.3</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <goals>
-                  <goal>generate-test</goal>
-                </goals>
-              </execution>
-            </executions>
-            <configuration>
-              <compiler>jacorb</compiler>
-              <sourceDirectory>tests/idl/</sourceDirectory>
-              <sources>
-                <source>
-                  <includes>
-                    <include>test.idl</include>
-                  </includes>
-                  <additionalArguments>
-                    <additionalArgument>-DORB_OTS_SUPPORT=1</additionalArgument>
-                    <additionalArgument>-DORB_CURRENT_SUPPORT=1</additionalArgument>
-                  </additionalArguments>
-                </source>
-              </sources>
-              <includeDirs>
-                <includeDir>../jts/idl/omg</includeDir>
-                <includeDir>../jts/idl/arjuna</includeDir>
-                <includeDir>../jts/../jacorb/idl/omg</includeDir>
-              </includeDirs>
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-    <profile>
-      <id>idlj</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.codehaus.mojo</groupId>
-            <artifactId>idlj-maven-plugin</artifactId>
-            <executions>
-              <execution>
-                <goals>
-                  <goal>generate-test</goal>
-                </goals>
-              </execution>
-            </executions>
-            <configuration>
-              <compiler>idlj</compiler>
-              <sourceDirectory>tests/idl/</sourceDirectory>
-              <sources>
-                <source>
-                  <includes>
-                    <include>test.idl</include>
-                  </includes>
-                  <compatible>false</compatible>
-<!-- the defines option is broken in 1.1) hence the use of -d option below
-                  <defines>
-                      <define>
-                        <symbol>ORB_OTS_SUPPORT</symbol>
-                        <value>1</value>
-                      </define>
-                      <define>
-                        <symbol>ORB_CURRENT_SUPPORT</symbol>
-                        <value>1</value>
-                      </define>
-                  </defines>
--->
-
-                  <packagePrefixes>
-                      <packagePrefix>
-                        <type>CosTransactions</type>
-                        <prefix>org.omg</prefix>
-                      </packagePrefix>
-                  </packagePrefixes>
-
-                  <additionalArguments>
-                    <additionalArgument>-i</additionalArgument>
-                    <additionalArgument>${basedir}/../jts/idl/omg</additionalArgument>
-                    <additionalArgument>-i</additionalArgument>
-                    <additionalArgument>${basedir}/../jts/idl/arjuna</additionalArgument>
-                    <additionalArgument>-i</additionalArgument>
-                    <additionalArgument>${env.JAVA_HOME}/lib</additionalArgument>
-                    <additionalArgument>-d</additionalArgument>
-                    <additionalArgument>ORB_OTS_SUPPORT=1</additionalArgument>
-                    <additionalArgument>-d</additionalArgument>
-                    <additionalArgument>ORB_CURRENT_SUPPORT=1</additionalArgument>
-                  </additionalArguments>
-                </source>
-              </sources>
-<!-- the includeDirs option is broken in 1.1 (and in 1.2-SNAPSHOT) hence the use of -i above
-              <includeDirs>
-                <includeDir>idl</includeDir>
-                <includeDir>../jts/idl/omg</includeDir>
-                <includeDir>../jts/idl/arjuna</includeDir>
-                <includeDir>${env.JAVA_HOME}/lib</includeDir>
-              </includeDirs>
--->
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
-
 </project>",2012-08-05T12:51:33Z,88
"@@ -63,120 +63,6 @@
         plugin twice, once against the JacORB stubs and another run using the Sun ORB stubs
         and the surefire plugin puts the classes dir on the classpath
         -->
-
-      <!-- unpack the IDL stubs to alternate classes directories -->
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-dependency-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>unpack-jacorb</id>
-            <phase>initialize</phase>
-            <goals>
-              <goal>unpack</goal>
-            </goals>
-            <configuration>
-              <artifactItems>
-                <artifactItem>
-                  <groupId>org.jboss.narayana.jts</groupId>
-                  <artifactId>jacorb-idl</artifactId>
-                  <version>${project.version}</version>
-                  <type>jar</type>
-                  <overWrite>false</overWrite>
-                  <outputDirectory>${classesDirectoryWithJacorb}</outputDirectory>
-                  <includes>**/*.class,**/*.xml</includes>
-                  <excludes>**/META-INF/**</excludes>
-                </artifactItem>
-              </artifactItems>
-            </configuration>
-          </execution>
-          <execution>
-            <id>unpack-idlj</id>
-            <phase>initialize</phase>
-            <goals>
-              <goal>unpack</goal>
-            </goals>
-            <configuration>
-              <artifactItems>
-                <artifactItem>
-                  <groupId>org.jboss.narayana.jts</groupId>
-                  <artifactId>idlj-idl</artifactId>
-                  <version>${project.version}</version>
-                  <type>jar</type>
-                  <overWrite>false</overWrite>
-                  <outputDirectory>${classesDirectoryWithIdlj}</outputDirectory>
-                  <includes>**/*.class,**/*.xml</includes>
-                  <excludes>**/META-INF/**</excludes>
-                </artifactItem>
-              </artifactItems>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-      <!-- copy classes and resources to the alternate classes directories -->
-      <plugin>
-        <artifactId>maven-antrun-plugin</artifactId>
-        <executions>
-          <execution>
-            <id>copy-jacorb</id>
-            <phase>prepare-package</phase>
-            <configuration>
-              <tasks>
-                <copy todir=""${classesDirectoryWithJacorb}"">
-                  <fileset dir=""${project.build.outputDirectory}""/>
-                </copy>
-              </tasks>
-            </configuration>
-            <goals>
-              <goal>run</goal>
-            </goals>
-          </execution>
-          <execution>
-            <id>copy-idlj</id>
-            <phase>prepare-package</phase>
-            <configuration>
-              <tasks>
-                <copy todir=""${classesDirectoryWithIdlj}"">
-                  <fileset dir=""${project.build.outputDirectory}""/>
-                </copy>
-              </tasks>
-            </configuration>
-            <goals>
-              <goal>run</goal>
-            </goals>
-          </execution>
-        </executions>
-      </plugin>
-
-      <!-- assemble two jars one containing jts + JacORB stubs the other containing jts + Sun ORB stubs
-           NOTE: To change which stubs get packaged with the default jar simply swap usages of
-           classesDirectoryWithJacorb and classesDirectoryWithIdlj.
-        -->
-      <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-jar-plugin</artifactId>
-        <configuration>
-          <!-- Specify which classes to include in the default jar artifact -->
-          <classesDirectory>${classesDirectoryWithJacorb}</classesDirectory>
-        </configuration>
-
-        <!-- define an execution for assembling the alternate jar artifact -->
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>jar</goal>
-            </goals>
-            <configuration>
-              <!-- add a classifier to differentiate the jar from the default jar -->
-              <classifier>idlj</classifier>
-              <!-- Specify which classes to include in the alternate jar artifact -->
-              <classesDirectory>${classesDirectoryWithIdlj}</classesDirectory>
-            </configuration>
-          </execution>
-        </executions>
-      </plugin>
-
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>",2012-08-05T12:51:33Z,70
"@@ -149,7 +149,8 @@
                   <include>org.jboss.narayana.jta:jta</include>
                   <include>org.jboss.narayana.jta:jdbc</include>
                   <include>org.jboss.narayana.jts:orbportability</include>
-                  <include>org.jboss.narayana.jts:jts:idlj</include>
+                  <include>org.jboss.narayana.jts:jts</include>
+                  <include>org.jboss.narayana.jts:idlj-idl</include>
                   <include>org.jboss.narayana.jts:jtax</include>
                 </includes>
               </artifactSet>",2012-08-05T12:51:33Z,29
"@@ -150,6 +150,7 @@
                   <include>org.jboss.narayana.jta:jdbc</include>
                   <include>org.jboss.narayana.jts:orbportability</include>
                   <include>org.jboss.narayana.jts:jts</include>
+                  <include>org.jboss.narayana.jts:jacorb-idl</include>
                   <include>org.jboss.narayana.jts:jtax</include>
                 </includes>
               </artifactSet>",2012-08-05T12:51:33Z,89
"@@ -56,23 +56,76 @@
       <plugin>
         <groupId>org.apache.maven.plugins</groupId>
         <artifactId>maven-surefire-plugin</artifactId>
-        <configuration>
-          <systemProperties combine.children=""append""/>
-          <excludes>
-            <!-- exclude tests which we don't want to run -->
-            <exclude>**/common/**</exclude>
-            <exclude>**/initialisation/postinit/**</exclude>
-            <exclude>**/initialisation/postset/**</exclude>
-            <exclude>**/initialisation/preinit/**</exclude>
-            <exclude>**/initialisation/TestAttributeCallback.java</exclude>
-            <exclude>**/SimpleObjectImpl.java</exclude>
-            <exclude>**/TestAttributeCallback.java</exclude>
-            <exclude>**/PrePostTestCallback.java</exclude>
-            <!-- these ones need fixing -->
-            <exclude>**/PropertyInitTest.java</exclude>
-            <exclude>**/PropertyInitTest3.java</exclude>
-          </excludes>
-        </configuration>
+         <executions>
+            <execution>
+              <!-- jacorb is the default (determined by what we exclude from the classpath) -->
+              <id>default-test</id>
+              <phase>test</phase>
+              <goals>
+                <goal>test</goal>
+              </goals>
+              <configuration>
+                <skip>false</skip>
+                <systemProperties combine.children=""append""/>
+                <excludes>
+                  <!-- exclude tests which we don't want to run -->
+                  <exclude>**/common/**</exclude>
+                  <exclude>**/initialisation/postinit/**</exclude>
+                  <exclude>**/initialisation/postset/**</exclude>
+                  <exclude>**/initialisation/preinit/**</exclude>
+                  <exclude>**/initialisation/TestAttributeCallback.java</exclude>
+                  <exclude>**/SimpleObjectImpl.java</exclude>
+                  <exclude>**/TestAttributeCallback.java</exclude>
+                  <exclude>**/PrePostTestCallback.java</exclude>
+                  <!-- these ones need fixing -->
+                  <exclude>**/PropertyInitTest.java</exclude>
+                  <exclude>**/PropertyInitTest3.java</exclude>
+                </excludes>
+                <classpathDependencyExcludes>
+                  <classpathDependencyExcludes>org.jboss.narayana.jts:idlj-idl</classpathDependencyExcludes>
+                  <classpathDependencyExcludes>org.jboss.narayana.jts:idlj-idl:test-jar</classpathDependencyExcludes>
+                </classpathDependencyExcludes>
+              </configuration>
+            </execution>
+            <execution>
+              <!-- test against the Sun ORB stubs (determined by what we exclude from the classpath) -->
+              <id>surefire-idlj</id>
+              <phase>test</phase>
+              <goals>
+                <goal>test</goal>
+              </goals>
+              <configuration>
+                <skip>false</skip>
+                <systemProperties combine.children=""append""/>
+                <excludes>
+                  <!-- exclude tests which we don't want to run -->
+                  <exclude>**/common/**</exclude>
+                  <exclude>**/initialisation/postinit/**</exclude>
+                  <exclude>**/initialisation/postset/**</exclude>
+                  <exclude>**/initialisation/preinit/**</exclude>
+                  <exclude>**/initialisation/TestAttributeCallback.java</exclude>
+                  <exclude>**/SimpleObjectImpl.java</exclude>
+                  <exclude>**/TestAttributeCallback.java</exclude>
+                  <exclude>**/PrePostTestCallback.java</exclude>
+                  <!-- these ones need fixing -->
+                  <exclude>**/PropertyInitTest.java</exclude>
+                  <exclude>**/PropertyInitTest3.java</exclude>
+                </excludes>
+                <reportsDirectory>${project.build.directory}/idlj-surefire-reports</reportsDirectory>
+                  <classpathDependencyExcludes>
+                    <classpathDependencyExcludes>org.jboss.narayana.jts:jacorb-idl</classpathDependencyExcludes>
+                    <classpathDependencyExcludes>org.jboss.narayana.jts:jacorb-idl:test-jar</classpathDependencyExcludes>
+                  </classpathDependencyExcludes>
+
+                  <systemPropertyVariables combine.children=""append"">
+                    <OrbPortabilityEnvironmentBean.orbImpleClassName>com.arjuna.orbportability.internal.orbspecific.javaidl.orb.implementations.javaidl_1_4</OrbPortabilityEnvironmentBean.orbImpleClassName>
+                    <OrbPortabilityEnvironmentBean.poaImpleClassName>com.arjuna.orbportability.internal.orbspecific.javaidl.oa.implementations.javaidl_1_4</OrbPortabilityEnvironmentBean.poaImpleClassName>
+                    <OrbPortabilityEnvironmentBean.orbDataClassName>com.arjuna.orbportability.internal.orbspecific.versions.javaidl_1_4</OrbPortabilityEnvironmentBean.orbDataClassName>
+                  </systemPropertyVariables>
+
+              </configuration>
+            </execution>
+          </executions>
       </plugin>
     </plugins>
   </build>
@@ -90,6 +143,28 @@
       <artifactId>jacorb</artifactId>
       <scope>provided</scope>
     </dependency>
+    <!-- pull in IDL stubs for each supported ORB (JacORB and Sun) -->
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>jacorb-idl</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>jacorb-idl</artifactId>
+      <type>test-jar</type>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>idlj-idl</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.narayana.jts</groupId>
+      <artifactId>idlj-idl</artifactId>
+      <type>test-jar</type>
+      <scope>test</scope>
+    </dependency>
+
     <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
@@ -133,102 +208,4 @@
             <scope>test</scope>
         </dependency>
   </dependencies>
-
-  <profiles>
-    <profile>
-      <id>jacorb</id>
-      <activation>
-        <activeByDefault>true</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.codehaus.mojo</groupId>
-            <artifactId>idlj-maven-plugin</artifactId>
-            <dependencies>
-              <dependency>
-                <groupId>org.jacorb</groupId>
-                <artifactId>jacorb-idl-compiler</artifactId>
-                <version>2.2.3</version>
-              </dependency>
-            </dependencies>
-            <executions>
-              <execution>
-                <goals>
-                  <goal>generate-test</goal>
-                </goals>
-                <configuration>
-                  <sourceDirectory>tests/idl/</sourceDirectory>
-                </configuration>
-              </execution>
-                </executions>
-            <configuration>
-              <compiler>jacorb</compiler>
-              <sources>
-                <source>
-                  <includes>
-                    <include>orbtests.idl</include>
-                  </includes>
-                  <additionalArguments>
-                    <additionalArgument>-DORB_OTS_SUPPORT=1</additionalArgument>
-                    <additionalArgument>-DORB_CURRENT_SUPPORT=1</additionalArgument>
-                    <additionalArgument>-i2jpackage</additionalArgument>
-                    <additionalArgument>orbtests:com.hp.mwtests.orbportability.orbspecific.orbtests</additionalArgument>
-                  </additionalArguments>
-                </source>
-              </sources>
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-    <profile>
-      <id>idlj</id>
-      <activation>
-        <activeByDefault>false</activeByDefault>
-      </activation>
-      <build>
-        <plugins>
-          <plugin>
-            <groupId>org.codehaus.mojo</groupId>
-            <artifactId>idlj-maven-plugin</artifactId>
-            <executions>
-              <execution>
-                <goals>
-                  <goal>generate-test</goal>
-                </goals>
-                <configuration>
-                  <sourceDirectory>tests/idl/</sourceDirectory>
-                </configuration>
-              </execution>
-                </executions>
-            <configuration>
-              <compiler>idlj</compiler>
-              <sources>
-                <source>
-                  <includes>
-                    <include>orbtests.idl</include>
-                  </includes>
-                  <packagePrefixes>
-                      <packagePrefix>
-                        <type>orbtests</type>
-                        <prefix>com.hp.mwtests.orbportability.orbspecific</prefix>
-                      </packagePrefix>
-                  </packagePrefixes>
-                  <compatible>false</compatible>
-                  <additionalArguments>
-                    <additionalArgument>-d</additionalArgument>
-                    <additionalArgument>ORB_OTS_SUPPORT=1</additionalArgument>
-                    <additionalArgument>-d</additionalArgument>
-                    <additionalArgument>ORB_CURRENT_SUPPORT=1</additionalArgument>
-                  </additionalArguments>
-                </source>
-              </sources>
-            </configuration>
-          </plugin>
-        </plugins>
-      </build>
-    </profile>
-  </profiles>
- 
 </project>",2012-08-05T12:51:33Z,90
"@@ -127,20 +127,19 @@
 			</outputFileNameMapping>
 			<unpack>false</unpack>
 		</dependencySet>
-<!-- XXX-->
-	<dependencySet>
-		<useProjectArtifact>false</useProjectArtifact>
-		<includes>
-			<include>org.jboss.narayana.jts:narayana-jts-idlj</include>
-		</includes>
-		<excludes>
-			<exclude>*:javadoc</exclude>
-		</excludes>
-		<outputDirectory>lib/jts</outputDirectory>
-		<outputFileNameMapping>${artifact.artifactId}.${artifact.extension}
-		</outputFileNameMapping>
-		<unpack>false</unpack>
-	</dependencySet>
+		<dependencySet>
+			<useProjectArtifact>false</useProjectArtifact>
+			<includes>
+				<include>org.jboss.narayana.jts:narayana-jts-idlj</include>
+			</includes>
+			<excludes>
+				<exclude>*:javadoc</exclude>
+			</excludes>
+			<outputDirectory>lib/jts</outputDirectory>
+			<outputFileNameMapping>${artifact.artifactId}.${artifact.extension}
+			</outputFileNameMapping>
+			<unpack>false</unpack>
+		</dependencySet>
 		<dependencySet>
 			<useProjectArtifact>false</useProjectArtifact>
 			<includes>",2012-08-05T12:51:33Z,91
"@@ -38,6 +38,22 @@
   <property name=""driver.url"" value=""http://www.qa.jboss.com/jdbc-drivers/""/>
   <property name=""org.jboss.jbossts.qa.server_manager_location"" location=""ext/jboss-server-manager-0.1.1.GA.jar""/>
   <property name=""org.jboss.jbossts.qa.dist.buildroot"" location=""build""/>
+
+  <target name=""which-jts-jar"">
+    <condition property=""cp-jacorb-jts"">
+        <and>
+            <equals arg1=""${isIdlj}"" arg2=""0""/>
+            <not><isset property=""init-jta""/></not>
+        </and>
+    </condition>
+    <condition property=""cp-idlj-jts"">
+        <and>
+            <equals arg1=""${isIdlj}"" arg2=""1""/>
+            <not><isset property=""init-jta""/></not>
+        </and>
+    </condition>
+  </target>
+
   <target name=""get.drivers"" depends=""clean-dbdrivers"">
     <!--
         https://docspace.corp.redhat.com/clearspace/docs/DOC-16080
@@ -102,13 +118,21 @@
     <antcall target=""init-jta""/>
     <antcall target=""init-jts""/>
   </target>
+
   <target name=""init-jta"" if=""init-jta"">
     <copy file=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/jta/narayana-jta.jar"" tofile=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/narayana-jta.jar""/>
   </target>
-  <target name=""init-jts"" unless=""init-jta"">
+
+  <target name=""init-jts"" depends=""jts.cp.jacorb,jts.cp.idlj""/>
+  <target name=""jts.cp.jacorb"" depends=""which-jts-jar"" if=""cp-jacorb-jts"">
+    <echo>copying jacorb jts</echo>
     <copy file=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/jts/narayana-jts.jar"" tofile=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/narayana-jts.jar""/>
-    <copy file=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/jts/narayana-jts-idlj.jar"" tofile=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/narayana-jts-idlj.jar""/>
   </target>
+  <target name=""jts.cp.idlj"" depends=""which-jts-jar"" if=""cp-idlj-jts"">
+    <echo>copying idlj jts</echo>
+    <copy file=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/jts/narayana-jts-idlj.jar"" tofile=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/narayana-jts.jar""/>
+  </target>
+
   <target name=""dist"" depends=""clean, init, buildtype"">
     <!-- build the test suite -->
     <ant dir=""tests"" antfile=""build-${buildtype}.xml"">",2012-08-05T12:51:33Z,92
"@@ -83,13 +83,13 @@
     <junit-tests tests=""crashrecovery12""/>
     <fail if=""failed-tests"" message=""some tests failed""/>
   </target>
-  <target name=""ci-tests"" depends=""junit-testsuite,junit-jdbc-ncl-testsuite"">
+  <target name=""ci-tests"" depends=""junit-testsuite,junit-jts-testsuite,junit-jdbc-ncl-testsuite"">
     <fail if=""failed-tests"" message=""some tests failed""/>
   </target>
   <!-- General tests.
         These tests should take a combined time of around 2h20m or so.
     -->
-  <target name=""junit"" depends=""junit-testsuite"">
+  <target name=""junit"" depends=""junit-testsuite,junit-jts-testsuite"">
     <fail if=""failed-tests"" message=""some tests failed""/>
   </target>
   <target name=""junit-testsuite"">
@@ -105,17 +105,20 @@
     <junit-tests tests=""txcore_utility""/>
     <!-- txcore_recovery : 36 tests, 4 minutes -->
     <junit-tests tests=""txcore_recovery""/>
-    <!-- currenttests01 : 36 tests, 2 minutes -->
-    <junit-tests tests=""currenttests01""/>
     <!-- jtatests01 : 6 tests, 1 minute -->
     <junit-tests tests=""jtatests01""/>
     <!-- otsserver : 20 tests, 4 minutes -->
+    <!-- defaulttimeout : 2 tests, 2 minutes -->
+    <junit-tests tests=""defaulttimeout""/>
+  </target>
+  <target name=""junit-jts-testsuite"">
+    <!-- currenttests01 : 36 tests, 2 minutes -->
+    <junit-tests tests=""currenttests01""/>
+    <!-- jtatests01 : 6 tests, 1 minute -->
     <junit-tests tests=""otsserver""/>
     <!-- jtsremote : 9 tests, 3 minutes -->
     <junit-tests tests=""jtsremote""/>
     <!-- defaulttimeout : 2 tests, 2 minutes -->
-    <junit-tests tests=""defaulttimeout""/>
-    <!-- rawresources01_1 : 6 tests, 1 minute -->
     <junit-tests tests=""rawresources01_1""/>
     <!-- rawresources01_2 : 147 tests, 7 minutes -->
     <junit-tests tests=""rawresources01_2""/>",2012-08-05T12:51:33Z,40
"@@ -47,10 +47,10 @@
 		<property name=""org.jboss.jbossts.qa.orb.name.short"" value=""jacorb""/>
 		<property name=""org.jboss.jbossts.qa.orb.name.long"" value=""JavaIDL""/>
 		<property name=""org.jboss.jbossts.qa.orb.home"" value=""${env.JAVA_HOME}/lib""/>
-		<property name=""org.jboss.jbossts.qa.orb.classpath"" value=""""/>
+		<property name=""org.jboss.jbossts.qa.orb.classpath"" value=""${org.jboss.jbossts.qa.orb.home}/lib/idl.jar;${org.jboss.jbossts.qa.orb.home}/lib/logkit-1.2.jar""/>
 		<path id=""jts.classpath"">
 			<fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/"">
-				<include name=""narayana-jts-idlj.jar""/>
+				<include name=""narayana-jts.jar""/>
 				<!--include name=""narayana-jts-${org.jboss.jbossts.qa.orb.name.short}.jar""/-->
 			</fileset>
 			<fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">",2012-08-05T12:51:33Z,93
"@@ -8,7 +8,6 @@ function build_narayana {
   echo ""Building Narayana""
   cd $WORKSPACE
   [ $NARAYANA_TESTS == 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=""-DskipTests""
-  [ $IDLJ == 1 ] && NARAYANA_ARGS=""$NARAYANA_ARGS -Pidlj""
 
   ./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" $NARAYANA_ARGS $IPV6_OPTS clean install
   [ $? = 0 ] || fatal ""narayana build failed""
@@ -116,19 +115,26 @@ function tx_bridge_tests {
 }
 
 function qa_tests {
-  echo ""QA Test Suite""
+  echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
 
+  git checkout TaskImpl.properties
   sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
   [ $? = 0 ] || fatal ""sed TaskImpl.properties failed""
 
+  # check to see if we were called with orb=xyz as the first argument
+  [ ${1%%=*} = ""orb"" ] && orb=${1##*=}
+  [ x$orb = x""idlj"" ] && IDLJ=1 || IDLJ=0
+
   # delete lines containing jacorb
   [ $IDLJ == 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
   ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
   [ $? = 0 ] || fatal ""qa build failed""
 
   [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
+  [ $IDLJ == 1 ] && target=""junit-jts-testsuite""
+
   ant -f run-tests.xml $target
   [ $? = 0 ] || fatal ""some qa tests failed""
 }
@@ -144,7 +150,6 @@ function qa_tests {
 [ $XTS_TESTS ] || XTS_TESTS=1 # XTS tests
 [ $QA_TESTS ] || QA_TESTS=1 # QA test suite
 [ $txbridge ] || txbridge=1 # bridge tests
-[ $IDLJ ] || IDLJ=0 # use the Sun orb instead of the default JacORB
 
 QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
 
@@ -169,6 +174,7 @@ export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 [ $TXF_TESTS = 1 ] && txframework_tests ""$@""
 [ $XTS_TESTS = 1 ] && xts_tests ""$@""
 [ $txbridge = 1 ] && tx_bridge_tests ""$@""
-[ $QA_TESTS = 1 ] && qa_tests ""$@""
+[ $QA_TESTS = 1 ] && qa_tests ""$@""	# run qa against the default orb
+[ $QA_TESTS = 1 ] && qa_tests ""orb=idlj"" ""$@""	# run qa against the Sun orb
 
 exit 0",2012-08-05T12:51:33Z,10
"@@ -227,5 +227,77 @@
         </dependency>
       </dependencies>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-javadoc-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>javadoc</id>
+                <phase>package</phase>
+                <goals>
+                  <goal>javadoc</goal>
+                </goals>
+                <configuration>
+                  <includeDependencySources>true</includeDependencySources>
+                  <docfilessubdirs>true</docfilessubdirs>
+                  <subpackages>com.arjuna.ats:com.arjuna.common:com.arjuna.orbportability:org.jboss.narayana:org.jboss.jbossts:com.arjuna.mw:com.arjuna.wsc:com.arjuna.wsc11:com.arjuna.wst:com.arjuna.wst11</subpackages>
+                  <!-- use this instead of excludePackageNames because of MJAVADOC-299 -->
+                  <additionalparam>
+                    -exclude com.arjuna.ats.internal -exclude com.arjuna.common.internal
+                    -exclude com.arjuna.orbportability.internal -exclude com.arjuna.ats.jbossatx
+                    -exclude com.arjuna.mw.wstx -exclude org.jboss.jbossts.txbridge
+                    -exclude org.jboss.jbossts.xts -exclude org.jboss.jbossts.xts11
+                  </additionalparam>
+                  <groups>
+                    <group>
+                      <title>Core</title>
+                      <packages>com.arjuna.ats.arjuna*:com.arjuna.ats.jdbc*:com.arjuna.ats.txoj*:com.arjuna.common*</packages>
+                    </group>
+                    <group>
+                      <title>JTA</title>
+                      <packages>com.arjuna.ats.jta*</packages>
+                    </group>
+                    <group>
+                      <title>JTS</title>
+                      <packages>com.arjuna.ats.jts*:com.arjuna.orbportability*</packages>
+                    </group>
+                    <group>
+                      <title>XTS</title>
+                      <packages>com.arjuna.mw*:com.arjuna.wsc*:com.arjuna.wsc11*:com.arjuna.wst*:com.arjuna.wst11*:org.jboss.jbossts</packages>
+                    </group>
+                    <group>
+                      <title>RTS</title>
+                      <packages>org.jboss.jbossts.star*</packages>
+                    </group>
+                  </groups>
+                </configuration>
+              </execution>
+            </executions>
+          </plugin>
+          <plugin>
+            <artifactId>maven-antrun-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>pack-javadoc</id>
+                <phase>package</phase>
+                <configuration>
+                  <target>
+                    <jar destfile=""${project.build.directory}/${project.artifactId}-${project.version}-javadoc.jar""
+                        basedir=""${project.build.directory}/site/apidocs/"" />
+                  </target>
+                </configuration>
+                <goals>
+                  <goal>run</goal>
+                </goals>
+              </execution>
+            </executions>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2014-11-19T14:14:28Z,56
"@@ -28,20 +28,33 @@
 import javax.transaction.SystemException;
 import javax.transaction.Transaction;
 import javax.transaction.TransactionManager;
+import javax.transaction.Status;
 
+import org.jboss.tm.listener.TransactionTypeNotSupported;
 import org.jboss.tm.TransactionLocal;
 import org.jboss.tm.TransactionLocalDelegate;
 import org.jboss.tm.TransactionTimeoutConfiguration;
 
+import org.jboss.tm.listener.TransactionEvent;
+import org.jboss.tm.listener.TransactionListener;
+import org.jboss.tm.listener.TransactionListenerRegistry;
+import org.jboss.tm.listener.EventType;
+
+import java.util.EnumSet;
 import java.util.Map;
 import java.util.HashMap;
+import java.util.Collection;
+
+import java.util.concurrent.ConcurrentLinkedQueue;
 
 /**
  * Delegate for JBoss TransactionManager/TransactionLocalDelegate.
  * @author kevin
  */
-public abstract class BaseTransactionManagerDelegate implements TransactionManager, TransactionLocalDelegate, TransactionTimeoutConfiguration
+public abstract class BaseTransactionManagerDelegate implements TransactionManager, TransactionLocalDelegate, TransactionTimeoutConfiguration, TransactionListenerRegistry
 {
+    private static final String LISTENER_MAP_KEY = ""__TX_LISTENERS"";
+
     /**
      * Delegate transaction manager.
      */
@@ -72,6 +85,7 @@ public void commit()
         throws RollbackException, HeuristicMixedException, HeuristicRollbackException,
         SecurityException, IllegalStateException, SystemException
     {
+        notifyAssociationListeners(getTransaction(), EnumSet.of(EventType.DISASSOCIATING));
         transactionManager.commit() ;
     }
 
@@ -103,6 +117,7 @@ public void resume(final Transaction transaction)
         throws InvalidTransactionException, IllegalStateException, SystemException
     {
         transactionManager.resume(transaction) ;
+        notifyAssociationListeners(transaction, EnumSet.of(EventType.ASSOCIATED));
     }
 
     /**
@@ -111,6 +126,7 @@ public void resume(final Transaction transaction)
     public void rollback()
         throws IllegalStateException, SecurityException, SystemException
     {
+        notifyAssociationListeners(getTransaction(), EnumSet.of(EventType.DISASSOCIATING));
         transactionManager.rollback() ;
     }
 
@@ -133,14 +149,85 @@ public void setTransactionTimeout(final int timeout)
         transactionManager.setTransactionTimeout(timeout) ;
     }
 
+    /**
+     * register a listener for transaction related events that effect the current thread
+     * @param listener the callback for event notifications
+     */
+    @Override
+    public void addListener (Transaction transaction, TransactionListener listener, EnumSet<EventType> types) throws TransactionTypeNotSupported
+    {
+        if (transaction == null)
+            throw new NullPointerException(); // we could interpret this as meaning register for all transactions
+
+        if (!(transaction instanceof com.arjuna.ats.jta.transaction.Transaction))
+            throw new TransactionTypeNotSupported(""Unsupported transaction type"");
+
+        Collection<TransactionListener> listeners = getListeners(transaction, true);
+
+        if (listeners != null) {
+            listeners.add(listener);
+
+            // if transaction is already associated with the current thread notify this listener
+            try {
+                if (transaction.equals(getTransaction()) && types.contains(EventType.ASSOCIATED))
+                    listener.onEvent(new TransactionEvent(transaction, EnumSet.of(EventType.ASSOCIATED)));
+            } catch (SystemException e) {
+                // no transaction associated so do not trigger the ASSOCIATED callback
+            }
+        }
+    }
+
     /**
      * Suspend the current transaction.
      * @return The suspended transaction.
      */
     public Transaction suspend()
         throws SystemException
     {
-        return transactionManager.suspend() ;
+        if (getStatus() != Status.STATUS_NO_TRANSACTION)
+            notifyAssociationListeners(getTransaction(), EnumSet.of(EventType.DISASSOCIATING));
+
+        return transactionManager.suspend();
+    }
+
+    // TransactionListener implementation methods.
+    // return all the event listeners associated with this thread
+    private Collection<TransactionListener> getListeners(Transaction transaction, boolean create)
+    {
+        com.arjuna.ats.jta.transaction.Transaction txn = (com.arjuna.ats.jta.transaction.Transaction) transaction;
+        Object resource;
+
+        // protect against two concurrent listener registrations both trying to create the initial resource entry
+        synchronized (transaction) {
+            resource = txn.getTxLocalResource(LISTENER_MAP_KEY);
+
+            if (resource == null && create) {
+                Collection<TransactionListener> listeners = new ConcurrentLinkedQueue<>();
+
+                txn.putTxLocalResource(LISTENER_MAP_KEY, listeners);
+
+                return listeners;
+            }
+        }
+
+        if (resource != null && !(resource instanceof ConcurrentLinkedQueue)) {
+            // another container subsystem has inadvertently used our key
+            throw new IllegalStateException(""Invalid transaction local resource associated with key"");
+        }
+
+        return (Collection<TransactionListener>) resource;
+    }
+
+    // notify any listeners for this transaction that there has been an event
+    private void notifyAssociationListeners(Transaction transaction, EnumSet<EventType> reasons)
+    {
+        Collection<TransactionListener> listeners = getListeners(transaction, false);
+        TransactionEvent event = new TransactionEvent(transaction, reasons);
+
+        if (listeners != null) {
+            for (TransactionListener s : listeners)
+                s.onEvent(event);
+        }
     }
 
     /////////////////////////",2015-04-20T15:30:26Z,94
"@@ -0,0 +1,127 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2015, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package com.arjuna.ats;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
+import javax.transaction.HeuristicMixedException;
+import javax.transaction.HeuristicRollbackException;
+import javax.transaction.InvalidTransactionException;
+import javax.transaction.NotSupportedException;
+import javax.transaction.RollbackException;
+import javax.transaction.Status;
+import javax.transaction.SystemException;
+import javax.transaction.Transaction;
+import javax.transaction.TransactionManager;
+import javax.transaction.TransactionSynchronizationRegistry;
+
+import org.jboss.tm.listener.EventType;
+import org.jboss.tm.listener.TransactionListenerRegistry;
+import org.jboss.tm.listener.TransactionTypeNotSupported;
+import org.jboss.tm.usertx.client.ServerVMClientUserTransaction;
+import org.junit.Test;
+
+import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionSynchronizationRegistryImple;
+import com.arjuna.ats.jbossatx.jta.TransactionManagerDelegate;
+
+import java.util.EnumSet;
+
+public class TimeoutTest {
+	private enum CompletionType {
+		CMT,
+		BMTCOMMIT,
+		BMTROLLBACK,
+		CMTSUSPEND
+	};
+
+	@Test
+	public void test() throws SystemException, NotSupportedException, RollbackException, TransactionTypeNotSupported, InterruptedException, InvalidTransactionException, HeuristicRollbackException, HeuristicMixedException {
+
+		TransactionManager tm = new TransactionManagerDelegate();
+		ServerVMClientUserTransaction userTransaction = new ServerVMClientUserTransaction(tm);
+
+		userTransaction.setTransactionTimeout(1);
+
+		for (CompletionType completionType : CompletionType.values()) {
+			TransactionListenerRegistry listenerRegistration = (TransactionListenerRegistry) tm;
+
+			userTransaction.begin();
+
+			// The TSR for interposed synchronizations
+			final TransactionSynchronizationRegistry tsr = new TransactionSynchronizationRegistryImple();
+			final TxListener listener = new TxListener(listenerRegistration);
+
+			if (completionType != CompletionType.CMTSUSPEND) {
+				tsr.registerInterposedSynchronization(listener);
+			} else {
+				tm.getTransaction().registerSynchronization(listener);
+			}
+
+			listenerRegistration.addListener(tm.getTransaction(), listener, EnumSet.allOf(EventType.class));
+
+			if (completionType == CompletionType.CMTSUSPEND) {
+				Transaction suspended = tm.suspend();
+				Thread.sleep(2000);
+				assertTrue(listener.shouldDisassoc());
+				tm.resume(suspended);
+			} else {
+				Thread.sleep(2000);
+				assertFalse(listener.shouldDisassoc());
+			}
+
+			assertTrue(listener.singleCallAC());
+
+			assertTrue(Status.STATUS_ROLLEDBACK == userTransaction.getStatus());
+
+			// Apps need to call rollback anyway to clear the association from
+			// the
+			// thread
+			// https://community.jboss.org/thread/92489
+			if (completionType == CompletionType.BMTCOMMIT) {
+				try {
+					userTransaction.commit();
+					fail(""Should not have been able to commit"");
+				} catch (RollbackException e) {
+				}
+			} else if (completionType == CompletionType.BMTROLLBACK) {
+				userTransaction.rollback();
+			} else if (completionType == CompletionType.CMT) {
+				// This is possible in CMT mode
+				// If they did check the status, it is still expected that a CMT
+				// calls suspend at least when a tx is marked as completed to
+				// clear
+				// it from the thread
+				tm.suspend();
+			}
+
+			assertTrue(listener.singleCallAC());
+			if (completionType == CompletionType.CMTSUSPEND) {
+				assertFalse(listener.shouldDisassoc());
+			} else {
+				assertTrue(listener.shouldDisassoc());
+			}
+			assertTrue(listener.isClosed());
+		}
+	}
+}",2015-04-20T15:30:26Z,95
"@@ -0,0 +1,106 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2015, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package com.arjuna.ats;
+
+import org.jboss.tm.listener.*;
+
+import javax.transaction.Synchronization;
+import java.util.EnumSet;
+
+public class TxListener implements Synchronization, TransactionListener {
+    volatile int assoc = 0; // we don't get a listener callback for the initial association
+    volatile boolean closed = false;
+    volatile int acCalled = 0;
+    TransactionListenerRegistry registry;
+    volatile int registrationCount = 2;
+
+    public TxListener(TransactionListenerRegistry registry) {
+        this.registry = registry;
+    }
+
+    @Override
+    public void beforeCompletion() {
+    }
+
+    @Override
+    public void afterCompletion(int status) {
+        acCalled++;
+        if (assoc == 0) {
+            closed = true; // safe to close because the app thread has finished with the txn
+        }
+    }
+
+    @Override
+    public void onEvent(TransactionEvent transactionEvent) {
+        if (transactionEvent.getTypes().contains(EventType.ASSOCIATED)) {
+            if (registry != null && registrationCount > 0) {
+                // test that callbacks can register listeners
+                L2 listener = new L2();
+
+                registrationCount -= 1;
+
+                try {
+                    registry.addListener(transactionEvent.getTransaction(), listener, EnumSet.allOf(EventType.class));
+                } catch (TransactionTypeNotSupported e) {
+                    throw new RuntimeException(e);
+                }
+            }
+            assoc++;
+        }
+
+        if (transactionEvent.getTypes().contains(EventType.DISASSOCIATING)) {
+            assoc--;
+            assert (assoc == 0);
+            if (acCalled == 1) {
+                closed = true; // safe to close now that the AC has ran
+            }
+        }
+    }
+
+    public void reset() {
+        assoc = 1;
+        closed = false;
+        acCalled = 0;
+    }
+    public boolean isClosed() {
+        return closed;
+    }
+
+    /**
+     * @return true if the txn has been disassociated and the AC has been called just once
+     */
+    protected boolean shouldDisassoc() {
+        return assoc == 0 && singleCallAC();
+
+    }
+
+    protected boolean singleCallAC() {
+        return acCalled == 1;
+
+    }
+
+    private static class L2 implements TransactionListener {
+        @Override
+        public void onEvent(TransactionEvent transactionEvent) {
+        }
+    }
+}",2015-04-20T15:30:26Z,96
"@@ -452,7 +452,7 @@
     <version.junit>4.11</version.junit>
     <version.org.jboss.byteman>2.1.3</version.org.jboss.byteman>
     <version.org.jboss.arquillian.core>1.1.2.Final-wildfly-1</version.org.jboss.arquillian.core>
-    <version.org.jboss.jboss-transaction-spi>7.1.0.Final</version.org.jboss.jboss-transaction-spi>
+    <version.org.jboss.jboss-transaction-spi>7.1.1.Final</version.org.jboss.jboss-transaction-spi>
 
     <!-- Maven plugin versions -->
     <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>",2015-04-20T15:30:26Z,39
"@@ -26,10 +26,18 @@
 
     <properties>
         <ipv4.server.jvm.args></ipv4.server.jvm.args>
+        <ipv4.server2.jvm.args>-Djboss.socket.binding.port-offset=100</ipv4.server2.jvm.args>
         <ipv6.server.jvm.args>
             -Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1]
             -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true
         </ipv6.server.jvm.args>
+        <ipv6.server2.jvm.args>
+            -Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1]
+            -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true
+            -Djboss.socket.binding.port-offset=100
+        </ipv6.server2.jvm.args>
+        <jboss.dist>${env.JBOSS_HOME}</jboss.dist>
+        <jboss.home>${jboss.dist}</jboss.home>
     </properties>
 
     <dependencies>
@@ -145,7 +153,7 @@
             <version>${version.org.jboss.byteman}</version>
             <scope>provided</scope>
         </dependency>
-        
+
         <dependency>
             <groupId>org.codehaus.jettison</groupId>
             <artifactId>jettison</artifactId>
@@ -167,11 +175,53 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <includes>
-                        <include>**/functional/*TestCase.java</include>
-                    </includes>
-                </configuration>
+                <executions>
+                    <execution>
+                        <id>default-test</id>
+                        <phase>test</phase>
+                        <goals>
+                            <goal>test</goal>
+                        </goals>
+                        <configuration>
+                            <skip>false</skip>
+                            <includes>
+                                <include>**/functional/*TestCase.java</include>
+                            </includes>
+                        </configuration>
+                    </execution>
+                    <execution>
+                        <id>integration-test</id>
+                        <phase>test</phase>
+                        <goals>
+                            <goal>test</goal>
+                        </goals>
+                        <configuration>
+                            <skip>true</skip>
+                            <includes>
+                                <include>**/integration/*TestCase.java</include>
+                            </includes>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-dependency-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <id>copy-dependencies</id>
+                        <phase>test-compile</phase>
+                        <goals>
+                            <goal>copy-dependencies</goal>
+                        </goals>
+                        <configuration>
+                            <skip>true</skip>
+                            <stripVersion>true</stripVersion>
+                            <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/test-classes/lib</outputDirectory>
+                        </configuration>
+                    </execution>
+                </executions>
             </plugin>
             <plugin>
                 <inherited>false</inherited>
@@ -209,18 +259,24 @@
                     <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>false</skip>
-                            <includes>
-                                <include>**/*TestCase.java</include>
-                            </includes>
-                            <systemPropertyVariables combine.children=""append"">
-                                <server.jvm.args>
-                                    ${jvm.args.other} ${jvm.args.memory} ${ipv4.server.jvm.args} ${jvm.args.debug}
-                                </server.jvm.args>
-                                <node.address>127.0.0.1</node.address>
-                            </systemPropertyVariables>
-                        </configuration>
+                        <executions>
+                            <execution>
+                                <id>integration-test</id>
+                                <configuration>
+                                    <skip>false</skip>
+                                    <systemPropertyVariables combine.children=""append"">
+                                        <arquillian.launch>jboss-containers</arquillian.launch>
+                                        <server.jvm.args>
+                                            ${jvm.args.other} ${jvm.args.memory} ${ipv4.server.jvm.args} ${jvm.args.debug}
+                                        </server.jvm.args>
+                                        <server2.jvm.args>
+                                            ${jvm.args.other} ${jvm.args.memory} ${ipv4.server2.jvm.args}
+                                        </server2.jvm.args>
+                                        <node.address>127.0.0.1</node.address>
+                                    </systemPropertyVariables>
+                                </configuration>
+                            </execution>
+                        </executions>
                     </plugin>
                     <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
@@ -233,11 +289,93 @@
                                     <goal>copy-dependencies</goal>
                                 </goals>
                                 <configuration>
-                                    <stripVersion>true</stripVersion>
-                                    <includeGroupIds>org.jboss.byteman</includeGroupIds>
-									<outputDirectory>${project.build.directory}/test-classes/lib</outputDirectory>
+                                    <skip>false</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-resources-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>copy-first-server</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}</directory>
+                                            <excludes>
+                                                <exclude>bundles/</exclude>
+                                                <exclude>standalone/data/</exclude>
+                                                <exclude>standalone/log/</exclude>
+                                                <exclude>standalone/tmp/</exclude>
+                                            </excludes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-second-server</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss2</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}</directory>
+                                            <excludes>
+                                                <exclude>bundles/</exclude>
+                                                <exclude>standalone/data/</exclude>
+                                                <exclude>standalone/log/</exclude>
+                                                <exclude>standalone/tmp/</exclude>
+                                            </excludes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-first-server-config</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss/standalone/configuration</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}/docs/examples/configs</directory>
+                                            <includes>
+                                                <include>standalone-rts.xml</include>
+                                            </includes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-second-server-config</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss2/standalone/configuration</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}/docs/examples/configs</directory>
+                                            <includes>
+                                                <include>standalone-rts.xml</include>
+                                            </includes>
+                                        </resource>
+                                    </resources>
                                 </configuration>
-                           </execution>
+                            </execution>
                         </executions>
                     </plugin>
                 </plugins>
@@ -267,19 +405,24 @@
                     <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>false</skip>
-                            <includes>
-                                <include>**/*TestCase.java</include>
-                            </includes>
-                            <argLine>${ipv6.server.jvm.args}</argLine>
-                            <systemPropertyVariables combine.children=""append"">
-                                <server.jvm.args>
-                                    ${jvm.args.other} ${jvm.args.memory} ${ipv6.server.jvm.args} ${jvm.args.debug}
-                                </server.jvm.args>
-                                <node.address>[::1]</node.address>
-                            </systemPropertyVariables>
-                        </configuration>
+                        <executions>
+                            <execution>
+                                <id>integration-test</id>
+                                <configuration>
+                                    <skip>false</skip>
+                                    <systemPropertyVariables combine.children=""append"">
+                                        <arquillian.launch>jboss-containers</arquillian.launch>
+                                        <server.jvm.args>
+                                            ${jvm.args.other} ${jvm.args.memory} ${ipv6.server.jvm.args} ${jvm.args.debug}
+                                        </server.jvm.args>
+                                        <server2.jvm.args>
+                                            ${jvm.args.other} ${jvm.args.memory} ${ipv6.server2.jvm.args}
+                                        </server2.jvm.args>
+                                        <node.address>[::1]</node.address>
+                                    </systemPropertyVariables>
+                                </configuration>
+                            </execution>
+                        </executions>
                     </plugin>
                     <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
@@ -292,9 +435,91 @@
                                     <goal>copy-dependencies</goal>
                                 </goals>
                                 <configuration>
-                                    <stripVersion>true</stripVersion>
-                                    <includeGroupIds>org.jboss.byteman</includeGroupIds>
-                                    <outputDirectory>${project.build.directory}/test-classes/lib</outputDirectory>
+                                    <skip>false</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-resources-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>copy-first-server</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}</directory>
+                                            <excludes>
+                                                <exclude>bundles/</exclude>
+                                                <exclude>standalone/data/</exclude>
+                                                <exclude>standalone/log/</exclude>
+                                                <exclude>standalone/tmp/</exclude>
+                                            </excludes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-second-server</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss2</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}</directory>
+                                            <excludes>
+                                                <exclude>bundles/</exclude>
+                                                <exclude>standalone/data/</exclude>
+                                                <exclude>standalone/log/</exclude>
+                                                <exclude>standalone/tmp/</exclude>
+                                            </excludes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-first-server-config</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss/standalone/configuration</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}/docs/examples/configs</directory>
+                                            <includes>
+                                                <include>standalone-rts.xml</include>
+                                            </includes>
+                                        </resource>
+                                    </resources>
+                                </configuration>
+                            </execution>
+                            <execution>
+                                <id>copy-second-server-config</id>
+                                <phase>test-compile</phase>
+                                <goals>
+                                    <goal>copy-resources</goal>
+                                </goals>
+                                <configuration>
+                                    <outputDirectory>${basedir}/target/jboss2/standalone/configuration</outputDirectory>
+                                    <resources>
+                                        <resource>
+                                            <directory>${jboss.home}/docs/examples/configs</directory>
+                                            <includes>
+                                                <include>standalone-rts.xml</include>
+                                            </includes>
+                                        </resource>
+                                    </resources>
                                 </configuration>
                             </execution>
                         </executions>",2015-04-07T15:16:05Z,97
"@@ -1,19 +1,22 @@
 package org.jboss.narayana.rest.integration.test.common;
 
+import org.jboss.logging.Logger;
+import org.jboss.narayana.rest.integration.api.Participant;
+import org.jboss.narayana.rest.integration.api.Vote;
+
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
-import org.jboss.narayana.rest.integration.api.Participant;
-import org.jboss.narayana.rest.integration.api.Vote;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
  *
  */
 public final class LoggingParticipant implements Participant, Serializable {
 
+    private static final Logger LOGGER = Logger.getLogger(LoggingParticipant.class);
+
     private static final long serialVersionUID = 7584938841973602732L;
 
     private final List<String> invocations;
@@ -27,22 +30,26 @@ public LoggingParticipant(final Vote outcome) {
 
     @Override
     public Vote prepare() {
+        LOGGER.info(""LoggingParticipant.prepare"");
         invocations.add(""prepare"");
         return outcome;
     }
 
     @Override
     public void commit() {
+        LOGGER.info(""LoggingParticipant.commit"");
         invocations.add(""commit"");
     }
 
     @Override
     public void commitOnePhase() {
+        LOGGER.info(""LoggingParticipant.commitOnePhase"");
         invocations.add(""commitOnePhase"");
     }
 
     @Override
     public void rollback() {
+        LOGGER.info(""LoggingParticipant.rollback"");
         invocations.add(""rollback"");
     }
 ",2015-04-07T15:16:05Z,98
"@@ -1,15 +1,7 @@
 package org.jboss.narayana.rest.integration.test.common;
 
-import javax.ws.rs.GET;
-import javax.ws.rs.POST;
-import javax.ws.rs.PUT;
-import javax.ws.rs.Path;
-import javax.ws.rs.QueryParam;
-import javax.ws.rs.core.Context;
-import javax.ws.rs.core.Response;
-import javax.ws.rs.core.UriInfo;
-
 import org.codehaus.jettison.json.JSONArray;
+import org.jboss.logging.Logger;
 import org.jboss.narayana.rest.integration.ParticipantInformation;
 import org.jboss.narayana.rest.integration.ParticipantsContainer;
 import org.jboss.narayana.rest.integration.api.Aborted;
@@ -18,6 +10,15 @@
 import org.jboss.narayana.rest.integration.api.ReadOnly;
 import org.jboss.narayana.rest.integration.api.Vote;
 
+import javax.ws.rs.GET;
+import javax.ws.rs.POST;
+import javax.ws.rs.PUT;
+import javax.ws.rs.Path;
+import javax.ws.rs.QueryParam;
+import javax.ws.rs.core.Context;
+import javax.ws.rs.core.Response;
+import javax.ws.rs.core.UriInfo;
+
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
@@ -30,6 +31,8 @@ public final class TransactionalService {
 
     public static final String PATH_SEGMENT = ""transactional-service"";
 
+    private static final Logger LOGGER = Logger.getLogger(TransactionalService.class);
+
     @GET
     public Response getParticipantInvocations(@QueryParam(""participantId"") final String participantId) {
         ParticipantInformation information = ParticipantsContainer.getInstance().getParticipantInformation(participantId);
@@ -47,6 +50,9 @@ public Response getParticipantInvocations(@QueryParam(""participantId"") final Str
     public String enlistParticipant(@QueryParam(""participantEnlistmentUrl"") final String participantEnlistmentUrl,
                                     @QueryParam(""vote"") final String stringVote, @Context final UriInfo uriInfo) {
 
+        LOGGER.info(""TransactionalService.enlistParticipant(participantEnlistmentUrl=""
+                + participantEnlistmentUrl + "", vote="" + stringVote + "")"");
+
         final Vote vote = stringVoteToVote(stringVote);
         final LoggingParticipant participant = new LoggingParticipant(vote);
 
@@ -55,6 +61,8 @@ public String enlistParticipant(@QueryParam(""participantEnlistmentUrl"") final St
 
     @PUT
     public void registerDeserializer() {
+        LOGGER.info(""TransactionalService.registerDeserializer"");
+
         ParticipantsManagerFactory.getInstance().registerDeserializer(APPLICATION_ID, new TestParticipantDeserializer());
     }
 ",2015-04-07T15:16:05Z,99
"@@ -1,16 +1,12 @@
 package org.jboss.narayana.rest.integration.test.integration;
 
-import java.io.File;
-
-import org.junit.Assert;
-
 import org.jboss.arquillian.container.test.api.Config;
 import org.jboss.arquillian.container.test.api.ContainerController;
 import org.jboss.arquillian.container.test.api.Deployer;
 import org.jboss.arquillian.test.api.ArquillianResource;
-import org.jboss.jbossts.star.util.TxSupport;
-import org.junit.After;
-import org.junit.Before;
+import org.junit.Assert;
+
+import java.io.File;
 
 /**
  *
@@ -19,70 +15,45 @@
  */
 public abstract class AbstractIntegrationTestCase {
 
-    private static final String CONTAINER_NAME = ""jboss"";
-
-    protected static final String DEPLOYMENT_NAME = ""test"";
-
-    protected static final String BASE_URL = getBaseUrl();
-
-    protected static final String DEPLOYMENT_URL = BASE_URL + ""/"" + DEPLOYMENT_NAME;
-
-    protected static final String TRANSACTION_MANAGER_URL = BASE_URL + ""/rest-at-coordinator/tx/transaction-manager"";
-
     @ArquillianResource
     private ContainerController containerController;
 
     @ArquillianResource
     private Deployer deployer;
 
-    protected TxSupport txSupport;
-
-    @Before
-    public void before() {
-        txSupport = new TxSupport(TRANSACTION_MANAGER_URL);
+    protected void startContainer(final String containerName, final String deploymentName) {
+        startContainer(containerName, deploymentName, null);
     }
 
-    @After
-    public void after() {
-        try {
-            txSupport.rollbackTx();
-        } catch (Throwable t){
-        }
-    }
-
-    protected void startContainer() {
-        startContainer(null);
-    }
-
-    protected void startContainer(final String vmArguments) {
-        if (!containerController.isStarted(CONTAINER_NAME)) {
+    protected void startContainer(final String containerName, final String deploymentName, final String vmArguments) {
+        if (!containerController.isStarted(containerName)) {
             clearObjectStore();
             if (vmArguments == null) {
-                containerController.start(CONTAINER_NAME);
+                containerController.start(containerName);
             } else {
                 final Config config = new Config();
                 config.add(""javaVmArguments"", vmArguments);
-                containerController.start(CONTAINER_NAME, config.map());
+                containerController.start(containerName, config.map());
             }
 
-            deployer.deploy(DEPLOYMENT_NAME);
+            deployer.deploy(deploymentName);
         }
     }
 
-    protected void restartContainer(final String vmArguments) {
+    protected void restartContainer(final String containerName, final String vmArguments) {
         if (vmArguments == null) {
-            containerController.start(CONTAINER_NAME);
+            containerController.start(containerName);
         } else {
             final Config config = new Config();
             config.add(""javaVmArguments"", vmArguments);
-            containerController.start(CONTAINER_NAME, config.map());
+            containerController.start(containerName, config.map());
         }
     }
 
-    protected void stopContainer() {
-        deployer.undeploy(DEPLOYMENT_NAME);
-        containerController.stop(CONTAINER_NAME);
-        containerController.kill(CONTAINER_NAME);
+    protected void stopContainer(final String containerName, final String deplymentName) {
+        deployer.undeploy(deplymentName);
+        containerController.stop(containerName);
+        containerController.kill(containerName);
     }
 
     protected void clearObjectStore() {
@@ -116,21 +87,4 @@ protected static boolean deleteDirectory(final File path) {
         return (path.delete());
     }
 
-    private static String getBaseUrl() {
-        String baseAddress = System.getProperty(""jboss.bind.address"");
-        String basePort = System.getProperty(""jboss.bind.port"");
-
-        if (baseAddress == null) {
-            baseAddress = ""http://localhost"";
-        } else if (!baseAddress.toLowerCase().startsWith(""http://"") && !baseAddress.toLowerCase().startsWith(""https://"")) {
-            baseAddress = ""http://"" + baseAddress;
-        }
-
-        if (basePort == null) {
-            basePort = ""8080"";
-        }
-
-        return baseAddress + "":"" + basePort;
-    }
-
 }",2015-04-07T15:16:05Z,100
"@@ -1,14 +1,5 @@
 package org.jboss.narayana.rest.integration.test.integration;
 
-import java.io.File;
-import java.util.Arrays;
-import java.util.Collections;
-import java.util.List;
-
-import javax.xml.bind.JAXBException;
-
-import org.junit.Assert;
-
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.star.util.TxStatus;
@@ -25,10 +16,18 @@
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.After;
+import org.junit.Assert;
 import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
+import javax.xml.bind.JAXBException;
+import java.io.File;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
 /**
  *
  * TODO implement test for heuristics after prepare.
@@ -39,10 +38,22 @@
 @RunWith(Arquillian.class)
 public final class BasicIntegrationTestCase extends AbstractIntegrationTestCase {
 
+    protected static final String DEPLOYMENT_NAME = ""test"";
+
+    protected static final String BASE_URL = getBaseUrl();
+
+    protected static final String DEPLOYMENT_URL = BASE_URL + ""/"" + DEPLOYMENT_NAME;
+
+    protected static final String TRANSACTION_MANAGER_URL = BASE_URL + ""/rest-at-coordinator/tx/transaction-manager"";
+
     private static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.integration.BasicIntegrationTestCase"";
 
     private static final String DEPENDENCIES = ""Dependencies: org.jboss.narayana.rts\n"";
 
+    private static final String CONTAINER_NAME = ""jboss"";
+
+    protected TxSupport txSupport;
+
     @Deployment(name = DEPLOYMENT_NAME, managed = false, testable = true)
     public static WebArchive getDeployment() {
         return ShrinkWrap.create(WebArchive.class, DEPLOYMENT_NAME + "".war"")
@@ -56,11 +67,21 @@ public static WebArchive getDeployment() {
 
     @Before
     public void before() {
-        super.before();
-        startContainer();
+        txSupport = new TxSupport(TRANSACTION_MANAGER_URL);
+        startContainer(CONTAINER_NAME, DEPLOYMENT_NAME);
         ParticipantsManagerFactory.getInstance().setBaseUrl(BASE_URL);
     }
 
+    @After
+    public void after() {
+        try {
+            txSupport.rollbackTx();
+//            stopContainer(CONTAINER_NAME);
+        } catch (Throwable t) {
+            // pass
+        }
+    }
+
     @Test
     public void testCommit() {
         txSupport.startTx();
@@ -130,7 +151,7 @@ public void testRollback() {
 
         txSupport.rollbackTx();
 
-        Assert.assertEquals(Arrays.asList(new String[] { ""rollback"" }), participant1.getInvocations());
+        Assert.assertEquals(Arrays.asList(new String[]{""rollback""}), participant1.getInvocations());
         Assert.assertEquals(Arrays.asList(new String[] { ""rollback"" }), participant2.getInvocations());
     }
 
@@ -205,7 +226,7 @@ public void testSecondParticipantHeuristicCommitWithFirstParticipantSuccessfullP
         final String txStatus = TxSupport.getStatus(txSupport.commitTx());
 
         Assert.assertEquals(TxStatus.TransactionCommitted.name(), txStatus);
-        Assert.assertEquals(Arrays.asList(new String[] { ""prepare"", ""commit"" }), participants.get(0).getInvocations());
+        Assert.assertEquals(Arrays.asList(new String[]{""prepare"", ""commit""}), participants.get(0).getInvocations());
         Assert.assertEquals(Collections.EMPTY_LIST, participants.get(1).getInvocations());
     }
 
@@ -321,7 +342,7 @@ public void testCommitWithVolatileParticipant() {
         final String txStatus = TxSupport.getStatus(txSupport.commitTx());
 
         Assert.assertEquals(TxStatus.TransactionCommitted.name(), txStatus);
-        Assert.assertEquals(Arrays.asList(new String[] { ""commitOnePhase"" }), loggingParticipant.getInvocations());
+        Assert.assertEquals(Arrays.asList(new String[]{""commitOnePhase""}), loggingParticipant.getInvocations());
         Assert.assertEquals(Arrays.asList(new String[] { ""beforeCompletion"", ""afterCompletion"" }),
                 loggingVolatileParticipant.getInvocations());
         Assert.assertEquals(TxStatus.TransactionCommitted, loggingVolatileParticipant.getTxStatus());
@@ -346,4 +367,21 @@ public void testRollbackWithVolatileParticipant() {
         Assert.assertEquals(TxStatus.TransactionRolledBack, loggingVolatileParticipant.getTxStatus());
     }
 
+    private static String getBaseUrl() {
+        String baseAddress = System.getProperty(""jboss.bind.address"");
+        String basePort = System.getProperty(""jboss.bind.port"");
+
+        if (baseAddress == null) {
+            baseAddress = ""http://localhost"";
+        } else if (!baseAddress.toLowerCase().startsWith(""http://"") && !baseAddress.toLowerCase().startsWith(""https://"")) {
+            baseAddress = ""http://"" + baseAddress;
+        }
+
+        if (basePort == null) {
+            basePort = ""8080"";
+        }
+
+        return baseAddress + "":"" + basePort;
+    }
+
 }",2015-04-07T15:16:05Z,101
"@@ -0,0 +1,193 @@
+package org.jboss.narayana.rest.integration.test.integration;
+
+import org.codehaus.jettison.json.JSONArray;
+import org.codehaus.jettison.json.JSONException;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.container.test.api.RunAsClient;
+import org.jboss.arquillian.container.test.api.TargetsContainer;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.star.util.TxStatusMediaType;
+import org.jboss.jbossts.star.util.TxSupport;
+import org.jboss.jbossts.star.util.media.txstatusext.TransactionStatusElement;
+import org.jboss.narayana.rest.integration.api.Prepared;
+import org.jboss.narayana.rest.integration.api.Vote;
+import org.jboss.narayana.rest.integration.test.common.LoggingParticipant;
+import org.jboss.narayana.rest.integration.test.common.RestATManagementResource;
+import org.jboss.narayana.rest.integration.test.common.TestParticipantDeserializer;
+import org.jboss.narayana.rest.integration.test.common.TransactionalService;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import javax.ws.rs.client.ClientBuilder;
+import javax.ws.rs.core.Response;
+import javax.xml.bind.JAXBException;
+import java.io.File;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+@RunWith(Arquillian.class)
+@RunAsClient
+public class DistributedRecoveryIntegrationTestCase extends AbstractIntegrationTestCase {
+
+    private static final String FIRST_BASE_URL = ""http://"" + System.getProperty(""node.address"") + "":8080"";
+
+    private static final String SECOND_BASE_URL = ""http://"" + System.getProperty(""node.address"") + "":8180"";
+
+    private static final String FIRST_DEPLOYMENT_NAME = ""test"";
+
+    private static final String SECOND_DEPLOYMENT_NAME = ""test2"";
+
+    protected static final String FIRST_DEPLOYMENT_URL = FIRST_BASE_URL + ""/"" + FIRST_DEPLOYMENT_NAME;
+
+    protected static final String SECOND_DEPLOYMENT_URL = SECOND_BASE_URL + ""/"" + SECOND_DEPLOYMENT_NAME;
+
+    protected static final String TRANSACTION_MANAGER_URL = FIRST_BASE_URL + ""/rest-at-coordinator/tx/transaction-manager"";
+
+    private static final String DEPENDENCIES = ""Dependencies: org.jboss.narayana.rts,org.codehaus.jettison\n"";
+
+    private static final String FIRST_CONTAINER_NAME = ""jboss"";
+
+    private static final String SECOND_CONTAINER_NAME = ""jboss2"";
+
+    protected static final TxSupport txSupport = new TxSupport(TRANSACTION_MANAGER_URL);
+
+    private static final int RECOVERY_PERIOD = 4;
+
+    private static final int RECOVERY_WAIT_CYCLES = 8;
+
+    private static final String FIRST_CONTAINER_VM_ARGUMENTS = System.getProperty(""server.jvm.args"").trim()
+            + "" -Dcom.arjuna.ats.arjuna.recovery.periodicRecoveryPeriod="" + RECOVERY_PERIOD;
+
+    private static final String SECOND_CONTAINER_VM_ARGUMENTS = System.getProperty(""server2.jvm.args"").trim()
+            + "" -Dcom.arjuna.ats.arjuna.recovery.periodicRecoveryPeriod="" + RECOVERY_PERIOD;
+
+    private static final String BYTEMAN_ARGUMENTS = ""-Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:lib/byteman.jar=script:scripts/@BMScript@.btm,boot:lib/byteman.jar,listener:true"";
+
+    @Deployment(name = FIRST_DEPLOYMENT_NAME, managed = false, testable = true)
+    @TargetsContainer(FIRST_CONTAINER_NAME)
+    public static WebArchive getFirstDeployment() {
+        return ShrinkWrap.create(WebArchive.class, FIRST_DEPLOYMENT_NAME + "".war"")
+                .addClass(LoggingParticipant.class)
+                .addClass(TestParticipantDeserializer.class)
+                .addClass(TransactionalService.class)
+                .addAsWebInfResource(new File(""web.xml""), ""web.xml"")
+                .addAsManifestResource(new StringAsset(DEPENDENCIES), ""MANIFEST.MF"");
+    }
+
+    @Deployment(name = SECOND_DEPLOYMENT_NAME, managed = false, testable = true)
+    @TargetsContainer(SECOND_CONTAINER_NAME)
+    public static WebArchive getSecondDeployment() {
+        return ShrinkWrap.create(WebArchive.class, SECOND_DEPLOYMENT_NAME + "".war"")
+                .addClass(LoggingParticipant.class)
+                .addClass(TestParticipantDeserializer.class)
+                .addClass(TransactionalService.class)
+                .addClass(RestATManagementResource.class)
+                .addAsWebInfResource(new File(""web.xml""), ""web.xml"")
+                .addAsManifestResource(new StringAsset(DEPENDENCIES), ""MANIFEST.MF"");
+    }
+
+    @After
+    public void after() {
+        try {
+            txSupport.rollbackTx();
+        } catch (Throwable t) {
+            // pass
+        }
+
+        try {
+            stopContainer(FIRST_CONTAINER_NAME, FIRST_DEPLOYMENT_NAME);
+        } catch (Throwable t) {
+            // pass
+        }
+
+        try {
+            stopContainer(SECOND_CONTAINER_NAME, SECOND_DEPLOYMENT_NAME);
+        } catch (Throwable t) {
+            // pass
+        }
+    }
+
+    @Test
+    public void testSecondServerFailureBeforeCommit() throws JAXBException {
+        startContainer(FIRST_CONTAINER_NAME, FIRST_DEPLOYMENT_NAME, FIRST_CONTAINER_VM_ARGUMENTS);
+        startContainer(SECOND_CONTAINER_NAME, SECOND_DEPLOYMENT_NAME,
+                SECOND_CONTAINER_VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashBeforeCommit""));
+
+        txSupport.startTx();
+        enlistParticipant(txSupport.getDurableParticipantEnlistmentURI(), FIRST_DEPLOYMENT_URL, new Prepared());
+        enlistParticipant(txSupport.getDurableParticipantEnlistmentURI(), SECOND_DEPLOYMENT_URL, new Prepared());
+
+        try {
+            Assert.assertEquals(2, txSupport.getTransactionInfo().getTwoPhaseAware().size());
+        } catch (final JAXBException e) {
+            Assert.fail(e.getMessage());
+        }
+
+        final String result = txSupport.commitTx();
+        Assert.assertEquals(TxStatusMediaType.TX_COMMITTED, result);
+
+        restartContainer(SECOND_CONTAINER_NAME, SECOND_CONTAINER_VM_ARGUMENTS);
+        Assert.assertEquals(0, getParticipantsInformation(SECOND_DEPLOYMENT_URL).length());
+        registerDeserializer(SECOND_DEPLOYMENT_URL);
+        Assert.assertEquals(1, getParticipantsInformation(SECOND_DEPLOYMENT_URL).length());
+
+        int cycles = 0;
+        TransactionStatusElement status = txSupport.getTransactionInfo().getStatus();
+        Assert.assertEquals(TransactionStatusElement.TransactionCommitted, status);
+
+        do {
+            try {
+                Thread.sleep(RECOVERY_PERIOD + 2000);
+                // Updates coordinator's active transactions list
+                txSupport.getTransactions();
+                // After successful recovery transaction is removed and 404 is returned.
+                status = txSupport.getTransactionInfo().getStatus();
+            } catch (final Throwable t) {
+                // ignore
+            }
+        } while (status != null && cycles++ < RECOVERY_WAIT_CYCLES);
+
+        if (status == null) {
+            Assert.fail(""Recovery failed"");
+        }
+    }
+
+    private void enlistParticipant(final String enlistmentUrl, final String deploymentUrl, final Vote vote) {
+        final Response response = ClientBuilder.newClient()
+                .target(deploymentUrl + ""/"" + TransactionalService.PATH_SEGMENT)
+                .queryParam(""participantEnlistmentUrl"", enlistmentUrl)
+                .queryParam(""vote"", vote.getClass().getName())
+                .request().post(null);
+
+        Assert.assertEquals(200, response.getStatus());
+    }
+
+    private void registerDeserializer(final String deploymentUrl) {
+        final Response response = ClientBuilder.newClient()
+                .target(deploymentUrl + ""/"" + TransactionalService.PATH_SEGMENT)
+                .request().put(null);
+
+        Assert.assertEquals(204, response.getStatus());
+    }
+
+    private JSONArray getParticipantsInformation(final String deploymentUrl) {
+        final String response = ClientBuilder.newClient()
+                .target(deploymentUrl + ""/"" + RestATManagementResource.BASE_URL_SEGMENT + ""/""
+                        + RestATManagementResource.PARTICIPANTS_URL_SEGMENT)
+                .request().get(String.class);
+
+        try {
+            return new JSONArray(response);
+        } catch (final JSONException e) {
+            e.printStackTrace();
+            return new JSONArray();
+        }
+    }
+
+}",2015-04-07T15:16:05Z,102
"@@ -4,6 +4,7 @@
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.star.provider.HttpResponseException;
+import org.jboss.jbossts.star.util.TxSupport;
 import org.jboss.jbossts.star.util.media.txstatusext.TransactionStatusElement;
 import org.jboss.narayana.rest.integration.api.Prepared;
 import org.jboss.narayana.rest.integration.api.Vote;
@@ -17,6 +18,7 @@
 import org.jboss.shrinkwrap.api.spec.WebArchive;
 import org.junit.After;
 import org.junit.Assert;
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -28,8 +30,18 @@
 @RunWith(Arquillian.class)
 public final class RecoveryIntegrationTestCase extends AbstractIntegrationTestCase {
 
+    protected static final String BASE_URL = ""http://"" + System.getProperty(""node.address"") + "":8080"";
+
+    protected static final String DEPLOYMENT_NAME = ""test"";
+
+    protected static final String DEPLOYMENT_URL = BASE_URL + ""/"" + DEPLOYMENT_NAME;
+
+    protected static final String TRANSACTION_MANAGER_URL = BASE_URL + ""/rest-at-coordinator/tx/transaction-manager"";
+
     private static final String DEPENDENCIES = ""Dependencies: org.jboss.narayana.rts,org.jboss.jts,org.codehaus.jettison\n"";
 
+    private static final String CONTAINER_NAME = ""jboss"";
+
     private static final int RECOVERY_PERIOD = 4;
 
     private static final int RECOVERY_WAIT_CYCLES = 8;
@@ -39,22 +51,33 @@ public final class RecoveryIntegrationTestCase extends AbstractIntegrationTestCa
 
     private static final String BYTEMAN_ARGUMENTS = ""-Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:lib/byteman.jar=script:scripts/@BMScript@.btm,boot:lib/byteman.jar,listener:true"";
 
+    protected TxSupport txSupport;
+
     @Deployment(name = DEPLOYMENT_NAME, managed = false, testable = false)
     public static WebArchive getDeployment() {
         return ShrinkWrap.create(WebArchive.class, DEPLOYMENT_NAME + "".war"")
                 .addPackages(false, LoggingParticipant.class.getPackage()).addAsWebInfResource(new File(""web.xml""), ""web.xml"")
                 .addAsManifestResource(new StringAsset(DEPENDENCIES), ""MANIFEST.MF"");
     }
 
+    @Before
+    public void before() {
+        txSupport = new TxSupport(TRANSACTION_MANAGER_URL);
+    }
+
     @After
     public void after() {
-        super.after();
-        stopContainer();
+        try {
+            txSupport.rollbackTx();
+        } catch (Throwable t) {
+            // pass
+        }
+        stopContainer(CONTAINER_NAME, DEPLOYMENT_NAME);
     }
 
     @Test
     public void testCrashAfterPrepare() throws Exception {
-        startContainer(VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashAfterPrepare""));
+        startContainer(CONTAINER_NAME, DEPLOYMENT_NAME, VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashAfterPrepare""));
 
         txSupport.startTx();
 
@@ -69,7 +92,7 @@ public void testCrashAfterPrepare() throws Exception {
         } catch (HttpResponseException e) {
         }
 
-        restartContainer(VM_ARGUMENTS);
+        restartContainer(CONTAINER_NAME, VM_ARGUMENTS);
         registerDeserializer();
 
         TransactionStatusElement status;
@@ -88,7 +111,7 @@ public void testCrashAfterPrepare() throws Exception {
 
     @Test
     public void testCrashBeforeCommit() throws Exception {
-        startContainer(VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashBeforeCommit""));
+        startContainer(CONTAINER_NAME, DEPLOYMENT_NAME, VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashBeforeCommit""));
 
         txSupport.startTx();
 
@@ -103,7 +126,7 @@ public void testCrashBeforeCommit() throws Exception {
         } catch (HttpResponseException e) {
         }
 
-        restartContainer(VM_ARGUMENTS);
+        restartContainer(CONTAINER_NAME, VM_ARGUMENTS);
         registerDeserializer();
 
         TransactionStatusElement status;",2015-04-07T15:16:05Z,103
"@@ -12,15 +12,26 @@
     xsi:schemaLocation=""http://jboss.org/schema/arquillian
         http://jboss.org/schema/arquillian/arquillian_1_0.xsd"">
 
-    <!-- Uncomment to enable servlet protocol -->
-    <!-- <defaultProtocol type=""Servlet 3.0"" /> -->
+    <group qualifier=""jboss-containers"">
+        <container qualifier=""jboss"" default=""true"" mode=""manual"">
+            <configuration>
+                <property name=""jbossHome"">${basedir}/target/jboss</property>
+                <property name=""serverConfig"">standalone-rts.xml</property>
+                <property name=""javaVmArguments"">${server.jvm.args}</property>
+                <property name=""managementAddress"">${node.address}</property>
+                <property name=""managementPort"">9990</property>
+            </configuration>
+        </container>
 
-    <container qualifier=""jboss"" default=""true"" mode=""manual"">
-        <configuration>
-            <property name=""serverConfig"">standalone-rts.xml</property>
-            <property name=""javaVmArguments"">${server.jvm.args}</property>
-            <property name=""managementAddress"">${node.address}</property>
-        </configuration>
-    </container>
+        <container qualifier=""jboss2"" default=""false"" mode=""manual"">
+            <configuration>
+                <property name=""jbossHome"">${basedir}/target/jboss2</property>
+                <property name=""serverConfig"">standalone-rts.xml</property>
+                <property name=""javaVmArguments"">${server2.jvm.args}</property>
+                <property name=""managementAddress"">${node.address}</property>
+                <property name=""managementPort"">10090</property>
+            </configuration>
+        </container>
+    </group>
 
 </arquillian>
\ No newline at end of file",2015-04-07T15:16:05Z,104
"@@ -22,7 +22,7 @@
 
 package com.hp.mwtests.ts.jta.cdi.transactionScoped;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
@@ -196,4 +196,4 @@ private void assertContextUnavailable() {
             //Expected
         }
     }
-}
\ No newline at end of file
+}",2014-07-09T11:50:59Z,105
"@@ -1,6 +1,6 @@
 package com.hp.mwtests.ts.jta.cdi.transactional;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 import javax.transaction.xa.XAException;
 import javax.transaction.xa.XAResource;",2014-07-09T11:50:59Z,106
"@@ -22,7 +22,7 @@
 
 package com.hp.mwtests.ts.jta.cdi.transactional;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
@@ -418,4 +418,4 @@ public void testEJB() throws Exception {
     public void testStereotype() throws Exception {
         businessLogic.doSomething();
     }
-}
\ No newline at end of file
+}",2014-07-09T11:50:59Z,107
"@@ -1,6 +1,6 @@
 package com.hp.mwtests.ts.jta.cdi.transactional;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 import javax.transaction.Transaction;
 import javax.transaction.TransactionManager;",2014-07-09T11:50:59Z,108
"@@ -16,7 +16,7 @@
  */
 package com.hp.mwtests.ts.jta.commitmarkable.integration;
 
-import static junit.framework.Assert.assertEquals;
+import static org.junit.Assert.assertEquals;
 import static org.junit.Assert.fail;
 
 import java.sql.Connection;",2014-07-09T11:50:59Z,109
"@@ -49,7 +49,6 @@ public static <T> T getDefaultInstance(Class<T> beanClass) throws RuntimeExcepti
         return getNamedInstance(beanClass, DEFAULT_NAME, null);
     }
 
-    @Deprecated
     public static <T> T getDefaultInstance(Class<T> beanClass, Properties properties) throws RuntimeException {
         return getNamedInstance(beanClass, DEFAULT_NAME, properties);
     }",2014-07-09T11:50:59Z,110
"@@ -2,7 +2,7 @@
 
 import java.net.MalformedURLException;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 import org.jboss.jbossts.star.util.TxStatus;
 import org.jboss.narayana.rest.integration.ParticipantInformation;",2014-07-09T11:50:59Z,111
"@@ -1,7 +1,7 @@
 package org.jboss.narayana.rest.integration.test.functional;
 
 import com.arjuna.ats.arjuna.common.Uid;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.jbossts.star.util.TxStatus;
 import org.jboss.narayana.rest.integration.ParticipantInformation;
 import org.jboss.narayana.rest.integration.ParticipantsContainer;",2014-07-09T11:50:59Z,112
"@@ -2,7 +2,7 @@
 
 import java.io.File;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 import org.jboss.arquillian.container.test.api.Config;
 import org.jboss.arquillian.container.test.api.ContainerController;",2014-07-09T11:50:59Z,100
"@@ -7,7 +7,7 @@
 
 import javax.xml.bind.JAXBException;
 
-import junit.framework.Assert;
+import org.junit.Assert;
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
@@ -346,4 +346,4 @@ public void testRollbackWithVolatileParticipant() {
         Assert.assertEquals(TxStatus.TransactionRolledBack, loggingVolatileParticipant.getTxStatus());
     }
 
-}
\ No newline at end of file
+}",2014-07-09T11:50:59Z,101
"@@ -21,13 +21,14 @@
  */
 package io.narayana.perf;
 
+import org.junit.Assert;
 import org.junit.Test;
 
 import java.math.BigInteger;
 import java.util.Set;
 import java.util.concurrent.atomic.AtomicInteger;
 
-import static junit.framework.Assert.assertNotSame;
+import static org.junit.Assert.assertNotSame;
 import static junit.framework.TestCase.assertEquals;
 import static junit.framework.TestCase.assertTrue;
 ",2014-07-09T11:50:59Z,113
"@@ -25,7 +25,7 @@
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
 import com.arjuna.wst.TransactionRolledBackException;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;",2014-07-09T11:50:59Z,114
"@@ -24,7 +24,7 @@
 
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;",2014-07-09T11:50:59Z,115
"@@ -25,7 +25,7 @@
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
 import com.arjuna.wst.TransactionRolledBackException;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;",2014-07-09T11:50:59Z,116
"@@ -25,7 +25,7 @@
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
 import com.arjuna.wst.TransactionRolledBackException;
-import junit.framework.Assert;
+import org.junit.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;",2014-07-09T11:50:59Z,117
"@@ -41,8 +41,9 @@
 
 public class CompensationContext implements Context {
 
-    //TODO: garbage collect. Register a participant and remove at end?
-    private static final Map<TxContext, Map<String, Object>> localTXMap = new HashMap<TxContext, Map<String, Object>>();
+    private static final Map<TxContext, Map<String, Object>> beanStorePerTransaction = new HashMap<TxContext, Map<String, Object>>();
+
+    private static ThreadLocal<TxContext> txContextToExtend = new ThreadLocal<TxContext>();
 
     @Override
     public Class<? extends Annotation> getScope() {
@@ -82,13 +83,17 @@ public <T> T get(Contextual<T> contextual) {
     private Map getBeansForThisTransaction() {
 
         try {
-            BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
-            TxContext currentTX = bam.currentTransaction();
 
-            if (localTXMap.get(currentTX) == null) {
-                localTXMap.put(currentTX, new HashMap<String, Object>());
+            TxContext currentTX = txContextToExtend.get();
+            if (currentTX == null) {
+                BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
+                currentTX = bam.currentTransaction();
             }
-            return localTXMap.get(currentTX);
+
+            if (beanStorePerTransaction.get(currentTX) == null) {
+                beanStorePerTransaction.put(currentTX, new HashMap<String, Object>());
+            }
+            return beanStorePerTransaction.get(currentTX);
 
         } catch (SystemException e) {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
@@ -97,6 +102,10 @@ private Map getBeansForThisTransaction() {
 
     public boolean isActive() {
 
+        if (txContextToExtend.get() != null) {
+            return true;
+        }
+
         try {
             BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
             TxContext currentTX = bam.currentTransaction();
@@ -105,5 +114,19 @@ public boolean isActive() {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
         }
     }
+
+    public static void setTxContextToExtend(TxContext currentTX) {
+
+        txContextToExtend.set(currentTX);
+    }
+
+    /**
+     * Garbage collect the beans. Call when the context is closed and can't be used again.
+     *
+     * @param currentTX the Transaction Context associated with this context.
+     */
+    public static void close(TxContext currentTX) {
+        beanStorePerTransaction.remove(currentTX);
+    }
 }
 ",2013-08-02T12:16:51Z,118
"@@ -22,6 +22,7 @@
 
 package org.jboss.narayana.compensations.impl;
 
+import com.arjuna.mw.wst.TxContext;
 import com.arjuna.wst.BusinessAgreementWithParticipantCompletionParticipant;
 import com.arjuna.wst.FaultedException;
 import com.arjuna.wst.SystemException;
@@ -41,23 +42,25 @@
 public class Participant implements BusinessAgreementWithParticipantCompletionParticipant, ConfirmCompletedParticipant {
 
     private Class<? extends CompensationHandler> compensationHandler;
-
     private Class<? extends ConfirmationHandler> confirmationHandler;
-
     private Class<? extends TransactionLoggedHandler> transactionLoggedHandler;
 
     private BeanManager beanManager;
+    private ClassLoader applicationClassloader;
+    private TxContext currentTX;
 
     private Map txDataMapState;
 
-    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass) {
+    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass, TxContext currentTX) {
 
         this.compensationHandler = compensationHandlerClass;
         this.confirmationHandler = confirmationHandlerClass;
         this.transactionLoggedHandler = transactionLoggedHandlerClass;
+        this.currentTX = currentTX;
 
         beanManager = BeanManagerUtil.getBeanManager();
         txDataMapState = TXDataMapImpl.getState();
+        applicationClassloader = Thread.currentThread().getContextClassLoader();
     }
 
     private <T extends Object> T instantiate(Class<T> clazz) {
@@ -72,21 +75,35 @@ private <T extends Object> T instantiate(Class<T> clazz) {
     public void confirmCompleted(boolean confirmed) {
 
         if (transactionLoggedHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+
             TXDataMapImpl.resume(txDataMapState);
             TransactionLoggedHandler handler = instantiate(transactionLoggedHandler);
             handler.transactionLogged(confirmed);
             TXDataMapImpl.suspend();
+
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
     @Override
     public void close() throws WrongStateException, SystemException {
 
         if (confirmationHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+            CompensationContext.setTxContextToExtend(currentTX);
+
             TXDataMapImpl.resume(txDataMapState);
             ConfirmationHandler handler = instantiate(confirmationHandler);
             handler.confirm();
             TXDataMapImpl.suspend();
+
+            CompensationContext.close(currentTX);
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
@@ -100,10 +117,18 @@ public void compensate() throws FaultedException, WrongStateException, SystemExc
 
         try {
             if (compensationHandler != null) {
+
+                ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+                Thread.currentThread().setContextClassLoader(applicationClassloader);
+                CompensationContext.setTxContextToExtend(currentTX);
                 TXDataMapImpl.resume(txDataMapState);
+
                 CompensationHandler handler = instantiate(compensationHandler);
                 handler.compensate();
+
                 TXDataMapImpl.suspend();
+                CompensationContext.close(currentTX);
+                Thread.currentThread().setContextClassLoader(origClassLoader);
             }
         } catch (Exception e) {
             e.printStackTrace();",2013-08-02T12:16:51Z,119
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends CompensationHandler> compensationHandler = getCompensationHandler(method);
-        Participant compensationParticipant = new Participant(compensationHandler, null, null);
+        Participant compensationParticipant = new Participant(compensationHandler, null, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,120
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends ConfirmationHandler> confirmationHandler = getConfirmationHandler(method);
-        Participant compensationParticipant = new Participant(null, confirmationHandler, null);
+        Participant compensationParticipant = new Participant(null, confirmationHandler, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,121
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends TransactionLoggedHandler> transactionLogHandler = getTransactionLoggedHandler(method);
-        Participant compensationParticipant = new Participant(null, null, transactionLogHandler);
+        Participant compensationParticipant = new Participant(null, null, transactionLogHandler, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,122
"@@ -20,50 +20,59 @@
  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  */
 
-package org.jboss.narayana.compensations.functional;
+package org.jboss.narayana.compensations.functional.compensationScoped;
 
 import com.arjuna.mw.wst.TxContext;
 import com.arjuna.mw.wst11.BusinessActivityManager;
 import com.arjuna.mw.wst11.BusinessActivityManagerFactory;
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
-import junit.framework.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;
 import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
 import org.jboss.narayana.compensations.functional.common.DummyData;
 import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.JavaArchive;
-import org.junit.After;
 import org.junit.AfterClass;
+import org.junit.Assert;
+import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
 import javax.enterprise.context.ContextNotActiveException;
 import javax.inject.Inject;
 
+
 /**
  * @author paul.robinson@redhat.com 22/03/2013
  */
 @RunWith(Arquillian.class)
 public class CompensationScopedTest {
 
+    @Inject
+    Service service;
+
     @Inject
     DummyData dummyData;
 
     UserBusinessActivity uba = UserBusinessActivityFactory.userBusinessActivity();
     BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
 
+
     @Deployment
     public static JavaArchive createTestArchive() {
 
         JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
                 .addPackages(true, ""org.jboss.narayana.compensations.functional"")
+                .addClass(ParticipantCompletionCoordinatorRules.class)
                 .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"")
                 .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
 
@@ -77,14 +86,30 @@ public static JavaArchive createTestArchive() {
         return archive;
     }
 
-    @After
-    public void tearDown() {
 
-        try {
-            uba.close();
-        } catch (Exception e) {
-            // do nothing
-        }
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+
+    @Before
+    public void resetParticipants() {
+
+        DataConfirmationHandler.reset();
+        DataCompensationHandler.reset();
+        DataTxLoggedHandler.reset();
+
+        MyCompensationHandler.dataAvailable = false;
+        MyConfirmationHandler.dataAvailable = false;
+        MyTransactionLoggedHandler.dataAvailable = false;
     }
 
     @Test
@@ -160,4 +185,41 @@ private void assertContextUnavailable() {
     }
 
 
-}
\ No newline at end of file
+    @Test
+    public void testCompensationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.cancel();
+
+        Assert.assertEquals(true, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(false, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+
+    @Test
+    public void testConfirmationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.close();
+
+        Assert.assertEquals(false, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(true, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+}",2013-08-02T12:16:51Z,123
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+@CompensationScoped
+@Named
+public class DataPojo implements Serializable {
+
+    private String data;
+
+    public String getData() {
+
+        return data;
+    }
+
+    public void setData(String data) {
+
+        this.data = data;
+    }
+}",2013-08-02T12:16:51Z,124
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyCompensationHandler implements CompensationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void compensate() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,125
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyConfirmationHandler implements ConfirmationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void confirm() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,126
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+import org.jboss.narayana.compensations.api.TransactionLoggedHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyTransactionLoggedHandler implements TransactionLoggedHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void transactionLogged(boolean success) {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,127
"@@ -0,0 +1,53 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
+import org.jboss.narayana.compensations.functional.common.MyRuntimeException;
+import org.jboss.narayana.txframework.api.management.TXDataMap;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 24/04/2013
+ */
+public class Service {
+
+    @Inject
+    DataPojo myData;
+
+    @Compensatable
+    @TxCompensate(MyCompensationHandler.class)
+    @TxLogged(MyTransactionLoggedHandler.class)
+    @TxConfirm(MyConfirmationHandler.class)
+    public void doWork(String setValue) throws MyRuntimeException {
+        myData.setData(setValue);
+    }
+
+}",2013-08-02T12:16:51Z,128
"@@ -39,8 +39,10 @@
         <configuration>
             <property name=""serverConfig"">standalone-xts.xml</property>
             <property name=""javaVmArguments"">${server.jvm.args}</property>
+            <property name=""javaVmArguments"">-Xmx512m -XX:MaxPermSize=128m
+                            -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n ${server.jvm.args}</property>
             <property name=""managementAddress"">${node.address}</property>
         </configuration>
     </container>
 
-</arquillian>
\ No newline at end of file
+</arquillian>",2013-08-02T12:16:51Z,129
"@@ -41,8 +41,9 @@
 
 public class CompensationContext implements Context {
 
-    //TODO: garbage collect. Register a participant and remove at end?
-    private static final Map<TxContext, Map<String, Object>> localTXMap = new HashMap<TxContext, Map<String, Object>>();
+    private static final Map<TxContext, Map<String, Object>> beanStorePerTransaction = new HashMap<TxContext, Map<String, Object>>();
+
+    private static ThreadLocal<TxContext> txContextToExtend = new ThreadLocal<TxContext>();
 
     @Override
     public Class<? extends Annotation> getScope() {
@@ -82,13 +83,17 @@ public <T> T get(Contextual<T> contextual) {
     private Map getBeansForThisTransaction() {
 
         try {
-            BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
-            TxContext currentTX = bam.currentTransaction();
 
-            if (localTXMap.get(currentTX) == null) {
-                localTXMap.put(currentTX, new HashMap<String, Object>());
+            TxContext currentTX = txContextToExtend.get();
+            if (currentTX == null) {
+                BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
+                currentTX = bam.currentTransaction();
             }
-            return localTXMap.get(currentTX);
+
+            if (beanStorePerTransaction.get(currentTX) == null) {
+                beanStorePerTransaction.put(currentTX, new HashMap<String, Object>());
+            }
+            return beanStorePerTransaction.get(currentTX);
 
         } catch (SystemException e) {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
@@ -97,6 +102,10 @@ private Map getBeansForThisTransaction() {
 
     public boolean isActive() {
 
+        if (txContextToExtend.get() != null) {
+            return true;
+        }
+
         try {
             BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
             TxContext currentTX = bam.currentTransaction();
@@ -105,5 +114,19 @@ public boolean isActive() {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
         }
     }
+
+    public static void setTxContextToExtend(TxContext currentTX) {
+
+        txContextToExtend.set(currentTX);
+    }
+
+    /**
+     * Garbage collect the beans. Call when the context is closed and can't be used again.
+     *
+     * @param currentTX the Transaction Context associated with this context.
+     */
+    public static void close(TxContext currentTX) {
+        beanStorePerTransaction.remove(currentTX);
+    }
 }
 ",2013-08-02T12:16:51Z,118
"@@ -22,6 +22,7 @@
 
 package org.jboss.narayana.compensations.impl;
 
+import com.arjuna.mw.wst.TxContext;
 import com.arjuna.wst.BusinessAgreementWithParticipantCompletionParticipant;
 import com.arjuna.wst.FaultedException;
 import com.arjuna.wst.SystemException;
@@ -41,23 +42,25 @@
 public class Participant implements BusinessAgreementWithParticipantCompletionParticipant, ConfirmCompletedParticipant {
 
     private Class<? extends CompensationHandler> compensationHandler;
-
     private Class<? extends ConfirmationHandler> confirmationHandler;
-
     private Class<? extends TransactionLoggedHandler> transactionLoggedHandler;
 
     private BeanManager beanManager;
+    private ClassLoader applicationClassloader;
+    private TxContext currentTX;
 
     private Map txDataMapState;
 
-    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass) {
+    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass, TxContext currentTX) {
 
         this.compensationHandler = compensationHandlerClass;
         this.confirmationHandler = confirmationHandlerClass;
         this.transactionLoggedHandler = transactionLoggedHandlerClass;
+        this.currentTX = currentTX;
 
         beanManager = BeanManagerUtil.getBeanManager();
         txDataMapState = TXDataMapImpl.getState();
+        applicationClassloader = Thread.currentThread().getContextClassLoader();
     }
 
     private <T extends Object> T instantiate(Class<T> clazz) {
@@ -72,21 +75,35 @@ private <T extends Object> T instantiate(Class<T> clazz) {
     public void confirmCompleted(boolean confirmed) {
 
         if (transactionLoggedHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+
             TXDataMapImpl.resume(txDataMapState);
             TransactionLoggedHandler handler = instantiate(transactionLoggedHandler);
             handler.transactionLogged(confirmed);
             TXDataMapImpl.suspend();
+
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
     @Override
     public void close() throws WrongStateException, SystemException {
 
         if (confirmationHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+            CompensationContext.setTxContextToExtend(currentTX);
+
             TXDataMapImpl.resume(txDataMapState);
             ConfirmationHandler handler = instantiate(confirmationHandler);
             handler.confirm();
             TXDataMapImpl.suspend();
+
+            CompensationContext.close(currentTX);
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
@@ -100,10 +117,18 @@ public void compensate() throws FaultedException, WrongStateException, SystemExc
 
         try {
             if (compensationHandler != null) {
+
+                ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+                Thread.currentThread().setContextClassLoader(applicationClassloader);
+                CompensationContext.setTxContextToExtend(currentTX);
                 TXDataMapImpl.resume(txDataMapState);
+
                 CompensationHandler handler = instantiate(compensationHandler);
                 handler.compensate();
+
                 TXDataMapImpl.suspend();
+                CompensationContext.close(currentTX);
+                Thread.currentThread().setContextClassLoader(origClassLoader);
             }
         } catch (Exception e) {
             e.printStackTrace();",2013-08-02T12:16:51Z,119
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends CompensationHandler> compensationHandler = getCompensationHandler(method);
-        Participant compensationParticipant = new Participant(compensationHandler, null, null);
+        Participant compensationParticipant = new Participant(compensationHandler, null, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,120
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends ConfirmationHandler> confirmationHandler = getConfirmationHandler(method);
-        Participant compensationParticipant = new Participant(null, confirmationHandler, null);
+        Participant compensationParticipant = new Participant(null, confirmationHandler, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,121
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends TransactionLoggedHandler> transactionLogHandler = getTransactionLoggedHandler(method);
-        Participant compensationParticipant = new Participant(null, null, transactionLogHandler);
+        Participant compensationParticipant = new Participant(null, null, transactionLogHandler, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,122
"@@ -20,50 +20,59 @@
  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  */
 
-package org.jboss.narayana.compensations.functional;
+package org.jboss.narayana.compensations.functional.compensationScoped;
 
 import com.arjuna.mw.wst.TxContext;
 import com.arjuna.mw.wst11.BusinessActivityManager;
 import com.arjuna.mw.wst11.BusinessActivityManagerFactory;
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
-import junit.framework.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;
 import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
 import org.jboss.narayana.compensations.functional.common.DummyData;
 import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.JavaArchive;
-import org.junit.After;
 import org.junit.AfterClass;
+import org.junit.Assert;
+import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
 import javax.enterprise.context.ContextNotActiveException;
 import javax.inject.Inject;
 
+
 /**
  * @author paul.robinson@redhat.com 22/03/2013
  */
 @RunWith(Arquillian.class)
 public class CompensationScopedTest {
 
+    @Inject
+    Service service;
+
     @Inject
     DummyData dummyData;
 
     UserBusinessActivity uba = UserBusinessActivityFactory.userBusinessActivity();
     BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
 
+
     @Deployment
     public static JavaArchive createTestArchive() {
 
         JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
                 .addPackages(true, ""org.jboss.narayana.compensations.functional"")
+                .addClass(ParticipantCompletionCoordinatorRules.class)
                 .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"")
                 .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
 
@@ -77,14 +86,30 @@ public static JavaArchive createTestArchive() {
         return archive;
     }
 
-    @After
-    public void tearDown() {
 
-        try {
-            uba.close();
-        } catch (Exception e) {
-            // do nothing
-        }
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+
+    @Before
+    public void resetParticipants() {
+
+        DataConfirmationHandler.reset();
+        DataCompensationHandler.reset();
+        DataTxLoggedHandler.reset();
+
+        MyCompensationHandler.dataAvailable = false;
+        MyConfirmationHandler.dataAvailable = false;
+        MyTransactionLoggedHandler.dataAvailable = false;
     }
 
     @Test
@@ -160,4 +185,41 @@ private void assertContextUnavailable() {
     }
 
 
-}
\ No newline at end of file
+    @Test
+    public void testCompensationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.cancel();
+
+        Assert.assertEquals(true, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(false, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+
+    @Test
+    public void testConfirmationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.close();
+
+        Assert.assertEquals(false, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(true, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+}",2013-08-02T12:16:51Z,123
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+@CompensationScoped
+@Named
+public class DataPojo implements Serializable {
+
+    private String data;
+
+    public String getData() {
+
+        return data;
+    }
+
+    public void setData(String data) {
+
+        this.data = data;
+    }
+}",2013-08-02T12:16:51Z,124
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyCompensationHandler implements CompensationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void compensate() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,125
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyConfirmationHandler implements ConfirmationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void confirm() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,126
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+import org.jboss.narayana.compensations.api.TransactionLoggedHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyTransactionLoggedHandler implements TransactionLoggedHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void transactionLogged(boolean success) {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,127
"@@ -0,0 +1,53 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
+import org.jboss.narayana.compensations.functional.common.MyRuntimeException;
+import org.jboss.narayana.txframework.api.management.TXDataMap;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 24/04/2013
+ */
+public class Service {
+
+    @Inject
+    DataPojo myData;
+
+    @Compensatable
+    @TxCompensate(MyCompensationHandler.class)
+    @TxLogged(MyTransactionLoggedHandler.class)
+    @TxConfirm(MyConfirmationHandler.class)
+    public void doWork(String setValue) throws MyRuntimeException {
+        myData.setData(setValue);
+    }
+
+}",2013-08-02T12:16:51Z,128
"@@ -39,8 +39,10 @@
         <configuration>
             <property name=""serverConfig"">standalone-xts.xml</property>
             <property name=""javaVmArguments"">${server.jvm.args}</property>
+            <property name=""javaVmArguments"">-Xmx512m -XX:MaxPermSize=128m
+                            -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n ${server.jvm.args}</property>
             <property name=""managementAddress"">${node.address}</property>
         </configuration>
     </container>
 
-</arquillian>
\ No newline at end of file
+</arquillian>",2013-08-02T12:16:51Z,129
"@@ -1,15 +1,15 @@
 <!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd"">
 <properties>
 	<entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.tablePrefix"">Action</entry>
 	<entry key=""ObjectStoreEnvironmentBean.dropTable"">true</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.tablePrefix"">stateStore</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.dropTable"">true</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
 </properties>
\ No newline at end of file",2015-01-07T14:56:23Z,130
"@@ -51,6 +51,7 @@
 import java.util.concurrent.Executor;
 
 import javax.sql.XAConnection;
+import javax.sql.XADataSource;
 import javax.transaction.RollbackException;
 import javax.transaction.Status;
 import javax.transaction.SystemException;
@@ -94,22 +95,29 @@ public ConnectionImple(String dbName, Properties info) throws SQLException
 		String user = null;
 		String passwd = null;
 		String dynamic = null;
+		Object xaDataSource = null;
 
 		if (info != null)
 		{
 			user = info.getProperty(TransactionalDriver.userName);
 			passwd = info.getProperty(TransactionalDriver.password);
 			dynamic = info.getProperty(TransactionalDriver.dynamicClass);
+			xaDataSource = info.get(TransactionalDriver.XADataSource);
 		}
 
-		if ((dynamic == null) || (dynamic.equals("""")))
+		if (xaDataSource != null)
 		{
-			_recoveryConnection = new IndirectRecoverableConnection(dbName,
+			_transactionalDriverXAConnectionConnection = new ProvidedXADataSourceConnection(dbName, user,
+					passwd, (XADataSource) xaDataSource, this);	
+		}
+		else if ((dynamic == null) || (dynamic.equals("""")))
+		{
+			_transactionalDriverXAConnectionConnection = new IndirectRecoverableConnection(dbName,
 					user, passwd, this);
 		}
 		else
 		{
-			_recoveryConnection = new DirectRecoverableConnection(dbName, user,
+			_transactionalDriverXAConnectionConnection = new DirectRecoverableConnection(dbName, user,
 					passwd, dynamic, this);
 		}
 
@@ -124,25 +132,30 @@ public ConnectionImple(String dbName, Properties info) throws SQLException
 	public ConnectionImple(String dbName, String user, String passwd)
 			throws SQLException
 	{
-		this(dbName, user, passwd, null);
+		this(dbName, user, passwd, null, null);
 	}
 
 	public ConnectionImple(String dbName, String user, String passwd,
-			String dynamic) throws SQLException
+			String dynamic, Object xaDataSource) throws SQLException
 	{
 		if (jdbcLogger.logger.isTraceEnabled()) {
             jdbcLogger.logger.trace(""ConnectionImple.ConnectionImple ( "" + dbName + "", "" + user
                     + "", "" + passwd + "", "" + dynamic + "" )"");
         }
 
-		if ((dynamic == null) || (dynamic.equals("""")))
+		if (xaDataSource != null)
+		{
+			_transactionalDriverXAConnectionConnection = new ProvidedXADataSourceConnection(dbName, user,
+					passwd, (XADataSource) xaDataSource, this);	
+		}
+		else if ((dynamic == null) || (dynamic.equals("""")))
 		{
-			_recoveryConnection = new IndirectRecoverableConnection(dbName,
+			_transactionalDriverXAConnectionConnection = new IndirectRecoverableConnection(dbName,
 					user, passwd, this);
 		}
 		else
 		{
-			_recoveryConnection = new DirectRecoverableConnection(dbName, user,
+			_transactionalDriverXAConnectionConnection = new DirectRecoverableConnection(dbName, user,
 					passwd, dynamic, this);
 		}
 
@@ -290,7 +303,7 @@ public void close() throws SQLException
 	         * can't.
 	         */
 
-	        if (!_recoveryConnection.inuse())
+	        if (!_transactionalDriverXAConnectionConnection.inuse())
 	        {
 	            ConnectionManager.remove(this); // finalize?
 	        }
@@ -313,9 +326,9 @@ public void close() throws SQLException
 
 	        if (tx != null)
 	        {
-	            if (_recoveryConnection.validTransaction(tx))
+	            if (_transactionalDriverXAConnectionConnection.validTransaction(tx))
 	            {
-	                XAResource xares = _recoveryConnection.getResource();
+	                XAResource xares = _transactionalDriverXAConnectionConnection.getResource();
 
 	                if (!tx.delistResource(xares, XAResource.TMSUCCESS))
 	                    throw new SQLException(
@@ -355,7 +368,7 @@ public void close() throws SQLException
 
 	                if (delayClose)
 	                {
-        	                tx.registerSynchronization(new ConnectionSynchronization(_theConnection, _recoveryConnection));
+        	                tx.registerSynchronization(new ConnectionSynchronization(_theConnection, _transactionalDriverXAConnectionConnection));
 
                                 _theConnection = null;
 	                }
@@ -367,7 +380,7 @@ public void close() throws SQLException
 	        if (!delayClose)  // close now
 	        {
 	            if (_theModifier != null)
-	                _recoveryConnection.closeCloseCurrentConnection();
+	                _transactionalDriverXAConnectionConnection.closeCloseCurrentConnection();
 
 	           
 	            if (_theConnection != null && !_theConnection.isClosed())
@@ -421,7 +434,7 @@ public DatabaseMetaData getMetaData() throws SQLException
 
 	public void setReadOnly(boolean ro) throws SQLException
 	{
-		if (!_recoveryConnection.inuse())
+		if (!_transactionalDriverXAConnectionConnection.inuse())
 		{
 			getConnection().setReadOnly(ro);
 		}
@@ -486,7 +499,11 @@ public void clearWarnings() throws SQLException
 
 	public final RecoverableXAConnection recoveryConnection()
 	{
-		return _recoveryConnection;
+		if (_transactionalDriverXAConnectionConnection instanceof RecoverableXAConnection) {
+			return (RecoverableXAConnection) _transactionalDriverXAConnectionConnection;
+		} else {
+			return null;
+		}
 	}
 
 	/*
@@ -825,7 +842,7 @@ protected final XAResource getXAResource()
 	{
 		try
 		{
-			return _recoveryConnection.getResource();
+			return _transactionalDriverXAConnectionConnection.getResource();
 		}
 		catch (Exception e)
 		{
@@ -860,7 +877,7 @@ final java.sql.Connection getConnection() throws SQLException
 		if (_theConnection != null && !_theConnection.isClosed())
 			return _theConnection;
 
-		XAConnection xaConn = _recoveryConnection.getConnection();
+		XAConnection xaConn = _transactionalDriverXAConnectionConnection.getConnection();
 
 		if (xaConn != null)
 		{
@@ -897,7 +914,7 @@ final java.sql.Connection getConnection() throws SQLException
 
 	final ConnectionControl connectionControl()
 	{
-		return (ConnectionControl) _recoveryConnection;
+		return (ConnectionControl) _transactionalDriverXAConnectionConnection;
 	}
 
 	protected final boolean transactionRunning() throws SQLException
@@ -959,7 +976,7 @@ protected final synchronized void registerDatabase() throws SQLException
 				 * Already enlisted with this transaction?
 				 */
 
-				if (!_recoveryConnection.setTransaction(tx))
+				if (!_transactionalDriverXAConnectionConnection.setTransaction(tx))
 					throw new SQLException( jdbcLogger.i18NLogger.get_alreadyassociated() );
 
 				Object[] params;
@@ -969,7 +986,7 @@ protected final synchronized void registerDatabase() throws SQLException
 				else
 					params = new Object[1];
 
-				params[com.arjuna.ats.jta.transaction.Transaction.XACONNECTION] = _recoveryConnection;
+				params[com.arjuna.ats.jta.transaction.Transaction.XACONNECTION] = _transactionalDriverXAConnectionConnection;
 
 				if (_theModifier != null)
 					params[com.arjuna.ats.jta.transaction.Transaction.XAMODIFIER] = (XAModifier) _theModifier;
@@ -978,7 +995,7 @@ protected final synchronized void registerDatabase() throws SQLException
 				 * Use our extended version of enlistResource.
 				 */
 
-				xares = _recoveryConnection.getResource();
+				xares = _transactionalDriverXAConnectionConnection.getResource();
 
 				if (!((com.arjuna.ats.jta.transaction.Transaction) tx)
 						.enlistResource(xares, params))
@@ -1057,7 +1074,7 @@ protected final void checkTransaction() throws SQLException
 			 * Now check that we are not already associated with a transaction.
 			 */
 
-			if (!_recoveryConnection.validTransaction(tx))
+			if (!_transactionalDriverXAConnectionConnection.validTransaction(tx))
 				throw new SQLException(
 						jdbcLogger.i18NLogger.get_alreadyassociatedcheck());
 		}
@@ -1087,7 +1104,7 @@ private final void getModifier()
 
 				_theModifier = ModifierFactory.getModifier(name, major, minor);
 
-				((ConnectionControl) _recoveryConnection)
+				((ConnectionControl) _transactionalDriverXAConnectionConnection)
 						.setModifier((ConnectionModifier) _theModifier);
 			}
 			catch (Exception ex)
@@ -1097,7 +1114,7 @@ private final void getModifier()
 		}
 	}
 
-	private RecoverableXAConnection _recoveryConnection;
+	private TransactionalDriverXAConnection _transactionalDriverXAConnectionConnection;
 
 	private java.lang.Object _theModifier;
 ",2015-01-07T14:56:23Z,5
"@@ -34,6 +34,7 @@
 import java.sql.Connection;
 import java.sql.SQLException;
 import java.util.HashSet;
+import java.util.Iterator;
 import java.util.Properties;
 import java.util.Set;
 
@@ -67,8 +68,10 @@ public static synchronized Connection create (String dbUrl, Properties info) thr
         
         if (poolingEnabled)
         {
-            for (ConnectionImple conn : _connections)
+        	Iterator<ConnectionImple> iterator = _connections.iterator();
+            while (iterator.hasNext())
             {
+            	ConnectionImple conn = iterator.next();
                 ConnectionControl connControl = conn.connectionControl();
                 TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
                 Transaction tx1, tx2 = null;
@@ -116,7 +119,7 @@ public static synchronized Connection create (String dbUrl, Properties info) thr
                     // no longer being used by a transaction, so let's discard. JBTM-764
 
                     if (tx1 == null)
-                        remove(conn);
+                        iterator.remove();
                 }
             }
         }",2015-01-07T14:56:23Z,131
"@@ -47,7 +47,7 @@
 public class ConnectionSynchronization implements Synchronization
 {
 
-    public ConnectionSynchronization (Connection conn, RecoverableXAConnection rxac)
+    public ConnectionSynchronization (Connection conn, TransactionalDriverXAConnection rxac)
     {
 	_theConnection = conn;
 	_recoveryConnection = rxac;
@@ -76,6 +76,6 @@ public void beforeCompletion()
     }
 
     private Connection _theConnection = null;
-    private RecoverableXAConnection _recoveryConnection;
+    private TransactionalDriverXAConnection _recoveryConnection;
 }
 ",2015-01-07T14:56:23Z,6
"@@ -55,7 +55,7 @@
  * @since JTS 2.0.
  */
 
-public class DirectRecoverableConnection implements RecoverableXAConnection, ConnectionControl
+public class DirectRecoverableConnection implements RecoverableXAConnection, ConnectionControl, TransactionalDriverXAConnection
 {
 
     public DirectRecoverableConnection () throws SQLException",2015-01-07T14:56:23Z,132
"@@ -60,7 +60,7 @@
  * @since JTS 2.0.
  */
 
-public class IndirectRecoverableConnection implements RecoverableXAConnection, ConnectionControl
+public class IndirectRecoverableConnection implements RecoverableXAConnection, ConnectionControl, TransactionalDriverXAConnection
 {
 
     public IndirectRecoverableConnection () throws SQLException",2015-01-07T14:56:23Z,133
"@@ -0,0 +1,311 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 1998, 1999, 2000, 2001,
+ *
+ * Arjuna Solutions Limited,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: DirectRecoverableConnection.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.arjuna.ats.internal.jdbc;
+
+import java.sql.SQLException;
+
+import javax.sql.XAConnection;
+import javax.sql.XADataSource;
+import javax.transaction.Transaction;
+import javax.transaction.xa.XAResource;
+
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.state.OutputObjectState;
+import com.arjuna.ats.internal.arjuna.common.ClassloadingUtility;
+import com.arjuna.ats.internal.jdbc.drivers.modifiers.ConnectionModifier;
+import com.arjuna.ats.jdbc.logging.jdbcLogger;
+import com.arjuna.ats.jta.xa.RecoverableXAConnection;
+
+/**
+ * This class is responsible for maintaining connection information
+ * in such a manner that we can recover the connection to the XA
+ * database in the event of a failure.
+ *
+ * @author Mark Little (mark@arjuna.com)
+ * @version $Id: DirectRecoverableConnection.java 2342 2006-03-30 13:06:17Z  $
+ * @since JTS 2.0.
+ */
+
+public class ProvidedXADataSourceConnection implements ConnectionControl, TransactionalDriverXAConnection
+{
+
+	public ProvidedXADataSourceConnection (String dbName, String user,
+				      String passwd, XADataSource xaDatasource,
+				      ConnectionImple conn) throws SQLException
+    {
+	if (jdbcLogger.logger.isTraceEnabled()) {
+        jdbcLogger.logger.trace(""DirectRecoverableConnection.DirectRecoverableConnection( "" + dbName + "", "" + user + "", "" + passwd + "", "" + xaDatasource + "" )"");
+    }
+
+	_dbName = dbName;
+	_user = user;
+	_passwd = passwd;
+	_theConnection = null;
+	_theDataSource = xaDatasource;
+	_theTransaction = null;
+	_theArjunaConnection = conn;
+	_theModifier = null;
+    }
+
+    public void finalize ()
+    {
+	try
+	{
+	    if (_theConnection != null)
+	    {
+		_theConnection.close();
+		_theConnection = null;
+	    }
+	}
+	catch (SQLException e)
+	{
+        jdbcLogger.i18NLogger.warn_drcdest(e);
+	}
+    }
+
+    public boolean setTransaction (javax.transaction.Transaction tx)
+    {
+	synchronized (this)
+	{
+	    if (_theTransaction == null)
+	    {
+		_theTransaction = tx;
+
+		return true;
+	    }
+	}
+
+	/*
+	 * In case we have already set it for this transaction.
+	 */
+
+	return validTransaction(tx);
+    }
+
+    public boolean validTransaction (javax.transaction.Transaction tx)
+    {
+	boolean valid = true;
+
+	if (_theTransaction != null)
+	    valid = _theTransaction.equals(tx);
+
+	return valid;
+    }
+
+    /**
+     * @return a new XAResource for this connection.
+     */
+
+    public XAResource getResource () throws SQLException
+    {
+	if (jdbcLogger.logger.isTraceEnabled()) {
+        jdbcLogger.logger.trace(""DirectRecoverableConnection.getResource ()"");
+    }
+
+	try
+	{
+	    if (_theXAResource == null)
+		_theXAResource = getConnection().getXAResource();
+
+	    return _theXAResource;
+	}
+	catch (Exception e)
+	{
+	    e.printStackTrace();
+
+        SQLException sqlException = new SQLException(e.toString());
+        sqlException.initCause(e);
+        throw sqlException;
+	}
+    }
+
+    public final void close ()
+    {
+	reset();
+    }
+
+    public final void reset ()
+    {
+	_theXAResource = null;
+	_theTransaction = null;
+    }
+
+    /**
+     * If there is a connection then return it. Do not create a
+     * new connection otherwise.
+     */
+
+    public XAConnection getCurrentConnection () throws SQLException
+    {
+	return _theConnection;
+    }
+
+    public void closeCloseCurrentConnection() throws SQLException
+    {
+        synchronized (this)
+        {
+            if (_theConnection != null)
+            {
+                _theConnection.close();
+                _theConnection = null;
+				_theXAResource = null;
+            }
+        }
+    }
+
+    public XAConnection getConnection () throws SQLException
+    {
+	if (jdbcLogger.logger.isTraceEnabled()) {
+        jdbcLogger.logger.trace(""DirectRecoverableConnection.getConnection ()"");
+    }
+
+	try
+	{
+	    synchronized (this)
+	    {
+		if (_theConnection == null)
+		{
+		    createConnection();
+		}
+	    }
+
+	    return _theConnection;
+	}
+	catch (Exception e)
+	{
+	    e.printStackTrace();
+
+        SQLException sqlException = new SQLException(e.toString());
+        sqlException.initCause(e);
+	    throw sqlException;
+	}
+    }
+
+    public XADataSource getDataSource () throws SQLException
+    {
+	if (jdbcLogger.logger.isTraceEnabled()) {
+        jdbcLogger.logger.trace(""DirectRecoverableConnection.getDataSource ()"");
+    }
+
+	return _theDataSource;
+    }
+
+    public boolean inuse ()
+    {
+	return (boolean) (_theXAResource != null);
+    }
+
+    public String user ()
+    {
+	return _user;
+    }
+
+    public String password ()
+    {
+	return _passwd;
+    }
+
+    public String url ()
+    {
+	return _dbName;
+    }
+
+    public String dynamicClass ()
+    {
+	return """";
+    }
+
+    public String dataSourceName ()
+    {
+	return _dbName;
+    }
+
+    public Transaction transaction ()
+    {
+	return _theTransaction;
+    }
+
+    public void setModifier (ConnectionModifier cm)
+    {
+	_theModifier = cm;
+
+	if (_theModifier != null)
+	    _dbName = _theModifier.initialise(_dbName);
+    }
+
+    private final void createConnection () throws SQLException
+    {
+	if (jdbcLogger.logger.isTraceEnabled()) {
+        jdbcLogger.logger.trace(""DirectRecoverableConnection.createConnection"");
+    }
+
+	    try
+	    {
+		if ((_user == null) && (_passwd == null))
+		{
+		    if (jdbcLogger.logger.isTraceEnabled()) {
+                jdbcLogger.logger.trace(""DirectRecoverableConnection - getting connection with no user"");
+            }
+
+		    _theConnection = _theDataSource.getXAConnection();
+		}
+		else
+		{
+		    if (jdbcLogger.logger.isTraceEnabled()) {
+                jdbcLogger.logger.trace(""DirectRecoverableConnection - getting connection for user "" + _user);
+            }
+
+		    _theConnection = _theDataSource.getXAConnection(_user, _passwd);
+		}
+	    }
+	    catch (Exception e)
+	    {
+		e.printStackTrace();
+
+            SQLException sqlException = new SQLException(e.toString());
+            sqlException.initCause(e);
+    		throw sqlException; 
+	    }
+	}
+
+    private String		          _dbName;
+    private String		          _user;
+    private String		          _passwd;
+    private XAConnection                  _theConnection;
+    private XADataSource	          _theDataSource;
+    private XAResource                    _theXAResource;
+    private javax.transaction.Transaction _theTransaction;
+    private ConnectionImple               _theArjunaConnection;
+    private ConnectionModifier            _theModifier;
+
+}
+",2015-01-07T14:56:23Z,134
"@@ -0,0 +1,86 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 1998, 1999, 2000,
+ *
+ * Arjuna Solutions Limited,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: RecoverableXAConnection.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.arjuna.ats.internal.jdbc;
+
+import java.sql.SQLException;
+
+import javax.sql.XAConnection;
+import javax.sql.XADataSource;
+import javax.transaction.xa.XAResource;
+
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.state.OutputObjectState;
+
+/**
+ * XA connection implementations must provide an implementation
+ * of this class.
+ *
+ * @author Mark Little (mark_little@hp.com)
+ * @version $Id: RecoverableXAConnection.java 2342 2006-03-30 13:06:17Z  $
+ * @since JTS 1.2.4.
+ */
+
+// check
+
+public interface TransactionalDriverXAConnection
+{
+    public XAResource getResource () throws SQLException;
+    public XAConnection getConnection () throws SQLException;
+    void closeCloseCurrentConnection() throws SQLException;
+
+    /**
+     * @return true if the connection is being used within a transaction,
+     * false otherwise.
+     */
+
+    public boolean inuse ();
+ 
+    /**
+     * Remember the transaction we are being used within.
+     *
+     * @since JTS 2.2.
+     */
+
+    public boolean setTransaction (javax.transaction.Transaction tx);
+
+    /**
+     * Is this the same transaction?
+     *
+     * @return true if the connection can be used by this
+     * transaction, false otherwise.
+     * @since JTS 2.2.
+     */
+
+    public boolean validTransaction (javax.transaction.Transaction tx);
+ 
+}
+",2015-01-07T14:56:23Z,135
"@@ -64,7 +64,7 @@ public JDBC2RecoveryConnection (String dbName, String user, String passwd)
 	public JDBC2RecoveryConnection (String dbName, String user, String passwd,
 			String dynamic) throws SQLException
 	{
-		super(dbName, user, passwd, dynamic);
+		super(dbName, user, passwd, dynamic, null);
 	}
 
 }",2015-01-07T14:56:23Z,136
"@@ -64,6 +64,7 @@ public class TransactionalDriver implements java.sql.Driver
     public static final String dynamicClass = ""DYNAMIC_CLASS"";
     public static final String createDb = ""CREATE_DB"";
     public static final String poolConnections = ""POOL_CONNECTIONS"";
+	public static final Object XADataSource = ""XADATASOURCE"";
 
     public TransactionalDriver ()
     {",2015-01-07T14:56:23Z,137
"@@ -68,7 +68,7 @@
       <groupId>org.jboss</groupId>
       <artifactId>jboss-transaction-spi</artifactId>
       <version>${version.org.jboss.jboss-transaction-spi}</version>
-      <scope>provided</scope>
+      <scope>test</scope>
       <exclusions>
         <exclusion>
           <groupId>org.jboss.logging</groupId>
@@ -99,20 +99,42 @@
       <version>${version.org.jboss.logging.jboss-logging-processor}</version>
       <scope>provided</scope>
     </dependency>
-    		<dependency>
-			<groupId>org.apache.tomcat</groupId>
-			<artifactId>catalina</artifactId>
-			<version>6.0.33</version>
-			<scope>test</scope>
-		</dependency>
-				<dependency>
-			<groupId>org.springframework</groupId>
-			<artifactId>spring-jdbc</artifactId>
-			<version>3.2.2.RELEASE</version>
-			<scope>test</scope>
-		</dependency>
-		
-    
+ 	<dependency>
+		<groupId>org.apache.tomcat</groupId>
+		<artifactId>catalina</artifactId>
+		<version>6.0.33</version>
+		<scope>test</scope>
+	</dependency>
+	<dependency>
+		<groupId>org.springframework</groupId>
+		<artifactId>spring-jdbc</artifactId>
+		<version>3.2.2.RELEASE</version>
+		<scope>test</scope>
+	</dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+      <scope>test</scope>
+      <version>${version.org.jboss.byteman}</version>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+      <scope>test</scope>
+      <version>${version.org.jboss.byteman}</version>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-install</artifactId>
+      <scope>test</scope>
+      <version>${version.org.jboss.byteman}</version>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-bmunit</artifactId>
+      <scope>test</scope>
+      <version>${version.org.jboss.byteman}</version>
+    </dependency>
   </dependencies>
   <profiles>
     <profile>",2015-01-07T14:56:23Z,7
"@@ -50,7 +50,7 @@
 import com.arjuna.ats.internal.jdbc.DynamicClass;
 import com.arjuna.ats.jdbc.TransactionalDriver;
 
-public class JDBC2Test implements DynamicClass
+public class JDBC2Test
 {
 	protected Connection conn = null;
 	protected Connection conn2 = null;
@@ -63,15 +63,19 @@ public class JDBC2Test implements DynamicClass
     @Before
 	public void setup() throws Exception
     {
-        url = ""jdbc:arjuna:jdbc:h2:target/h2/foo"";
+        url = ""jdbc:arjuna:"";
         Properties p = System.getProperties();
         p.put(""jdbc.drivers"", Driver.class.getName());
         
         System.setProperties(p);
         DriverManager.registerDriver(new TransactionalDriver());
 
         dbProperties = new Properties();
-        dbProperties.put(TransactionalDriver.dynamicClass, JDBC2Test.class.getName());
+        
+        JdbcDataSource ds = new JdbcDataSource();
+		ds.setURL(""jdbc:h2:./h2/foo"");
+        dbProperties.put(TransactionalDriver.XADataSource, ds);
+		
 		conn = DriverManager.getConnection(url, dbProperties);
         conn2 = DriverManager.getConnection(url, dbProperties);
 	}
@@ -320,11 +324,4 @@ public void test() throws Exception
         {
         }
     }
-
-	@Override
-	public XADataSource getDataSource(String dbName) throws SQLException {
-		JdbcDataSource ds = new JdbcDataSource();
-		ds.setURL(dbName);
-		return ds;
-	}
 }",2015-01-07T14:56:23Z,138
"@@ -0,0 +1,229 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 1998, 1999, 2000,
+ *
+ * Arjuna Solutions Limited,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JDBC2Test.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jdbc.recovery;
+
+import static org.junit.Assert.assertTrue;
+
+import java.sql.Connection;
+import java.sql.DriverManager;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.sql.Statement;
+import java.util.Properties;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.h2.Driver;
+import org.h2.jdbcx.JdbcDataSource;
+import org.jboss.byteman.agent.Transformer;
+import org.jboss.byteman.contrib.bmunit.BMRule;
+import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
+import com.arjuna.ats.internal.arjuna.recovery.AtomicActionRecoveryModule;
+import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;
+import com.arjuna.ats.jdbc.TransactionalDriver;
+import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;
+
+@RunWith(BMUnitRunner.class)
+public class RecoveryTest {
+	@Test
+	@BMRule(name = ""throw exception"", targetClass = ""org.h2.jdbcx.JdbcXAConnection"", targetMethod = ""commit"", action = ""throw new javax.transaction.xa.XAException(javax.transaction.xa.XAException.XAER_RMFAIL)"", targetLocation = ""AT ENTRY"")
+	public void test() throws Exception {
+		String url = ""jdbc:arjuna:"";
+		Properties p = System.getProperties();
+		p.put(""jdbc.drivers"", Driver.class.getName());
+
+		System.setProperties(p);
+		DriverManager.registerDriver(new TransactionalDriver());
+
+		Properties dbProperties = new Properties();
+
+		final JdbcDataSource ds = new JdbcDataSource();
+		ds.setURL(""jdbc:h2:./h2/foo"");// mem:test;DB_CLOSE_DELAY=-1"");
+		dbProperties.put(TransactionalDriver.XADataSource, ds);
+
+		// 0. Setup tables
+		{
+			Connection conn = DriverManager.getConnection(url, dbProperties);
+
+			Statement stmt = conn.createStatement(); // non-tx statement
+
+			try {
+				stmt.executeUpdate(""DROP TABLE test_table"");
+			} catch (SQLException e) {
+				if (e.getErrorCode() != 42102) {
+					throw e;
+				}
+			} finally {
+				stmt.executeUpdate(""CREATE TABLE test_table (a INTEGER,b INTEGER)"");
+				stmt.close();
+			}
+
+			conn.close();
+		}
+
+		// 1. Leave a Xid in the DB
+		{
+
+			Connection conn = DriverManager.getConnection(url, dbProperties);
+			javax.transaction.TransactionManager tx = com.arjuna.ats.jta.TransactionManager
+					.transactionManager();
+
+			tx.begin();
+			tx.getTransaction().enlistResource(new DummyXAResource());
+
+			Statement stmtx = conn.createStatement(); // will be a tx-statement
+
+			stmtx.executeUpdate(""INSERT INTO test_table (a, b) VALUES (1,2)"");
+
+			tx.commit();
+			// conn.close();
+		}
+
+		// 2. Check its not in the DB already
+		{
+			Connection conn = DriverManager.getConnection(url, dbProperties);
+			Statement stmt = conn.createStatement(); // non-tx statement
+
+			ResultSet res1 = stmt.executeQuery(""SELECT * FROM test_table"");
+
+			int rowCount = 0;
+
+			while (res1.next()) {
+				rowCount++;
+			}
+
+			assertTrue(rowCount == 0);
+			conn.close();
+		}
+
+		// 3. Perform recovery
+		{
+			XARecoveryModule xarm = new XARecoveryModule();
+			xarm.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
+
+				@Override
+				public boolean initialise(String p) throws Exception {
+					return false;
+				}
+
+				@Override
+				public XAResource[] getXAResources() throws Exception {
+
+					return new XAResource[] { ds.getXAConnection()
+							.getXAResource() };
+				}
+			});
+
+			RecoveryManager manager = RecoveryManager.manager();
+			manager.addModule(xarm);
+			AtomicActionRecoveryModule aarm = new AtomicActionRecoveryModule();
+
+			aarm.periodicWorkFirstPass();
+			Transformer.disableTriggers(true);
+			aarm.periodicWorkSecondPass();
+			Transformer.enableTriggers(true);
+		}
+
+		// 4. See if its there now
+		{
+
+			Connection conn = DriverManager.getConnection(url, dbProperties);
+			Statement stmt = conn.createStatement(); // non-tx statement
+
+			ResultSet res1 = stmt.executeQuery(""SELECT * FROM test_table"");
+
+			int rowCount = 0;
+
+			while (res1.next()) {
+				rowCount++;
+			}
+
+			assertTrue(rowCount == 1);
+			conn.close();
+		}
+
+	}
+
+	private class DummyXAResource implements XAResource {
+
+		@Override
+		public void commit(Xid arg0, boolean arg1) throws XAException {
+		}
+
+		@Override
+		public void end(Xid arg0, int arg1) throws XAException {
+		}
+
+		@Override
+		public void forget(Xid arg0) throws XAException {
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource arg0) throws XAException {
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid arg0) throws XAException {
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int arg0) throws XAException {
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid arg0) throws XAException {
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int arg0) throws XAException {
+			return false;
+		}
+
+		@Override
+		public void start(Xid arg0, int arg1) throws XAException {
+		}
+	}
+}",2015-01-07T14:56:23Z,139
"@@ -3,15 +3,15 @@
     <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 
 	<entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.tablePrefix"">Action</entry>
 	<entry key=""ObjectStoreEnvironmentBean.dropTable"">true</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.tablePrefix"">stateStore</entry>
 	<entry key=""ObjectStoreEnvironmentBean.stateStore.dropTable"">true</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
-	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:./h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
 </properties>",2015-01-07T14:56:23Z,27
"@@ -434,7 +434,7 @@
     <version.org.slf4j>1.7.2.jbossorg-1</version.org.slf4j>
     <version.dom4j>1.6.1</version.dom4j>
     <version.jfree>1.0.9</version.jfree>
-    <version.com.h2database>1.3.173</version.com.h2database>
+    <version.com.h2database>1.4.182</version.com.h2database>
     <version.org.apache.tomcat>6.0.37</version.org.apache.tomcat>
     <version.org.apache.ant>1.8.2</version.org.apache.ant>
     <version.org.apache.httpcomponents>4.2.1</version.org.apache.httpcomponents>",2015-01-07T14:56:23Z,39
"@@ -30,6 +30,9 @@
 	<ORB
 		OPT=""-ORBInitRef NameService=corbaloc::${JBOSSAS_IP_ADDR}:3528/NameService -ORBListenEndpoints iiop://${JBOSSAS_IP_ADDR}:0""
 		TRANS_FACTORY_ID=""TransactionManagerService.OTS""/>
+	<TXN_CFG
+		MGR_URL=""http://${JBOSSAS_IP_ADDR}:8080/rest-at-coordinator/tx/transaction-manager""
+		RES_EP=""127.0.0.1:8888"" />
 	<SOCKETSERVER PORT=""12345"" />
 	<MQ HOST=""${JBOSSAS_IP_ADDR}"" PORT=""61613"" USER=""guest"" PASSWORD=""password1@""
 		RECEIVE_TIMEOUT=""10"" TIME_TO_LIVE=""40""",2013-09-29T03:45:14Z,140
"@@ -44,5 +44,7 @@
         <module name=""org.apache.log4j""/>
         <module name=""org.apache.commons.logging""/>
         <module name=""org.omg.api""/>
+
+        <module name=""org.jboss.narayana.rts""/>
     </dependencies>
 </module>",2013-09-29T03:45:14Z,141
"@@ -54,6 +54,11 @@
     </build>
 
     <dependencies>
+        <dependency>
+            <groupId>org.jboss.narayana.rts</groupId>
+            <artifactId>restat-bridge</artifactId>
+        </dependency>
+
         <dependency>
             <groupId>org.slf4j</groupId>
             <artifactId>jcl-over-slf4j</artifactId>",2013-09-29T03:45:14Z,142
"@@ -38,6 +38,7 @@
 import javax.naming.NamingException;
 import javax.transaction.SystemException;
 import javax.transaction.TransactionManager;
+import javax.transaction.xa.Xid;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -46,6 +47,8 @@
 import org.codehaus.stomp.StompFrame;
 import org.codehaus.stomp.StompFrameError;
 import org.codehaus.stomp.tcp.TcpTransport;
+import org.jboss.narayana.rest.bridge.inbound.InboundBridge;
+import org.jboss.narayana.rest.bridge.inbound.InboundBridgeManager;
 import org.omg.CosTransactions.Control;
 
 import com.arjuna.ats.internal.jta.transaction.jts.AtomicTransaction;
@@ -55,7 +58,7 @@
 
 /**
  * A protocol switch between JMS and Stomp
-  *
+ *
  * @author <a href=""http://people.apache.org/~jstrachan/"">James Strachan</a>
  * @author <a href=""http://hiramchirino.com"">chirino</a>
  */
@@ -65,7 +68,7 @@ public class ProtocolConverter {
     private ConnectionFactory noneXAConnectionFactory;
     private XAConnectionFactory xaConnectionFactory;
     private StompSession noneXaSession;
-    private Map<TransactionImple, StompSession> xaSessions = new ConcurrentHashMap<TransactionImple, StompSession>();
+    private Map<Xid, StompSession> xaSessions = new ConcurrentHashMap<Xid, StompSession>();
 
     private TransactionManager tm;
     private String login;
@@ -86,9 +89,9 @@ public ProtocolConverter(InitialContext initialContext, ConnectionFactory connec
 
     /**
      * Convert an IOR representing an OTS transaction into a JTA transaction
-          *
+     *
      * @param orb
-          *
+     *
      * @param ior the CORBA reference for the OTS transaction
      * @return a JTA transaction that wraps the OTS transaction
      */
@@ -102,7 +105,6 @@ private static TransactionImple controlToTx(String ior) {
             log.debug(""controlToTx: creating a new tx - wrapper: "" + cw);
             tx = new JtsTransactionImple(cw);
         }
-
         return tx;
     }
 
@@ -147,7 +149,7 @@ public void close() {
 
     /**
      * Process a Stomp Frame
-          *
+     *
      * @throws IOException
      */
     public void onStompFrame(StompFrame command) throws IOException {
@@ -275,18 +277,33 @@ protected void onStompSend(StompFrame command) throws IllegalStateException, Sys
         String xid = (String) headers.get(""messagexid"");
 
         if (xid != null) {
-            log.trace(""Transaction was propagated: "" + xid);
-            TransactionImple tx = controlToTx(xid);
-            tm.resume(tx);
-            log.trace(""Resumed transaction: "" + tx);
-
-            // Enlist the resource BLACKTIE-308 we no longer need to enlist the JMS resource as JCA does this for us
-            StompSession session = getXASession(tx);
-
-            session.sendToJms(command);
-
-            tm.suspend();
-            log.trace(""Suspended transaction: "" + tx);
+            if (xid.startsWith(""IOR"")) {
+                log.trace(""OTS Transaction was propagated: "" + xid);
+                TransactionImple tx = controlToTx(xid);
+                tm.resume(tx);
+                log.trace(""Resumed transaction: "" + tx);
+
+                // Enlist the resource BLACKTIE-308 we no longer need to enlist the JMS resource as JCA does this for us
+                StompSession session = getXASession(tx.getTxId());
+
+                session.sendToJms(command);
+
+                tm.suspend();
+                log.trace(""Suspended transaction: "" + tx);
+            } else if (xid.startsWith(""http"")) {
+                log.trace(""RTS Transaction was propagated: "" + xid);
+
+                String enlistmentUrl = xid;
+                final InboundBridge inboundBridge = InboundBridgeManager.getInstance().createInboundBridge(enlistmentUrl);
+                log.trace(""Start inboundBridge"");
+                inboundBridge.start();
+                StompSession session = getXASession(inboundBridge.getXid());
+                session.sendToJms(command);
+                inboundBridge.stop();
+                log.trace(""Stop inboundBridge"");
+            } else {
+                log.error(xid + "" is not OTS or RTS transaction"");
+            }
         } else {
             String destinationName = (String) headers.get(Stomp.Headers.Send.DESTINATION);
             log.trace(""WAS NULL XID: "" + destinationName);
@@ -304,21 +321,37 @@ protected void onStompReceive(StompFrame command) throws IllegalStateException,
         Map<String, Object> headers = command.getHeaders();
         String destinationName = (String) headers.remove(Stomp.Headers.Send.DESTINATION);
         String xid = (String) headers.get(""messagexid"");
-        Message msg;
-        StompSession session;
+        Message msg = null;
+        StompSession session = null;
         if (xid != null) {
-            log.trace(""Transaction was propagated: "" + xid);
-            TransactionImple tx = controlToTx(xid);
-            tm.resume(tx);
-            log.trace(""Resumed transaction: "" + tx);
-
-            // Enlist the resource
-            session = getXASession(tx);
-
-            msg = session.receiveFromJms(destinationName, headers);
+            if (xid.startsWith(""IOR"")){
+                log.trace(""OTS Transaction was propagated: "" + xid);
+                TransactionImple tx = controlToTx(xid);
+                tm.resume(tx);
+                log.trace(""Resumed transaction: "" + tx);
+
+                // Enlist the resource
+                session = getXASession(tx.getTxId());
+
+                msg = session.receiveFromJms(destinationName, headers);
+
+                tm.suspend();
+                log.trace(""Suspended transaction: "" + tx);
+            } else if (xid.startsWith(""http"")){
+                log.trace(""RTS Transaction was propagated: "" + xid);
+
+                String enlistmentUrl = xid;
+                final InboundBridge inboundBridge = InboundBridgeManager.getInstance().createInboundBridge(enlistmentUrl);
+                log.trace(""Start inboundBridge"");
+                inboundBridge.start();
+                session = getXASession(inboundBridge.getXid());
+                msg = session.receiveFromJms(destinationName, headers);
+                inboundBridge.stop();
+                log.trace(""Stop inboundBridge"");
 
-            tm.suspend();
-            log.trace(""Suspended transaction: "" + tx);
+            } else {
+                log.error(xid + "" is not OTS or RTS transaction"");
+            }
         } else {
             log.trace(""WAS NULL XID"");
             session = noneXaSession;
@@ -415,8 +448,8 @@ protected String createSubscriptionId(Map<String, Object> headers) {
         return ""/subscription-to/"" + headers.get(Stomp.Headers.Subscribe.DESTINATION);
     }
 
-    protected StompSession getXASession(TransactionImple tx) throws JMSException {
-        StompSession xaSession = xaSessions.get(tx);
+    protected StompSession getXASession(Xid xid) throws JMSException {
+        StompSession xaSession = xaSessions.get(xid);
         if (xaSession == null) {
 
             XAConnection xaConnection;
@@ -435,7 +468,7 @@ protected StompSession getXASession(TransactionImple tx) throws JMSException {
             }
             xaSession = new StompSession(initialContext, this, session, xaConnection);
             log.trace(""Created XA Session"");
-            xaSessions.put(tx, xaSession);
+            xaSessions.put(xid, xaSession);
         } else {
             log.trace(""Returned existing XA session"");
         }
@@ -473,7 +506,7 @@ private static class JtsTransactionImple extends TransactionImple {
 
         /**
          * Construct a transaction based on an OTS control
-                  *
+         *
          * @param wrapper the wrapped OTS control
          */
         public JtsTransactionImple(ControlWrapper wrapper) {",2013-09-29T03:45:14Z,143
"@@ -21,6 +21,6 @@
   -->
 <server-provisioning xmlns=""urn:wildfly:server-provisioning:1.0"">
     <feature-packs>
-		<artifact groupId=""org.jboss.narayana.blacktie"" artifactId=""wildfly-blacktie-feature-pack"" version=""${project.version}""/>
+		<feature-pack groupId=""org.jboss.narayana.blacktie"" artifactId=""wildfly-blacktie-feature-pack"" version=""${project.version}""/>
     </feature-packs>
 </server-provisioning>",2014-10-23T06:57:10Z,144
"@@ -403,9 +403,9 @@
     
     <!-- External dependencies versions -->
     <jboss-as.version>9.0.0.Alpha2-SNAPSHOT</jboss-as.version>
-    <version.org.wildfly.core>1.0.0.Alpha5</version.org.wildfly.core>
-    <version.org.wildfly.build-tools>1.0.0.Alpha4</version.org.wildfly.build-tools>
-    <version.org.wildfly.arquillian>1.0.0.Alpha1</version.org.wildfly.arquillian>
+    <version.org.wildfly.core>1.0.0.Alpha9</version.org.wildfly.core>
+    <version.org.wildfly.build-tools>1.0.0.Alpha6</version.org.wildfly.build-tools>
+    <version.org.wildfly.arquillian>1.0.0.Alpha2</version.org.wildfly.arquillian>
     <version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>1.0.0.Final</version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>
     <version.org.jboss.jandex>1.1.0.Final</version.org.jboss.jandex>
     <version.rhino.js>1.7R2</version.rhino.js>",2014-10-23T06:57:10Z,39
"@@ -67,7 +67,7 @@ private OSBType(boolean enabled, String recordClass, String beanClass, String ty
                     true,
                     ""com.arjuna.ats.internal.jta.tools.osb.mbean.jts.ArjunaTransactionImpleWrapper"",
                     ""com.arjuna.ats.arjuna.tools.osb.mbean.ActionBean"",
-                    """"
+                    ""StateManager/BasicAction/TwoPhaseCoordinator/ArjunaTransactionImple""
             )
 
     };",2014-11-13T13:20:36Z,45
"@@ -57,6 +57,7 @@
 import com.arjuna.ats.internal.arjuna.common.UidHelper;
 import com.arjuna.ats.internal.jta.xa.XID;
 import com.arjuna.ats.jta.common.JTAEnvironmentBean;
+import com.arjuna.ats.jta.logging.jtaLogger;
 import com.arjuna.ats.jta.xa.XidImple;
 import com.arjuna.common.internal.util.propertyservice.BeanPopulator;
 
@@ -135,7 +136,10 @@ public CommitMarkableResourceRecordRecoveryModule() throws NamingException,
 		}
 
 		List<String> xaRecoveryNodes = jtaEnvironmentBean.getXaRecoveryNodes();
-		if (xaRecoveryNodes
+        if (xaRecoveryNodes.size() == 0) {
+            jtaLogger.i18NLogger.info_recovery_noxanodes();
+			whereFilter = """";
+        } else if (xaRecoveryNodes
 				.contains(NodeNameXAResourceOrphanFilter.RECOVER_ALL_NODES)) {
 			whereFilter = """";
 		} else {",2014-11-13T13:20:36Z,42
"@@ -1,11 +1,6 @@
 package com.hp.mwtests.ts.jta.jts.tools;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-
+import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -34,6 +29,15 @@
 import com.hp.mwtests.ts.jta.jts.common.ExtendedCrashRecord;
 import com.hp.mwtests.ts.jta.jts.common.TestBase;
 
+import javax.management.MBeanServer;
+import javax.management.ObjectInstance;
+import javax.management.ObjectName;
+import java.util.Set;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import static org.junit.Assert.*;
+
 /**
  * Test the the ObjStoreBrowser MBean in a JTS environment.
  */
@@ -62,12 +66,17 @@ public void tearDown () throws Exception
 		rcm.stop(false);
 	}
 
-	private ObjStoreBrowser createObjStoreBrowser() {
+	private ObjStoreBrowser createObjStoreBrowser(boolean probe) {
 		ObjStoreBrowser osb = new ObjStoreBrowser();
 
 		osb.setType(""com.arjuna.ats.arjuna.AtomicAction"", ""com.arjuna.ats.internal.jta.tools.osb.mbean.jta.JTAActionBean"");
 		osb.setType(""com.arjuna.ats.internal.jta.tools.osb.mbean.jts.ArjunaTransactionImpleWrapper"", ""com.arjuna.ats.arjuna.tools.osb.mbean.ActionBean"");
 
+		if (probe) {
+			osb.start();
+			osb.probe();
+		}
+
 		return osb;
 	}
 
@@ -137,6 +146,41 @@ public void jtsReplayTest() throws Exception {
 		finishTest(A, true, recs);
 	}
 
+    /**
+     * Test that MBeans corresponding to JTS record types are created
+     * @throws Exception
+     */
+    @Test
+    public void jtsMBeanTest() throws Exception {
+        ArjunaTransactionImple A = new ArjunaTransactionImple(null);
+
+        startTest(A);
+
+        try {
+            A.commit(true);
+            fail(""transaction commit should have produced a heuristic hazzard"");
+        } catch (HeuristicHazard e) {
+        }
+
+        createObjStoreBrowser(true); // start an mbean server and object store browser
+
+        // there should now be an MBean entry corresponding to a JTS record, read it via JMX:
+        MBeanServer mbs = JMXServer.getAgent().getServer();
+        Set<ObjectInstance> transactions = mbs.queryMBeans(new ObjectName(""jboss.jta:type=ObjectStore,*""), null);
+        boolean foundJTSType = false;
+        Pattern pattern = Pattern.compile(""itype=(.*?),"");
+
+        for (ObjectInstance oi : transactions) {
+            String id = oi.getObjectName().getCanonicalName();
+            Matcher matcher = pattern.matcher(id);
+
+            while (matcher.find())
+                foundJTSType = true; // matched type is in matcher.group(1)
+        }
+
+        assertTrue(""MBean for JTS record type not found"", foundJTSType);
+    }
+
 	/**
 	 * Similar to aaRemoveTest but uses a JTS transaction instead of an AtomicAction
 	 * @throws Exception if test fails unexpectedly
@@ -187,7 +231,7 @@ private ExtendedCrashRecord[] startTest(TwoPhaseCoordinator A) throws Exception
 	 * checking that the MBeans have all been unregistered from the MBeanServer.
 	 */
 	private void finishTest(TwoPhaseCoordinator A, boolean replay, ExtendedCrashRecord ... recs) throws Exception {
-		ObjStoreBrowser osb = createObjStoreBrowser();
+		ObjStoreBrowser osb = createObjStoreBrowser(false);
 
 		// there should now be an entry in the object store containing two participants
 		osb.start();",2014-11-13T13:20:36Z,145
"@@ -1,11 +1,6 @@
 package com.hp.mwtests.ts.jta.jts.tools;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertFalse;
-import static org.junit.Assert.assertNotNull;
-import static org.junit.Assert.assertNull;
-import static org.junit.Assert.assertTrue;
-
+import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -34,6 +29,15 @@
 import com.hp.mwtests.ts.jta.jts.common.ExtendedCrashRecord;
 import com.hp.mwtests.ts.jta.jts.common.TestBase;
 
+import javax.management.MBeanServer;
+import javax.management.ObjectInstance;
+import javax.management.ObjectName;
+import java.util.Set;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+import static org.junit.Assert.*;
+
 /**
  * Test the the ObjStoreBrowser MBean in a JTS environment.
  */
@@ -62,12 +66,17 @@ public void tearDown () throws Exception
 		rcm.stop(false);
 	}
 
-	private ObjStoreBrowser createObjStoreBrowser() {
+	private ObjStoreBrowser createObjStoreBrowser(boolean probe) {
 		ObjStoreBrowser osb = new ObjStoreBrowser();
 
 		osb.setType(""com.arjuna.ats.arjuna.AtomicAction"", ""com.arjuna.ats.internal.jta.tools.osb.mbean.jta.JTAActionBean"");
 		osb.setType(""com.arjuna.ats.internal.jta.tools.osb.mbean.jts.ArjunaTransactionImpleWrapper"", ""com.arjuna.ats.arjuna.tools.osb.mbean.ActionBean"");
 
+		if (probe) {
+			osb.start();
+			osb.probe();
+		}
+
 		return osb;
 	}
 
@@ -137,6 +146,41 @@ public void jtsReplayTest() throws Exception {
 		finishTest(A, true, recs);
 	}
 
+    /**
+     * Test that MBeans corresponding to JTS record types are created
+     * @throws Exception
+     */
+    @Test
+    public void jtsMBeanTest() throws Exception {
+        ArjunaTransactionImple A = new ArjunaTransactionImple(null);
+
+        startTest(A);
+
+        try {
+            A.commit(true);
+            fail(""transaction commit should have produced a heuristic hazzard"");
+        } catch (HeuristicHazard e) {
+        }
+
+        createObjStoreBrowser(true); // start an mbean server and object store browser
+
+        // there should now be an MBean entry corresponding to a JTS record, read it via JMX:
+        MBeanServer mbs = JMXServer.getAgent().getServer();
+        Set<ObjectInstance> transactions = mbs.queryMBeans(new ObjectName(""jboss.jta:type=ObjectStore,*""), null);
+        boolean foundJTSType = false;
+        Pattern pattern = Pattern.compile(""itype=(.*?),"");
+
+        for (ObjectInstance oi : transactions) {
+            String id = oi.getObjectName().getCanonicalName();
+            Matcher matcher = pattern.matcher(id);
+
+            while (matcher.find())
+                foundJTSType = true; // matched type is in matcher.group(1)
+        }
+
+        assertTrue(""MBean for JTS record type not found"", foundJTSType);
+    }
+
 	/**
 	 * Similar to aaRemoveTest but uses a JTS transaction instead of an AtomicAction
 	 * @throws Exception if test fails unexpectedly
@@ -187,7 +231,7 @@ private ExtendedCrashRecord[] startTest(TwoPhaseCoordinator A) throws Exception
 	 * checking that the MBeans have all been unregistered from the MBeanServer.
 	 */
 	private void finishTest(TwoPhaseCoordinator A, boolean replay, ExtendedCrashRecord ... recs) throws Exception {
-		ObjStoreBrowser osb = createObjStoreBrowser();
+		ObjStoreBrowser osb = createObjStoreBrowser(false);
 
 		// there should now be an entry in the object store containing two participants
 		osb.start();",2013-05-08T18:53:58Z,146
"@@ -0,0 +1,36 @@
+call:comment_on_pull ""Starting tests %BUILD_URL%""
+
+call build.bat clean install ""-DskipTests"" || (call:comment_on_pull ""Tests Failed"" && exit -1)
+
+echo ""Cloning AS""
+rmdir /S /Q jboss-as
+git clone https://github.com/jbosstm/jboss-as.git
+if %ERRORLEVEL% NEQ 0 exit -1
+cd jboss-as
+git checkout -t origin/5_BRANCH
+if %ERRORLEVEL% NEQ 0 exit -1
+git remote add upstream https://github.com/wildfly/wildfly.git
+git pull --rebase --ff-only -s recursive -Xtheirs upstream master
+if %ERRORLEVEL% NEQ 0 exit -1
+
+echo ""Building AS""
+set MAVEN_OPTS=""-Xmx768M""
+call build.bat clean install -DskipTests || (call:comment_on_pull ""Tests Failed"" && exit -1)
+
+call:comment_on_pull ""Tests Passed""
+
+rem -------------------------------------------------------
+rem -                 Functions bellow                    -
+rem -------------------------------------------------------
+
+goto:eof
+
+:comment_on_pull
+   if not ""%COMMENT_ON_PULL%""==""1"" goto:eof
+
+   for /f ""tokens=1,2,3,4 delims=/"" %%a in (""%GIT_BRANCH%"") do set IS_PULL=%%b&set PULL_NUM=%%c
+   if not ""%IS_PULL%""==""pull"" goto:eof
+   
+   curl -d ""{ \""body\"": \""%~1\"" }"" -ujbosstm-bot:%BOT_PASSWORD% https://api.github.com/repos/%GIT_ACCOUNT%/%GIT_REPO%/issues/%PULL_NUM%/comments
+
+goto:eof",2013-05-08T18:53:58Z,147
"@@ -2,6 +2,7 @@
 <classpath>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.3.Final-SNAPSHOT/lib/ext/jboss-logging-processor.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.3.Final-SNAPSHOT/lib/ext/jboss-logging.jar""/>
+	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.3.Final-SNAPSHOT/lib/ext/jboss-transaction-api_1.2_spec.jar""/>
 	<classpathentry excluding=""org/jboss/jbossts/qa/astests/taskdefs/ASTestConfig.java|org/jboss/jbossts/qa/astests/taskdefs/ServerTask.java|org/jboss/jbossts/qa/astests/taskdefs/ASClientTask.java|org/jboss/jbossts/qa/astests/taskdefs/ClientAction.java|org/jboss/jbossts/qa/astests/ASCrashRecovery01/|org/jboss/jbossts/qa/astests/crash/"" kind=""src"" path=""tests/src""/>
 	<classpathentry kind=""src"" path=""tests/build/idl""/>
 	<classpathentry kind=""lib"" path=""ext/ant.jar""/>
@@ -18,7 +19,6 @@
 	<classpathentry kind=""lib"" path=""dbdrivers/postgresql-8.3-605.jdbc4.jar""/>
 	<classpathentry kind=""con"" path=""org.eclipse.jdt.launching.JRE_CONTAINER""/>
 	<classpathentry combineaccessrules=""false"" kind=""src"" path=""/a jboss-transaction-spi""/>
-	<classpathentry combineaccessrules=""false"" kind=""src"" path=""/aa org.jboss.spec.javax.transaction.jboss-transaction-api_1.2_spec""/>
 	<classpathentry combineaccessrules=""false"" kind=""src"" path=""/arjuna""/>
 	<classpathentry combineaccessrules=""false"" kind=""src"" path=""/arjunacore""/>
 	<classpathentry combineaccessrules=""false"" kind=""src"" path=""/arjunacore-services""/>",2014-08-18T13:31:39Z,148
"@@ -197,8 +197,13 @@ public XAResource getResource () throws SQLException
 
 	try
 	{
-	    if (_theXAResource == null)
-		_theXAResource = getConnection().getXAResource();
+	    if (_theXAResource == null) {
+	    	if (_theModifier != null && _theModifier.requiresSameRMOverride()) {
+	    		_theXAResource = new IsSameRMOverrideXAResource(getConnection().getXAResource());
+	    	} else {
+	    		_theXAResource = getConnection().getXAResource();
+	    	}
+	    }
 
 	    return _theXAResource;
 	}",2014-11-11T15:12:10Z,132
"@@ -39,7 +39,9 @@
 import javax.sql.XAConnection;
 import javax.sql.XADataSource;
 import javax.transaction.Transaction;
+import javax.transaction.xa.XAException;
 import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
 
 import com.arjuna.ats.arjuna.state.InputObjectState;
 import com.arjuna.ats.arjuna.state.OutputObjectState;
@@ -178,9 +180,13 @@ public XAResource getResource () throws SQLException
 
 	try
 	{
-	    if (_theXAResource == null)
-		_theXAResource = getConnection().getXAResource();
-
+		if (_theXAResource == null) {
+	    	if (_theModifier != null && _theModifier.requiresSameRMOverride()) {
+	    		_theXAResource = new IsSameRMOverrideXAResource(getConnection().getXAResource());
+	    	} else {
+	    		_theXAResource = getConnection().getXAResource();
+	    	}
+	    }
 	    return _theXAResource;
 	}
 	catch (Exception e)",2014-11-11T15:12:10Z,133
"@@ -0,0 +1,68 @@
+package com.arjuna.ats.internal.jdbc;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import com.arjuna.ats.arjuna.common.arjPropertyManager;
+import com.arjuna.ats.jdbc.common.JDBCEnvironmentBean;
+import com.arjuna.ats.jdbc.common.jdbcPropertyManager;
+
+public class IsSameRMOverrideXAResource implements XAResource {
+
+	private XAResource wrappedXAResource;
+
+	public IsSameRMOverrideXAResource(XAResource xaResource) {
+		this.wrappedXAResource = xaResource;
+	}
+
+	@Override
+	public void commit(Xid arg0, boolean arg1) throws XAException {
+		wrappedXAResource.commit(arg0, arg1);
+	}
+
+	@Override
+	public void end(Xid arg0, int arg1) throws XAException {
+		wrappedXAResource.end(arg0, arg1);
+	}
+
+	@Override
+	public void forget(Xid arg0) throws XAException {
+		wrappedXAResource.forget(arg0);
+	}
+
+	@Override
+	public int getTransactionTimeout() throws XAException {
+		return wrappedXAResource.getTransactionTimeout();
+	}
+
+	@Override
+	public boolean isSameRM(XAResource arg0) throws XAException {
+		return false;
+	}
+
+	@Override
+	public int prepare(Xid arg0) throws XAException {
+		return wrappedXAResource.prepare(arg0);
+	}
+
+	@Override
+	public Xid[] recover(int arg0) throws XAException {
+		return wrappedXAResource.recover(arg0);
+	}
+
+	@Override
+	public void rollback(Xid arg0) throws XAException {
+		wrappedXAResource.rollback(arg0);
+	}
+
+	@Override
+	public boolean setTransactionTimeout(int arg0) throws XAException {
+		return wrappedXAResource.setTransactionTimeout(arg0);
+	}
+
+	@Override
+	public void start(Xid arg0, int arg1) throws XAException {
+		wrappedXAResource.start(arg0, arg1);
+	}
+}",2014-11-11T15:12:10Z,149
"@@ -37,6 +37,7 @@
 import javax.sql.XAConnection;
 
 import com.arjuna.ats.jta.exceptions.NotImplementedException;
+import com.arjuna.ats.jta.xa.XAModifier;
 
 /**
  * Instances of this class enable us to work around problems
@@ -47,7 +48,7 @@
  * @since JTS 1.2.4.
  */
 
-public interface ConnectionModifier
+public interface ConnectionModifier extends XAModifier
 {
 
     /**
@@ -61,6 +62,7 @@ public interface ConnectionModifier
  
     /**
      * Return a new connection.
+     * @deprecated This is no longer used by the transaction manager
      */
 
     public XAConnection getConnection (XAConnection conn) throws SQLException, NotImplementedException;
@@ -77,5 +79,14 @@ public interface ConnectionModifier
 
     public void setIsolationLevel (Connection conn, int level) throws SQLException, NotImplementedException;
     
+    /**
+     * This method indicates whether the driver supports TMJOIN reliably. If isSameRM returns true but does
+     * not support xares1.start(xid1,TMNOFLAGS); xares2.start(xid2, TMJOIN) then you need to make sure you 
+     * set this to true to use a wrapped XAR that returns false for the driver.
+     * 
+     * See JBTM-2264 for more details.
+     */
+    public boolean requiresSameRMOverride();
+    
 }
 ",2014-11-11T15:12:10Z,150
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 1998, 1999, 2000,
+ *
+ * Arjuna Solutions Limited,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.  
+ *
+ * $Id: oracle_9_0.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.arjuna.ats.internal.jdbc.drivers.modifiers;
+
+import java.sql.Connection;
+import java.sql.SQLException;
+
+import javax.sql.XAConnection;
+import javax.transaction.xa.Xid;
+
+import com.arjuna.ats.jta.exceptions.NotImplementedException;
+import com.arjuna.ats.jta.xa.XAModifier;
+
+/*
+ * This is a stateless class to allow us to get round
+ * problems in Oracle. For example, they can't work with
+ * an arbitrary implementation of Xid - it has to be their
+ * own implementation!
+ */
+
+public class IsSameRMModifier implements XAModifier, ConnectionModifier {
+
+	@Override
+	public String initialise(String dbName) {
+		return dbName;
+	}
+
+	@Override
+	public Xid createXid(Xid xid) throws SQLException, NotImplementedException {
+		return xid;
+	}
+
+	@Override
+	public XAConnection getConnection(XAConnection conn) throws SQLException,
+			NotImplementedException {
+		throw new NotImplementedException();
+	}
+
+	@Override
+	public boolean supportsMultipleConnections() throws SQLException,
+			NotImplementedException {
+		return false; // This is the default
+	}
+
+	@Override
+	public void setIsolationLevel(Connection conn, int level)
+			throws SQLException, NotImplementedException {
+		// The default implementation does not call this
+	}
+
+	@Override
+	public int xaStartParameters(int level) throws SQLException,
+			NotImplementedException {
+		return level;
+	}
+
+	@Override
+	public boolean requiresSameRMOverride() {
+		return true;
+	}
+}",2014-11-11T15:12:10Z,151
"@@ -96,4 +96,9 @@ public static synchronized ConnectionModifier getModifier (String dbName, int ma
     }    
 
     private static Hashtable<String,ConnectionModifier> _modifiers = new Hashtable<String,ConnectionModifier>();
+    
+    static
+    {
+	new list();
+    }
 }",2014-11-11T15:12:10Z,152
"@@ -35,5 +35,12 @@ public class list
 {
     public list ()
     {
+		for (String driver : new String[] { ""jConnect (TM) for JDBC (TM)"",
+				""Oracle JDBC driver"",
+				""IBM DB2 JDBC Universal Driver Architecture"",
+				""MySQL Connector Java"" }) {
+			ModifierFactory.putModifier(driver, -1, -1,
+					IsSameRMModifier.class.getName());
+		}
     }
 }",2014-11-11T15:12:10Z,153
"@@ -45,6 +45,7 @@
             <exclude>**/utils/plugins/**</exclude>
             <exclude>**/DBPlugin.java</exclude>
             <exclude>**/*JNDISetup.java</exclude>
+            <exclude>**/*SimpleJdbcTest.java</exclude>
           </excludes>
         </configuration>
       </plugin>
@@ -63,6 +64,18 @@
       <version>${version.org.jboss.spec.javax.transaction}</version>
       <scope>provided</scope>
     </dependency>
+    <dependency>
+      <groupId>org.jboss</groupId>
+      <artifactId>jboss-transaction-spi</artifactId>
+      <version>${version.org.jboss.jboss-transaction-spi}</version>
+      <scope>provided</scope>
+      <exclusions>
+        <exclusion>
+          <groupId>org.jboss.logging</groupId>
+          <artifactId>jboss-logging-spi</artifactId>
+        </exclusion>
+      </exclusions>
+    </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
@@ -86,6 +99,20 @@
       <version>${version.org.jboss.logging.jboss-logging-processor}</version>
       <scope>provided</scope>
     </dependency>
+    		<dependency>
+			<groupId>org.apache.tomcat</groupId>
+			<artifactId>catalina</artifactId>
+			<version>6.0.33</version>
+			<scope>test</scope>
+		</dependency>
+				<dependency>
+			<groupId>org.springframework</groupId>
+			<artifactId>spring-jdbc</artifactId>
+			<version>3.2.2.RELEASE</version>
+			<scope>test</scope>
+		</dependency>
+		
+    
   </dependencies>
   <profiles>
     <profile>",2014-11-11T15:12:10Z,7
"@@ -0,0 +1,122 @@
+package com.hp.mwtests.ts.jdbc.basic;
+
+import java.lang.reflect.InvocationTargetException;
+import java.sql.Connection;
+import java.sql.PreparedStatement;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+
+import javax.naming.InitialContext;
+import javax.naming.NamingException;
+import javax.sql.DataSource;
+import javax.sql.XADataSource;
+import javax.transaction.UserTransaction;
+
+import org.junit.Ignore;
+import org.junit.Test;
+import org.springframework.jdbc.datasource.DriverManagerDataSource;
+
+import com.arjuna.ats.arjuna.common.arjPropertyManager;
+
+public class SimpleJdbcTest {
+	private static final String DB_USER1 = ""dtf11"";
+	private static final String DB_USER2 = ""dtf12"";
+	private static final String DB_HOST = ""tywin.buildnet.ncl.jboss.com"";
+	private static final String DB_SID = ""orcl"";
+
+	@Test
+	public void test() throws Exception {
+		arjPropertyManager.getCoreEnvironmentBean().setNodeIdentifier(""1"");
+		System.setProperty(""java.naming.factory.initial"",
+				""org.apache.naming.java.javaURLContextFactory"");
+		System.setProperty(""java.naming.factory.url.pkgs"", ""org.apache.naming"");
+		final DataSource dataSource1 = getDataSource(DB_USER1, ""oracle: ""
+				+ DB_USER1);
+		final DataSource dataSource2 = getDataSource(DB_USER2, ""oracle: ""
+				+ DB_USER2);
+
+		prepare(dataSource1);
+		prepare(dataSource2);
+
+		final UserTransaction userTransaction = com.arjuna.ats.jta.UserTransaction
+				.userTransaction();
+		userTransaction.begin();
+		
+		final Connection connection1 = dataSource1.getConnection();
+		final Connection connection2 = dataSource2.getConnection();
+
+		insert(connection1);
+		insert(connection2);
+
+		userTransaction.commit();
+	}
+
+	private static void insert(Connection connection) throws SQLException {
+		final PreparedStatement preparedStatement = connection
+				.prepareStatement(""INSERT INTO jta_test (some_string) VALUES ('test')"");
+		preparedStatement.execute();
+	}
+
+	private static void prepare(DataSource dataSource) throws SQLException {
+		final Connection connection = dataSource.getConnection();
+		PreparedStatement preparedStatement = connection
+				.prepareStatement(""SELECT * FROM user_tables WHERE table_name = 'JTA_TEST'"");
+		final ResultSet resultSet = preparedStatement.executeQuery();
+		if (resultSet.next()) {
+			connection.prepareStatement(""DROP TABLE jta_test"").execute();
+		}
+		connection.prepareStatement(
+				""CREATE TABLE jta_test (some_string VARCHAR2(10))"").execute();
+	}
+
+	private static DataSource getDataSource(String user, String resourceName)
+			throws NamingException, SQLException, InstantiationException,
+			IllegalAccessException, IllegalArgumentException,
+			InvocationTargetException, NoSuchMethodException,
+			SecurityException, ClassNotFoundException {
+		InitialContext initialContext = prepareInitialContext();
+
+		Class clazz = Class.forName(""oracle.jdbc.xa.client.OracleXADataSource"");
+		XADataSource xaDataSource = (XADataSource) clazz.newInstance();
+		clazz.getMethod(""setDriverType"", new Class[] { String.class }).invoke(
+				xaDataSource, new Object[] { ""thin"" });
+		clazz.getMethod(""setServerName"", new Class[] { String.class }).invoke(
+				xaDataSource, new Object[] { DB_HOST });
+		clazz.getMethod(""setNetworkProtocol"", new Class[] { String.class })
+				.invoke(xaDataSource, new Object[] { ""tcp"" });
+		clazz.getMethod(""setDatabaseName"", new Class[] { String.class })
+				.invoke(xaDataSource, new Object[] { DB_SID });
+		clazz.getMethod(""setUser"", new Class[] { String.class }).invoke(
+				xaDataSource, new Object[] { user });
+		clazz.getMethod(""setPassword"", new Class[] { String.class }).invoke(
+				xaDataSource, new Object[] { user });
+		clazz.getMethod(""setPortNumber"", new Class[] { int.class }).invoke(
+				xaDataSource, new Object[] { 1521 });
+
+		final String name = ""java:/comp/env/jdbc/"" + user;
+		initialContext.bind(name, xaDataSource);
+
+		DriverManagerDataSource dataSource = new DriverManagerDataSource(
+				""jdbc:arjuna:"" + name);
+		dataSource
+				.setDriverClassName(""com.arjuna.ats.jdbc.TransactionalDriver"");
+
+		return dataSource;
+	}
+
+	private static InitialContext prepareInitialContext()
+			throws NamingException {
+		final InitialContext initialContext = new InitialContext();
+
+		try {
+			initialContext.lookup(""java:/comp/env/jdbc"");
+		} catch (NamingException ne) {
+			initialContext.createSubcontext(""java:"");
+			initialContext.createSubcontext(""java:/comp"");
+			initialContext.createSubcontext(""java:/comp/env"");
+			initialContext.createSubcontext(""java:/comp/env/jdbc"");
+		}
+
+		return initialContext;
+	}
+}
\ No newline at end of file",2014-11-11T15:12:10Z,154
"@@ -53,8 +53,8 @@ function build_as {
   git pull --rebase --ff-only upstream master
   [ $? = 0 ] || fatal ""git rebase failed""
 
-  export MAVEN_OPTS=""-XX:MaxPermSize=512m""
-  export JAVA_OPTS=""-Xms1303m -Xmx1303m -XX:MaxPermSize=512m""
+  export MAVEN_OPTS=""$MAVEN_OPTS -XX:MaxPermSize=512m""
+  export JAVA_OPTS=""$JAVA_OPTS -Xms1303m -Xmx1303m -XX:MaxPermSize=512m""
   ./build.sh clean install -DskipTests -Dts.smoke=false $IPV6_OPTS
   [ $? = 0 ] || fatal ""AS build failed""
   init_jboss_home",2012-07-17T15:23:07Z,10
"@@ -21,6 +21,6 @@
   -->
 <server-provisioning xmlns=""urn:wildfly:server-provisioning:1.0"">
     <feature-packs>
-		<artifact name=""org.jboss.narayana.blacktie:wildfly-blacktie-feature-pack"" />
+		<artifact groupId=""org.jboss.narayana.blacktie"" artifactId=""wildfly-blacktie-feature-pack"" version=""${project.version}""/>
     </feature-packs>
 </server-provisioning>",2014-09-05T09:33:17Z,144
"@@ -404,7 +404,7 @@
     <!-- External dependencies versions -->
     <jboss-as.version>9.0.0.Alpha1-SNAPSHOT</jboss-as.version>
     <version.org.wildfly.core>1.0.0.Alpha5</version.org.wildfly.core>
-    <version.org.wildfly.build-tools>1.0.0.Alpha2</version.org.wildfly.build-tools>
+    <version.org.wildfly.build-tools>1.0.0.Alpha4</version.org.wildfly.build-tools>
     <version.org.wildfly.arquillian>1.0.0.Alpha1</version.org.wildfly.arquillian>
     <version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>1.0.0.Final</version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>
     <version.org.jboss.jandex>1.1.0.Final</version.org.jboss.jandex>",2014-09-05T09:33:17Z,39
"@@ -0,0 +1,78 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Ltd,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.  
+ *
+ * $Id: xidcheck.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jts.interposition;
+
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.assertEquals;
+
+import org.junit.Test;
+
+import com.arjuna.ats.arjuna.coordinator.ActionStatus;
+import com.arjuna.ats.internal.jts.ControlWrapper;
+import com.arjuna.ats.internal.jts.interposition.ServerControlWrapper;
+import com.arjuna.ats.internal.jts.orbspecific.ControlImple;
+import com.arjuna.ats.internal.jts.orbspecific.TransactionFactoryImple;
+import com.hp.mwtests.ts.jts.resources.TestBase;
+
+public class ServerControlWrapperUnitTest extends TestBase
+{
+    @Test
+    public void testEquality () throws Exception
+    {
+        TransactionFactoryImple imple = new TransactionFactoryImple(""test"");
+        ControlImple tx = imple.createLocal(1000);
+        
+        ServerControlWrapper wrap1 = new ServerControlWrapper(tx);
+        ServerControlWrapper wrap2 = new ServerControlWrapper(tx.getControl());
+        
+        assertTrue(wrap1.get_uid().equals(wrap2.get_uid()));
+        
+        wrap1 = new ServerControlWrapper(tx.getControl(), tx);
+        wrap2 = new ServerControlWrapper(tx.getControl(), tx.get_uid());
+        
+        assertTrue(wrap1.get_uid().equals(wrap2.get_uid()));
+    }
+    
+    @Test
+    public void testNested () throws Exception
+    {
+        TransactionFactoryImple imple = new TransactionFactoryImple(""test"");
+        ControlImple tx = imple.createLocal(1000);
+        
+        ServerControlWrapper wrap = new ServerControlWrapper(tx);
+        ControlWrapper sub = wrap.create_subtransaction();
+        
+        assertTrue(sub != null);
+        
+        assertEquals(sub.cancel(), ActionStatus.ABORTED);
+    }
+}",2013-06-18T18:29:36Z,155
"@@ -0,0 +1,71 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Ltd,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.  
+ *
+ * $Id: xidcheck.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jts.interposition;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.fail;
+
+import org.junit.Test;
+
+import org.omg.CosTransactions.Status;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.internal.jts.interposition.ServerFactory;
+import com.arjuna.ats.internal.jts.orbspecific.ControlImple;
+import com.arjuna.ats.internal.jts.orbspecific.TransactionFactoryImple;
+import com.arjuna.ats.internal.jts.orbspecific.interposition.ServerControl;
+import com.arjuna.ats.jts.utils.Utility;
+import com.hp.mwtests.ts.jts.resources.TestBase;
+
+public class ServerFactoryUnitTest extends TestBase
+{
+    @Test
+    public void test () throws Exception
+    {
+        TransactionFactoryImple factory = new TransactionFactoryImple(""test"");
+        ControlImple tx = factory.createLocal(1000);
+        Uid u = new Uid();
+        ServerControl server = ServerFactory.create_transaction(u, null, null, tx.get_coordinator(), tx.get_terminator(), 1000);
+        
+        try
+        {
+            ServerFactory.getCurrentStatus(new Uid("""", false));
+            
+            fail();
+        }
+        catch (final Throwable ex)
+        {
+        }
+
+        assertEquals(ServerFactory.getStatus(tx.get_uid()), org.omg.CosTransactions.Status.StatusActive);
+    }
+}",2013-06-18T18:29:36Z,156
"@@ -0,0 +1,51 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors 
+ * as indicated by the @author tags. 
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors. 
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A 
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
+ * MA  02110-1301, USA.
+ * 
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2004,
+ *
+ * Arjuna Technologies Ltd,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.  
+ *
+ * $Id: xidcheck.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jts.utils;
+
+import static org.junit.Assert.assertEquals;
+
+import org.junit.Test;
+
+import com.arjuna.ats.jts.common.InterceptorInfo;
+import com.arjuna.ats.jts.common.jtsPropertyManager;
+import com.hp.mwtests.ts.jts.resources.TestBase;
+
+public class InterceptorInfoUnitTest extends TestBase
+{
+    @Test
+    public void test () throws Exception
+    {
+        assertEquals(InterceptorInfo.getNeedTranContext(), jtsPropertyManager.getJTSEnvironmentBean().isNeedTranContext());
+        
+        assertEquals(InterceptorInfo.getAlwaysPropagate(), jtsPropertyManager.getJTSEnvironmentBean().isAlwaysPropagateContext());
+    }
+}",2013-06-18T18:29:36Z,157
"@@ -53,6 +53,7 @@ public SynchronizationImple (javax.transaction.Synchronization ptr)
     {
 	_theSynch = ptr;
 	_theReference = null;
+	_theClassLoader = Thread.currentThread().getContextClassLoader();
     }
 
     public final org.omg.CosTransactions.Synchronization getSynchronization ()
@@ -77,14 +78,21 @@ public void before_completion () throws org.omg.CORBA.SystemException
 
 	if (_theSynch != null)
 	{
+	    ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+
 	    try
 	    {
+		Thread.currentThread().setContextClassLoader(_theClassLoader);
 		_theSynch.beforeCompletion();
 	    }
 	    catch (Exception e)
 	    {
 		throw new UNKNOWN();
 	    }
+	    finally
+	    {
+		Thread.currentThread().setContextClassLoader(origClassLoader);
+	    }
 	}
 	else
 	    throw new UNKNOWN();
@@ -99,9 +107,11 @@ public void after_completion (org.omg.CosTransactions.Status status) throws org.
 	if (_theSynch != null)
 	{
 	    int s = StatusConverter.convert(status);
+	    ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
 
 	    try
 	    {
+		Thread.currentThread().setContextClassLoader(_theClassLoader);
 		_theSynch.afterCompletion(s);
 
 		if (_theReference != null)
@@ -116,6 +126,10 @@ public void after_completion (org.omg.CosTransactions.Status status) throws org.
 
 		throw new UNKNOWN(); // should not cause any affect!
 	    }
+	    finally
+	    {
+		Thread.currentThread().setContextClassLoader(origClassLoader);
+	    }
 	}
 	else
 	    throw new UNKNOWN(); // should not cause any affect!
@@ -131,4 +145,5 @@ protected org.omg.PortableServer.Servant getPOATie() {
     private javax.transaction.Synchronization       _theSynch;
     private org.omg.CosTransactions.Synchronization _theReference;
     private org.omg.PortableServer.Servant _thePOATie;
+    private ClassLoader _theClassLoader;
 }",2014-10-21T14:28:02Z,158
"@@ -413,7 +413,7 @@
     <version.org.jboss.ws>1.0.2.Final</version.org.jboss.ws>
     <version.org.jboss.resteasy>3.0.5.Final</version.org.jboss.resteasy>
     <version.org.jboss.weld>2.1.0.Final</version.org.jboss.weld>
-    <version.org.hornetq>2.3.9.Final</version.org.hornetq>
+    <version.org.hornetq>2.4.1.Final</version.org.hornetq>
     <version.org.hibernate.javax.persistence>1.0.1.Final</version.org.hibernate.javax.persistence>
     <version.org.jboss.spec.javax.interceptor>1.0.0.Final</version.org.jboss.spec.javax.interceptor>
     <version.org.jboss.spec.javax.transaction>1.0.0.Final</version.org.jboss.spec.javax.transaction>
@@ -453,9 +453,6 @@
     <version.org.jboss.arquillian.core>1.1.2.Final-wildfly-1</version.org.jboss.arquillian.core>
     <version.org.jboss.jboss-transaction-spi>7.1.0.Final</version.org.jboss.jboss-transaction-spi>
 
-    <!-- qa testsuite with hornetq store -->
-    <version.org.jboss.netty>3.2.6.Final</version.org.jboss.netty>
-
     <!-- Maven plugin versions -->
     <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>
     <version.org.jboss.as.plugins.jboss-as-maven-plugin>7.4.Final</version.org.jboss.as.plugins.jboss-as-maven-plugin>",2014-03-19T10:59:27Z,39
"@@ -2,3 +2,7 @@ dbdrivers
 dist
 idl-compiler.*
 build
+TEST-*
+ext/netty-all.jar
+testoutput/
+transaction.log",2014-03-19T10:59:27Z,159
"@@ -45,7 +45,7 @@ COMMAND_LINE_2=\
   ${path.separator}dbdrivers${file.separator}mysql-connector-java-5.1.8-bin.jar\
   ${path.separator}dbdrivers${file.separator}oracle_10_2_0_4${file.separator}ojdbc14.jar\
   ${path.separator}dbdrivers${file.separator}postgresql-8.3-605.jdbc4.jar\
-  ${path.separator}ext${file.separator}netty.jar
+  ${path.separator}ext${file.separator}netty-all.jar
 
 #
 # properties used by the tests or test framework:",2014-03-19T10:59:27Z,160
"@@ -7,18 +7,16 @@
 <project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
          xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
 
-    <parent>
-      <groupId>org.jboss.narayana</groupId>
-      <artifactId>narayana-all</artifactId>
-      <version>5.0.2.Final-SNAPSHOT</version>
-      <relativePath>../pom.xml</relativePath>
-    </parent>
     <modelVersion>4.0.0</modelVersion>
     <groupId>org.jboss.jbossts</groupId>
     <artifactId>jbossts-build</artifactId>
     <packaging>jar</packaging>
     <version>unknown</version>
     <name>Narayana: qa</name>
+    
+    <properties>
+        <version.netty>4.0.15.Final</version.netty>
+    </properties>
 
     <repositories>
         <repository>
@@ -38,6 +36,7 @@
         <plugins>
             <plugin>
                 <!-- run as: mvn dependency:copy-dependencies (narayana project had to be built) -->
+                <!-- or run as: ant get.maven.libs -->
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-dependency-plugin</artifactId>
 
@@ -57,9 +56,9 @@
     <dependencies>
 
         <dependency>
-            <groupId>org.jboss.netty</groupId>
-            <artifactId>netty</artifactId>
-            <version>${version.org.jboss.netty}</version>
+            <groupId>io.netty</groupId>
+            <artifactId>netty-all</artifactId>
+            <version>${version.netty}</version>
         </dependency>
 
     </dependencies>",2014-03-19T10:59:27Z,9
"@@ -92,21 +92,23 @@ public void removeXAResourceRecoveryHelper(XAResourceRecoveryHelper xaResourceRe
         synchronized (_xaResourceRecoveryHelpers) {
 			if (scanning) {
 			    XAResource[] xaResources = recoveryHelpersXAResource.get(xaResourceRecoveryHelper);
-			    for (int i = 0; i < xaResources.length; i++) {
-			        RecoveryXids recoveryXids = _xidScans.get(xaResources[i]);
-			        if (recoveryXids != null) {
-			            if (recoveryXids.size() > 0) {
-			                jtaLogger.logger.warn(""RecoveryManager is using this service, may delay up to 10 seconds"");
-			                try {
-			                    // do not allow a recovery helper to be removed while the
-			                    // scan is in progress
-			                    _xaResourceRecoveryHelpers.wait();
-			                } catch (InterruptedException e) {
-			                    tsLogger.logger.warn(""problem waiting for scanLock"", e);
-			                }
-			                break;
-			            }
-			        }
+			    if (xaResources != null) {
+    			    for (int i = 0; i < xaResources.length; i++) {
+    			        RecoveryXids recoveryXids = _xidScans.get(xaResources[i]);
+    			        if (recoveryXids != null) {
+    			            if (recoveryXids.size() > 0) {
+    			                jtaLogger.logger.warn(""RecoveryManager is using this service, may delay up to 10 seconds"");
+    			                try {
+    			                    // do not allow a recovery helper to be removed while the
+    			                    // scan is in progress
+    			                    _xaResourceRecoveryHelpers.wait();
+    			                } catch (InterruptedException e) {
+    			                    tsLogger.logger.warn(""problem waiting for scanLock"", e);
+    			                }
+    			                break;
+    			            }
+    			        }
+    			    }
 			    }
 	            _xaResourceRecoveryHelpers.remove(xaResourceRecoveryHelper);
 			}",2013-10-22T15:47:55Z,18
"@@ -450,7 +450,7 @@
     <version.org.codehaus.jettison>1.3.4</version.org.codehaus.jettison>
     <version.junit>4.11</version.junit>
     <version.org.jboss.byteman>2.1.3</version.org.jboss.byteman>
-    <version.org.jboss.arquillian.core>1.0.3.Final</version.org.jboss.arquillian.core>
+    <version.org.jboss.arquillian.core>1.1.2.Final-wildfly-1</version.org.jboss.arquillian.core>
     <version.org.jboss.jboss-transaction-spi>7.1.0.Final</version.org.jboss.jboss-transaction-spi>
 
     <!-- qa testsuite with hornetq store -->",2014-01-30T10:09:48Z,39
"@@ -123,8 +123,8 @@ public void testCMR1() throws Exception {
 		}
 	}
 
-	private int threadCount = 100;
-	private int iterationCount = 2000;
+	private int threadCount = 20;
+	private int iterationCount = 50;
 	private int waiting;
 	private boolean go;
 	private final Object waitLock = new Object();",2014-06-10T12:39:41Z,109
"@@ -39,8 +39,12 @@ ROOT=""/""
 M2_HOME=""""
 MAVEN_HOME=""""
 
-MAVEN_OPTS=""$MAVEN_OPTS -Xmx512M -XX:MaxPermSize=256m""
-export MAVEN_OPTS
+if [[ -z ""$MAVEN_OPTS"" ]]
+then
+	MAVEN_OPTS=""$MAVEN_OPTS -Xmx512M -XX:MaxPermSize=256m""
+	export MAVEN_OPTS
+fi
+
 
 #  Default search path for maven.
 MAVEN_SEARCH_PATH=""\",2014-06-10T12:39:41Z,35
"@@ -36,7 +36,7 @@ function init_test_options {
         FINDBUGS=findbugs,
         comment_on_pull ""Started testing this pull request with MAIN profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
-        export RTS_AS_TESTS=1 RTS_TESTS=1 JTA_CDI_TESTS=1 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
+        export RTS_AS_TESTS=1 RTS_TESTS=1 JTA_CDI_TESTS=1 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=1
     elif [[ $PROFILE == ""XTS"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!XTS"" ]]; then
         comment_on_pull ""Started testing this pull request with XTS profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=1 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
@@ -70,7 +70,7 @@ function init_test_options {
         [ $RTS_AS_TESTS ] || RTS_AS_TESTS=1 # RTS tests
         [ $RTS_TESTS ] || RTS_TESTS=1 # REST-AT Test
         [ $JTA_CDI_TESTS ] || JTA_CDI_TESTS=1 # JTA CDI Tests
-        [ $JTA_AS_TESTS ] || JTA_AS_TESTS=1 # RTS tests
+        [ $JTA_AS_TESTS ] || JTA_AS_TESTS=1 # JTA AS tests
         [ $QA_TESTS ] || QA_TESTS=1 # QA test suite
         [ $SUN_ORB ] || SUN_ORB=1 # Run QA test suite against the Sun orb
         [ $JAC_ORB ] || JAC_ORB=1 # Run QA test suite against JacORB
@@ -247,7 +247,7 @@ function rts_as_tests {
 function jta_as_tests {
   echo ""#-1. JTA AS Integration Test""
   cp ArjunaJTA/jta/src/test/resources/standalone-cmr.xml ${JBOSS_HOME}/standalone/configuration/
-  ./build.sh -f ./ArjunaJTA/jta/pom.xml -Parq ""$@"" test
+  MAVEN_OPTS=""-XX:MaxPermSize=512m -Xms1303m -Xmx1303m"" ./build.sh -f ./ArjunaJTA/jta/pom.xml -Parq ""$@"" test
   [ $? = 0 ] || fatal ""JTA AS Integration Test failed""
   cd ${WORKSPACE}
 }",2014-06-10T12:39:41Z,10
"@@ -36,15 +36,11 @@
     <name>Narayana: XTS Disabled Context Propagation tests</name>
     <description>Narayana: XTS Disabled Context Propagation tests</description>
 
-    <properties>
-        <version.plugin.antrun>1.7</version.plugin.antrun>
-    </properties>
-
     <build>
         <plugins>
             <plugin>
                 <artifactId>maven-antrun-plugin</artifactId>
-                <version>${version.plugin.antrun}</version>
+                <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                 <executions>
                     <execution>
                         <id>create-disabled-context-propagation-configuration</id>
@@ -109,7 +105,7 @@
                 <plugins>
                     <plugin>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>${version.plugin.antrun}</version>
+                        <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                         <executions>
                             <execution>
                                 <id>create-disabled-context-propagation-configuration</id>
@@ -144,7 +140,7 @@
                 <plugins>
                     <plugin>
                         <artifactId>maven-antrun-plugin</artifactId>
-                        <version>${version.plugin.antrun}</version>
+                        <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                         <executions>
                             <execution>
                                 <id>create-disabled-context-propagation-configuration</id>",2013-08-22T15:45:05Z,161
"@@ -183,7 +183,7 @@
         <plugin>
           <groupId>org.eclipse.m2e</groupId>
           <artifactId>lifecycle-mapping</artifactId>
-          <version>1.0.0</version>
+          <version>${version.org.eclipse.m2e.lifecycle-mapping}</version>
           <configuration>
             <lifecycleMappingMetadata>
               <pluginExecutions>
@@ -263,57 +263,57 @@
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>buildnumber-maven-plugin</artifactId>
-          <version>1.0</version>
+          <version>${version.org.codehaus.mojo.buildnumber-maven-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>build-helper-maven-plugin</artifactId>
-          <version>1.7</version>
+          <version>${version.org.codehaus.mojo.build-helper-maven-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>idlj-maven-plugin</artifactId>
-          <version>1.2.1</version>
+          <version>${version.org.codehaus.mojo.idlj-maven-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-javadoc-plugin</artifactId>
-          <version>2.8</version>
+          <version>${version.org.apache.maven.plugins.maven-javadoc-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-shade-plugin</artifactId>
-          <version>1.4</version>
+          <version>${version.org.apache.maven.plugins.maven-shade-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>jboss-maven-plugin</artifactId>
-          <version>1.3.1</version>
+          <version>${version.org.codehaus.mojo.jboss-maven-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.jboss.as.plugins</groupId>
           <artifactId>jboss-as-maven-plugin</artifactId>
-          <version>7.1.1.Final</version>
+          <version>${version.org.jboss.as.plugins.jboss-as-maven-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-clean-plugin</artifactId>
-          <version>2.5</version>
+          <version>${version.org.apache.maven.plugins.maven-clean-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-enforcer-plugin</artifactId>
-          <version>1.2</version>
+          <version>${version.org.apache.maven.plugins.maven-enforcer-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-install-plugin</artifactId>
-          <version>2.4</version>
+          <version>${version.org.apache.maven.plugins.maven-install-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-jar-plugin</artifactId>
-          <version>2.3.1</version>
+          <version>${version.org.apache.maven.plugins.maven-jar-plugin}</version>
         <configuration>
           <archive>
             <manifestEntries>
@@ -328,12 +328,12 @@
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-war-plugin</artifactId>
-          <version>2.1.1</version>
+          <version>${version.org.apache.maven.plugins.maven-war-plugin}</version>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-compiler-plugin</artifactId>
-          <version>2.3.2</version>
+          <version>${version.org.apache.maven.plugins.maven-compiler-plugin}</version>
           <configuration>
             <source>1.6</source>
             <target>1.6</target>
@@ -343,15 +343,15 @@
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-deploy-plugin</artifactId>
-          <version>2.6</version>
+          <version>${version.org.apache.maven.plugins.maven-deploy-plugin}</version>
           <configuration>
             <skip>true</skip>
           </configuration>
         </plugin>
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-surefire-plugin</artifactId>
-          <version>2.12.4</version>
+          <version>${version.org.apache.maven.plugins.maven-surefire-plugin}</version>
             <configuration>
               <forkMode>pertest</forkMode>
               <workingDirectory>target/test-classes</workingDirectory>
@@ -366,7 +366,7 @@
         <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-source-plugin</artifactId>
-          <version>2.1.2</version>
+          <version>${version.org.apache.maven.plugins.maven-source-plugin}</version>
         </plugin>
 	</plugins>
     </pluginManagement>
@@ -487,6 +487,28 @@
     <version.javax.annotation>1.2-b04</version.javax.annotation>
     <version.org.jboss.arquillian.osgi>2.0.0.CR2</version.org.jboss.arquillian.osgi>
     <version.org.jboss.jboss-transaction-spi>7.0.1.Final</version.org.jboss.jboss-transaction-spi>
+
+    <!-- Maven plugin versions -->
+    <version.org.eclipse.m2e.lifecycle-mapping>1.0.0</version.org.eclipse.m2e.lifecycle-mapping>
+    <version.org.codehaus.mojo.buildnumber-maven-plugin>1.2</version.org.codehaus.mojo.buildnumber-maven-plugin>
+    <version.org.codehaus.mojo.build-helper-maven-plugin>1.8</version.org.codehaus.mojo.build-helper-maven-plugin>
+    <version.org.codehaus.mojo.idlj-maven-plugin>1.2.1</version.org.codehaus.mojo.idlj-maven-plugin>
+    <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>
+    <version.org.codehaus.mojo.findbugs-maven-plugin>2.5.2</version.org.codehaus.mojo.findbugs-maven-plugin>
+    <version.org.jboss.as.plugins.jboss-as-maven-plugin>7.4.Final</version.org.jboss.as.plugins.jboss-as-maven-plugin>
+    <version.org.apache.maven.plugins.maven-javadoc-plugin>2.9.1</version.org.apache.maven.plugins.maven-javadoc-plugin>
+    <version.org.apache.maven.plugins.maven-shade-plugin>2.1</version.org.apache.maven.plugins.maven-shade-plugin>
+    <version.org.apache.maven.plugins.maven-clean-plugin>2.5</version.org.apache.maven.plugins.maven-clean-plugin>
+    <version.org.apache.maven.plugins.maven-enforcer-plugin>1.3.1</version.org.apache.maven.plugins.maven-enforcer-plugin>
+    <version.org.apache.maven.plugins.maven-jar-plugin>2.4</version.org.apache.maven.plugins.maven-jar-plugin>
+    <version.org.apache.maven.plugins.maven-war-plugin>2.4</version.org.apache.maven.plugins.maven-war-plugin>
+    <version.org.apache.maven.plugins.maven-compiler-plugin>3.1</version.org.apache.maven.plugins.maven-compiler-plugin>
+    <version.org.apache.maven.plugins.maven-deploy-plugin>2.7</version.org.apache.maven.plugins.maven-deploy-plugin>
+    <version.org.apache.maven.plugins.maven-surefire-plugin>2.16</version.org.apache.maven.plugins.maven-surefire-plugin>
+    <version.org.apache.maven.plugins.maven-source-plugin>2.2.1</version.org.apache.maven.plugins.maven-source-plugin>
+    <version.org.apache.maven.plugins.maven-antrun-plugin>1.7</version.org.apache.maven.plugins.maven-antrun-plugin>
+    <version.org.apache.maven.plugins.maven-install-plugin>2.4</version.org.apache.maven.plugins.maven-install-plugin>
+    <version.org.apache.maven.plugins.maven-site-plugin>3.2</version.org.apache.maven.plugins.maven-site-plugin>
   </properties>
   <modules>
     <module>ext</module>
@@ -544,7 +566,7 @@
                     <plugin>
                       <groupId>org.apache.maven.plugins</groupId>
                       <artifactId>maven-jar-plugin</artifactId>
-                      <version>2.3.2</version>
+                      <version>${version.org.apache.maven.plugins.maven-jar-plugin}</version>
                       <configuration>
                         <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
                       </configuration>
@@ -562,7 +584,7 @@
                     <plugin>
                       <groupId>org.apache.maven.plugins</groupId>
                       <artifactId>maven-antrun-plugin</artifactId>
-                      <version>${version.plugin.antrun}</version>
+                      <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                       <executions>
                         <execution>
                           <id>instrument</id>
@@ -647,7 +669,6 @@
                   </plugins>
                 </build>
                 <properties>
-                  <version.plugin.antrun>1.7</version.plugin.antrun>
                   <version.emma>2.0.12224-adinn</version.emma>
                 </properties>
               </profile>
@@ -666,7 +687,7 @@
                         <plugin>
                             <groupId>org.eclipse.m2e</groupId>
                             <artifactId>lifecycle-mapping</artifactId>
-                            <version>1.0.0</version>
+                            <version>${version.org.eclipse.m2e.lifecycle-mapping}</version>
                             <configuration>
                                 <lifecycleMappingMetadata>
                                     <pluginExecutions>
@@ -693,7 +714,7 @@
                     <plugin>
                         <groupId>org.codehaus.mojo</groupId>
                         <artifactId>findbugs-maven-plugin</artifactId>
-                        <version>2.3.3</version>
+                        <version>${version.org.codehaus.mojo.findbugs-maven-plugin}</version>
                         <executions>
                             <execution>
                                 <id>findbugs</id>
@@ -707,13 +728,13 @@
                     <plugin>
                         <groupId>org.apache.maven.plugins</groupId>
                         <artifactId>maven-site-plugin</artifactId>
-                        <version>3.0</version>
+                        <version>${version.org.apache.maven.plugins.maven-site-plugin}</version>
                         <configuration>
                             <reportPlugins>
                                 <plugin>
                                     <groupId>org.codehaus.mojo</groupId>
                                     <artifactId>findbugs-maven-plugin</artifactId>
-                                    <version>2.3.3</version>
+                                    <version>${version.org.codehaus.mojo.findbugs-maven-plugin}</version>
                                 </plugin>
                             </reportPlugins>
                         </configuration>",2013-08-22T15:45:05Z,39
"@@ -24,7 +24,6 @@
     <description>Narayana: txbridge</description>
     <packaging>jar</packaging>
     <properties>
-        <version.plugin.antrun>1.7</version.plugin.antrun>
         <byteman.home>${project.build.directory}/byteman</byteman.home>
         <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
         <byteman.server.jvm.args>
@@ -79,7 +78,7 @@
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
                 <artifactId>maven-antrun-plugin</artifactId>
-                <version>${version.plugin.antrun}</version>
+                <version>${version.org.apache.maven.plugins.maven-antrun-plugin}</version>
                 <executions>
                     <execution>
                         <id>create-disabled-context-propagation-configuration</id>",2013-08-22T15:45:05Z,162
"@@ -34,23 +34,23 @@
  */
 public class OptionalJaxWSTxInboundBridgeHandler implements Handler {
 
-    final JaxWSTxInboundBridgeHandler delegate;
-
-    public OptionalJaxWSTxInboundBridgeHandler() {
-        delegate = new JaxWSTxInboundBridgeHandler();
-    }
+    private JaxWSTxInboundBridgeHandler delegate;
 
     @Override
     public boolean handleMessage(final MessageContext messageContext) {
         if (txbridgeLogger.logger.isTraceEnabled()) {
             txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleMessage()"");
         }
 
-        if (isTransactionAvailable()) {
-            return delegate.handleMessage(messageContext);
-        }
+        final Boolean isOutbound = (Boolean) messageContext.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY);
 
-        return true;
+        if (isOutbound == null) {
+            return true;
+        } else if (isOutbound) {
+            return handleOutbound(messageContext);
+        } else {
+            return handleInbound(messageContext);
+        }
     }
 
     @Override
@@ -59,7 +59,7 @@ public boolean handleFault(final MessageContext messageContext) {
             txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleFault()"");
         }
 
-        if (isTransactionAvailable()) {
+        if (delegate != null) {
             return delegate.handleFault(messageContext);
         }
 
@@ -72,11 +72,37 @@ public void close(final MessageContext messageContext) {
             txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.close()"");
         }
 
-        if (isTransactionAvailable()) {
+        if (delegate != null) {
             delegate.close(messageContext);
         }
     }
 
+    private boolean handleInbound(final MessageContext messageContext) {
+        if (txbridgeLogger.logger.isTraceEnabled()) {
+            txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleInbound()"");
+        }
+
+        if (isTransactionAvailable()) {
+            delegate = new JaxWSTxInboundBridgeHandler();
+            return delegate.handleInbound(messageContext);
+        }
+
+        delegate = null;
+        return true;
+    }
+
+    private boolean handleOutbound(final MessageContext messageContext) {
+        if (txbridgeLogger.logger.isTraceEnabled()) {
+            txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleOutbound()"");
+        }
+
+        if (delegate != null) {
+            return delegate.handleOutbound(messageContext);
+        }
+
+        return true;
+    }
+
     private boolean isTransactionAvailable() {
         TxContext txContext = null;
 ",2013-10-17T08:40:26Z,163
"@@ -29,6 +29,41 @@ function mv_test_files {
   done
 }
 
+function rebase_narayana {
+  echo ""Rebasing Narayana""
+  cd $WORKSPACE
+ 
+  # Clean up the local repo
+  git rebase --abort
+  rm -rf .git/rebase-apply
+  git clean -f -d -x
+
+  # Work out the branch point
+  git branch -D 4.17
+  git branch 4.17 origin/4.17
+  git branch -D master
+  git branch master origin/master
+  myRev=`git rev-parse HEAD`
+  ancestor417=`git merge-base $myRev 4.17`
+  ancestorMaster=`git merge-base $myRev master`
+  distanceFromMaster=`git log $ancestorMaster..$myRev | grep commit | wc | cut -c 1-7 | tr -d ' '`
+  distanceFrom417=`git log $ancestor417..$myRev | grep commit | wc | cut -c 1-7 | tr -d ' '`
+  if [ ""$distanceFromMaster"" -lt ""$distanceFrom417"" ]
+  then
+    export BRANCHPOINT=master
+  else
+    export BRANCHPOINT=4.17
+  fi
+
+  # Update the pull to head  
+  git pull --rebase --ff-only origin $BRANCHPOINT
+
+  if [ $? -ne 0 ]; then
+    comment_on_pull ""Narayana rebase failed. Please rebase it manually.""
+    fatal ""Narayana rebase failed""
+  fi
+}
+
 #BUILD NARAYANA WITH FINDBUGS
 function build_narayana {
   echo ""Building Narayana""
@@ -306,6 +341,7 @@ comment_on_pull ""Started testing this pull request: $BUILD_URL""
 [ $NARAYANA_VERSION ] || NARAYANA_VERSION=""5.0.0.M3-SNAPSHOT""
 [ $ARQ_PROF ] || ARQ_PROF=arq	# IPv4 arquillian profile
 
+[ $REBASE_NARAYANA ] || REBASE_NARAYANA=0 # do not rebase narayana
 [ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
 [ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
 [ $AS_BUILD ] || AS_BUILD=1 # git clone and build a fresh copy of the AS
@@ -339,6 +375,7 @@ for i in `ps -eaf | grep java | grep ""standalone.*.xml"" | grep -v grep | cut -c1
 export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 
 # run the job
+[ $REBASE_NARAYANA = 1 ] && rebase_narayana ""$@""
 [ $NARAYANA_BUILD = 1 ] && build_narayana ""$@""
 [ $AS_BUILD = 1 ] && build_as ""$@"" || init_jboss_home
 [ $XTS_AS_TESTS = 1 ] && xts_as_tests",2013-04-10T11:18:53Z,10
"@@ -357,6 +357,7 @@
 			</plugins>
 		</build>
 	</profile>
+
 	<profile>
 		<id>mssql-jdbc-store</id>
 		<dependencies>
@@ -416,5 +417,32 @@
       </plugins>
     </build>
   </profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <excludes>
+						  <!-- TODO breaks running with JaCoCo -->
+                          <exclude>**/ObjStoreBrowserTest.java</exclude>
+						  <!-- stress tests are not unit tests -->
+                          <exclude>**/LogStressTest2.java</exclude>
+                        </excludes>
+                        <systemProperties>
+                            <property>
+                                <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                                <value>h2jbossts-properties.xml</value>
+                            </property>
+                        </systemProperties>
+
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
+
   </profiles>
 </project>",2014-03-02T13:14:37Z,24
"@@ -223,6 +223,7 @@ public void aaTest(boolean replay) throws Exception {
 			* moved off the heuristic list and back onto the prepared list
 			*/
 			rd.synchronousScan();
+			Thread.sleep(1000); // odd without the delay running under Jacoco fails
 		}
 
 		/*",2014-03-02T13:14:37Z,25
"@@ -83,4 +83,21 @@
       <scope>provided</scope>
     </dependency>
   </dependencies>
+  <profiles>
+    <profile>
+      <id>codeCoverage</id>
+      <build>
+        <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-surefire-plugin</artifactId>
+            <configuration>
+              <!-- Skip because all surefire tests are skipped -->
+              <skip>true</skip>
+            </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+  </profiles>
 </project>",2014-03-02T13:14:37Z,7
"@@ -388,5 +388,31 @@
 			</dependency>
 		</dependencies>
 	</profile>
+    <profile>
+        <id>codeCoverage</id>
+        <build>
+            <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                      <excludes>
+                        <exclude>**/commitmarkable/**</exclude>
+                        <!-- byteman and Jacoco seem to be interfering with each other -->
+                        <exclude>**/recovery/CrashRecovery.java</exclude>
+                        <exclude>**/recovery/CrashRecovery2.java</exclude>
+                      </excludes>
+
+                      <systemProperties>
+                        <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>h2jbossts-properties.xml</value>
+                        </property>
+                      </systemProperties>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </build>
+    </profile>
   </profiles>
 </project>",2014-03-02T13:14:37Z,26
"@@ -0,0 +1,17 @@
+<!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd"">
+<properties>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+
+	<entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.tablePrefix"">Action</entry>
+	<entry key=""ObjectStoreEnvironmentBean.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.tablePrefix"">stateStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.stateStore.dropTable"">true</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
+	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+</properties>",2014-03-02T13:14:37Z,27
"@@ -271,5 +271,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 </project>",2014-03-02T13:14:37Z,28
"@@ -272,24 +272,12 @@
             </goals>
             <configuration>
               <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
             </configuration>
           </execution>
         </executions>
         </plugin>
         </plugins>
       </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
       <profile>
           <id>community</id>",2014-03-02T13:14:37Z,29
"@@ -275,40 +275,6 @@
           </plugin>
         </plugins>
       </build>
-    </profile>
-    <profile>
-      <id>codeCoverage</id>
-      <build>
-        <plugins>
-        <plugin>
-        <groupId>org.apache.maven.plugins</groupId>
-        <artifactId>maven-shade-plugin</artifactId>
-        <executions>
-          <execution>
-            <phase>package</phase>
-            <goals>
-              <goal>shade</goal>
-            </goals>
-            <configuration>
-              <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
-              <artifactSet>
-                <includes combine.children=""append"">
-                  <include>emma:emma</include>
-                </includes>
-              </artifactSet>
-            </configuration>
-          </execution>
-        </executions>
-        </plugin>
-        </plugins>
-      </build>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
     </profile>
      <profile>
           <id>community</id>",2014-03-02T13:14:37Z,30
"@@ -1,17 +1,6 @@
 Narayana
 ========
 
-NOTE: PATCHED EMMA JAR
-----------------------
-This build uses a patch of the EMMA Jar, the source code for the patch is available from:
-
-	https://svn.jboss.org/repos/labs/labs/jbosstm/workspace/emma
-
-If you are building the ""codeCoverage"" profile and are using a different maven installation to the one provided in tools/maven you need to make sure you have the following options:
-
-	-Demma.jar.location=/full/path/to/checkout/location/ext/
-
-
 Requirements
 ------------
 To build Narayana you should have installed:",2014-03-02T13:14:37Z,31
"@@ -24,6 +24,7 @@
 import java.io.IOException;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
+import java.lang.reflect.Modifier;
 import java.util.ArrayList;
 
 import org.jboss.stm.InvalidAnnotationException;
@@ -130,14 +131,14 @@ public synchronized boolean save_state (OutputObjectState os, int ot)
                     Field[] fields = _theObject.getClass().getDeclaredFields(); // get all fields including private
                 
                     _fields = new ArrayList<Field>();
-                    
+
                     try
                     {
                         for (Field afield : fields)
                         {
                             // ignore if flagged with @NotState
-                            
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }
@@ -221,7 +222,8 @@ public synchronized boolean restore_state (InputObjectState os, int ot)
                         {
                             // ignore if flagged with @NotState
                             
-                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())))
+                            if (!afield.isAnnotationPresent(NotState.class) && (!THIS_NAME.equals(afield.getName())) &&
+                                    !((afield.getModifiers() & Modifier.TRANSIENT) == Modifier.TRANSIENT))
                             {
                                 _fields.add(afield);
                             }",2014-03-02T13:14:37Z,32
"@@ -106,7 +106,6 @@
                   <include>org.jboss.narayana.xts:ws-t11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:wstx11:jar:api:${project.version}</include>
                   <include>org.jboss.narayana.xts:bridge:jar:api:${project.version}</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -123,7 +122,6 @@
               <artifactSet>
                 <includes>
                   <include>org.jboss.narayana.xts</include>
-                  <include>emma:emma</include>
                 </includes>
               </artifactSet>
             </configuration>
@@ -230,16 +228,6 @@
     </dependency>
   </dependencies>
   <profiles>
-    <profile>
-      <id>codeCoverage</id>
-      <dependencies>
-        <dependency>
-          <groupId>emma</groupId>
-          <artifactId>emma</artifactId>
-          <version>${version.emma}</version>
-        </dependency>
-      </dependencies>
-    </profile>
     <profile>
         <id>release</id>
         <build>",2014-03-02T13:14:37Z,33
"@@ -227,6 +227,33 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>codeCoverage</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.jacoco</groupId>
+                        <artifactId>jacoco-maven-plugin</artifactId>
+                        <version>${version.org.jacoco}</version>
+                        <!-- Disable all XTS code coverage since they run under arquillian control.
+						     The current Jacoco config needs updating to include arquillian controlled tests
+                          -->
+                        <executions>
+                            <execution>
+                                <id>pre-unit-test</id>
+                                <goals>
+                                    <goal>prepare-agent</goal>
+                                </goals>
+                                <configuration>
+                                    <skip>true</skip>
+                                </configuration>
+                            </execution>
+                        </executions>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+
     </profiles>
     <modules>
         <module>unit</module>",2014-03-02T13:14:37Z,34
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,35
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,36
"@@ -50,7 +50,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2014-03-02T13:14:37Z,37
"@@ -24,6 +24,7 @@
     <packaging>pom</packaging>
     <name>Narayana: ext</name>
     <description>Narayana: Ext All</description>
+
     <profiles>
         <profile>
             <id>codeCoverage</id>
@@ -34,16 +35,19 @@
                         <artifactId>maven-install-plugin</artifactId>
                         <executions>
                             <execution>
-                                <id>copy-patched-emma</id>
+                                <!-- install shaded jacoco ant jar (for use by the QA suite)
+                                     NB the shaded jar is not available via maven
+								-->
+                                <id>copy-jacoco</id>
                                 <phase>validate</phase>
                                 <goals>
                                     <goal>install-file</goal>
                                 </goals>
                                 <configuration>
-                                    <file>${basedir}/emma.jar</file>
-                                    <groupId>emma</groupId>
-                                    <artifactId>emma</artifactId>
-                                    <version>${version.emma}</version>
+                                    <file>${basedir}/jacocoant.jar</file>
+                                    <groupId>org.jacoco</groupId>
+                                    <artifactId>jacoco-ant</artifactId>
+                                    <version>${version.org.jacoco}</version>
                                     <packaging>jar</packaging>
                                 </configuration>
                             </execution>",2014-03-02T13:14:37Z,38
"@@ -460,6 +460,7 @@
     <version.org.codehaus.mojo.jboss-maven-plugin>1.5.0</version.org.codehaus.mojo.jboss-maven-plugin>
     <version.org.jboss.as.plugins.jboss-as-maven-plugin>7.4.Final</version.org.jboss.as.plugins.jboss-as-maven-plugin>
     <version.org.apache.maven.plugins.maven-antrun-plugin>1.7</version.org.apache.maven.plugins.maven-antrun-plugin>
+    <version.org.jacoco>0.6.3.201306030806</version.org.jacoco>
   </properties>
   <modules>
     <module>ext</module>
@@ -509,119 +510,118 @@
           </plugins>
       </build>
     </profile>
-        <profile>
-            <id>codeCoverage</id>
-            <build>
-                <plugins>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-jar-plugin</artifactId>
+      <profile>
+          <id>codeCoverage</id>
+          <build>
+          <plugins>
+          <plugin>
+              <groupId>org.jacoco</groupId>
+              <artifactId>jacoco-maven-plugin</artifactId>
+              <version>${version.org.jacoco}</version>
+              <executions>
+                  <!--
+                     Prepares the property pointing to the JaCoCo runtime agent which
+                     is passed as VM argument when Maven the Surefire plugin is executed.
+                 -->
+                  <execution>
+                      <id>pre-unit-test</id>
+                      <goals>
+                          <goal>prepare-agent</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
+                          <!--
+                             Sets the name of the property containing the settings
+                             for JaCoCo runtime agent.
+                         -->
+                          <propertyName>surefireArgLine</propertyName>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-surefire-plugin</artifactId>
+                  </execution>
+                  <!--
+                     Ensures that the code coverage report for unit tests is created after
+                     unit tests have been run.
+                 -->
+                  <execution>
+                      <id>post-unit-test</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>report</goal>
+                      </goals>
                       <configuration>
-                        <classesDirectory>${project.build.directory}/generated-classes/emma/classes</classesDirectory>
-                        <additionalClasspathElements>
-                          <additionalClasspathElement>${emma.jar.location}/emma.jar</additionalClasspathElement>
-                        </additionalClasspathElements>
+                          <!-- Sets the path to the file which contains the execution data. -->
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <!-- Sets the output directory for the code coverage report. -->
+                          <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                       </configuration>
-                    </plugin>
-                    <plugin>
-                      <groupId>org.apache.maven.plugins</groupId>
-                      <artifactId>maven-antrun-plugin</artifactId>
-                      <executions>
-                        <execution>
-                          <id>instrument</id>
-                          <phase>process-classes</phase>
-                          <configuration>
-                            <target>
-                                  <java classname=""emma"">
-                                    <arg value=""instr""/>
-                                    <arg value=""-ix""/>
-                                    <arg value=""-com.arjuna.ArjunaOTS.*,-org.omg.CORBA.*,-org.omg.CosTransactions.*,-org.omg.XA.*,-*.logging.*,-org.jboss.jbossts.xts.servicetests.*,-com.jboss.transaction.wstf.test.*,-com.jboss.transaction.txinterop.test.*""/>
-                                    <arg value=""-instrpath""/>
-                                    <arg value=""${project.build.directory}/classes/""/>
-                                    <arg value=""-outfile""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-outdir""/>
-                                    <arg value=""${project.build.directory}/generated-classes/emma/""/>
-                                    <arg value=""-merge""/>
-                                    <arg value=""y""/>
-                                    <arg value=""-outmode""/>
-                                    <arg value=""fullcopy""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                        <execution>
-                          <id>create-report</id>
-                          <phase>install</phase>
-                          <configuration>
-                            <target>
-                              <taskdef resource=""net/sf/antcontrib/antlib.xml"" classpathref=""maven.plugin.classpath"" />
-                              <if>
-                                <available file=""${project.build.directory}/test-classes/coverage.ec""/>
-                                <then>
-                                  <java classname=""emma"">
-                                    <arg value=""report""/>
-                                    <arg value=""-r""/>
-                                    <arg value=""html""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/coverage.em""/>
-                                    <arg value=""-in""/>
-                                    <arg value=""${project.build.directory}/test-classes/coverage.ec""/>
-                                    <arg value=""-Dreport.html.out.file=${project.build.directory}/coverage.html""/>
-                                    <arg value=""-Dreport.metrics=method:70,block:70,line:80,class:100""/>
-                                    <classpath>
-                                      <pathelement path=""${emma.jar.location}/emma.jar""/> 
-                                    </classpath>
-                                  </java>
-                                </then>
-                              </if>
-                            </target>
-                          </configuration>
-                          <goals>
-                            <goal>run</goal>
-                          </goals>
-                        </execution>
-                      </executions>
-                      <dependencies>
-                        <dependency>
-                            <groupId>ant-contrib</groupId>
-                            <artifactId>ant-contrib</artifactId>
-                            <version>1.0b3</version>
-                            <exclusions>
-                                <exclusion>
-                                    <groupId>ant</groupId>
-                                    <artifactId>ant</artifactId>
-                                </exclusion>
-                            </exclusions>
-                        </dependency>
-                        <dependency>
-                            <groupId>org.apache.ant</groupId>
-                            <artifactId>ant-nodeps</artifactId>
-                            <version>1.8.1</version>
-                        </dependency>
-                      </dependencies>
-                    </plugin>
-                  </plugins>
-                </build>
-                <properties>
-                  <maven.compiler.argument.target>1.6</maven.compiler.argument.target>
-                  <maven.compiler.argument.source>1.6</maven.compiler.argument.source>
-                  <version.emma>2.0.12224-adinn</version.emma>
-                </properties>
-              </profile>
+                  </execution>
+                  <execution>
+                      <id>check</id>
+                      <phase>test</phase>
+                      <goals>
+                          <goal>check</goal>
+                      </goals>
+                      <configuration>
+                          <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
+                          <rules>
+                              <rule>
+                                <element>BUNDLE</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>INSTRUCTION</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.0</minimum>
+                                  </limit>
+								  <!--
+                                  <limit>
+                                    <counter>CLASS</counter>
+                                    <value>MISSEDCOUNT</value>
+                                    <maximum>0</maximum>
+                                  </limit>
+								  -->
+                                </limits>
+                              </rule>
+							  <!--
+                              <rule>
+                                <element>CLASS</element>
+                                <excludes>
+                                  <exclude>*Test</exclude>
+                                </excludes>
+                                <limits>
+                                  <limit>
+                                    <counter>LINE</counter>
+                                    <value>COVEREDRATIO</value>
+                                    <minimum>0.20</minimum>
+                                  </limit>
+                                </limits>
+                              </rule>
+							  -->
+                          </rules>
+                      </configuration>
+                  </execution>
+              </executions>
+          </plugin>
+          <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-surefire-plugin</artifactId>
+              <configuration>
+                  <!-- Sets the VM argument line used when unit tests are run. -->
+                  <argLine>${surefireArgLine}</argLine>
+                  <systemProperties>
+                      <property>
+                          <name>com.arjuna.ats.arjuna.common.propertiesFile</name>
+                          <value>jbossts-properties.xml</value>
+                      </property>
+                  </systemProperties>
+              </configuration>
+          </plugin>
+        </plugins>
+      </build>
+    </profile>
+
     <profile>
       <id>community</id>
       <properties>",2014-03-02T13:14:37Z,39
"@@ -35,12 +35,24 @@
   Paths are relative to the JVM's working dir - don't expect to be able to execute this from anywhere but 'qa'.
 
 -->
-<project name=""QA Tests for JBossTS"" default=""junit"" basedir=""."">
+<project name=""QA Tests for JBossTS"" default=""junit"" basedir="".""
+         xmlns:jacoco=""antlib:org.jacoco.ant"">
   <taskdef resource=""net/sf/antcontrib/antlib.xml"">
       <classpath>
           <pathelement location=""ant-contrib-1.0b3.jar""/>
       </classpath>
   </taskdef>
+
+  <!-- code coverage settings -->
+  <property name=""code.coverage"" value=""false""/>
+  <property name=""output.dir"" location=""testoutput"" />
+  <property name=""output.report.dir"" location=""${output.dir}/site/jacoco"" />
+  <property name=""output.exec.file"" location=""${output.dir}/jacoco-qa.exec"" />
+
+  <taskdef uri=""antlib:org.jacoco.ant"" resource=""org/jacoco/ant/antlib.xml"">
+      <classpath path=""../ext/jacocoant.jar"" />
+  </taskdef>
+
   <!-- set this property to the location of a JBossTS core build -->
   <property name=""org.jboss.jbossts.qa.ts.home"" location=""dist""/>
   <property name=""narayana.version"" value=""5.0.2.Final-SNAPSHOT""/>
@@ -350,6 +362,32 @@
   </target>
   <!-- ##################################### -->
   <!-- This is where all the hard work happens - use junit to coordinate multi-process tests: -->
+  <path id=""junit.classpath"">
+    <!--
+      This is the classpath for the test framework, not the test components e.g. clients/servers.
+      Those are configured via TaskImpl.properties instead.
+
+      The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
+      test methods, which link against the test classes, which in turn link against JBossTS.
+      Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
+      On the up side, you get better diagnostic messages and code management/navigation in IDEs.
+    -->
+    <pathelement location=""ext/junit.jar""/>
+    <fileset dir=""tests/build"">
+      <include name=""jbossts-*-qa.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
+      <exclude name=""narayana-jts-idlj.jar""/>
+      <exclude name=""narayana-jts-jacorb.jar""/>
+      <include name=""*.jar""/>
+    </fileset>
+    <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
+      <include name=""*.jar""/>
+      <include name=""*.zip""/>
+    </fileset>
+    <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
+  </path>
+
   <macrodef name=""junit-tests"">
     <attribute name=""tests""/>
     <attribute name=""methods"" default=""""/>
@@ -466,73 +504,65 @@
       <echo message=""Running junit test group @{tests} from basedir=${basedir}""/>
       <!-- this runs forked because the product config file it uses has relative paths in it, so we need to guarantee
             the working dir is the same as the location of this script. -->
-      <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
-        <classpath>
-          <!--
-                This is the classpath for the test framework, not the test components e.g. clients/servers.
-                Those are configured via TaskImpl.properties instead.
+      <if>
+        <equals arg1=""${code.coverage}"" arg2=""true"" />
+		  <then>
+            <jacoco:coverage destfile=""${output.exec.file}"" append=""true"" >
+              <!-- NB cannot call junit as a macrodef because the jacoco:coverage does not support it - so duplicate it -->
+              <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+                <classpath refid=""junit.classpath""/>
+                <formatter type=""plain""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+                <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+                <sysproperty key=""names"" value="".*""/>
+                <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              </junit>
+            </jacoco:coverage>
+		  </then>
+		  <else>
+            <junit printsummary=""yes"" haltonfailure=""no"" fork=""true"" dir=""${basedir}"" showoutput=""false"" failureproperty=""failed-tests"">
+              <classpath refid=""junit.classpath""/>
+              <formatter type=""plain""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
+              <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
+              <sysproperty key=""names"" value="".*""/>
+              <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
+              <!--<jvmarg value=""-Xdebug""/>-->
+              <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
+            </junit>
+		  </else>
+      </if>
+    </sequential>
+  </macrodef>
 
-                The test groups (org.jboss.jbossts.qa.junit.testgroup.TestGroup_XXXX classes) contains the
-                test methods, which link against the test classes, which in turn link against JBossTS.
-                Hence we need JBossTS in the classpath for the framework, even though it does not get run there.
-                On the up side, you get better diagnostic messages and code management/navigation in IDEs.
-                -->
-          <pathelement location=""ext/junit.jar""/>
-          <fileset dir=""tests/build"">
-            <include name=""jbossts-*-qa.jar""/>
-          </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib"">
-            <exclude name=""narayana-jts-idlj.jar""/>
-            <exclude name=""narayana-jts-jacorb.jar""/>
-            <include name=""*.jar""/>
+  <target name=""jacoco-report"">
+    <jacoco:report>
+
+      <!-- Specify the collected execution data from the QA test run -->
+      <executiondata>
+        <file file=""${output.exec.file}"" />
+      </executiondata>
+
+      <structure name=""Narayana QA Report"">
+        <classfiles>
+          <fileset dir="".."" >
+		    <exclude name=""**/idlj/**""/>
           </fileset>
-          <fileset dir=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/lib/ext"">
-            <include name=""*.jar""/>
-            <include name=""*.zip""/>
+        </classfiles>
+        <sourcefiles encoding=""UTF-8"">
+          <fileset dir="".."">
+            <include name=""**/*.java""/>
           </fileset>
-          <!-- Commented out as this is just running the same tests again?
-        <fileset dir=""../ArjunaJTS/jts/build/lib"">
-          <include name=""jts_tests.jar""/>
-        </fileset> 
-        -->
-          <pathelement location=""${org.jboss.jbossts.qa.ts.home}/narayana-full-${narayana.version}/etc""/>
-        </classpath>
-        <formatter type=""plain""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" methods=""@{methods}"" if=""m""/>
-        <test name=""org.jboss.jbossts.qa.junit.testgroup.TestGroup_@{tests}"" if=""n""/>
-        <sysproperty key=""names"" value="".*""/>
-        <sysproperty key=""additional.elements"" value=""@{additional.elements} ${objectStoreElements}""/>
-        <!--<jvmarg value=""-Xdebug""/>-->
-        <!--<jvmarg value=""-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5007""/>-->
-      </junit>
-    </sequential>
-  </macrodef>
-  <!-- directory that contains emma.jar and emma_ant.jar: -->
-  <path id=""emma.lib"">
-    <pathelement location=""../ext/emma.jar""/>
-    <pathelement location=""ext/emma_ant.jar""/>
-  </path>
-  <taskdef resource=""emma_ant.properties"" classpathref=""emma.lib""/>
-  <target name=""emmareport"">
-    <emma enabled=""true"">
-      <report>
-        <fileset dir="".."">
-          <include name=""**/*.em""/>
-        </fileset>
-        <fileset dir="".."">
-          <include name=""**/*coverage.ec""/>
-        </fileset>
-        <sourcepath>
-          <dirset dir="".."">
-            <include name=""**/classes""/>
-            <include name=""**/java""/>
-          </dirset>
-        </sourcepath>
-        <html outfile=""testoutput/emma/coverage.html""/>
-      </report>
-    </emma>
+        </sourcefiles>
+      </structure>
+
+      <!-- produce multiple report formats. -->
+      <html destdir=""${output.report.dir}"" />
+      <csv destfile=""${output.report.dir}/report.csv"" />
+      <xml destfile=""${output.report.dir}/report.xml"" />
+    </jacoco:report>
   </target>
-	
+
   <!--
 
     unused groups, pending cleanup and wiring:",2014-03-02T13:14:37Z,40
"@@ -407,10 +407,12 @@ function qa_tests_once {
   echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
   unset orb
+  codeCoverage=false;
 
   # look for an argument of the form orb=<something>
   for i in $@; do
     [ ${i%%=*} = ""orb"" ] && orb=${i##*=}
+    [ $i = ""-PcodeCoverage"" ] && codeCoverage=true
   done
 
   # check to see if we were called with orb=idlj as one of the arguments
@@ -465,17 +467,17 @@ function qa_tests_once {
         ok=0
         for i in `seq 1 $QA_STRESS`; do
           echo run $i;
-          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+          ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
           if [ $? -ne 0 ]; then
             ok=1; break;
           fi
         done
       else
-        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest;
+        ant -f run-tests.xml -Dtest.name=$QA_TESTGROUP -Dtest.methods=""$QA_TESTMETHODS"" onetest -Dcode.coverage=$codeCoverage;
         ok=$?
       fi
     else
-      ant -f run-tests.xml $target $QA_PROFILE
+      ant -f run-tests.xml $target $QA_PROFILE -Dcode.coverage=$codeCoverage
       ok=$?
     fi
 
@@ -484,6 +486,11 @@ function qa_tests_once {
       cat TEST-failures.txt 
     fi
 
+    if [ $codeCoverage = true ]; then
+      echo ""generating test coverage report""
+      ant -f run-tests.xml jacoco-report
+    fi
+
     # archive the jtsremote test output (use a name related to the orb that was used for the tests)
     mv TEST-*.txt testoutput 2>/dev/null
     ant -f run-tests.xml testoutput.zip -Dtestoutput.zipname=$testoutputzip
@@ -496,7 +503,7 @@ function qa_tests {
   ok1=0;
   ok2=0;
   if [ $SUN_ORB = 1 ]; then
-    qa_tests_once ""$@"" ""orb=idlj"" ""$@"" # run qa against the Sun orb
+    qa_tests_once ""orb=idlj"" ""$@"" # run qa against the Sun orb
     ok2=$?
   fi
   if [ $JAC_ORB = 1 ]; then
@@ -510,6 +517,8 @@ function qa_tests {
   [ $ok1 = 0 -a $ok2 = 0 ] || fatal ""some qa tests failed""
 }
 
+
+
 check_if_pull_closed
 
 init_test_options",2014-03-02T13:14:37Z,10
"@@ -212,14 +212,6 @@
               </plugin>
             </plugins>
           </build>
-          <dependencies>
-            <dependency>
-              <groupId>emma</groupId>
-              <artifactId>emma</artifactId>
-              <version>${version.emma}</version>
-              <scope>test</scope>
-            </dependency>
-          </dependencies>
         </profile>
         <profile>
             <id>arq</id>",2014-03-02T13:14:37Z,41
"@@ -75,9 +75,9 @@
 public class CommitMarkableResourceRecordRecoveryModule implements
 		RecoveryModule {
 	// 'type' within the Object Store for AtomicActions.
-	private static final String ATOMIC_ACTION_TYPE = new AtomicAction().type();
-	private static final String CONNECTABLE_ATOMIC_ACTION_TYPE = ATOMIC_ACTION_TYPE
-			+ ""Connectable"";
+	private static final String ATOMIC_ACTION_TYPE = RecoverConnectableAtomicAction.ATOMIC_ACTION_TYPE;
+	private static final String CONNECTABLE_ATOMIC_ACTION_TYPE =
+	    RecoverConnectableAtomicAction.CONNECTABLE_ATOMIC_ACTION_TYPE;
 
 	private InitialContext context;
 ",2014-04-08T14:32:49Z,42
"@@ -23,16 +23,20 @@
 import javax.transaction.xa.Xid;
 
 import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
 import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
 import com.arjuna.ats.arjuna.objectstore.StateStatus;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.internal.jta.resources.arjunacore.CommitMarkableResourceRecord;
 import com.arjuna.ats.internal.jta.transaction.arjunacore.AtomicAction;
 import com.arjuna.ats.jta.logging.jtaLogger;
 import com.arjuna.ats.jta.recovery.XAResourceOrphanFilter;
 import com.arjuna.ats.jta.utils.XAHelper;
 import com.arjuna.ats.jta.xa.XATxConverter;
 import com.arjuna.ats.jta.xa.XidImple;
 
+import java.io.IOException;
+
 /**
  * An XAResourceOrphanFilter which vetos rollback for xids owned by top level JTA transactions.
  *
@@ -57,14 +61,27 @@ public Vote checkXid(Xid xid)
         return Vote.ABSTAIN;
     }
 
+    private boolean containsCommitMarkableResourceRecord(Uid u) {
+        try {
+            RecoverConnectableAtomicAction rcaa = new RecoverConnectableAtomicAction(
+                RecoverConnectableAtomicAction.CONNECTABLE_ATOMIC_ACTION_TYPE, u);
+
+            return (rcaa.containsIncompleteCommitMarkableResourceRecord());
+        } catch (ObjectStoreException e) {
+        } catch (IOException e) {
+        }
+
+        return false;
+    }
+
     /**
-	 * Is there a log file for this transaction?
-	 *
-	 * @param xid the transaction to check.
-	 *
-	 * @return <code>boolean</code>true if there is a log file,
-	 *         <code>false</code> if there isn't.
-	 */
+     * Is there a log file for this transaction?
+     *
+     * @param xid the transaction to check.
+     *
+     * @return <code>boolean</code>true if there is a log file,
+     *         <code>false</code> if there isn't.
+     */
     private boolean transactionLog(Xid xid)
     {
         RecoveryStore recoveryStore = StoreManager.getRecoveryStore();
@@ -87,7 +104,8 @@ private boolean transactionLog(Xid xid)
                     jtaLogger.logger.debug(""Looking for "" + u + "" and "" + transactionType);
                 }
 
-                if (recoveryStore.currentState(u, transactionType) != StateStatus.OS_UNKNOWN)
+                if (containsCommitMarkableResourceRecord(u) ||
+                        recoveryStore.currentState(u, transactionType) != StateStatus.OS_UNKNOWN)
                 {
                     if (jtaLogger.logger.isDebugEnabled()) {
                         jtaLogger.logger.debug(""Found record for "" + theXid);",2014-04-08T14:32:49Z,43
"@@ -34,6 +34,8 @@
 import com.arjuna.ats.jta.xa.XidImple;
 
 public class RecoverConnectableAtomicAction extends AtomicAction {
+	public static final String ATOMIC_ACTION_TYPE = new AtomicAction().type();
+	public static final String CONNECTABLE_ATOMIC_ACTION_TYPE = ATOMIC_ACTION_TYPE + ""Connectable"";
 
 	private String jndiName;
 	private String recoveringAs;",2014-04-08T14:32:49Z,44
"@@ -32,17 +32,187 @@
 
 import javax.transaction.xa.XAException;
 import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
 
+import com.arjuna.ats.arjuna.coordinator.TwoPhaseOutcome;
 import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.ats.jta.logging.jtaLogger;
 import com.arjuna.ats.jta.resources.XAResourceMap;
+import com.arjuna.ats.jta.utils.XAHelper;
 
 public class XAResourceErrorHandler
 {
+    private XAException e;
+    private XAResource xaResource;
+    private Xid xid;
+    private boolean committed = false;
+
+    public XAResourceErrorHandler(XAException e, XAResource xaResource, Xid xid) {
+        this.xid = xid;
+        this.xaResource = xaResource;
+        this.e = e;
+    }
+
+    /**
+     * Is the XAException a non-error when received in reply to commit or
+     * rollback ? It normally is, but may be overridden in recovery.
+     */
+    protected boolean notAProblem(boolean commit)
+    {
+        return XAResourceErrorHandler.notAProblem(xaResource, e, commit);
+    }
+
+    public int handleCMRRollbackError() {
+        if (notAProblem(false))
+        {
+            // some other thread got there first (probably)
+        }
+        else
+        {
+// TODO			addDeferredThrowable(e);
+
+            jtaLogger.i18NLogger.warn_resources_arjunacore_rollbackerror(XAHelper.xidToString(xid),
+                    xaResource.toString(), XAHelper.printXAErrorCode(e), e);
+
+            switch (e.errorCode)
+            {
+                case XAException.XAER_RMERR:
+                    break; // just do the finally block
+                case XAException.XA_HEURHAZ:
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD;
+                case XAException.XA_HEURCOM:
+                    return TwoPhaseOutcome.HEURISTIC_COMMIT;
+                case XAException.XA_HEURMIX:
+                    return TwoPhaseOutcome.HEURISTIC_MIXED;
+                case XAException.XAER_NOTA:
+//                    if (_recovered)
+                    // assume it has already rolled back
+                    break; // rolled back previously and recovery completed
+                case XAException.XA_HEURRB: // forget?
+                case XAException.XA_RBROLLBACK:
+                case XAException.XA_RBEND:
+                case XAException.XA_RBCOMMFAIL:
+                case XAException.XA_RBDEADLOCK:
+                case XAException.XA_RBINTEGRITY:
+                case XAException.XA_RBOTHER:
+                case XAException.XA_RBPROTO:
+                case XAException.XA_RBTIMEOUT:
+                    break;
+                default:
+                    return TwoPhaseOutcome.FINISH_ERROR;
+            }
+        }
+
+        return TwoPhaseOutcome.FINISH_OK;
+    }
+
+    public void forget() {
+
+        // only relevant for two phase aware resources
+/*        try {
+            xaResource.forget(xid);
+        } catch (XAException e) {
+            // ignore
+        }*/
+    }
+
+    public int handleCMRCommitError(boolean onePhase) {
+//TODO        addDeferredThrowable(e1);
+
+        jtaLogger.i18NLogger.warn_resources_arjunacore_opcerror(XAHelper.xidToString(xid),
+                xaResource.toString(), XAHelper.printXAErrorCode(e), e);
+
+        if (onePhase) {
+            switch (e.errorCode)
+            {
+                case XAException.XA_HEURHAZ:
+                case XAException.XA_HEURMIX:
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD;
+                case XAException.XA_HEURCOM:
+                    forget();
+                    break;
+                case XAException.XA_HEURRB:
+                    forget();
+                    return TwoPhaseOutcome.ONE_PHASE_ERROR;
+                case XAException.XA_RBROLLBACK:
+                case XAException.XA_RBCOMMFAIL:
+                case XAException.XA_RBDEADLOCK:
+                case XAException.XA_RBINTEGRITY:
+                case XAException.XA_RBOTHER:
+                case XAException.XA_RBPROTO:
+                case XAException.XA_RBTIMEOUT:
+                case XAException.XA_RBTRANSIENT:
+                case XAException.XAER_RMERR:
+                    return TwoPhaseOutcome.ONE_PHASE_ERROR;
+                case XAException.XAER_NOTA:
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD; // something committed or rolled back without asking us!
+                case XAException.XAER_INVAL: // resource manager failed, did it rollback?
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD;
+                case XAException.XA_RETRY:  // XA does not allow this to be thrown for 1PC!
+                case XAException.XAER_PROTO:
+                    return TwoPhaseOutcome.ONE_PHASE_ERROR; // assume rollback
+                case XAException.XAER_RMFAIL:
+                default:
+                    committed = true;
+                    return TwoPhaseOutcome.FINISH_ERROR;  // ? recovery should retry
+            }
+
+            return TwoPhaseOutcome.FINISH_OK;
+        } else {
+            switch (e.errorCode)
+            {
+                case XAException.XA_HEURHAZ:
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD;
+                case XAException.XA_HEURCOM: // what about forget?
+                    // OTS doesn't support
+                    // this code here.
+                    break;
+                case XAException.XA_HEURRB:
+                case XAException.XA_RBROLLBACK:  // could really do with an ABORTED status in TwoPhaseOutcome to differentiate
+                case XAException.XA_RBCOMMFAIL:
+                case XAException.XA_RBDEADLOCK:
+                case XAException.XA_RBINTEGRITY:
+                case XAException.XA_RBOTHER:
+                case XAException.XA_RBPROTO:
+                case XAException.XA_RBTIMEOUT:
+                case XAException.XA_RBTRANSIENT:
+                case XAException.XAER_RMERR:
+                case XAException.XAER_PROTO:  // XA spec implies rollback
+                    return TwoPhaseOutcome.HEURISTIC_ROLLBACK;
+                case XAException.XA_HEURMIX:
+                    return TwoPhaseOutcome.HEURISTIC_MIXED;
+                case XAException.XAER_NOTA:
+//                    if (_recovered)
+//                        break; // committed previously and recovery completed
+//                    else
+                        return TwoPhaseOutcome.HEURISTIC_HAZARD;  // something terminated the transaction!
+                case XAException.XA_RETRY:
+                case XAException.XAER_RMFAIL:
+                    committed = true;  // will cause log to be rewritten
+
+	                /*
+                     * Could do timeout retry here, but that could cause other resources in the list to go down the
+                     * heuristic path (some are far too keen to do this). Fail and let recovery retry. Meanwhile
+                     * the coordinator will continue to commit the other resources immediately.
+                     */
+                    return TwoPhaseOutcome.FINISH_ERROR;
+                case XAException.XAER_INVAL: // resource manager failed, did it rollback?
+                default:
+                    return TwoPhaseOutcome.HEURISTIC_HAZARD;
+            }
+
+            return TwoPhaseOutcome.FINISH_OK;
+        }
+    }
+
+    public boolean isCommitted() {
+        return committed;
+    }
 
 	public static boolean notAProblem (XAResource res, XAException ex, boolean commit)
 	{
 		boolean isNotAProblem = false;
-		XAResourceMap theMap = (XAResourceMap) _maps.get(res.getClass().getName());
+		XAResourceMap theMap = _maps.get(res.getClass().getName());
 
 		if (theMap != null)
 			isNotAProblem = theMap.notAProblem(ex, commit);
@@ -55,7 +225,7 @@ public static void addXAResourceMap (String type, XAResourceMap map)
 		_maps.put(type, map);
 	}
 
-	private static HashMap _maps = new HashMap();
+	private static HashMap<String, XAResourceMap> _maps = new HashMap<String, XAResourceMap> ();
 
     /**
      * Static block puts all XAResourceMap instances defined in JTAEnvironmentBean to the XAResourceErrorHandler's hash map.",2014-04-08T14:32:49Z,164
"@@ -34,9 +34,11 @@
 import javax.transaction.Status;
 import javax.transaction.Synchronization;
 import javax.transaction.SystemException;
+import javax.transaction.xa.XAException;
 import javax.transaction.xa.XAResource;
 import javax.transaction.xa.Xid;
 
+import com.arjuna.ats.internal.jta.resources.XAResourceErrorHandler;
 import org.jboss.tm.ConnectableResource;
 import org.jboss.tm.XAResourceWrapper;
 
@@ -376,15 +378,18 @@ public int topLevelPrepare() {
 			tsLogger.logger.trace(""CommitMarkableResourceRecord.topLevelPrepare for "" + this + "", record id="" + order());
 		}
 
-		try {
+        try {
+            PreparedStatement prepareStatement = null;
+
 			preparedConnection = (Connection) connectableResource
 					.getConnection();
 
-			PreparedStatement prepareStatement = preparedConnection
+            try {
+			    prepareStatement = preparedConnection
 					.prepareStatement(""insert into ""
 							+ tableName
 							+ "" (xid, transactionManagerID, actionuid) values (?,?,?)"");
-			try {
+
 				ByteArrayOutputStream baos = new ByteArrayOutputStream();
 				DataOutputStream dos = new DataOutputStream(baos);
 				XID toSave = ((XidImple) xid).getXID();
@@ -400,10 +405,13 @@ public int topLevelPrepare() {
 
 				if (prepareStatement.executeUpdate() != 1) {
 					tsLogger.logger.warn(""Update was not successful"");
+                    removeConnection();
+
 					return TwoPhaseOutcome.PREPARE_NOTOK;
 				}
 			} finally {
-				prepareStatement.close();
+                if (prepareStatement != null)
+				    prepareStatement.close();
 			}
 
 			return TwoPhaseOutcome.PREPARE_OK;
@@ -433,19 +441,16 @@ public int topLevelAbort() {
 				hasCompleted = true;
 				committed = false;
 				return TwoPhaseOutcome.FINISH_OK;
+			} catch (XAException e) {
+				XAResourceErrorHandler handler = new XAResourceErrorHandler(e, (XAResource) connectableResource, xid);
+				return handler.handleCMRRollbackError();
 			} catch (Throwable e) {
-				tsLogger.logger.error(""Could not rollback the 1PC resource"", e);
+					jtaLogger.i18NLogger.warn_resources_arjunacore_rollbackerror(XAHelper.xidToString(xid),
+						connectableResource.toString(), ""-"", e);
 				return TwoPhaseOutcome.FINISH_ERROR;
 			}
 		} finally {
-			try {
-				if (preparedConnection != null) {
-					preparedConnection.close();
-				}
-			} catch (Throwable e) {
-				tsLogger.logger.warn(""Could not close the preparedConnection"",
-						e);
-			}
+			removeConnection();
 		}
 	}
 
@@ -477,22 +482,19 @@ private int commit(boolean onePhase) {
 				hasCompleted = true;
 				committed = true;
 				return TwoPhaseOutcome.FINISH_OK;
+			} catch (XAException e) {
+				XAResourceErrorHandler handler = new XAResourceErrorHandler(e, (XAResource) connectableResource, xid);
+
+				int res = handler.handleCMRCommitError(onePhase);
+				committed = handler.isCommitted();
+				return res;
 			} catch (Throwable e) {
-				tsLogger.logger.error(
-						""Could not commit the preparedConnection"", e);
+				jtaLogger.i18NLogger.warn_resources_arjunacore_commitxaerror(XAHelper.xidToString(xid),
+					connectableResource.toString(), ""-"", e);
 				return TwoPhaseOutcome.FINISH_ERROR;
 			} finally {
 				if (!isPerformImmediateCleanupOfBranches) {
-					try {
-						if (preparedConnection != null) {
-							if (preparedConnection != null) {
-								preparedConnection.close();
-							}
-						}
-					} catch (Throwable e) {
-						tsLogger.logger.warn(
-								""Could not close the preparedConnection"", e);
-					}
+					removeConnection();
 				}
 			}
 		} else {
@@ -505,6 +507,17 @@ private int commit(boolean onePhase) {
 		}
 	}
 
+	private final void removeConnection() {
+		if (preparedConnection != null) {
+			try {
+				preparedConnection.close();
+				preparedConnection = null;
+			} catch (SQLException e) {
+				tsLogger.logger.warn(""Could not close the preparedConnection"", e);
+			}
+		}
+	}
+
 	public Uid order() {
 		return Uid.minUid();
 	}",2014-04-08T14:32:49Z,165
"@@ -105,7 +105,7 @@
     </dependency>
     <dependency>
       <groupId>org.hornetq</groupId>
-      <artifactId>hornetq-core</artifactId>
+      <artifactId>hornetq-journal</artifactId>
     </dependency>
     <dependency>
       <groupId>orson</groupId>",2013-03-22T09:47:43Z,24
"@@ -617,8 +617,8 @@
         </dependency>
         <dependency>
             <groupId>org.hornetq</groupId>
-            <artifactId>hornetq-core</artifactId>
-            <version>2.2.13.Final</version>
+            <artifactId>hornetq-journal</artifactId>
+            <version>2.3.0.CR1</version>
         </dependency>
         <dependency>
             <groupId>org.jboss.netty</groupId>",2013-03-22T09:47:43Z,39
"@@ -33,7 +33,7 @@
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/commons-httpclient.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/dom4j.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/hamcrest-core.jar""/>
-	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/hornetq-core.jar""/>
+	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/hornetq-journal.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/httpclient.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/httpcore.jar""/>
 	<classpathentry kind=""lib"" path=""dist/narayana-full-5.0.0.M2-SNAPSHOT/lib/ext/ironjacamar-spec-api.jar""/>",2013-03-22T09:47:43Z,148
"@@ -77,7 +77,7 @@ will test Atomikos, JBossTS, Bitronix and JOTM and commit 100 transactions using
     <path id=""classpath.jbossts"">
         <pathelement location=""${jbossts.install}/lib/narayana-jta.jar"" />
         <pathelement location=""${jbossts.install}/../../ext/netty.jar"" />
-        <pathelement location=""${jbossts.install}/lib/ext/hornetq-core.jar"" />
+        <pathelement location=""${jbossts.install}/lib/ext/hornetq-journal.jar"" />
         <pathelement location=""${jbossts.install}/lib/ext/jboss-logging.jar"" />
     </path>
     <!-- SimpleJTA: https://simple-jta.dev.java.net/servlets/ProjectDocumentList -->",2013-03-22T09:47:43Z,166
"@@ -148,6 +148,9 @@
 						<groupId>org.jboss.as.plugins</groupId>
 						<artifactId>jboss-as-maven-plugin</artifactId>
 						<version>7.3.Final</version>
+						<configuration>
+							<hostname>${jbossas.ip.addr}</hostname>
+						</configuration>
 						<executions>
 							<execution>
 								<id>redeploy</id>",2014-02-14T16:09:52Z,167
"@@ -168,7 +168,7 @@ private static void initStatic() throws ConfigurationException, UnknownHostExcep
                 if (managementAddress.equals(""0.0.0.0"")) {
                     managementAddress = ""localhost"";
                 }
-                client = ModelControllerClient.Factory.create(""remote"", managementAddress, 9999, getCallbackHandler(), null, 20 * 1000);
+                client = ModelControllerClient.Factory.create(""remote"", managementAddress, 9999, getCallbackHandler(), null, 120 * 1000);
             }
         }
     }",2014-02-14T16:09:52Z,47
"@@ -20,6 +20,9 @@
 
 	<!-- Example configuration for a remote JBoss AS 7 instance -->
 	<container qualifier=""jboss"" default=""true"">
+        <configuration>
+            <property name=""managementAddress"">${jbossas.ip.addr}</property>
+        </configuration>
 	</container>
 
 </arquillian>",2014-02-14T16:09:52Z,168
"@@ -34,11 +34,12 @@
 import java.io.IOException;
 import java.sql.Connection;
 import java.sql.DatabaseMetaData;
+import java.util.HashMap;
+import java.util.Map;
 import java.util.StringTokenizer;
 
 import com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean;
 import com.arjuna.ats.arjuna.common.Uid;
-import com.arjuna.ats.arjuna.exceptions.FatalError;
 import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
 import com.arjuna.ats.arjuna.logging.tsLogger;
 import com.arjuna.ats.arjuna.objectstore.ObjectStoreAPI;
@@ -58,231 +59,206 @@
  */
 
 public class JDBCStore implements ObjectStoreAPI {
-	protected JDBCImple_driver _theImple;
-	private static final String DEFAULT_TABLE_NAME = ""JBossTSTxTable"";
-	protected String tableName;
-	protected final ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean;
-	private String _storeName;
-
-	@Override
-	public void start() {
-	}
-
-	@Override
-	public void stop() {
-	}
-
-	/**
-	 * Does this store need to do the full write_uncommitted/commit protocol?
-	 * 
-	 * @return <code>true</code> if full commit is needed, <code>false</code>
-	 *         otherwise.
-	 */
-
-	public boolean fullCommitNeeded() {
-		return true;
-	}
-
-	/**
-	 * Some object store implementations may be running with automatic sync
-	 * disabled. Calling this method will ensure that any states are flushed to
-	 * disk.
-	 */
-
-	public void sync() throws java.io.SyncFailedException, ObjectStoreException {
-	}
-
-	/**
-	 * Is the current state of the object the same as that provided as the last
-	 * parameter?
-	 * 
-	 * @param u
-	 *            The object to work on.
-	 * @param tn
-	 *            The type of the object.
-	 * @param st
-	 *            The expected type of the object.
-	 * 
-	 * @return <code>true</code> if the current state is as expected,
-	 *         <code>false</code> otherwise.
-	 */
-
-	public boolean isType(Uid u, String tn, int st) throws ObjectStoreException {
-		return (currentState(u, tn) == st);
-	}
-
-	public String getStoreName() {
-		return _storeName;
-	}
-
-	public boolean allObjUids(String s, InputObjectState buff)
-			throws ObjectStoreException {
-		return allObjUids(s, buff, StateStatus.OS_UNKNOWN);
-	}
-
-	public boolean commit_state(Uid objUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.commit_state(objUid, tName);
-	}
-
-	public boolean hide_state(Uid objUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.hide_state(objUid, tName);
-	}
-
-	public boolean reveal_state(Uid objUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.reveal_state(objUid, tName);
-	}
-
-	public int currentState(Uid objUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.currentState(objUid, tName);
-	}
-
-	public InputObjectState read_committed(Uid storeUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.read_state(storeUid, tName, StateStatus.OS_COMMITTED);
-	}
-
-	public InputObjectState read_uncommitted(Uid storeUid, String tName)
-			throws ObjectStoreException {
-		return _theImple
-				.read_state(storeUid, tName, StateStatus.OS_UNCOMMITTED);
-	}
-
-	public boolean remove_committed(Uid storeUid, String tName)
-			throws ObjectStoreException {
-		return _theImple
-				.remove_state(storeUid, tName, StateStatus.OS_COMMITTED);
-	}
-
-	public boolean remove_uncommitted(Uid storeUid, String tName)
-			throws ObjectStoreException {
-		return _theImple.remove_state(storeUid, tName,
-				StateStatus.OS_UNCOMMITTED);
-	}
-
-	public boolean write_committed(Uid storeUid, String tName,
-			OutputObjectState state) throws ObjectStoreException {
-		return _theImple.write_state(storeUid, tName, state,
-				StateStatus.OS_COMMITTED);
-	}
-
-	public boolean write_uncommitted(Uid storeUid, String tName,
-			OutputObjectState state) throws ObjectStoreException {
-		return _theImple.write_state(storeUid, tName, state,
-				StateStatus.OS_UNCOMMITTED);
-	}
-
-	public boolean allObjUids(String tName, InputObjectState state, int match)
-			throws ObjectStoreException {
-		return _theImple.allObjUids(tName, state, match);
-	}
-
-	public boolean allTypes(InputObjectState foundTypes)
-			throws ObjectStoreException {
-		return _theImple.allTypes(foundTypes);
-	}
-
-	public synchronized void packInto(OutputBuffer buff) throws IOException {
-		buff.packString(tableName);
-	}
-
-	public synchronized void unpackFrom(InputBuffer buff) throws IOException {
-		this.tableName = buff.unpackString();
-	}
-
-	/**
-	 * Create a new JDBCStore
-	 * 
-	 * @param jdbcStoreEnvironmentBean The environment bean containing the configuration
-	 * @throws ObjectStoreException In case the store environment bean was not correctly configured
-     * @throws {@link FatalError} In case the configured store cannot be connected to
-	 */
-	public JDBCStore(ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean)
-			throws ObjectStoreException {
-		this.jdbcStoreEnvironmentBean = jdbcStoreEnvironmentBean;
-		String connectionDetails = jdbcStoreEnvironmentBean.getJdbcAccess();
-		if (connectionDetails == null) {
-			throw new ObjectStoreException(
-					tsLogger.i18NLogger.get_objectstore_JDBCStore_5());
-		}
-
-		try {
-			StringTokenizer stringTokenizer = new StringTokenizer(
-					connectionDetails, "";"");
-			JDBCAccess jdbcAccess = (JDBCAccess) Class.forName(
-					stringTokenizer.nextToken()).newInstance();
-			jdbcAccess.initialise(stringTokenizer);
-
-			String impleTableName = getDefaultTableName();
-			final String tablePrefix = jdbcStoreEnvironmentBean
-					.getTablePrefix();
-			if ((tablePrefix != null) && (tablePrefix.length() > 0)) {
-				impleTableName = tablePrefix + impleTableName;
-			}
-			tableName = impleTableName;
-			_storeName = jdbcAccess.getClass().getName() + "":"" + tableName;
-
-			final com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver jdbcImple;
-			Connection connection = jdbcAccess.getConnection();
-			String name;
-			int major;
-			int minor;
-			try {
-				DatabaseMetaData md = connection.getMetaData();
-				name = md.getDriverName();
-				major = md.getDriverMajorVersion();
-				minor = md.getDriverMinorVersion();
-			} finally {
-				connection.close();
-			}
-
-			/*
-			 * Check for spaces in the name - our implementation classes are
-			 * always just the first part of such names.
-			 */
-
-			int index = name.indexOf(' ');
-
-			if (index != -1)
-				name = name.substring(0, index);
-
-			name = name.replaceAll(""-"", ""_"");
-
-			name = name.toLowerCase();
-
-			final String packagePrefix = getClass().getName().substring(0,
-					getClass().getName().lastIndexOf('.'))
-					+ "".drivers."";
-			Class jdbcImpleClass = null;
-			try {
-				jdbcImpleClass = Class.forName(packagePrefix + name + ""_""
-						+ major + ""_"" + minor + ""_driver"");
-			} catch (final ClassNotFoundException cnfe) {
-				try {
-					jdbcImpleClass = Class.forName(packagePrefix + name + ""_""
-							+ major + ""_driver"");
-				} catch (final ClassNotFoundException cnfe2) {
-					jdbcImpleClass = Class.forName(packagePrefix + name
-							+ ""_driver"");
-				}
-			}
-			jdbcImple = (com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver) jdbcImpleClass
-					.newInstance();
-
-			jdbcImple.initialise(jdbcAccess, impleTableName,
-					jdbcStoreEnvironmentBean);
-			_theImple = jdbcImple;
-		} catch (Exception e) {
-			tsLogger.i18NLogger.fatal_objectstore_JDBCStore_2(_storeName, e);
-			throw new ObjectStoreException(e);
-		}
-	}
-
-	protected String getDefaultTableName() {
-		return DEFAULT_TABLE_NAME;
-	}
-
+    protected JDBCImple_driver _theImple;
+    private static final String DEFAULT_TABLE_NAME = ""JBossTSTxTable"";
+    protected String tableName;
+    protected final ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean;
+    private String _storeName;
+    private static Map<String, JDBCImple_driver> imples = new HashMap<String, JDBCImple_driver>();
+    private static Map<String, String> storeNames = new HashMap<String, String>();
+
+    @Override
+    public void start() {
+    }
+
+    @Override
+    public void stop() {
+    }
+
+    /**
+     * Does this store need to do the full write_uncommitted/commit protocol?
+     * 
+     * @return <code>true</code> if full commit is needed, <code>false</code>
+     *         otherwise.
+     */
+
+    public boolean fullCommitNeeded() {
+        return true;
+    }
+
+    /**
+     * Some object store implementations may be running with automatic sync
+     * disabled. Calling this method will ensure that any states are flushed to
+     * disk.
+     */
+
+    public void sync() throws java.io.SyncFailedException, ObjectStoreException {
+    }
+
+    /**
+     * Is the current state of the object the same as that provided as the last
+     * parameter?
+     * 
+     * @param u
+     *            The object to work on.
+     * @param tn
+     *            The type of the object.
+     * @param st
+     *            The expected type of the object.
+     * 
+     * @return <code>true</code> if the current state is as expected,
+     *         <code>false</code> otherwise.
+     */
+
+    public boolean isType(Uid u, String tn, int st) throws ObjectStoreException {
+        return (currentState(u, tn) == st);
+    }
+
+    public String getStoreName() {
+        return _storeName;
+    }
+
+    public boolean allObjUids(String s, InputObjectState buff) throws ObjectStoreException {
+        return allObjUids(s, buff, StateStatus.OS_UNKNOWN);
+    }
+
+    public boolean commit_state(Uid objUid, String tName) throws ObjectStoreException {
+        return _theImple.commit_state(objUid, tName);
+    }
+
+    public boolean hide_state(Uid objUid, String tName) throws ObjectStoreException {
+        return _theImple.hide_state(objUid, tName);
+    }
+
+    public boolean reveal_state(Uid objUid, String tName) throws ObjectStoreException {
+        return _theImple.reveal_state(objUid, tName);
+    }
+
+    public int currentState(Uid objUid, String tName) throws ObjectStoreException {
+        return _theImple.currentState(objUid, tName);
+    }
+
+    public InputObjectState read_committed(Uid storeUid, String tName) throws ObjectStoreException {
+        return _theImple.read_state(storeUid, tName, StateStatus.OS_COMMITTED);
+    }
+
+    public InputObjectState read_uncommitted(Uid storeUid, String tName) throws ObjectStoreException {
+        return _theImple.read_state(storeUid, tName, StateStatus.OS_UNCOMMITTED);
+    }
+
+    public boolean remove_committed(Uid storeUid, String tName) throws ObjectStoreException {
+        return _theImple.remove_state(storeUid, tName, StateStatus.OS_COMMITTED);
+    }
+
+    public boolean remove_uncommitted(Uid storeUid, String tName) throws ObjectStoreException {
+        return _theImple.remove_state(storeUid, tName, StateStatus.OS_UNCOMMITTED);
+    }
+
+    public boolean write_committed(Uid storeUid, String tName, OutputObjectState state) throws ObjectStoreException {
+        return _theImple.write_state(storeUid, tName, state, StateStatus.OS_COMMITTED);
+    }
+
+    public boolean write_uncommitted(Uid storeUid, String tName, OutputObjectState state) throws ObjectStoreException {
+        return _theImple.write_state(storeUid, tName, state, StateStatus.OS_UNCOMMITTED);
+    }
+
+    public boolean allObjUids(String tName, InputObjectState state, int match) throws ObjectStoreException {
+        return _theImple.allObjUids(tName, state, match);
+    }
+
+    public boolean allTypes(InputObjectState foundTypes) throws ObjectStoreException {
+        return _theImple.allTypes(foundTypes);
+    }
+
+    public synchronized void packInto(OutputBuffer buff) throws IOException {
+        buff.packString(tableName);
+    }
+
+    public synchronized void unpackFrom(InputBuffer buff) throws IOException {
+        this.tableName = buff.unpackString();
+    }
+
+    /**
+     * Create a new JDBCStore
+     * 
+     * @param jdbcStoreEnvironmentBean
+     *            The environment bean containing the configuration
+     * @throws ObjectStoreException
+     *             In case the store environment bean was not correctly
+     *             configured
+     * @throws {@link FatalError} In case the configured store cannot be
+     *         connected to
+     */
+    public JDBCStore(ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean) throws ObjectStoreException {
+        this.jdbcStoreEnvironmentBean = jdbcStoreEnvironmentBean;
+        String connectionDetails = jdbcStoreEnvironmentBean.getJdbcAccess();
+        if (connectionDetails == null) {
+            throw new ObjectStoreException(tsLogger.i18NLogger.get_objectstore_JDBCStore_5());
+        }
+        String impleTableName = DEFAULT_TABLE_NAME;
+        final String tablePrefix = jdbcStoreEnvironmentBean.getTablePrefix();
+        if ((tablePrefix != null) && (tablePrefix.length() > 0)) {
+            impleTableName = tablePrefix + impleTableName;
+        }
+        tableName = impleTableName;
+
+        _theImple = imples.get(connectionDetails);
+        _storeName = storeNames.get(connectionDetails);
+        if (_theImple == null) {
+            try {
+                StringTokenizer stringTokenizer = new StringTokenizer(connectionDetails, "";"");
+                JDBCAccess jdbcAccess = (JDBCAccess) Class.forName(stringTokenizer.nextToken()).newInstance();
+                jdbcAccess.initialise(stringTokenizer);
+
+                _storeName = jdbcAccess.getClass().getName() + "":"" + tableName;
+
+                Connection connection = jdbcAccess.getConnection();
+                String name;
+                int major;
+                int minor;
+                try {
+                    DatabaseMetaData md = connection.getMetaData();
+                    name = md.getDriverName();
+                    major = md.getDriverMajorVersion();
+                    minor = md.getDriverMinorVersion();
+                } finally {
+                    connection.close();
+                }
+
+                /*
+                 * Check for spaces in the name - our implementation classes are
+                 * always just the first part of such names.
+                 */
+
+                int index = name.indexOf(' ');
+
+                if (index != -1)
+                    name = name.substring(0, index);
+
+                name = name.replaceAll(""-"", ""_"");
+
+                name = name.toLowerCase();
+
+                final String packagePrefix = JDBCStore.class.getName().substring(0, JDBCStore.class.getName().lastIndexOf('.')) + "".drivers."";
+                Class jdbcImpleClass = null;
+                try {
+                    jdbcImpleClass = Class.forName(packagePrefix + name + ""_"" + major + ""_"" + minor + ""_driver"");
+                } catch (final ClassNotFoundException cnfe) {
+                    try {
+                        jdbcImpleClass = Class.forName(packagePrefix + name + ""_"" + major + ""_driver"");
+                    } catch (final ClassNotFoundException cnfe2) {
+                        jdbcImpleClass = Class.forName(packagePrefix + name + ""_driver"");
+                    }
+                }
+                _theImple = (com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver) jdbcImpleClass.newInstance();
+
+                _theImple.initialise(jdbcAccess, tableName, jdbcStoreEnvironmentBean);
+                imples.put(connectionDetails, _theImple);
+                storeNames.put(connectionDetails, _storeName);
+            } catch (Exception e) {
+                tsLogger.i18NLogger.fatal_objectstore_JDBCStore_2(_storeName, e);
+                throw new ObjectStoreException(e);
+            }
+        }
+    }
 }",2014-03-17T14:32:52Z,169
"@@ -1,98 +0,0 @@
-@echo off
-REM  ======================================================================
-REM
-REM  This is the main entry point for the build system.
-REM
-REM  Users should be sure to execute this file rather than 'mvn' to ensure
-REM  the correct version is being used with the correct configuration.
-REM
-REM  ======================================================================
-REM
-REM $Id: build.bat 105735 2010-06-04 19:45:13Z pgier $
-REM
-REM Authors:
-REM     Jason Dillon <jason@planet57.com>
-REM     Sacha Labourey <sacha.labourey@cogito-info.ch>
-REM
-
-REM ******************************************************
-REM Ignore the MAVEN_HOME variable: we want to use *our*
-REM Maven version and associated JARs.
-REM ******************************************************
-REM Ignore the users classpath, cause it might mess
-REM things up
-REM ******************************************************
-
-set PWD=%~dp0
-
-
-SETLOCAL
-
-set BPA=vc9x32
-
-set CLASSPATH=
-set M2_HOME=
-set MAVEN_HOME=
-
-set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dbpa=%BPA%
-
-REM ******************************************************
-REM - ""for"" loops have been unrolled for compatibility
-REM   with some WIN32 systems.
-REM ******************************************************
-
-set NAMES=tools;tools\maven;tools\apache\maven
-set SUBFOLDERS=.;..;..\..;..\..\..;..\..\..\..
-
-REM ******************************************************
-REM ******************************************************
-
-SET EXECUTED=FALSE
-for %%i in (%NAMES%) do call :subLoop %%i %1 %2 %3 %4 %5 %6
-
-goto :EOF
-
-
-REM ******************************************************
-REM ********* Search for names in the subfolders *********
-REM ******************************************************
-
-:subLoop
-for %%j in (%SUBFOLDERS%) do call :testIfExists %%j\%1\bin\mvn.bat %2 %3 %4 %5 %6 %7
-
-goto :EOF
-
-
-REM ******************************************************
-REM ************ Test if Maven Batch file exists ***********
-REM ******************************************************
-
-:testIfExists
-if exist %1 call :BatchFound %1 %2 %3 %4 %5 %6 %7 %8
-
-goto :EOF
-
-
-REM ******************************************************
-REM ************** Batch file has been found *************
-REM ******************************************************
-
-:BatchFound
-if (%EXECUTED%)==(FALSE) call :ExecuteBatch %1 %2 %3 %4 %5 %6 %7 %8
-set EXECUTED=TRUE
-
-goto :EOF
-
-REM ******************************************************
-REM ************* Execute Batch file only once ***********
-REM ******************************************************
-
-:ExecuteBatch
-set GOAL=%2
-if ""%GOAL%""=="""" set GOAL=install
-echo Calling %1 %MVN_OPTIONS% %GOAL% %3 %4 %5 %6 %7 %8
-call %1 %MVN_OPTIONS% %GOAL% %3 %4 %5 %6 %7 %8
-
-:end
-
-if ""%NOPAUSE%"" == """" pause",2013-09-26T10:56:06Z,170
"@@ -1,205 +0,0 @@
-#!/bin/sh
-### ====================================================================== ###
-##                                                                          ##
-##  This is the main entry point for the build system.                      ##
-##                                                                          ##
-##  Users should execute this file rather than 'mvn' to ensure              ##
-##  the correct version is being used with the correct configuration.       ##
-##                                                                          ##
-### ====================================================================== ###
-
-# $Id: build.sh 105735 2010-06-04 19:45:13Z pgier $
-
-# Create the bpa if you can
-BPA=
-
-uname | grep Linux >> /dev/null
-if [ ""$?"" -ne ""1"" ]; then
-	uname -a | grep x86_64 >> /dev/null
-	if [ ""$?"" -ne ""1"" ]; then
-		BPA=""-Dbpa=centos54x64""
-	else
-		BPA=""-Dbpa=centos55x32""
-	fi
-  # This is required for the upgrade of g++ https://issues.jboss.org/browse/JBTM-1787
-  if [ -f /etc/fedora-release ]
-  then
-    grep ""Fedora release 18"" /etc/fedora-release > /dev/null
-  	if [ ""$?"" -eq ""0"" ]; then
-  		BPA=""-Dbpa=fc18x64""
-    fi
-    grep ""Fedora release 19"" /etc/fedora-release > /dev/null
-  	if [ ""$?"" -eq ""0"" ]; then
-  		BPA=""-Dbpa=fc18x64""
-    fi
-  fi
-fi
-
-PROGNAME=`basename $0`
-DIRNAME=`dirname $0`
-GREP=""grep""
-ROOT=""/""
-
-# Ignore user's MAVEN_HOME if it is set
-M2_HOME=""""
-MAVEN_HOME=""""
-
-MAVEN_OPTS=""$MAVEN_OPTS -Xmx128M""
-export MAVEN_OPTS
-
-# the default search path for maven
-MAVEN_SEARCH_PATH=""\
-    tools
-    tools/maven \
-    tools/apache/maven \
-    maven""
-
-# the default arguments
-MVN_OPTIONS=""$BPA -gs tools/maven/conf/settings.xml -Demma.jar.location=`pwd`/../ext/""
-
-# Use the maximum available, or set MAX_FD != -1 to use that
-MAX_FD=""maximum""
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false;
-darwin=false;
-case ""`uname`"" in
-    CYGWIN*)
-        cygwin=true
-        ;;
-
-    Darwin*)
-        darwin=true
-        ;;
-esac
-
-#
-# Helper to complain.
-#
-die() {
-    echo ""${PROGNAME}: $*""
-    exit 1
-}
-
-#
-# Helper to complain.
-#
-warn() {
-    echo ""${PROGNAME}: $*""
-}
-
-#
-# Helper to source a file if it exists.
-#
-maybe_source() {
-    for file in $*; do
-	if [ -f ""$file"" ]; then
-	    . $file
-	fi
-    done
-}
-
-search() {
-    search=""$*""
-    for d in $search; do
-	MAVEN_HOME=""`pwd`/$d""
-	MVN=""$MAVEN_HOME/bin/mvn""
-	if [ -x ""$MVN"" ]; then
-	    # found one
-	    echo $MAVEN_HOME
-	    break
-	fi
-    done
-}
-
-#
-# Main function.
-#
-main() {
-    # if there is a build config file. then source it
-    maybe_source ""$DIRNAME/build.conf"" ""$HOME/.build.conf""
-
-    # Increase the maximum file descriptors if we can
-    if [ $cygwin = ""false"" ]; then
-	MAX_FD_LIMIT=`ulimit -H -n`
-	if [ $? -eq 0 ]; then
-	    if [ ""$MAX_FD"" = ""maximum"" -o ""$MAX_FD"" = ""max"" ]; then
-		# use the system max
-		MAX_FD=""$MAX_FD_LIMIT""
-	    fi
-
-	    ulimit -n $MAX_FD
-	    if [ $? -ne 0 ]; then
-		warn ""Could not set maximum file descriptor limit: $MAX_FD""
-	    fi
-	else
-	    warn ""Could not query system maximum file descriptor limit: $MAX_FD_LIMIT""
-	fi
-    fi
-
-    # try the search path
-    MAVEN_HOME=`search $MAVEN_SEARCH_PATH`
-
-    # try looking up to root
-    if [ ""x$MAVEN_HOME"" = ""x"" ]; then
-	target=""build""
-	_cwd=`pwd`
-
-	while [ ""x$MAVEN_HOME"" = ""x"" ] && [ ""$cwd"" != ""$ROOT"" ]; do
-	    cd ..
-	    cwd=`pwd`
-	    MAVEN_HOME=`search $MAVEN_SEARCH_PATH`
-	done
-
-	# make sure we get back
-	cd $_cwd
-
-	if [ ""$cwd"" != ""$ROOT"" ]; then
-	    found=""true""
-	fi
-
-	# complain if we did not find anything
-	if [ ""$found"" != ""true"" ]; then
-	    die ""Could not locate Maven; check \$MVN or \$MAVEN_HOME.""
-	fi
-    fi
-
-    # make sure we have one
-    MVN=$MAVEN_HOME/bin/mvn
-    if [ ! -x ""$MVN"" ]; then
-	die ""Maven file is not executable: $MVN""
-    fi
-
-    # need to specify planet57/buildmagic protocol handler package
-    MVN_OPTS=""-Djava.protocol.handler.pkgs=org.jboss.net.protocol""
-
-    # setup some build properties
-    MVN_OPTS=""$MVN_OPTS -Dbuild.script=$0""
-
-    # change to the directory where the script lives so users are not forced
-    # to be in the same directory as build.xml
-    cd $DIRNAME
-
-    MVN_GOAL=$@
-    if [ -z ""$MVN_GOAL"" ]; then
-      MVN_GOAL=""install""
-    fi
-    
-    # export some stuff for maven
-    export MVN MAVEN_HOME MVN_OPTS MVN_GOAL
-
-    echo ""$MVN $MVN_OPTIONS $MVN_GOAL""
-    
-    # execute in debug mode, or simply execute
-    if [ ""x$MVN_DEBUG"" != ""x"" ]; then
-	  /bin/sh -x $MVN $MVN_OPTIONS $MVN_GOAL
-    else
-	  exec $MVN $MVN_OPTIONS $MVN_GOAL
-    fi
-}
-
-##
-## Bootstrap
-##
-
-main ""$@""",2013-09-26T10:56:06Z,171
"@@ -1,102 +0,0 @@
-function fatal {
-  comment_on_pull ""Tests failed: $1""
-  echo ""$1""
-  exit -1
-}
-
-function comment_on_pull
-{
-    if [ ""$COMMENT_ON_PULL"" = """" ]; then return; fi
-
-    PULL_NUMBER=$(echo $GIT_BRANCH | awk -F 'pull' '{ print $2 }' | awk -F '/' '{ print $2 }')
-    if [ ""$PULL_NUMBER"" != """" ]
-    then
-        JSON=""{ \""body\"": \""$1\"" }""
-        curl -d ""$JSON"" -ujbosstm-bot:$BOT_PASSWORD https://api.github.com/repos/$GIT_ACCOUNT/$GIT_REPO/issues/$PULL_NUMBER/comments
-    else
-        echo ""Not a pull request, so not commenting""
-    fi
-}
-
-ulimit -c unlimited
-
-# CHECK IF WORKSPACE IS SET
-if [ -n ""${WORKSPACE+x}"" ]; then
-  echo WORKSPACE is set
-else
-  echo WORKSPACE not set
-  exit
-fi
-
-if [ -n ""${JBOSS_HOME+x}"" ]; then
-  echo JBOSS_HOME is set
-else
-  echo JBOSS_HOME not set
-  exit
-fi
-
-
-if [ -z ""${JBOSSAS_IP_ADDR+x}"" ]; then
-  echo JBOSSAS_IP_ADDR not set
-  JBOSSAS_IP_ADDR=localhost
-fi
-
-# KILL ANY PREVIOUS BUILD REMNANTS
-ps -f
-for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-killall -9 -r memcheck
-killall -9 testsuite
-killall -9 server
-killall -9 client
-killall -9 cs
-ps -f
-
-# FOR DEBUGGING SUBSEQUENT ISSUES
-free -m
-
-# GET THE TNS NAMES
-TNS_ADMIN=$WORKSPACE/instantclient_11_2/network/admin
-mkdir -p $TNS_ADMIN
-if [ -e $TNS_ADMIN/tnsnames.ora ]; then
-	echo ""tnsnames.ora already downloaded""
-else
-	(cd $TNS_ADMIN; wget http://albany/userContent/blacktie/tnsnames.ora)
-fi
-
-# INITIALIZE JBOSS
-ant -f scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=$JBOSS_HOME -Dbasedir=. initializeJBoss
-if [ ""$?"" != ""0"" ]; then
-	fatal ""Failed to init JBoss: $BUILD_URL""
-fi
-
-export JBOSS_HOME=$WORKSPACE/jboss-as/
-
-chmod u+x $JBOSS_HOME/bin/standalone.sh
-
-# START JBOSS
-export JAVA_OPTS=""$JAVA_OPTS -Xmx256m -XX:MaxPermSize=256m""
-$JBOSS_HOME/bin/standalone.sh -c standalone-blacktie.xml -Djboss.bind.address=$JBOSSAS_IP_ADDR -Djboss.bind.address.unsecure=$JBOSSAS_IP_ADDR&
-sleep 5
-
-# BUILD BLACKTIE
-cd $WORKSPACE
-./build.sh clean install -Djbossas.ip.addr=$JBOSSAS_IP_ADDR ""$@""
-if [ ""$?"" != ""0"" ]; then
-	ps -f
-	for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-	killall -9 testsuite
-	killall -9 server
-	killall -9 client
-	killall -9 cs
-    ps -f
-	fatal ""Some tests failed: $BUILD_URL""
-fi
-
-# KILL ANY BUILD REMNANTS
-ps -f
-for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-killall -9 testsuite
-killall -9 server
-killall -9 client
-killall -9 cs
-ps -f",2013-09-26T10:56:06Z,172
"@@ -1,61 +0,0 @@
-set NOPAUSE=true
-
-rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
-FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-tasklist
-taskkill /F /IM mspdbsrv.exe
-taskkill /F /IM testsuite.exe
-taskkill /F /IM server.exe
-taskkill /F /IM client.exe
-taskkill /F /IM cs.exe
-tasklist
-
-if not defined WORKSPACE (call:fail_build && exit -1)
-
-if not defined JBOSSAS_IP_ADDR echo ""JBOSSAS_IP_ADDR not set"" & for /f ""delims="" %%a in ('hostname') do @set JBOSSAS_IP_ADDR=%%a
-
-rem INITIALIZE JBOSS
-cd %WORKSPACE%
-call ant -f scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=%JBOSS_HOME% -Dbasedir=. initializeJBoss -debug || (call:fail_build && exit -1)
-
-rem wget -P jboss-as\standalone\deployments\ -N http://172.17.131.2/job/narayana-populateM2-taconic/lastSuccessfulBuild/artifact/rts/at/webservice/target/restat-web-5.0.0.M2-SNAPSHOT.war
-rem IF %ERRORLEVEL% NEQ 0 call:comment_on_pull ""Can not wget restat-web war"" & exit -1
-
-set JBOSS_HOME=
-
-rem START JBOSS
-cd jboss-as\bin
-rem set JAVA_OPTS=""%JAVA_OPTS% -Xmx1024m -XX:MaxPermSize=512m""
-start /B standalone.bat -c standalone-blacktie.xml -Djboss.bind.address=%JBOSSAS_IP_ADDR% -Djboss.bind.address.unsecure=%JBOSSAS_IP_ADDR%
-echo ""Started server""
-@ping 127.0.0.1 -n 20 -w 1000 > nul
-
-rem BUILD BLACKTIE
-cd %WORKSPACE%
-call build.bat clean install ""-Djbossas.ip.addr=%JBOSSAS_IP_ADDR%"" || (call:fail_build && exit -1)
-
-rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
-tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-echo ""Finished build""
-
-rem -------------------------------------------------------
-rem -                 Functions bellow                    -
-rem -------------------------------------------------------
-
-goto:eof
-
-:fail_build
-  call:comment_on_pull ""Build failed %BUILD_URL%""
-  tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-  exit -1
-goto:eof
-
-:comment_on_pull
-   if not ""%COMMENT_ON_PULL%""==""1"" goto:eof
-
-   for /f ""tokens=1,2,3,4 delims=/"" %%a in (""%GIT_BRANCH%"") do set IS_PULL=%%b&set PULL_NUM=%%c
-   if not ""%IS_PULL%""==""pull"" goto:eof
-   
-   curl -d ""{ \""body\"": \""%~1\"" }"" -ujbosstm-bot:%BOT_PASSWORD% https://api.github.com/repos/%GIT_ACCOUNT%/%GIT_REPO%/issues/%PULL_NUM%/comments
-
-goto:eof",2013-09-26T10:56:06Z,173
"@@ -2,24 +2,20 @@
 <project name=""blacktie-dependencies"">
     <target name=""initializeJBoss"">
         <!--       <get src=""http://172.17.131.2/userContent/blacktie/jbossesb-4.9.zip"" dest=""./jbossesb-4.9.zip"" verbose=""true"" usetimestamp=""true"" skipexisting=""true""/>  -->
-        <delete dir=""jboss-as""/>
-        <copy todir=""jboss-as"">
-            <fileset dir=""${JBOSS_HOME}""/>
-        </copy>
-        <copy file=""jboss-as/docs/examples/configs/standalone-blacktie.xml"" tofile=""jboss-as/standalone/configuration/standalone-blacktie.xml"" overwrite=""true"" />
-        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;set &quot;JAVA_OPTS=%JAVA_OPTS% -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""jboss-as/bin/standalone.conf.bat""/>
-        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;export JAVA_OPTS=&quot;$JAVA_OPTS -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""jboss-as/bin/standalone.conf""/>
-        <replaceregexp byline=""true"" match=""&quot;spec&quot;"" replace=""&quot;on&quot;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;"" replace=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;&#10;            &lt;jts/&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.hornetq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;/hornetq-server&gt;"" replace=""&lt;jms-destinations&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestOne&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestOne&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestOne&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestTwo&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestTwo&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTC_ConvService&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTC_ConvService&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTC_ConvService&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_JAVA_Converse&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot;&gt;&#10;                        &lt;entry name=&quot;topic/BTR_JAVA_Topic&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/topic/BTR_JAVA_Topic&quot;/&gt;&#10;                    &lt;/jms-topic&gt;&lt;/jms-destinations&gt;&#10;                    &#10;            &lt;/hornetq-server&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""#guest=guest"" replace=""guest=guest,blacktie&#10;"" file=""jboss-as/standalone/configuration/application-roles.properties""/>
-        <echo file=""jboss-as/standalone/configuration/application-roles.properties"" append=""true"">dynsub=guest,blacktie,dynsub</echo>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;dynsub&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;dynsub&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;"" replace=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;"" replace=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-		<replaceregexp byline=""true"" match=""&lt;module name=&quot;org.omg.api&quot;/&gt;"" replace=""&lt;module name=&quot;org.omg.api&quot;/&gt;&#10;        &lt;module name=&quot;org.jboss.as.jacorb&quot;/&gt;"" file=""jboss-as/modules/system/layers/base/org/jboss/as/transactions/main/module.xml""/>
+        <copy file=""${JBOSS_HOME}/docs/examples/configs/standalone-blacktie.xml"" tofile=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml"" overwrite=""true"" />
+        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;set &quot;JAVA_OPTS=%JAVA_OPTS% -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""${JBOSS_HOME}/bin/standalone.conf.bat""/>
+        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;export JAVA_OPTS=&quot;$JAVA_OPTS -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""${JBOSS_HOME}/bin/standalone.conf""/>
+        <replaceregexp byline=""true"" match=""&quot;spec&quot;"" replace=""&quot;on&quot;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;"" replace=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;&#10;            &lt;jts/&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.hornetq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;/hornetq-server&gt;"" replace=""&lt;jms-destinations&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestOne&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestOne&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestOne&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestTwo&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestTwo&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTC_ConvService&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTC_ConvService&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTC_ConvService&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_JAVA_Converse&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot;&gt;&#10;                        &lt;entry name=&quot;topic/BTR_JAVA_Topic&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/topic/BTR_JAVA_Topic&quot;/&gt;&#10;                    &lt;/jms-topic&gt;&lt;/jms-destinations&gt;&#10;                    &#10;            &lt;/hornetq-server&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""#guest=guest"" replace=""guest=guest,blacktie&#10;"" file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties""/>
+        <echo file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties"" append=""true"">dynsub=guest,blacktie,dynsub</echo>
+        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;dynsub&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;dynsub&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;"" replace=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;"" replace=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+		<replaceregexp byline=""true"" match=""&lt;module name=&quot;org.omg.api&quot;/&gt;"" replace=""&lt;module name=&quot;org.omg.api&quot;/&gt;&#10;        &lt;module name=&quot;org.jboss.as.jacorb&quot;/&gt;"" file=""${JBOSS_HOME}/modules/system/layers/base/org/jboss/as/transactions/main/module.xml""/>
 
 	<!-- Copy the required users into the AS domain -->
 	<!--
@@ -29,8 +25,8 @@
 	(cd jboss-as/bin/ && ./add-user.sh guest password -a \-\-silent=true)
 	(cd jboss-as/bin/ && ./add-user.sh dynsub password -a \-\-silent=true)
 	-->
-	<copy todir=""jboss-as/"" overwrite=""true"">
-		<fileset dir=""scripts/hudson/config/""/>
+	<copy todir=""${JBOSS_HOME}/"" overwrite=""true"">
+		<fileset dir=""config/""/>
 	</copy>
     </target>
 </project>",2013-09-26T10:56:06Z,52
"@@ -33,7 +33,7 @@ set M2_HOME=
 set MAVEN_HOME=
 
 set MAVEN_OPTS=%MAVEN_OPTS% -Xms512m -XX:MaxPermSize=256m
-set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dorson.jar.location=%PWD%\ext\
+set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dorson.jar.location=%PWD%\ext\ -Dbpa=vc9x32
 
 REM ******************************************************
 REM - ""for"" loops have been unrolled for compatibility",2013-09-26T10:56:06Z,174
"@@ -10,6 +10,30 @@
 
 # $Id: build.sh 105735 2010-06-04 19:45:13Z pgier $
 
+# Create the bpa if you can
+BPA=
+uname | grep Linux >> /dev/null
+if [ ""$?"" -ne ""1"" ]; then
+	uname -a | grep x86_64 >> /dev/null
+	if [ ""$?"" -ne ""1"" ]; then
+		BPA=""-Dbpa=centos54x64""
+	else
+		BPA=""-Dbpa=centos55x32""
+	fi
+  # This is required for the upgrade of g++ https://issues.jboss.org/browse/JBTM-1787
+  if [ -f /etc/fedora-release ]
+  then
+    grep ""Fedora release 18"" /etc/fedora-release > /dev/null
+  	if [ ""$?"" -eq ""0"" ]; then
+  		BPA=""-Dbpa=fc18x64""
+    fi
+    grep ""Fedora release 19"" /etc/fedora-release > /dev/null
+  	if [ ""$?"" -eq ""0"" ]; then
+  		BPA=""-Dbpa=fc18x64""
+    fi
+  fi
+fi
+
 PROGNAME=`basename $0`
 DIRNAME=`dirname $0`
 GREP=""grep""
@@ -30,7 +54,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2013-09-26T10:56:06Z,35
"@@ -1,3 +1,5 @@
+if not defined WORKSPACE (call:fail_build && exit -1)
+
 call:comment_on_pull ""Started testing this pull request with BLACKTIE profile on Windows: %BUILD_URL%""
 
 call build.bat clean install ""-DskipTests"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Narayana Failed %BUILD_URL%"" && exit -1)
@@ -10,13 +12,12 @@ cd jboss-as
 git remote add upstream https://github.com/wildfly/wildfly.git
 git pull --rebase --ff-only -s recursive -Xtheirs upstream master
 if %ERRORLEVEL% NEQ 0 exit -1
-
 echo ""Building AS""
 set MAVEN_OPTS=""-Xmx768M""
 call build.bat clean install ""-DskipTests"" ""-Drelease=true"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - AS Failed %BUILD_URL%"" && exit -1)
+cd ..\
 
 echo ""Building Blacktie Subsystem""
-cd ..\
 call build.bat -f blacktie\wildfly-blacktie\pom.xml clean install || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Build Blacktie Subsystem Failed %BUILD_URL%"" && exit -1)
 
 echo ""Building BlackTie
@@ -25,15 +26,55 @@ rmdir wildfly-%WILDFLY_MASTER_VERSION% /s /q
 unzip ..\jboss-as\dist\target\wildfly-%WILDFLY_MASTER_VERSION%.zip
 set JBOSS_HOME=%CD%\wildfly-%WILDFLY_MASTER_VERSION%\
 unzip wildfly-blacktie\build\target\wildfly-blacktie-build-%WILDFLY_MASTER_VERSION%-bin.zip -d %JBOSS_HOME%
-set WORKSPACE=%WORKSPACE%\blacktie 
-call scripts\hudson\blacktie-vc9x32.bat || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - BlackTie Failed %BUILD_URL%"" && exit -1)
+cd ..\
+
+set NOPAUSE=true
+
+rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
+FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+tasklist
+taskkill /F /IM mspdbsrv.exe
+taskkill /F /IM testsuite.exe
+taskkill /F /IM server.exe
+taskkill /F /IM client.exe
+taskkill /F /IM cs.exe
+tasklist
+
+if not defined JBOSSAS_IP_ADDR echo ""JBOSSAS_IP_ADDR not set"" & for /f ""delims="" %%a in ('hostname') do @set JBOSSAS_IP_ADDR=%%a
+
+rem INITIALIZE JBOSS
+call ant -f blacktie/scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=%WORKSPACE%\blacktie\wildfly-${WILDFLY_MASTER_VERSION} initializeJBoss -debug || (call:fail_build && exit -1)
+
+rem wget -P jboss-as\standalone\deployments\ -N http://172.17.131.2/job/narayana-populateM2-taconic/lastSuccessfulBuild/artifact/rts/at/webservice/target/restat-web-5.0.0.M2-SNAPSHOT.war
+rem IF %ERRORLEVEL% NEQ 0 call:comment_on_pull ""Can not wget restat-web war"" & exit -1
+
+set JBOSS_HOME=%WORKSPACE%\blacktie\wildfly-${WILDFLY_MASTER_VERSION}
+
+rem START JBOSS
+rem set JAVA_OPTS=""%JAVA_OPTS% -Xmx1024m -XX:MaxPermSize=512m""
+start /B %JBOSS_HOME%\bin\standalone.bat -c standalone-blacktie.xml -Djboss.bind.address=%JBOSSAS_IP_ADDR% -Djboss.bind.address.unsecure=%JBOSSAS_IP_ADDR%
+echo ""Started server""
+@ping 127.0.0.1 -n 20 -w 1000 > nul
+
+rem BUILD BLACKTIE
+call build.bat -f blacktie/pom.xml clean install ""-Djbossas.ip.addr=%JBOSSAS_IP_ADDR%"" || (call:fail_build && exit -1)
+
+rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
+tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+echo ""Finished build""
 
 call:comment_on_pull ""BLACKTIE profile tests passed on Windows - Job complete %BUILD_URL%""
 
-rem -------------------------------------------------------
-rem -                 Functions bellow                    -
-rem -------------------------------------------------------
+rem ------------------------------------------------------
+rem -                 Functions below                    -
+rem ------------------------------------------------------
+
+goto:eof
 
+:fail_build
+  call:comment_on_pull ""Build failed %BUILD_URL%""
+  tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+  exit -1
 goto:eof
 
 :comment_on_pull",2013-09-26T10:56:06Z,147
"@@ -197,17 +197,9 @@ function build_as {
   #Enable remote debugger
   echo JAVA_OPTS='""$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n""' >> ./build/target/wildfly-*/bin/standalone.conf
 
-  build_blacktie_subsystem
   init_jboss_home
 }
 
-function build_blacktie_subsystem {
-  echo ""Building Blacktie Subsystem""
-  cd ${WORKSPACE}
-  ./build.sh -f blacktie/wildfly-blacktie/pom.xml clean install
-  [ $? = 0 ] || fatal ""Blacktie Subsystem build failed""
-}
-
 function init_jboss_home {
   cd $WORKSPACE
   JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep wildfly`
@@ -248,13 +240,67 @@ function rts_tests {
 
 function blacktie {
   echo ""#0. BlackTie""
-  cd blacktie
-  rm -rf $PWD/wildfly-${WILDFLY_MASTER_VERSION}
-  unzip ../jboss-as/dist/target/wildfly-${WILDFLY_MASTER_VERSION}.zip
-  unzip ${WORKSPACE}/blacktie/wildfly-blacktie/build/target/wildfly-blacktie-build-${WILDFLY_MASTER_VERSION}-bin.zip -d $PWD/wildfly-${WILDFLY_MASTER_VERSION}
-  WORKSPACE=$WORKSPACE/blacktie JBOSS_HOME=$PWD/wildfly-${WILDFLY_MASTER_VERSION} ./scripts/hudson/blacktie-linux.sh ""$@""
-  [ $? = 0 ] || fatal ""BlackTie build failed""
-  cd -
+  ulimit -c unlimited
+  if [ -z ""${JBOSSAS_IP_ADDR+x}"" ]; then
+    echo JBOSSAS_IP_ADDR not set
+    JBOSSAS_IP_ADDR=localhost
+  fi
+  # KILL ANY PREVIOUS BUILD REMNANTS
+  ps -f
+  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  killall -9 -r memcheck
+  killall -9 testsuite
+  killall -9 server
+  killall -9 client
+  killall -9 cs
+  ps -f
+  # FOR DEBUGGING SUBSEQUENT ISSUES
+  free -m
+
+  echo ""Building Blacktie Subsystem""
+  cd ${WORKSPACE}
+  ./build.sh -f blacktie/wildfly-blacktie/pom.xml clean install ""$@""
+  [ $? = 0 ] || fatal ""Blacktie Subsystem build failed""
+  rm -rf ${WORKSPACE}/blacktie/wildfly-${WILDFLY_MASTER_VERSION}
+  unzip ${WORKSPACE}/jboss-as/dist/target/wildfly-${WILDFLY_MASTER_VERSION}.zip -d $PWD/blacktie
+  [ $? = 0 ] || fatal ""Could not unzip wildfly""
+  unzip ${WORKSPACE}/blacktie/wildfly-blacktie/build/target/wildfly-blacktie-build-${WILDFLY_MASTER_VERSION}-bin.zip -d $PWD/blacktie/wildfly-${WILDFLY_MASTER_VERSION}
+  [ $? = 0 ] || fatal ""Could not unzip blacktie into widfly""
+  # INITIALIZE JBOSS
+  ant -f blacktie/scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=$WORKSPACE/blacktie/wildfly-${WILDFLY_MASTER_VERSION} initializeJBoss
+  if [ ""$?"" != ""0"" ]; then
+	  fatal ""Failed to init JBoss: $BUILD_URL""
+  fi
+  chmod u+x $WORKSPACE/blacktie/wildfly-${WILDFLY_MASTER_VERSION}/bin/standalone.sh
+
+  if [[ $# == 0 || $# > 0 && ""$1"" != ""-DskipTests"" ]]; then
+    # START JBOSS
+    JBOSS_HOME=`pwd`/blacktie/wildfly-${WILDFLY_MASTER_VERSION} JAVA_OPTS=""$JAVA_OPTS -Xmx256m -XX:MaxPermSize=256m"" blacktie/wildfly-${WILDFLY_MASTER_VERSION}/bin/standalone.sh -c standalone-blacktie.xml -Djboss.bind.address=$JBOSSAS_IP_ADDR -Djboss.bind.address.unsecure=$JBOSSAS_IP_ADDR&
+    sleep 5
+  fi
+
+  # BUILD BLACKTIE
+  ./build.sh -f blacktie/pom.xml clean install -Djbossas.ip.addr=$JBOSSAS_IP_ADDR ""$@""
+  if [ ""$?"" != ""0"" ]; then
+  	ps -f
+	  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  	killall -9 testsuite
+	  killall -9 server
+	  killall -9 client
+  	killall -9 cs
+    ps -f
+  	fatal ""Some tests failed: $BUILD_URL""
+  fi
+
+  # KILL ANY BUILD REMNANTS
+  ps -f
+  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  killall -9 testsuite
+  killall -9 server
+  killall -9 client
+  killall -9 cs
+  ps -f
+  [ $? = 0 ] || fatal ""BlackTie build failed: $BUILD_URL""
 }
 
 function jta_cdi_tests {",2013-09-26T10:56:06Z,10
"@@ -88,13 +88,22 @@ public static void main(String[] args)
 
 			service.setup_oper(1);
 
-			correct = service.check_oper(checkBehaviors) && service.is_correct();
-
+			correct = service.check_oper(checkBehaviors);
+            if (!correct) {
+                System.out.println(""Gonna fail1"");
+            } else {
+			    correct = service.is_correct();
+                if (!correct)
+                    System.out.println(""Gonna fail2"");
+            }
 			CrashRecoveryDelays.awaitReplayCompletionCR05();
 
 			ResourceTrace resourceTrace = service.get_resource_trace(0);
 
-			correct = correct && (resourceTrace == ResourceTrace.ResourceTraceRollback);
+			if (resourceTrace != ResourceTrace.ResourceTraceRollback) {
+                correct = false;
+                System.out.printf(""Gonna fail3: resourceTrace=%s\n"", resourceTrace.toString());
+            }
 
 			if (correct)
 			{",2012-11-26T17:32:56Z,175
"@@ -148,7 +148,7 @@ public static void awaitReplayCompletionCR02() throws InterruptedException {
     }
 
     public static void awaitReplayCompletionCR05() throws InterruptedException {
-        awaitReplayCompletion(5); // was 60
+        awaitReplayCompletion(10); // was 60
     }
 
     public static void awaitReplayCompletionCR06() throws InterruptedException {",2012-11-26T17:32:56Z,176
"@@ -88,13 +88,22 @@ public static void main(String[] args)
 
 			service.setup_oper(1);
 
-			correct = service.check_oper(checkBehaviors) && service.is_correct();
-
+			correct = service.check_oper(checkBehaviors);
+            if (!correct) {
+                System.out.println(""Gonna fail1"");
+            } else {
+			    correct = service.is_correct();
+                if (!correct)
+                    System.out.println(""Gonna fail2"");
+            }
 			CrashRecoveryDelays.awaitReplayCompletionCR05();
 
 			ResourceTrace resourceTrace = service.get_resource_trace(0);
 
-			correct = correct && (resourceTrace == ResourceTrace.ResourceTraceRollback);
+			if (resourceTrace != ResourceTrace.ResourceTraceRollback) {
+                correct = false;
+                System.out.printf(""Gonna fail3: resourceTrace=%s\n"", resourceTrace.toString());
+            }
 
 			if (correct)
 			{",2012-11-26T17:32:56Z,175
"@@ -148,7 +148,7 @@ public static void awaitReplayCompletionCR02() throws InterruptedException {
     }
 
     public static void awaitReplayCompletionCR05() throws InterruptedException {
-        awaitReplayCompletion(5); // was 60
+        awaitReplayCompletion(10); // was 60
     }
 
     public static void awaitReplayCompletionCR06() throws InterruptedException {",2012-11-26T17:32:56Z,176
"@@ -22,7 +22,6 @@
 import java.io.IOException;
 import java.io.StringReader;
 import java.io.StringWriter;
-import java.net.InetAddress;
 import java.net.UnknownHostException;
 import java.util.Hashtable;
 import java.util.List;
@@ -169,8 +168,7 @@ private static void initStatic() throws ConfigurationException, UnknownHostExcep
                 if (managementAddress.equals(""0.0.0.0"")) {
                     managementAddress = ""localhost"";
                 }
-                client = ModelControllerClient.Factory.create(""remote"", InetAddress.getByName(managementAddress), 9999,
-                        getCallbackHandler());
+                client = ModelControllerClient.Factory.create(""remote"", managementAddress, 9999, getCallbackHandler(), null, 20 * 1000);
             }
         }
     }",2014-01-22T14:45:32Z,47
"@@ -2,7 +2,7 @@
 <!--  See src/resources/configuration/ReadMe.txt for how the configuration assembly works -->
 <config>
    <extension-module>org.jboss.as.deployment-scanner</extension-module>
-   <subsystem xmlns=""urn:jboss:domain:deployment-scanner:1.1"">
-       <deployment-scanner path=""deployments"" relative-to=""jboss.server.base.dir"" scan-interval=""5000""/>
+   <subsystem xmlns=""urn:jboss:domain:deployment-scanner:2.0"">
+       <deployment-scanner path=""deployments"" relative-to=""jboss.server.base.dir"" scan-interval=""5000"" runtime-failure-causes-rollback=""${jboss.deployment.scanner.rollback.on.failure:false}""/>
    </subsystem>
 </config>
\ No newline at end of file",2013-12-04T15:59:51Z,177
"@@ -5,6 +5,7 @@
    <subsystem xmlns=""urn:jboss:domain:ee:2.0"">
         <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>
         <jboss-descriptor-property-replacement>true</jboss-descriptor-property-replacement>
+        <ejb-annotation-property-replacement>false</ejb-annotation-property-replacement>
         <concurrent>
             <context-services>
                 <context-service name=""default"" jndi-name=""java:jboss/ee/concurrency/context/default"" use-transaction-setup-provider=""true""/>",2013-12-04T15:59:51Z,178
"@@ -18,13 +18,11 @@
            </bean-instance-pools>
        </pools>
        <caches>
-           <cache name=""simple"" aliases=""NoPassivationCache""/>
-           <cache name=""passivating"" passivation-store-ref=""file"" aliases=""SimpleStatefulCache""/>
-           <?CLUSTERED-CACHE?>
+           <cache name=""simple""/>
+           <cache name=""distributable"" aliases=""passivating clustered"" passivation-store-ref=""infinispan""/>
        </caches>
        <passivation-stores>
-           <file-passivation-store name=""file""/>
-           <?CLUSTER-PASSIVATION-STORE?>
+           <passivation-store name=""infinispan"" cache-container=""ejb"" max-size=""10000""/>
        </passivation-stores>
        <async thread-pool-name=""default""/>
        <timer-service thread-pool-name=""default"" default-data-store=""default-file-store"">
@@ -53,21 +51,15 @@
          <iiop enable-by-default=""false"" use-qualified-name=""false""/>
       </replacement>
       <replacement placeholder=""MDB"">
-	       <mdb>
-	           <resource-adapter-ref resource-adapter-name=""hornetq-ra""/>
-	           <bean-instance-pool-ref pool-name=""mdb-strict-max-pool""/>
-	       </mdb>
+         <mdb>
+             <resource-adapter-ref resource-adapter-name=""${ejb.resource-adapter-name:hornetq-ra.rar}""/>
+             <bean-instance-pool-ref pool-name=""mdb-strict-max-pool""/>
+         </mdb>
       </replacement>
    </supplement>
    <supplement name=""ha"">
       <replacement placeholder=""STATEFUL-BEAN"">
-         <stateful default-access-timeout=""5000"" cache-ref=""simple"" clustered-cache-ref=""clustered"" passivation-disabled-cache-ref=""simple""/>
-      </replacement>
-      <replacement placeholder=""CLUSTERED-CACHE"">
-         <cache name=""clustered"" passivation-store-ref=""infinispan"" aliases=""StatefulTreeCache""/>
-      </replacement>
-      <replacement placeholder=""CLUSTER-PASSIVATION-STORE"">
-         <cluster-passivation-store name=""infinispan"" cache-container=""ejb""/>
+         <stateful default-access-timeout=""5000"" cache-ref=""simple"" clustered-cache-ref=""distributable"" passivation-disabled-cache-ref=""simple""/>
       </replacement>
    </supplement>
    <supplement name=""full-ha"" includes=""full ha""/>",2013-12-04T15:59:51Z,179
"@@ -7,8 +7,19 @@
     </subsystem>
     <supplement name=""default"">
         <replacement placeholder=""CACHE-CONTAINERS"">
-            <cache-container name=""web"" aliases=""standard-session-cache"" default-cache=""local-web"" module=""org.wildfly.clustering.web.infinispan"">
-                <local-cache name=""local-web"" batching=""true"">
+            <cache-container name=""web"" default-cache=""passivation"" module=""org.wildfly.clustering.web.infinispan"">
+                <local-cache name=""passivation"" batching=""true"">
+                    <file-store passivation=""true"" purge=""false""/>
+                </local-cache>
+                <local-cache name=""persistent"" batching=""true"">
+                    <file-store passivation=""false"" purge=""false""/>
+                </local-cache>
+            </cache-container>
+            <cache-container name=""ejb"" aliases=""sfsb"" default-cache=""passivation"" module=""org.wildfly.clustering.ejb.infinispan"">
+                <local-cache name=""passivation"" batching=""true"">
+                    <file-store passivation=""true"" purge=""false""/>
+                </local-cache>
+                <local-cache name=""persistent"" batching=""true"">
                     <file-store passivation=""false"" purge=""false""/>
                 </local-cache>
             </cache-container>
@@ -38,27 +49,15 @@
                     <locking isolation=""REPEATABLE_READ""/>
                 </replicated-cache>
             </cache-container>
-            <cache-container name=""web"" aliases=""standard-session-cache"" default-cache=""repl"" module=""org.wildfly.clustering.web.infinispan"">
+            <cache-container name=""web"" default-cache=""dist"" module=""org.wildfly.clustering.web.infinispan"">
                 <transport lock-timeout=""60000""/>
-                <replicated-cache name=""repl"" mode=""ASYNC"" batching=""true"">
-                    <file-store/>
-                </replicated-cache>
-                <replicated-cache name=""sso"" mode=""SYNC"" batching=""true""/>
-                <distributed-cache name=""dist"" mode=""ASYNC"" batching=""true"" l1-lifespan=""0"">
+                <distributed-cache name=""dist"" mode=""ASYNC"" batching=""true"" l1-lifespan=""0"" owners=""4"">
                     <file-store/>
                 </distributed-cache>
             </cache-container>
-            <cache-container name=""ejb"" aliases=""sfsb sfsb-cache"" default-cache=""repl"" module=""org.jboss.as.clustering.ejb3.infinispan"">
+            <cache-container name=""ejb"" aliases=""sfsb"" default-cache=""dist"" module=""org.wildfly.clustering.ejb.infinispan"">
                 <transport lock-timeout=""60000""/>
-                <replicated-cache name=""repl"" mode=""ASYNC"" batching=""true"">
-                    <eviction strategy=""LRU"" max-entries=""10000""/>
-                    <file-store/>
-                </replicated-cache>
-                <!-- Clustered cache used internally by EJB subsytem for managing the client-mapping(s) of
-                the socketbinding referenced by the EJB remoting connector -->
-                <replicated-cache name=""remote-connector-client-mappings"" mode=""SYNC"" batching=""true""/>
-                <distributed-cache name=""dist"" mode=""ASYNC"" batching=""true"" l1-lifespan=""0"">
-                    <eviction strategy=""LRU"" max-entries=""10000""/>
+                <distributed-cache name=""dist"" mode=""ASYNC"" batching=""true"" l1-lifespan=""0"" owners=""4"">
                     <file-store/>
                 </distributed-cache>
             </cache-container>",2013-12-04T15:59:51Z,180
"@@ -84,7 +84,22 @@
            </protocol>
        </replacement>
    </supplement>
+   <supplement name=""gossip-discovery"">
+       <replacement placeholder=""TCP-DISCOVERY"">
+           <protocol type=""TCPGOSSIP"">
+               <property name=""initial_hosts"">${jboss.jgroups.gossip.initial_hosts}</property>
+               <property name=""num_initial_members"">${jboss.jgroups.gossip.num_initial_members}</property>
+           </protocol>
+       </replacement>
+       <replacement placeholder=""UDP-DISCOVERY"">
+           <protocol type=""TCPGOSSIP"">
+               <property name=""initial_hosts"">${jboss.jgroups.gossip.initial_hosts}</property>
+               <property name=""num_initial_members"">${jboss.jgroups.gossip.num_initial_members}</property>
+           </protocol>
+       </replacement>
+   </supplement>
    <supplement name=""ec2"" includes=""no-multicast s3-ping""/>
+   <supplement name=""gossip"" includes=""no-multicast gossip-discovery""/>
    <socket-binding name=""jgroups-mping"" port=""0"" multicast-address=""${jboss.default.multicast.address:230.0.0.4}"" multicast-port=""45700""/>
    <socket-binding name=""jgroups-tcp"" port=""7600""/>
    <socket-binding name=""jgroups-tcp-fd"" port=""57600""/>",2013-12-04T15:59:51Z,181
"@@ -2,8 +2,8 @@
 <!--  See src/resources/configuration/ReadMe.txt for how the configuration assembly works -->
 <config>
    <extension-module>org.jboss.as.mail</extension-module>
-   <subsystem xmlns=""urn:jboss:domain:mail:1.1"">
-       <mail-session jndi-name=""java:jboss/mail/Default"">
+   <subsystem xmlns=""urn:jboss:domain:mail:2.0"">
+       <mail-session name=""default"" jndi-name=""java:jboss/mail/Default"">
            <smtp-server outbound-socket-binding-ref=""mail-smtp""/>
        </mail-session>
    </subsystem>",2013-12-04T15:59:51Z,182
"@@ -2,7 +2,7 @@
 <!--  See src/resources/configuration/ReadMe.txt for how the configuration assembly works -->
 <config>
    <extension-module>org.jboss.as.messaging</extension-module>
-   <subsystem xmlns=""urn:jboss:domain:messaging:1.4"">
+   <subsystem xmlns=""urn:jboss:domain:messaging:2.0"">
        <hornetq-server>
            <?CLUSTERED?>
            <persistence-enabled>true</persistence-enabled>
@@ -14,7 +14,6 @@
                <netty-connector name=""netty-throughput"" socket-binding=""messaging-throughput"">
                    <param key=""batch-delay"" value=""50""/>
                </netty-connector>
-               <servlet-connector name=""servlet"" socket-binding=""http"" host=""default-host"" />
                <in-vm-connector name=""in-vm"" server-id=""0""/>
            </connectors>
 
@@ -65,14 +64,6 @@
                        <entry name=""java:/ConnectionFactory""/>
                    </entries>
                </connection-factory>
-               <connection-factory name=""ServletConnectionFactory"">
-                   <connectors>
-                       <connector-ref connector-name=""servlet""/>
-                   </connectors>
-                   <entries>
-                       <entry name=""java:jboss/exported/jms/ServletConnectionFactory""/>
-                   </entries>
-               </connection-factory>
                <connection-factory name=""RemoteConnectionFactory"">
                    <connectors>
                        <connector-ref connector-name=""netty""/>",2013-12-04T15:59:51Z,183
"@@ -31,11 +31,10 @@
             <buffer-cache name=""default"" buffer-size=""1024"" buffers-per-region=""1024"" max-regions=""10""/>
         </buffer-caches>
         <server name=""default-server"">
-            <http-listener name=""default"" socket-binding=""http"" max-post-size=""10485760""/>
+            <http-listener name=""default"" socket-binding=""http"" />
             <?AJP?>
             <host name=""default-host"" alias=""localhost"">
-                <location name=""/"" handler=""welcome-content"">
-                </location>
+                <location name=""/"" handler=""welcome-content"" />
             </host>
         </server>
         <servlet-container name=""default"" default-buffer-cache=""default"" stack-trace-on-error=""local-only"" >
@@ -48,7 +47,7 @@
     </subsystem>
     <supplement name=""ha"">
         <replacement placeholder=""AJP"">
-            <ajp-listener name=""ajp"" socket-binding=""ajp"" max-post-size=""10485760""/>
+            <ajp-listener name=""ajp"" socket-binding=""ajp"" />
         </replacement>
     </supplement>
     <socket-binding name=""http"" port=""${jboss.http.port:8080}""/>",2013-12-04T15:59:51Z,184
"@@ -1,98 +0,0 @@
-@echo off
-REM  ======================================================================
-REM
-REM  This is the main entry point for the build system.
-REM
-REM  Users should be sure to execute this file rather than 'mvn' to ensure
-REM  the correct version is being used with the correct configuration.
-REM
-REM  ======================================================================
-REM
-REM $Id: build.bat 105735 2010-06-04 19:45:13Z pgier $
-REM
-REM Authors:
-REM     Jason Dillon <jason@planet57.com>
-REM     Sacha Labourey <sacha.labourey@cogito-info.ch>
-REM
-
-REM ******************************************************
-REM Ignore the MAVEN_HOME variable: we want to use *our*
-REM Maven version and associated JARs.
-REM ******************************************************
-REM Ignore the users classpath, cause it might mess
-REM things up
-REM ******************************************************
-
-set PWD=%~dp0
-
-
-SETLOCAL
-
-set BPA=vc9x32
-
-set CLASSPATH=
-set M2_HOME=
-set MAVEN_HOME=
-
-set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dbpa=%BPA%
-
-REM ******************************************************
-REM - ""for"" loops have been unrolled for compatibility
-REM   with some WIN32 systems.
-REM ******************************************************
-
-set NAMES=tools;tools\maven;tools\apache\maven
-set SUBFOLDERS=.;..;..\..;..\..\..;..\..\..\..
-
-REM ******************************************************
-REM ******************************************************
-
-SET EXECUTED=FALSE
-for %%i in (%NAMES%) do call :subLoop %%i %1 %2 %3 %4 %5 %6
-
-goto :EOF
-
-
-REM ******************************************************
-REM ********* Search for names in the subfolders *********
-REM ******************************************************
-
-:subLoop
-for %%j in (%SUBFOLDERS%) do call :testIfExists %%j\%1\bin\mvn.bat %2 %3 %4 %5 %6 %7
-
-goto :EOF
-
-
-REM ******************************************************
-REM ************ Test if Maven Batch file exists ***********
-REM ******************************************************
-
-:testIfExists
-if exist %1 call :BatchFound %1 %2 %3 %4 %5 %6 %7 %8
-
-goto :EOF
-
-
-REM ******************************************************
-REM ************** Batch file has been found *************
-REM ******************************************************
-
-:BatchFound
-if (%EXECUTED%)==(FALSE) call :ExecuteBatch %1 %2 %3 %4 %5 %6 %7 %8
-set EXECUTED=TRUE
-
-goto :EOF
-
-REM ******************************************************
-REM ************* Execute Batch file only once ***********
-REM ******************************************************
-
-:ExecuteBatch
-set GOAL=%2
-if ""%GOAL%""=="""" set GOAL=install
-echo Calling %1 %MVN_OPTIONS% %GOAL% %3 %4 %5 %6 %7 %8
-call %1 %MVN_OPTIONS% %GOAL% %3 %4 %5 %6 %7 %8
-
-:end
-
-if ""%NOPAUSE%"" == """" pause",2013-09-26T10:56:06Z,170
"@@ -1,205 +0,0 @@
-#!/bin/sh
-### ====================================================================== ###
-##                                                                          ##
-##  This is the main entry point for the build system.                      ##
-##                                                                          ##
-##  Users should execute this file rather than 'mvn' to ensure              ##
-##  the correct version is being used with the correct configuration.       ##
-##                                                                          ##
-### ====================================================================== ###
-
-# $Id: build.sh 105735 2010-06-04 19:45:13Z pgier $
-
-# Create the bpa if you can
-BPA=
-
-uname | grep Linux >> /dev/null
-if [ ""$?"" -ne ""1"" ]; then
-	uname -a | grep x86_64 >> /dev/null
-	if [ ""$?"" -ne ""1"" ]; then
-		BPA=""-Dbpa=centos54x64""
-	else
-		BPA=""-Dbpa=centos55x32""
-	fi
-  # This is required for the upgrade of g++ https://issues.jboss.org/browse/JBTM-1787
-  if [ -f /etc/fedora-release ]
-  then
-    grep ""Fedora release 18"" /etc/fedora-release > /dev/null
-  	if [ ""$?"" -eq ""0"" ]; then
-  		BPA=""-Dbpa=fc18x64""
-    fi
-    grep ""Fedora release 19"" /etc/fedora-release > /dev/null
-  	if [ ""$?"" -eq ""0"" ]; then
-  		BPA=""-Dbpa=fc18x64""
-    fi
-  fi
-fi
-
-PROGNAME=`basename $0`
-DIRNAME=`dirname $0`
-GREP=""grep""
-ROOT=""/""
-
-# Ignore user's MAVEN_HOME if it is set
-M2_HOME=""""
-MAVEN_HOME=""""
-
-MAVEN_OPTS=""$MAVEN_OPTS -Xmx128M""
-export MAVEN_OPTS
-
-# the default search path for maven
-MAVEN_SEARCH_PATH=""\
-    tools
-    tools/maven \
-    tools/apache/maven \
-    maven""
-
-# the default arguments
-MVN_OPTIONS=""$BPA -gs tools/maven/conf/settings.xml -Demma.jar.location=`pwd`/../ext/""
-
-# Use the maximum available, or set MAX_FD != -1 to use that
-MAX_FD=""maximum""
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false;
-darwin=false;
-case ""`uname`"" in
-    CYGWIN*)
-        cygwin=true
-        ;;
-
-    Darwin*)
-        darwin=true
-        ;;
-esac
-
-#
-# Helper to complain.
-#
-die() {
-    echo ""${PROGNAME}: $*""
-    exit 1
-}
-
-#
-# Helper to complain.
-#
-warn() {
-    echo ""${PROGNAME}: $*""
-}
-
-#
-# Helper to source a file if it exists.
-#
-maybe_source() {
-    for file in $*; do
-	if [ -f ""$file"" ]; then
-	    . $file
-	fi
-    done
-}
-
-search() {
-    search=""$*""
-    for d in $search; do
-	MAVEN_HOME=""`pwd`/$d""
-	MVN=""$MAVEN_HOME/bin/mvn""
-	if [ -x ""$MVN"" ]; then
-	    # found one
-	    echo $MAVEN_HOME
-	    break
-	fi
-    done
-}
-
-#
-# Main function.
-#
-main() {
-    # if there is a build config file. then source it
-    maybe_source ""$DIRNAME/build.conf"" ""$HOME/.build.conf""
-
-    # Increase the maximum file descriptors if we can
-    if [ $cygwin = ""false"" ]; then
-	MAX_FD_LIMIT=`ulimit -H -n`
-	if [ $? -eq 0 ]; then
-	    if [ ""$MAX_FD"" = ""maximum"" -o ""$MAX_FD"" = ""max"" ]; then
-		# use the system max
-		MAX_FD=""$MAX_FD_LIMIT""
-	    fi
-
-	    ulimit -n $MAX_FD
-	    if [ $? -ne 0 ]; then
-		warn ""Could not set maximum file descriptor limit: $MAX_FD""
-	    fi
-	else
-	    warn ""Could not query system maximum file descriptor limit: $MAX_FD_LIMIT""
-	fi
-    fi
-
-    # try the search path
-    MAVEN_HOME=`search $MAVEN_SEARCH_PATH`
-
-    # try looking up to root
-    if [ ""x$MAVEN_HOME"" = ""x"" ]; then
-	target=""build""
-	_cwd=`pwd`
-
-	while [ ""x$MAVEN_HOME"" = ""x"" ] && [ ""$cwd"" != ""$ROOT"" ]; do
-	    cd ..
-	    cwd=`pwd`
-	    MAVEN_HOME=`search $MAVEN_SEARCH_PATH`
-	done
-
-	# make sure we get back
-	cd $_cwd
-
-	if [ ""$cwd"" != ""$ROOT"" ]; then
-	    found=""true""
-	fi
-
-	# complain if we did not find anything
-	if [ ""$found"" != ""true"" ]; then
-	    die ""Could not locate Maven; check \$MVN or \$MAVEN_HOME.""
-	fi
-    fi
-
-    # make sure we have one
-    MVN=$MAVEN_HOME/bin/mvn
-    if [ ! -x ""$MVN"" ]; then
-	die ""Maven file is not executable: $MVN""
-    fi
-
-    # need to specify planet57/buildmagic protocol handler package
-    MVN_OPTS=""-Djava.protocol.handler.pkgs=org.jboss.net.protocol""
-
-    # setup some build properties
-    MVN_OPTS=""$MVN_OPTS -Dbuild.script=$0""
-
-    # change to the directory where the script lives so users are not forced
-    # to be in the same directory as build.xml
-    cd $DIRNAME
-
-    MVN_GOAL=$@
-    if [ -z ""$MVN_GOAL"" ]; then
-      MVN_GOAL=""install""
-    fi
-    
-    # export some stuff for maven
-    export MVN MAVEN_HOME MVN_OPTS MVN_GOAL
-
-    echo ""$MVN $MVN_OPTIONS $MVN_GOAL""
-    
-    # execute in debug mode, or simply execute
-    if [ ""x$MVN_DEBUG"" != ""x"" ]; then
-	  /bin/sh -x $MVN $MVN_OPTIONS $MVN_GOAL
-    else
-	  exec $MVN $MVN_OPTIONS $MVN_GOAL
-    fi
-}
-
-##
-## Bootstrap
-##
-
-main ""$@""",2013-09-26T10:56:06Z,171
"@@ -1,102 +0,0 @@
-function fatal {
-  comment_on_pull ""Tests failed: $1""
-  echo ""$1""
-  exit -1
-}
-
-function comment_on_pull
-{
-    if [ ""$COMMENT_ON_PULL"" = """" ]; then return; fi
-
-    PULL_NUMBER=$(echo $GIT_BRANCH | awk -F 'pull' '{ print $2 }' | awk -F '/' '{ print $2 }')
-    if [ ""$PULL_NUMBER"" != """" ]
-    then
-        JSON=""{ \""body\"": \""$1\"" }""
-        curl -d ""$JSON"" -ujbosstm-bot:$BOT_PASSWORD https://api.github.com/repos/$GIT_ACCOUNT/$GIT_REPO/issues/$PULL_NUMBER/comments
-    else
-        echo ""Not a pull request, so not commenting""
-    fi
-}
-
-ulimit -c unlimited
-
-# CHECK IF WORKSPACE IS SET
-if [ -n ""${WORKSPACE+x}"" ]; then
-  echo WORKSPACE is set
-else
-  echo WORKSPACE not set
-  exit
-fi
-
-if [ -n ""${JBOSS_HOME+x}"" ]; then
-  echo JBOSS_HOME is set
-else
-  echo JBOSS_HOME not set
-  exit
-fi
-
-
-if [ -z ""${JBOSSAS_IP_ADDR+x}"" ]; then
-  echo JBOSSAS_IP_ADDR not set
-  JBOSSAS_IP_ADDR=localhost
-fi
-
-# KILL ANY PREVIOUS BUILD REMNANTS
-ps -f
-for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-killall -9 -r memcheck
-killall -9 testsuite
-killall -9 server
-killall -9 client
-killall -9 cs
-ps -f
-
-# FOR DEBUGGING SUBSEQUENT ISSUES
-free -m
-
-# GET THE TNS NAMES
-TNS_ADMIN=$WORKSPACE/instantclient_11_2/network/admin
-mkdir -p $TNS_ADMIN
-if [ -e $TNS_ADMIN/tnsnames.ora ]; then
-	echo ""tnsnames.ora already downloaded""
-else
-	(cd $TNS_ADMIN; wget http://albany/userContent/blacktie/tnsnames.ora)
-fi
-
-# INITIALIZE JBOSS
-ant -f scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=$JBOSS_HOME -Dbasedir=. initializeJBoss
-if [ ""$?"" != ""0"" ]; then
-	fatal ""Failed to init JBoss: $BUILD_URL""
-fi
-
-export JBOSS_HOME=$WORKSPACE/jboss-as/
-
-chmod u+x $JBOSS_HOME/bin/standalone.sh
-
-# START JBOSS
-export JAVA_OPTS=""$JAVA_OPTS -Xmx256m -XX:MaxPermSize=256m""
-$JBOSS_HOME/bin/standalone.sh -c standalone-blacktie.xml -Djboss.bind.address=$JBOSSAS_IP_ADDR -Djboss.bind.address.unsecure=$JBOSSAS_IP_ADDR&
-sleep 5
-
-# BUILD BLACKTIE
-cd $WORKSPACE
-./build.sh clean install -Djbossas.ip.addr=$JBOSSAS_IP_ADDR ""$@""
-if [ ""$?"" != ""0"" ]; then
-	ps -f
-	for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-	killall -9 testsuite
-	killall -9 server
-	killall -9 client
-	killall -9 cs
-    ps -f
-	fatal ""Some tests failed: $BUILD_URL""
-fi
-
-# KILL ANY BUILD REMNANTS
-ps -f
-for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
-killall -9 testsuite
-killall -9 server
-killall -9 client
-killall -9 cs
-ps -f",2013-09-26T10:56:06Z,172
"@@ -1,61 +0,0 @@
-set NOPAUSE=true
-
-rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
-FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-tasklist
-taskkill /F /IM mspdbsrv.exe
-taskkill /F /IM testsuite.exe
-taskkill /F /IM server.exe
-taskkill /F /IM client.exe
-taskkill /F /IM cs.exe
-tasklist
-
-if not defined WORKSPACE (call:fail_build && exit -1)
-
-if not defined JBOSSAS_IP_ADDR echo ""JBOSSAS_IP_ADDR not set"" & for /f ""delims="" %%a in ('hostname') do @set JBOSSAS_IP_ADDR=%%a
-
-rem INITIALIZE JBOSS
-cd %WORKSPACE%
-call ant -f scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=%JBOSS_HOME% -Dbasedir=. initializeJBoss -debug || (call:fail_build && exit -1)
-
-rem wget -P jboss-as\standalone\deployments\ -N http://172.17.131.2/job/narayana-populateM2-taconic/lastSuccessfulBuild/artifact/rts/at/webservice/target/restat-web-5.0.0.M2-SNAPSHOT.war
-rem IF %ERRORLEVEL% NEQ 0 call:comment_on_pull ""Can not wget restat-web war"" & exit -1
-
-set JBOSS_HOME=
-
-rem START JBOSS
-cd jboss-as\bin
-rem set JAVA_OPTS=""%JAVA_OPTS% -Xmx1024m -XX:MaxPermSize=512m""
-start /B standalone.bat -c standalone-blacktie.xml -Djboss.bind.address=%JBOSSAS_IP_ADDR% -Djboss.bind.address.unsecure=%JBOSSAS_IP_ADDR%
-echo ""Started server""
-@ping 127.0.0.1 -n 20 -w 1000 > nul
-
-rem BUILD BLACKTIE
-cd %WORKSPACE%
-call build.bat clean install ""-Djbossas.ip.addr=%JBOSSAS_IP_ADDR%"" || (call:fail_build && exit -1)
-
-rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
-tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-echo ""Finished build""
-
-rem -------------------------------------------------------
-rem -                 Functions bellow                    -
-rem -------------------------------------------------------
-
-goto:eof
-
-:fail_build
-  call:comment_on_pull ""Build failed %BUILD_URL%""
-  tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
-  exit -1
-goto:eof
-
-:comment_on_pull
-   if not ""%COMMENT_ON_PULL%""==""1"" goto:eof
-
-   for /f ""tokens=1,2,3,4 delims=/"" %%a in (""%GIT_BRANCH%"") do set IS_PULL=%%b&set PULL_NUM=%%c
-   if not ""%IS_PULL%""==""pull"" goto:eof
-   
-   curl -d ""{ \""body\"": \""%~1\"" }"" -ujbosstm-bot:%BOT_PASSWORD% https://api.github.com/repos/%GIT_ACCOUNT%/%GIT_REPO%/issues/%PULL_NUM%/comments
-
-goto:eof",2013-09-26T10:56:06Z,173
"@@ -2,24 +2,20 @@
 <project name=""blacktie-dependencies"">
     <target name=""initializeJBoss"">
         <!--       <get src=""http://172.17.131.2/userContent/blacktie/jbossesb-4.9.zip"" dest=""./jbossesb-4.9.zip"" verbose=""true"" usetimestamp=""true"" skipexisting=""true""/>  -->
-        <delete dir=""jboss-as""/>
-        <copy todir=""jboss-as"">
-            <fileset dir=""${JBOSS_HOME}""/>
-        </copy>
-        <copy file=""jboss-as/docs/examples/configs/standalone-blacktie.xml"" tofile=""jboss-as/standalone/configuration/standalone-blacktie.xml"" overwrite=""true"" />
-        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;set &quot;JAVA_OPTS=%JAVA_OPTS% -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""jboss-as/bin/standalone.conf.bat""/>
-        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;export JAVA_OPTS=&quot;$JAVA_OPTS -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""jboss-as/bin/standalone.conf""/>
-        <replaceregexp byline=""true"" match=""&quot;spec&quot;"" replace=""&quot;on&quot;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;"" replace=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;&#10;            &lt;jts/&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.hornetq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;/hornetq-server&gt;"" replace=""&lt;jms-destinations&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestOne&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestOne&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestOne&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestTwo&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestTwo&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTC_ConvService&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTC_ConvService&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTC_ConvService&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_JAVA_Converse&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot;&gt;&#10;                        &lt;entry name=&quot;topic/BTR_JAVA_Topic&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/topic/BTR_JAVA_Topic&quot;/&gt;&#10;                    &lt;/jms-topic&gt;&lt;/jms-destinations&gt;&#10;                    &#10;            &lt;/hornetq-server&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""#guest=guest"" replace=""guest=guest,blacktie&#10;"" file=""jboss-as/standalone/configuration/application-roles.properties""/>
-        <echo file=""jboss-as/standalone/configuration/application-roles.properties"" append=""true"">dynsub=guest,blacktie,dynsub</echo>
-        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;dynsub&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;dynsub&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;"" replace=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-        <replaceregexp byline=""true"" match=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;"" replace=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""jboss-as/standalone/configuration/standalone-blacktie.xml""/>
-		<replaceregexp byline=""true"" match=""&lt;module name=&quot;org.omg.api&quot;/&gt;"" replace=""&lt;module name=&quot;org.omg.api&quot;/&gt;&#10;        &lt;module name=&quot;org.jboss.as.jacorb&quot;/&gt;"" file=""jboss-as/modules/system/layers/base/org/jboss/as/transactions/main/module.xml""/>
+        <copy file=""${JBOSS_HOME}/docs/examples/configs/standalone-blacktie.xml"" tofile=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml"" overwrite=""true"" />
+        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;set &quot;JAVA_OPTS=%JAVA_OPTS% -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""${JBOSS_HOME}/bin/standalone.conf.bat""/>
+        <replaceregexp byline=""true"" match=""address=8787,server=y,suspend=n&quot;"" replace=""address=8787,server=y,suspend=n&quot;&#10;export JAVA_OPTS=&quot;$JAVA_OPTS -DOrbPortabilityEnvironmentBean.resolveService=NAME_SERVICE&quot;"" file=""${JBOSS_HOME}/bin/standalone.conf""/>
+        <replaceregexp byline=""true"" match=""&quot;spec&quot;"" replace=""&quot;on&quot;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;"" replace=""&lt;coordinator-environment default-timeout=&quot;300&quot;/&gt;&#10;            &lt;jts/&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;root-logger&gt;"" replace=""&lt;logger category=&quot;org.jboss.ejb.client&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.as.ejb3&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.jboss.narayana.blacktie&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.codehaus.stomp&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;logger category=&quot;org.hornetq&quot;&gt;&#10;                &lt;level name=&quot;ALL&quot;/&gt;&#10;            &lt;/logger&gt;&#10;            &lt;root-logger&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;/hornetq-server&gt;"" replace=""&lt;jms-destinations&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestOne&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestOne&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestOne&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_TestTwo&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_TestTwo&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_TestTwo&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTC_ConvService&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTC_ConvService&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTC_ConvService&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-queue name=&quot;BTR_JAVA_Converse&quot;&gt;&#10;                        &lt;entry name=&quot;queue/BTR_JAVA_Converse&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/queue/BTR_JAVA_Converse&quot;/&gt;&#10;                    &lt;/jms-queue&gt;&#10;                    &lt;jms-topic name=&quot;BTR_JAVA_Topic&quot;&gt;&#10;                        &lt;entry name=&quot;topic/BTR_JAVA_Topic&quot;/&gt;&#10;                        &lt;entry name=&quot;java:jboss/exported/jms/topic/BTR_JAVA_Topic&quot;/&gt;&#10;                    &lt;/jms-topic&gt;&lt;/jms-destinations&gt;&#10;                    &#10;            &lt;/hornetq-server&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTDomainAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_BTStompAdmin&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;blacktie&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;blacktie&quot;/&gt;&#10;                    &lt;/security-setting&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""#guest=guest"" replace=""guest=guest,blacktie&#10;"" file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties""/>
+        <echo file=""${JBOSS_HOME}/standalone/configuration/application-roles.properties"" append=""true"">dynsub=guest,blacktie,dynsub</echo>
+        <replaceregexp byline=""true"" match=""&lt;security-settings&gt;"" replace=""&lt;security-settings&gt;&#10;                    &lt;security-setting match=&quot;jms.queue.BTR_SECURE&quot;&gt;&#10;                       &lt;permission type=&quot;send&quot; roles=&quot;dynsub&quot;/&gt;&#10;                       &lt;permission type=&quot;consume&quot; roles=&quot;dynsub&quot;/&gt;&#10;                    &lt;/security-setting&gt;&#10;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;"" replace=""&lt;connection-factory name=&quot;InVmConnectionFactory&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+        <replaceregexp byline=""true"" match=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;"" replace=""&lt;pooled-connection-factory name=&quot;hornetq-ra&quot;&gt;&#10;                        &lt;connection-ttl&gt;-1&lt;/connection-ttl&gt;&#10;                        &lt;client-failure-check-period&gt;86400000&lt;/client-failure-check-period&gt;"" file=""${JBOSS_HOME}/standalone/configuration/standalone-blacktie.xml""/>
+		<replaceregexp byline=""true"" match=""&lt;module name=&quot;org.omg.api&quot;/&gt;"" replace=""&lt;module name=&quot;org.omg.api&quot;/&gt;&#10;        &lt;module name=&quot;org.jboss.as.jacorb&quot;/&gt;"" file=""${JBOSS_HOME}/modules/system/layers/base/org/jboss/as/transactions/main/module.xml""/>
 
 	<!-- Copy the required users into the AS domain -->
 	<!--
@@ -29,8 +25,8 @@
 	(cd jboss-as/bin/ && ./add-user.sh guest password -a \-\-silent=true)
 	(cd jboss-as/bin/ && ./add-user.sh dynsub password -a \-\-silent=true)
 	-->
-	<copy todir=""jboss-as/"" overwrite=""true"">
-		<fileset dir=""scripts/hudson/config/""/>
+	<copy todir=""${JBOSS_HOME}/"" overwrite=""true"">
+		<fileset dir=""config/""/>
 	</copy>
     </target>
 </project>",2013-09-26T10:56:06Z,52
"@@ -33,7 +33,7 @@ set M2_HOME=
 set MAVEN_HOME=
 
 set MAVEN_OPTS=%MAVEN_OPTS% -Xms512m -XX:MaxPermSize=256m
-set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dorson.jar.location=%PWD%\ext\
+set MVN_OPTIONS=-gs tools\maven\conf\settings.xml -Dorson.jar.location=%PWD%\ext\ -Dbpa=vc9x32
 
 REM ******************************************************
 REM - ""for"" loops have been unrolled for compatibility",2013-09-26T10:56:06Z,174
"@@ -10,6 +10,30 @@
 
 # $Id: build.sh 105735 2010-06-04 19:45:13Z pgier $
 
+# Create the bpa if you can
+BPA=
+uname | grep Linux >> /dev/null
+if [ ""$?"" -ne ""1"" ]; then
+	uname -a | grep x86_64 >> /dev/null
+	if [ ""$?"" -ne ""1"" ]; then
+		BPA=""-Dbpa=centos54x64""
+	else
+		BPA=""-Dbpa=centos55x32""
+	fi
+  # This is required for the upgrade of g++ https://issues.jboss.org/browse/JBTM-1787
+  if [ -f /etc/fedora-release ]
+  then
+    grep ""Fedora release 18"" /etc/fedora-release > /dev/null
+  	if [ ""$?"" -eq ""0"" ]; then
+  		BPA=""-Dbpa=fc18x64""
+    fi
+    grep ""Fedora release 19"" /etc/fedora-release > /dev/null
+  	if [ ""$?"" -eq ""0"" ]; then
+  		BPA=""-Dbpa=fc18x64""
+    fi
+  fi
+fi
+
 PROGNAME=`basename $0`
 DIRNAME=`dirname $0`
 GREP=""grep""
@@ -30,7 +54,7 @@ MAVEN_SEARCH_PATH=""\
     maven""
 
 #  Default arguments
-MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/""
+MVN_OPTIONS=""-s tools/maven/conf/settings.xml -Dorson.jar.location=`pwd`/ext/ -Demma.jar.location=`pwd`/ext/ $BPA""
 
 #  Use the maximum available, or set MAX_FD != -1 to use that
 MAX_FD=""maximum""",2013-09-26T10:56:06Z,35
"@@ -1,3 +1,5 @@
+if not defined WORKSPACE (call:fail_build && exit -1)
+
 call:comment_on_pull ""Started testing this pull request with BLACKTIE profile on Windows: %BUILD_URL%""
 
 call build.bat clean install ""-DskipTests"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Narayana Failed %BUILD_URL%"" && exit -1)
@@ -10,13 +12,12 @@ cd jboss-as
 git remote add upstream https://github.com/wildfly/wildfly.git
 git pull --rebase --ff-only -s recursive -Xtheirs upstream master
 if %ERRORLEVEL% NEQ 0 exit -1
-
 echo ""Building AS""
 set MAVEN_OPTS=""-Xmx768M""
 call build.bat clean install ""-DskipTests"" ""-Drelease=true"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - AS Failed %BUILD_URL%"" && exit -1)
+cd ..\
 
 echo ""Building Blacktie Subsystem""
-cd ..\
 call build.bat -f blacktie\wildfly-blacktie\pom.xml clean install || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Build Blacktie Subsystem Failed %BUILD_URL%"" && exit -1)
 
 echo ""Building BlackTie
@@ -25,15 +26,55 @@ rmdir wildfly-%WILDFLY_MASTER_VERSION% /s /q
 unzip ..\jboss-as\dist\target\wildfly-%WILDFLY_MASTER_VERSION%.zip
 set JBOSS_HOME=%CD%\wildfly-%WILDFLY_MASTER_VERSION%\
 unzip wildfly-blacktie\build\target\wildfly-blacktie-build-%WILDFLY_MASTER_VERSION%-bin.zip -d %JBOSS_HOME%
-set WORKSPACE=%WORKSPACE%\blacktie 
-call scripts\hudson\blacktie-vc9x32.bat || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - BlackTie Failed %BUILD_URL%"" && exit -1)
+cd ..\
+
+set NOPAUSE=true
+
+rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
+FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+tasklist
+taskkill /F /IM mspdbsrv.exe
+taskkill /F /IM testsuite.exe
+taskkill /F /IM server.exe
+taskkill /F /IM client.exe
+taskkill /F /IM cs.exe
+tasklist
+
+if not defined JBOSSAS_IP_ADDR echo ""JBOSSAS_IP_ADDR not set"" & for /f ""delims="" %%a in ('hostname') do @set JBOSSAS_IP_ADDR=%%a
+
+rem INITIALIZE JBOSS
+call ant -f blacktie/scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=%WORKSPACE%\blacktie\wildfly-${WILDFLY_MASTER_VERSION} initializeJBoss -debug || (call:fail_build && exit -1)
+
+rem wget -P jboss-as\standalone\deployments\ -N http://172.17.131.2/job/narayana-populateM2-taconic/lastSuccessfulBuild/artifact/rts/at/webservice/target/restat-web-5.0.0.M2-SNAPSHOT.war
+rem IF %ERRORLEVEL% NEQ 0 call:comment_on_pull ""Can not wget restat-web war"" & exit -1
+
+set JBOSS_HOME=%WORKSPACE%\blacktie\wildfly-${WILDFLY_MASTER_VERSION}
+
+rem START JBOSS
+rem set JAVA_OPTS=""%JAVA_OPTS% -Xmx1024m -XX:MaxPermSize=512m""
+start /B %JBOSS_HOME%\bin\standalone.bat -c standalone-blacktie.xml -Djboss.bind.address=%JBOSSAS_IP_ADDR% -Djboss.bind.address.unsecure=%JBOSSAS_IP_ADDR%
+echo ""Started server""
+@ping 127.0.0.1 -n 20 -w 1000 > nul
+
+rem BUILD BLACKTIE
+call build.bat -f blacktie/pom.xml clean install ""-Djbossas.ip.addr=%JBOSSAS_IP_ADDR%"" || (call:fail_build && exit -1)
+
+rem SHUTDOWN ANY PREVIOUS BUILD REMNANTS
+tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+echo ""Finished build""
 
 call:comment_on_pull ""BLACKTIE profile tests passed on Windows - Job complete %BUILD_URL%""
 
-rem -------------------------------------------------------
-rem -                 Functions bellow                    -
-rem -------------------------------------------------------
+rem ------------------------------------------------------
+rem -                 Functions below                    -
+rem ------------------------------------------------------
+
+goto:eof
 
+:fail_build
+  call:comment_on_pull ""Build failed %BUILD_URL%""
+  tasklist & FOR /F ""usebackq tokens=5"" %%i in (`""netstat -ano|findstr 9999.*LISTENING""`) DO taskkill /F /PID %%i
+  exit -1
 goto:eof
 
 :comment_on_pull",2013-09-26T10:56:06Z,147
"@@ -197,17 +197,9 @@ function build_as {
   #Enable remote debugger
   echo JAVA_OPTS='""$JAVA_OPTS -agentlib:jdwp=transport=dt_socket,address=8787,server=y,suspend=n""' >> ./build/target/wildfly-*/bin/standalone.conf
 
-  build_blacktie_subsystem
   init_jboss_home
 }
 
-function build_blacktie_subsystem {
-  echo ""Building Blacktie Subsystem""
-  cd ${WORKSPACE}
-  ./build.sh -f blacktie/wildfly-blacktie/pom.xml clean install
-  [ $? = 0 ] || fatal ""Blacktie Subsystem build failed""
-}
-
 function init_jboss_home {
   cd $WORKSPACE
   JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep wildfly`
@@ -248,13 +240,67 @@ function rts_tests {
 
 function blacktie {
   echo ""#0. BlackTie""
-  cd blacktie
-  rm -rf $PWD/wildfly-${WILDFLY_MASTER_VERSION}
-  unzip ../jboss-as/dist/target/wildfly-${WILDFLY_MASTER_VERSION}.zip
-  unzip ${WORKSPACE}/blacktie/wildfly-blacktie/build/target/wildfly-blacktie-build-${WILDFLY_MASTER_VERSION}-bin.zip -d $PWD/wildfly-${WILDFLY_MASTER_VERSION}
-  WORKSPACE=$WORKSPACE/blacktie JBOSS_HOME=$PWD/wildfly-${WILDFLY_MASTER_VERSION} ./scripts/hudson/blacktie-linux.sh ""$@""
-  [ $? = 0 ] || fatal ""BlackTie build failed""
-  cd -
+  ulimit -c unlimited
+  if [ -z ""${JBOSSAS_IP_ADDR+x}"" ]; then
+    echo JBOSSAS_IP_ADDR not set
+    JBOSSAS_IP_ADDR=localhost
+  fi
+  # KILL ANY PREVIOUS BUILD REMNANTS
+  ps -f
+  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  killall -9 -r memcheck
+  killall -9 testsuite
+  killall -9 server
+  killall -9 client
+  killall -9 cs
+  ps -f
+  # FOR DEBUGGING SUBSEQUENT ISSUES
+  free -m
+
+  echo ""Building Blacktie Subsystem""
+  cd ${WORKSPACE}
+  ./build.sh -f blacktie/wildfly-blacktie/pom.xml clean install ""$@""
+  [ $? = 0 ] || fatal ""Blacktie Subsystem build failed""
+  rm -rf ${WORKSPACE}/blacktie/wildfly-${WILDFLY_MASTER_VERSION}
+  unzip ${WORKSPACE}/jboss-as/dist/target/wildfly-${WILDFLY_MASTER_VERSION}.zip -d $PWD/blacktie
+  [ $? = 0 ] || fatal ""Could not unzip wildfly""
+  unzip ${WORKSPACE}/blacktie/wildfly-blacktie/build/target/wildfly-blacktie-build-${WILDFLY_MASTER_VERSION}-bin.zip -d $PWD/blacktie/wildfly-${WILDFLY_MASTER_VERSION}
+  [ $? = 0 ] || fatal ""Could not unzip blacktie into widfly""
+  # INITIALIZE JBOSS
+  ant -f blacktie/scripts/hudson/initializeJBoss.xml -DJBOSS_HOME=$WORKSPACE/blacktie/wildfly-${WILDFLY_MASTER_VERSION} initializeJBoss
+  if [ ""$?"" != ""0"" ]; then
+	  fatal ""Failed to init JBoss: $BUILD_URL""
+  fi
+  chmod u+x $WORKSPACE/blacktie/wildfly-${WILDFLY_MASTER_VERSION}/bin/standalone.sh
+
+  if [[ $# == 0 || $# > 0 && ""$1"" != ""-DskipTests"" ]]; then
+    # START JBOSS
+    JBOSS_HOME=`pwd`/blacktie/wildfly-${WILDFLY_MASTER_VERSION} JAVA_OPTS=""$JAVA_OPTS -Xmx256m -XX:MaxPermSize=256m"" blacktie/wildfly-${WILDFLY_MASTER_VERSION}/bin/standalone.sh -c standalone-blacktie.xml -Djboss.bind.address=$JBOSSAS_IP_ADDR -Djboss.bind.address.unsecure=$JBOSSAS_IP_ADDR&
+    sleep 5
+  fi
+
+  # BUILD BLACKTIE
+  ./build.sh -f blacktie/pom.xml clean install -Djbossas.ip.addr=$JBOSSAS_IP_ADDR ""$@""
+  if [ ""$?"" != ""0"" ]; then
+  	ps -f
+	  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  	killall -9 testsuite
+	  killall -9 server
+	  killall -9 client
+  	killall -9 cs
+    ps -f
+  	fatal ""Some tests failed: $BUILD_URL""
+  fi
+
+  # KILL ANY BUILD REMNANTS
+  ps -f
+  for i in `ps -eaf | grep java | grep ""standalone.*xml"" | grep -v grep | cut -c10-15`; do kill -9 $i; done
+  killall -9 testsuite
+  killall -9 server
+  killall -9 client
+  killall -9 cs
+  ps -f
+  [ $? = 0 ] || fatal ""BlackTie build failed: $BUILD_URL""
 }
 
 function jta_cdi_tests {",2013-09-26T10:56:06Z,10
"@@ -144,6 +144,7 @@ protected void stopContainer() {
         deployer.undeploy(DEPLOYMENT_NAME);
         containerController.stop(CONTAINER_NAME);
         containerController.kill(CONTAINER_NAME);
+        clearObjectStore();
     }
 
     protected void clearObjectStore() {",2013-11-12T17:16:05Z,185
"@@ -20,8 +20,6 @@
  */
 package org.jboss.jbossts.star.test;
 
-import java.util.Collection;
-
 import java.io.IOException;
 import java.net.HttpURLConnection;
 
@@ -165,14 +163,4 @@ public void testCommitInvalidTx() throws IOException
         // commit it properly
         txn.commitTx();
     }
-    
-    @Test
-    public void testListTransactionsWhenNoActiveTxns() throws IOException
-    {
-        TxSupport txn = new TxSupport();
-        
-        Collection<String> transactionsInProgress = txn.getTransactions();
-        
-        Assert.assertEquals(0, transactionsInProgress.size());
-    }
 }",2012-03-15T13:49:46Z,186
"@@ -0,0 +1,29 @@
+package org.jboss.jbossts.star.test;
+
+import java.io.IOException;
+import java.util.Collection;
+import org.jboss.jbossts.star.util.TxSupport;
+import org.junit.Assert;
+import org.junit.BeforeClass;
+import org.junit.Test;
+
+public class TxSupportTest extends BaseTest {
+
+    @BeforeClass
+    public static void beforeClass() throws Exception {
+        startContainer(TXN_MGR_URL);
+    }
+
+    // This test needs to be run in isolation so that previously running/incomplete txns don't affect the results
+    // Needs to be considered before adding new tests here
+    @Test
+    public void testListTransactionsWhenNoActiveTxns() throws IOException {
+        TxSupport txn = new TxSupport();
+
+        // This should be a collection of size 0.
+        Collection<String> transactionsInProgress = txn.getTransactions();
+
+        Assert.assertEquals(0, transactionsInProgress.size());
+    }
+
+}",2012-03-15T13:49:46Z,187
"@@ -32,14 +32,11 @@
 import javax.enterprise.inject.spi.PassivationCapable;
 import javax.naming.InitialContext;
 import javax.naming.NamingException;
-import javax.transaction.Status;
-import javax.transaction.SystemException;
-import javax.transaction.Transaction;
-import javax.transaction.TransactionManager;
-import javax.transaction.TransactionScoped;
-import javax.transaction.TransactionSynchronizationRegistry;
+import javax.transaction.*;
 import java.lang.annotation.Annotation;
 
+import java.util.HashMap;
+import java.util.Map;
 
 /**
  * @author paul.robinson@redhat.com 01/05/2013
@@ -50,9 +47,10 @@ public class TransactionContext implements Context {
 
     private static TransactionSynchronizationRegistry transactionSynchronizationRegistry;
 
+    private Map<Transaction, TransactionScopeCleanup> transactions = new HashMap<Transaction, TransactionScopeCleanup>();
+
     @Override
     public Class<? extends Annotation> getScope() {
-
         return TransactionScoped.class;
     }
 
@@ -72,8 +70,21 @@ public <T> T get(Contextual<T> contextual, CreationalContext<T> creationalContex
         if (resource != null) {
             return (T) resource;
         } else if (creationalContext != null) {
+            Transaction currentTransaction = getCurrentTransaction();
             T t = contextual.create(creationalContext);
             tsr.putResource(bean.getId(), t);
+
+            synchronized (transactions) {
+                TransactionScopeCleanup synch = transactions.get(currentTransaction);
+
+                if (synch == null) {
+                    synch = new TransactionScopeCleanup(this, currentTransaction);
+                    transactions.put(currentTransaction, synch);
+                }
+
+                synch.registerBean(contextual, creationalContext, t);
+            }
+
             return t;
         } else {
             return null;
@@ -106,6 +117,12 @@ public boolean isActive() {
         }
     }
 
+    void cleanupScope(Transaction transaction) {
+        synchronized (transactions) {
+            transactions.remove(transaction);
+        }
+    }
+
     private Transaction getCurrentTransaction() {
 
         try {",2013-10-25T16:28:38Z,188
"@@ -0,0 +1,66 @@
+package com.arjuna.ats.jta.cdi;
+
+import com.arjuna.ats.jta.logging.jtaLogger;
+
+import javax.enterprise.context.spi.Contextual;
+import javax.enterprise.context.spi.CreationalContext;
+import javax.transaction.RollbackException;
+import javax.transaction.Synchronization;
+import javax.transaction.SystemException;
+import javax.transaction.Transaction;
+import java.util.Set;
+import java.util.concurrent.CopyOnWriteArraySet;
+
+public class TransactionScopeCleanup<T> implements Synchronization {
+    private Set<TransactionScopedBean> beans;
+    private TransactionContext context;
+    private Transaction transaction;
+
+    public TransactionScopeCleanup(TransactionContext context, Transaction transaction) {
+        this.context = context;
+        this.transaction = transaction;
+        this.beans = new CopyOnWriteArraySet<TransactionScopedBean>();
+
+        try {
+            transaction.registerSynchronization(this);
+        } catch (RollbackException e) {
+            throw new RuntimeException(jtaLogger.i18NLogger.get_transaction_arjunacore_syncwhenaborted());
+        } catch (SystemException e) {
+            throw new RuntimeException(jtaLogger.i18NLogger.get_transaction_arjunacore_nullparam());
+        }
+    }
+
+    public void registerBean(Contextual<T> contextual, CreationalContext<T> creationalContext, T bean) {
+        beans.add(new TransactionScopedBean(contextual, creationalContext, bean));
+    }
+
+    @Override
+    public void beforeCompletion() {
+    }
+
+    @Override
+    public void afterCompletion(int i) {
+        for (TransactionScopedBean bean : beans)
+            bean.destroy();
+
+        context.cleanupScope(transaction);
+    }
+
+    private class TransactionScopedBean<T> {
+        Contextual<T> contextual;
+        CreationalContext<T> creationalContext;
+        T bean;
+
+        private TransactionScopedBean(Contextual<T> contextual, CreationalContext<T> creationalContext, T bean) {
+            this.contextual = contextual;
+            this.creationalContext = creationalContext;
+            this.bean = bean;
+        }
+
+        public <T> void destroy() {
+            contextual.destroy(bean, creationalContext);
+        }
+    }
+
+
+}",2013-10-25T16:28:38Z,189
"@@ -1,8 +1,11 @@
 package com.hp.mwtests.ts.jta.cdi.transactionScoped;
 
+import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
 import javax.inject.Named;
 import javax.transaction.TransactionScoped;
 import java.io.Serializable;
+import java.util.concurrent.atomic.AtomicInteger;
 
 /**
  * @author paul.robinson@redhat.com 01/05/2013
@@ -11,8 +14,16 @@
 @TransactionScoped
 public class TestCDITransactionScopeBean implements Serializable {
 
+    private static AtomicInteger preDestroyCnt = new AtomicInteger(0);
+
+    private boolean postConstructCalled;
+
     private int value = 0;
 
+    @PostConstruct
+    public void postConstruct() {
+        postConstructCalled = true;
+    }
     public int getValue() {
 
         return value;
@@ -22,4 +33,17 @@ public void setValue(int value) {
 
         this.value = value;
     }
+
+    public boolean isPostConstructCalled() {
+        return postConstructCalled;
+    }
+
+    public static int getPreDestroyCnt() {
+        return preDestroyCnt.get();
+    }
+
+    @PreDestroy
+    public void preDestroy() {
+        preDestroyCnt.incrementAndGet();
+    }
 }
\ No newline at end of file",2013-10-25T16:28:38Z,190
"@@ -0,0 +1,49 @@
+package com.hp.mwtests.ts.jta.cdi.transactionScoped;
+
+import javax.annotation.PostConstruct;
+import javax.annotation.PreDestroy;
+import javax.inject.Named;
+import javax.transaction.TransactionScoped;
+import java.io.Serializable;
+import java.util.concurrent.atomic.AtomicInteger;
+
+/**
+ * @author paul.robinson@redhat.com 01/05/2013
+ */
+@Named(""TestCDITransactionScopeBean2"")
+@TransactionScoped
+public class TestCDITransactionScopeBean2 implements Serializable {
+
+    private static AtomicInteger preDestroyCnt = new AtomicInteger(0);
+
+    private boolean postConstructCalled;
+
+    private int value = 0;
+
+    @PostConstruct
+    public void postConstruct() {
+        postConstructCalled = true;
+    }
+    public int getValue() {
+
+        return value;
+    }
+
+    public void setValue(int value) {
+
+        this.value = value;
+    }
+
+    public boolean isPostConstructCalled() {
+        return postConstructCalled;
+    }
+
+    public static int getPreDestroyCnt() {
+        return preDestroyCnt.get();
+    }
+
+    @PreDestroy
+    public void preDestroy() {
+        preDestroyCnt.incrementAndGet();
+    }
+}
\ No newline at end of file",2013-10-25T16:28:38Z,191
"@@ -25,10 +25,8 @@
 import junit.framework.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
-import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
-import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.JavaArchive;
 import org.junit.After;
 import org.junit.Test;
@@ -40,12 +38,20 @@
 import javax.transaction.TransactionManager;
 import javax.transaction.UserTransaction;
 
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Set;
+import java.util.TreeSet;
+import java.util.concurrent.*;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
 /**
  * @author paul.robinson@redhat.com 01/05/2013
  */
 @RunWith(Arquillian.class)
 public class TransactionScopedTest {
-
     @Inject
     UserTransaction userTransaction;
 
@@ -54,11 +60,17 @@ public class TransactionScopedTest {
     @Inject
     TestCDITransactionScopeBean testTxAssociationChangeBean;
 
+    @Inject
+    TestCDITransactionScopeBean2 testTxAssociationChangeBean2;
+
+    private static Set<String> timestamps = new TreeSet<String>();
+
     @Deployment
     public static JavaArchive createTestArchive() {
 
         return  ShrinkWrap.create(JavaArchive.class, ""test.jar"")
                 .addClass(TestCDITransactionScopeBean.class)
+                .addClass(TestCDITransactionScopeBean2.class)
                 .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"");
     }
 
@@ -72,30 +84,107 @@ public void tearDown() {
         }
     }
 
+    private void addTimestamp(String message) {
+        timestamps.add(String.format(""%d - %s (%s)%n"", System.nanoTime(), Thread.currentThread().getId(), message));
+    }
+
     //Based on test case from JTA 1.2 spec
-    @Test
-    public void testTxAssociationChange() throws Exception {
+    private void testTxAssociationChange() throws Exception {
 
         transactionManager = com.arjuna.ats.jta.TransactionManager.transactionManager();
 
+        addTimestamp(""begin1"");
         userTransaction.begin(); //tx1 begun
+        assertTrue(testTxAssociationChangeBean.isPostConstructCalled());
+        assertTrue(testTxAssociationChangeBean2.isPostConstructCalled());
+
         testTxAssociationChangeBean.setValue(1);
+        testTxAssociationChangeBean2.setValue(10);
+
+        addTimestamp(""suspend"");
         Transaction transaction = transactionManager.suspend();
 
         assertContextUnavailable();
 
+        addTimestamp(""begin2"");
         userTransaction.begin(); //tx2 begun
         Assert.assertEquals(0, testTxAssociationChangeBean.getValue());
+        Assert.assertEquals(0, testTxAssociationChangeBean2.getValue());
+
         testTxAssociationChangeBean.setValue(2);
+        testTxAssociationChangeBean2.setValue(20);
+
+        addTimestamp(""commit1"");
         userTransaction.commit();
 
         assertContextUnavailable();
 
+        addTimestamp(""resume"");
         transactionManager.resume(transaction);
         Assert.assertEquals(1, testTxAssociationChangeBean.getValue());
+        Assert.assertEquals(10, testTxAssociationChangeBean2.getValue());
+
+        addTimestamp(""commit2"");
         userTransaction.commit();
 
         assertContextUnavailable();
+        addTimestamp(""finished"");
+    }
+
+    @Test
+    // run the test sequentially to ensure that state from different scopes do not interfere with each other
+    public void testTxAssociationChangeSequentially() throws Exception {
+        final int TEST_RUNS = 2;
+        final int EXPECTED_MINIMUM_DESTROY_CNT = TEST_RUNS + TestCDITransactionScopeBean.getPreDestroyCnt();
+
+        // run the test multiple times (sequentially)
+        for (int i = 0; i < TEST_RUNS; i++) {
+            try {
+                testTxAssociationChange();
+            } catch (Exception e) {
+                throw new Exception(""Sequential testTxAssociationChange failed with exception"", e);
+            }
+        }
+
+        // ensure that preDestroy was called on the bean at least TEST_RUNS times
+        assertTrue(EXPECTED_MINIMUM_DESTROY_CNT <= TestCDITransactionScopeBean.getPreDestroyCnt());
+    }
+
+    @Test
+    // run the test concurrently to ensure that state from different scopes do not interfere with each other
+    public void testTxAssociationChangeConcurrently() throws Exception {
+        final int TEST_RUNS = 5;
+        final int EXPECTED_MINIMUM_DESTROY_CNT = TEST_RUNS + TestCDITransactionScopeBean.getPreDestroyCnt();
+
+        ExecutorService executor = Executors.newFixedThreadPool(TEST_RUNS);
+        Collection<Future<Boolean>> tasks = new ArrayList<Future<Boolean>>();
+
+        timestamps.clear();
+        // run the test multiple times (concurrently)
+        for (int i = 0; i < TEST_RUNS; i++) {
+            tasks.add(executor.submit(new Callable<Boolean>() {
+                public Boolean call() throws Exception {
+                    testTxAssociationChange();
+                    return true;
+                }
+            }));
+        }
+
+        // see if each individual test run completed successfully
+        for (Future<Boolean> task : tasks) {
+            try {
+                if (!task.get())
+                    throw new Exception(""Concurrent testTxAssociationChange failed"");
+            } catch (Exception e) {
+                throw new Exception(""Concurrent testTxAssociationChange failed with exception"", e);
+            }
+        }
+
+        // ensure that preDestroy was called on the bean at least TEST_RUNS times
+        assertTrue(EXPECTED_MINIMUM_DESTROY_CNT <= TestCDITransactionScopeBean.getPreDestroyCnt());
+
+        for (String s : timestamps)
+            System.out.print(s);
     }
 
     private void assertContextUnavailable() {
@@ -107,6 +196,4 @@ private void assertContextUnavailable() {
             //Expected
         }
     }
-
-
 }
\ No newline at end of file",2013-10-25T16:28:38Z,105
"@@ -57,18 +57,9 @@ public class TransactionScopedTest {
     @Deployment
     public static JavaArchive createTestArchive() {
 
-        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+        return  ShrinkWrap.create(JavaArchive.class, ""test.jar"")
                 .addClass(TestCDITransactionScopeBean.class)
                 .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"");
-
-        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
-
-        String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.jts export services\n"";
-
-        archive.setManifest(new StringAsset(ManifestMF));
-
-        return archive;
     }
 
     @After",2013-07-15T10:36:50Z,105
"@@ -30,6 +30,7 @@
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.JavaArchive;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
 import org.junit.After;
 import org.junit.Test;
 import org.junit.runner.RunWith;
@@ -38,6 +39,7 @@
 import javax.inject.Inject;
 import javax.transaction.Transaction;
 import javax.transaction.TransactionManager;
+import javax.transaction.Transactional;
 import javax.transaction.TransactionalException;
 import javax.transaction.UserTransaction;
 
@@ -54,20 +56,11 @@ public class TransactionalImplTest {
     TestTransactionalBean testTransactionalBean;
 
     @Deployment
-    public static JavaArchive createTestArchive() {
+    public static WebArchive createTestArchive() {
 
-        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+        return ShrinkWrap.create(WebArchive.class, ""test.war"")
                 .addPackage(""com.hp.mwtests.ts.jta.cdi.transactional"")
-                .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"");
-
-        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
-
-        String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.jts export services\n"";
-
-        archive.setManifest(new StringAsset(ManifestMF));
-
-        return archive;
+                .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml"");
     }
 
     @After",2013-07-15T10:36:50Z,107
"@@ -20,8 +20,6 @@
  */
 package org.jboss.jbossts.star.test;
 
-import java.util.Collection;
-
 import java.io.IOException;
 import java.net.HttpURLConnection;
 
@@ -165,14 +163,4 @@ public void testCommitInvalidTx() throws IOException
         // commit it properly
         txn.commitTx();
     }
-    
-    @Test
-    public void testListTransactionsWhenNoActiveTxns() throws IOException
-    {
-        TxSupport txn = new TxSupport();
-        
-        Collection<String> transactionsInProgress = txn.getTransactions();
-        
-        Assert.assertEquals(0, transactionsInProgress.size());
-    }
 }",2012-03-15T13:49:46Z,186
"@@ -0,0 +1,29 @@
+package org.jboss.jbossts.star.test;
+
+import java.io.IOException;
+import java.util.Collection;
+import org.jboss.jbossts.star.util.TxSupport;
+import org.junit.Assert;
+import org.junit.BeforeClass;
+import org.junit.Test;
+
+public class TxSupportTest extends BaseTest {
+
+    @BeforeClass
+    public static void beforeClass() throws Exception {
+        startContainer(TXN_MGR_URL);
+    }
+
+    // This test needs to be run in isolation so that previously running/incomplete txns don't affect the results
+    // Needs to be considered before adding new tests here
+    @Test
+    public void testListTransactionsWhenNoActiveTxns() throws IOException {
+        TxSupport txn = new TxSupport();
+
+        // This should be a collection of size 0.
+        Collection<String> transactionsInProgress = txn.getTransactions();
+
+        Assert.assertEquals(0, transactionsInProgress.size());
+    }
+
+}",2012-03-15T13:49:46Z,187
"@@ -140,7 +140,7 @@ private void findParticipants(List<UidWrapper> recuids, RecordList list, Partici
                     } else {
                         if (tsLogger.logger.isTraceEnabled())
                             tsLogger.logger.trace(""participant record is not a LogRecordWrapper"");
-                        lw = createParticipant(rec, listType);
+                        lw = createParticipant(rec, listType, recuids.get(i));
                     }
                 } else {
                     lw = createParticipant(rec, listType);
@@ -163,6 +163,9 @@ protected LogRecordWrapper createParticipant(AbstractRecord rec, ParticipantStat
         return new LogRecordWrapper(this, rec, listType);
     }
 
+    protected LogRecordWrapper createParticipant(AbstractRecord rec, ParticipantStatus listType, UidWrapper wrapper) {
+        return new LogRecordWrapper(this, rec, listType, wrapper);
+    }
     /**
      * See if there is participant Bean corresponding to the given record
      * @param rec the record for the target participant",2012-07-09T13:29:01Z,192
"@@ -17,6 +17,11 @@ public LogRecordWrapper(Uid uid) {
 		objName = ""type=unitialised,puid="" + uid.fileStringForm();
 	}
 
+	public LogRecordWrapper(ActionBean parent, AbstractRecord rec, ParticipantStatus listType, UidWrapper wrapper) {
+		super(wrapper);
+		init(parent,  rec, listType);
+	}
+
 	public LogRecordWrapper(ActionBean parent, AbstractRecord rec, ParticipantStatus listType) {
 		init(parent,  rec, listType);
 	}",2012-07-09T13:29:01Z,193
"@@ -2,7 +2,9 @@
 
 import com.arjuna.ats.arjuna.common.Uid;
 import com.arjuna.ats.arjuna.coordinator.AbstractRecord;
+import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
 import com.arjuna.ats.arjuna.logging.tsLogger;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
 import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
 
 /**
@@ -71,4 +73,30 @@ public Uid getUid() {
 	public StringBuilder toString(String prefix, StringBuilder sb) {
 		return sb.append(prefix).append('\t').append(getId()).append('\n');
 	}
+
+	/**
+	 * Remove this record from the ObjectStore
+	 * @return a textual indication of whether the remove operation succeeded
+	 */
+	public String remove() {
+		try {
+			if (StoreManager.getRecoveryStore().remove_committed(getUid(), w.getType())) {
+				w.probe();
+
+				return ""Record successfully removed"";
+			}
+
+			if (tsLogger.logger.isDebugEnabled())
+				tsLogger.logger.debug(""Remove committed failed for uid "" + getUid());
+
+			return ""Remove committed failed for uid "" + getUid();
+		} catch (ObjectStoreException e) {
+			if (tsLogger.logger.isDebugEnabled())
+				tsLogger.logger.debug(""Remove committed failed for uid "" + getUid()
+				    + "" - "" + e.getMessage());
+
+			return ""Remove committed failed for uid "" + getUid()
+			    + "" - "" + e.getMessage();
+		}
+	}
 }",2012-07-09T13:29:01Z,194
"@@ -1,9 +1,13 @@
 package com.arjuna.ats.arjuna.tools.osb.mbean;
 
 import com.arjuna.ats.arjuna.tools.osb.annotation.MXBeanDescription;
+import com.arjuna.ats.arjuna.tools.osb.annotation.MXBeanPropertyDescription;
 
 @MXBeanDescription("""")
 public interface OSEntryBeanMBean extends ObjStoreItemMBean {
 	String getType();
 	String getId();
+
+	@MXBeanPropertyDescription(""Tell the Transaction Manager to remove this record"")
+	String remove();
 }",2012-07-09T13:29:01Z,195
"@@ -38,6 +38,7 @@ public class ObjStoreBrowser implements ObjStoreBrowserMBean {
     private Map<String, String> stateTypes = null; // defines which object store types will be instrumented
     private Map<String, String> beanTypes = null;  // defines which bean types are used to represent object store types
     private Map<String, List<UidWrapper>> allUids;
+    private boolean exposeAllLogs = false;
 
     /**
      * Initialise the MBean
@@ -208,7 +209,7 @@ public void probe() {
                                 allUids.put(tname, uids);
                             }
 
-                            if (beanTypes.containsKey(tname))
+                            if (exposeAllLogs || beanTypes.containsKey(tname))
                                 updateMBeans(uids, System.currentTimeMillis(), true, tname);
                         }
                     } catch (IOException e1) {
@@ -249,6 +250,10 @@ public void viewSubordinateAtomicActions(boolean enable) {
         }
     }
 
+    public void setExposeAllRecordsAsMBeans(boolean exposeAllLogs) {
+        this.exposeAllLogs = exposeAllLogs;
+    }
+
     /**
      * Register new MBeans of the requested type (or unregister ones whose
      * corresponding ObjectStore entry has been removed)
@@ -268,6 +273,13 @@ public List<UidWrapper> probe(String type, String beantype) {
         return uids;
     }
 
+    private String getBeanType(String type) {
+        if (beanTypes.containsKey(type))
+            return beanTypes.get(type);
+
+        return OSEntryBean.class.getName();
+    }
+
     private void updateMBeans(List<UidWrapper> uids, long tstamp, boolean register, String type) {
         ObjectStoreIterator iter = new ObjectStoreIterator(StoreManager.getRecoveryStore(), type);
 
@@ -277,7 +289,7 @@ private void updateMBeans(List<UidWrapper> uids, long tstamp, boolean register,
                 break;
 
 
-            UidWrapper w = new UidWrapper(this, beanTypes.get(type), type, stateTypes.get(type), u);
+            UidWrapper w = new UidWrapper(this, getBeanType(type), type, stateTypes.get(type), u);
             int i = uids.indexOf(w);
 
             if (i == -1) {",2012-07-09T13:29:01Z,45
"@@ -7,7 +7,16 @@
 public interface ObjStoreBrowserMBean extends ObjStoreItemMBean {
 	@MXBeanPropertyDescription(""See if any new transactions have been created or completed"")
 	void probe();
-	@MXBeanPropertyDescription(""Enable/disable viewing of Subordinate Atomic Actions (afterwards use the probe operation to rescan the store):""
-            + "" WARNING THIS OPERATION WILL TRIGGER A RECOVERY ATTEMPT (recovery is normally performed by the Recovery Manager). Use the text \""true\"" to enable"")
+
+	@MXBeanPropertyDescription(""Enable/disable viewing of Subordinate Atomic Actions (afterwards""
+	    + "" use the probe operation to rescan the store):""
+	    + "" WARNING THIS OPERATION WILL TRIGGER A RECOVERY ATTEMPT (recovery is normally performed""
+	    + "" by the Recovery Manager). Use the text \""true\"" to enable"")
 	void viewSubordinateAtomicActions(boolean enable);
+
+	@MXBeanPropertyDescription(""By default only a subset of transaction logs are exposed as MBeans,""
+	    + "" this operation changes this default.""
+	    + ""Use the text \""true\"" to expose all logs as MBeans. You must invoke the probe method for the""
+	    + "" change to take effect"")
+	void setExposeAllRecordsAsMBeans(boolean exposeAllLogs);
 }",2012-07-09T13:29:01Z,196
"@@ -0,0 +1,142 @@
+package com.hp.mwtests.ts.arjuna.tools;
+
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+import org.junit.Test;
+
+import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.tools.osb.mbean.ObjStoreBrowser;
+import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
+import com.arjuna.ats.internal.arjuna.common.UidHelper;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.state.OutputObjectState;
+
+import javax.management.AttributeNotFoundException;
+import javax.management.MBeanServer;
+import javax.management.ObjectName;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Set;
+
+/**
+ * Test that the tooling can exposed all log record types
+ */
+public class ExposeAllLogsTest {
+    private static final String FOO_TYPE = ""/StateManager/LockManager/foo"";
+    private static final String osMBeanName = ""jboss.jta:type=ObjectStore"";
+
+    @Test
+    public void test() throws Exception
+    {
+        RecoveryStore store = StoreManager.getRecoveryStore();
+        ObjStoreBrowser osb = new ObjStoreBrowser();
+        Set<Uid> uids;
+        Map<Uid, ObjectName> uids2 = new HashMap<Uid, ObjectName>();
+        JMXServer agent = JMXServer.getAgent();
+
+        // create a record that by default the tooling does not expose
+        byte[] data = new byte[10240];
+        OutputObjectState state = new OutputObjectState();
+        Uid u = new Uid();
+
+        state.packBytes(data);
+        assertTrue(store.write_committed(u, FOO_TYPE, state));
+
+        // make sure the object store tooling MBean is ready
+        osb.start();
+
+        // check that the record is not exposed
+        osb.probe();
+        // get uids via the object store API
+        uids = getUids(store, new HashSet<Uid>(), FOO_TYPE);
+        // and validate that there is a uid corresponding to u
+        assertTrue(uids.contains(u));
+
+        // get uids via JMX
+        getUids(uids2, agent.queryNames(osMBeanName + "",*"", null));
+
+        // and validate that there is no MBean corresponding to u
+        assertFalse(uids2.containsKey(u));
+
+        // now tell the browser to expose all log records
+        osb.setExposeAllRecordsAsMBeans(true);
+        osb.probe();
+
+        // and get the uids for log record MBeans
+        uids2.clear();
+        getUids(uids2, agent.queryNames(osMBeanName + "",*"", null));
+
+        // and validate that there is now an MBean corresponding to u
+        assertTrue(uids2.containsKey(u));
+
+        // test that the MBean remove operation works
+        agent.getServer().invoke(uids2.get(u), ""remove"", null, null);
+
+        // check that both the log record and the MBean were removed
+        uids.clear();
+        getUids(store, uids, FOO_TYPE);
+        assertFalse(uids.contains(u));
+
+        uids2.clear();
+        getUids(uids2, agent.queryNames(osMBeanName + "",*"", null));
+        assertFalse(uids2.containsKey(u));
+    }
+
+    // Given a set of MBean names find their corresponding Uids
+    private Map<Uid, ObjectName> getUids(Map<Uid, ObjectName> uids, Set<ObjectName> osEntries) {
+        MBeanServer mbs = JMXServer.getAgent().getServer();
+
+        for (ObjectName name : osEntries) {
+            Object id = getProperty(mbs, name, ""Id"");
+
+            if (id != null)
+                uids.put(new Uid(id.toString()), name);
+        }
+
+        return uids;
+    }
+
+    // look up an MBean property
+    private static Object getProperty(MBeanServer mbs, ObjectName name, String id) {
+        try {
+            return mbs.getAttribute(name, id);
+        } catch (AttributeNotFoundException e) {
+            // ok
+        } catch (Exception e) {
+            System.out.println(""Exception looking up attribute "" + id + "" for object name "" + name);
+            e.printStackTrace();
+        }
+
+        return null;
+    }
+
+    // lookup all log records of a given type
+    private Set<Uid> getUids(RecoveryStore recoveryStore, Set<Uid> uids, String type) {
+        try {
+            InputObjectState states = new InputObjectState();
+
+            if (recoveryStore.allObjUids(type, states) && states.notempty()) {
+                boolean finished = false;
+
+                do {
+                    Uid uid = UidHelper.unpackFrom(states);
+
+                    if (uid.notEquals(Uid.nullUid())) {
+                        uids.add(uid);
+                    } else {
+                        finished = true;
+                    }
+
+                } while (!finished);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        return uids;
+    }
+}",2012-07-09T13:29:01Z,197
"@@ -30,7 +30,6 @@ fi
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail
-$JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/txf/pom.xml -DskipTests || fail
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/build/pom.xml -DskipTests || fail
 
 JBOSS_BUILD_NAME=$(ls $JBOSS_BUILD_HOME/build/target/ | grep jboss-as)",2013-02-21T12:08:31Z,198
"@@ -64,7 +64,7 @@ public static WebArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.resteasy.resteasy-jaxrs,javax.ws.rs.api,javax.ejb.api,org.jboss.jts,org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.resteasy.resteasy-jaxrs,javax.ws.rs.api,javax.ejb.api,org.jboss.jts,org.jboss.xts\n"";
         archive.setManifest(new StringAsset(ManifestMF));
 
         return archive;",2013-02-21T12:08:31Z,199
"@@ -72,7 +72,7 @@ public static WebArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.resteasy.resteasy-jaxrs,javax.ws.rs.api,javax.ejb.api,org.jboss.jts,org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.resteasy.resteasy-jaxrs,javax.ws.rs.api,javax.ejb.api,org.jboss.jts,org.jboss.xts\n"";
         archive.setManifest(new StringAsset(ManifestMF));
 
         return archive;",2013-02-21T12:08:31Z,200
"@@ -59,7 +59,7 @@ public static JavaArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.xts\n"";
 
         archive.setManifest(new StringAsset(ManifestMF));
 ",2013-02-21T12:08:31Z,201
"@@ -67,7 +67,7 @@ public static WebArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.xts\n"";
         archive.setManifest(new StringAsset(ManifestMF));
 
         return archive;",2013-02-21T12:08:31Z,202
"@@ -60,7 +60,7 @@ public static JavaArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.xts\n"";
 
 
         archive.setManifest(new StringAsset(ManifestMF));",2013-02-21T12:08:31Z,115
"@@ -69,7 +69,7 @@ public static JavaArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.xts\n"";
 
 
         archive.setManifest(new StringAsset(ManifestMF));",2013-02-21T12:08:31Z,116
"@@ -65,7 +65,7 @@ public static JavaArchive createTestArchive() {
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.narayana.txframework\n"";
+                + ""Dependencies: org.jboss.xts\n"";
 
         archive.setManifest(new StringAsset(ManifestMF));
 ",2013-02-21T12:08:31Z,117
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.jbossts.txbridge.inbound;
+
+import com.arjuna.mw.wst.TxContext;
+import com.arjuna.mw.wst11.TransactionManagerFactory;
+import com.arjuna.wst.SystemException;
+import org.jboss.jbossts.txbridge.utils.txbridgeLogger;
+
+import javax.xml.ws.handler.Handler;
+import javax.xml.ws.handler.MessageContext;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+public class OptionalJaxWSTxInboundBridgeHandler implements Handler {
+
+    final JaxWSTxInboundBridgeHandler delegate;
+
+    public OptionalJaxWSTxInboundBridgeHandler() {
+        delegate = new JaxWSTxInboundBridgeHandler();
+    }
+
+    @Override
+    public boolean handleMessage(final MessageContext messageContext) {
+        if (txbridgeLogger.logger.isTraceEnabled()) {
+            txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleMessage()"");
+        }
+
+        if (isTransactionAvailable()) {
+            return delegate.handleMessage(messageContext);
+        }
+
+        return true;
+    }
+
+    @Override
+    public boolean handleFault(final MessageContext messageContext) {
+        if (txbridgeLogger.logger.isTraceEnabled()) {
+            txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.handleFault()"");
+        }
+
+        if (isTransactionAvailable()) {
+            return delegate.handleFault(messageContext);
+        }
+
+        return true;
+    }
+
+    @Override
+    public void close(final MessageContext messageContext) {
+        if (txbridgeLogger.logger.isTraceEnabled()) {
+            txbridgeLogger.logger.trace(""OptionalJaxWSTxInboundBridgeHandler.close()"");
+        }
+
+        if (isTransactionAvailable()) {
+            delegate.close(messageContext);
+        }
+    }
+
+    private boolean isTransactionAvailable() {
+        TxContext txContext = null;
+
+        try {
+            txContext = TransactionManagerFactory.transactionManager().currentTransaction();
+        } catch (SystemException e) {
+        }
+
+        return txContext != null;
+    }
+}",2013-10-10T10:05:55Z,163
"@@ -174,7 +174,10 @@ public org.omg.CosTransactions.Vote prepare () throws HeuristicMixed, HeuristicH
 
 	ServerTransaction theTransaction = (ServerTransaction) _theControl.getImplHandle();
 
-	ThreadActionData.pushAction(theTransaction); // LockManager needs to know if there is a transaction
+	// the locking scheme used by LockManager depends upon whether or not there is a
+	// transaction associated (note that this change is already on the master branch
+	// where it was introduced by JBTM-1350)
+//	ThreadActionData.pushAction(theTransaction); // LockManager needs to know if there is a transaction
 
 	int result = TwoPhaseOutcome.PREPARE_NOTOK;
 ",2013-06-28T15:02:01Z,203
"@@ -49,6 +49,8 @@ public class TestGroupBase
     private int clientCount = 0;
     private int taskCount = 0;
 
+    private static final boolean usingExecutionWrapper = System.getProperty(""additional.elements"", """").contains(ExecutionWrapper.class.getCanonicalName());
+
     @Before public void setUp()
 	{
         clientCount = 0;
@@ -200,4 +202,8 @@ protected void removeServerIORStore(String name, String... params) {
         FileServerIORStore store = new FileServerIORStore();
         store.remove();
     }
+
+    protected boolean isUsingExecutionWrapper() {
+        return usingExecutionWrapper;
+    }
 }",2013-06-28T15:02:01Z,204
"@@ -35,20 +35,20 @@ public String getTestGroupName()
 
 	@Before public void setUp()
 	{
-		super.setUp();
+		/*
+		 * Always run the hornetq store in process since that store is loaded only once
+		 * on startup (ie subsequent additions to the store by external processes will
+		 * never be loaded).
+		 */
+		isRecoveryManagerNeeded = !isUsingExecutionWrapper();
 		Task setup0 = createTask(""setup0"", org.jboss.jbossts.qa.CrashRecovery12Setups.Setup01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
 		setup0.perform(""CR12_01.log"");
-		server0 = createTask(""server0"", com.arjuna.ats.arjuna.recovery.RecoveryManager.class, Task.TaskType.EXPECT_READY, 240);
-		server0.start(""-test"");
+		super.setUp();
 	}
 
 	@After public void tearDown()
 	{
-		try {
-			server0.terminate();
-		} finally {
-			super.tearDown();
-		}
+		super.tearDown();
 	}
 
 	@Test public void CrashRecovery12_Test01()
@@ -73,12 +73,11 @@ public String getTestGroupName()
 	@Test public void CrashRecovery12_Test03()
 	{
 		setTestName(""Test03"");
-		Task client0 = createTask(""client0"", org.jboss.jbossts.qa.CrashRecovery12Clients.Client01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
+		Task client0 = createTask(""client0"", org.jboss.jbossts.qa.CrashRecovery12Clients.Client01.class, Task.TaskType.EXPECT_PASS_FAIL, 240, ""store"");
 		client0.start(""commit"", ""CR12_03.log"");
-		Task outcome0 = createTask(""outcome0"", org.jboss.jbossts.qa.CrashRecovery12Outcomes.Outcome01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
+		Task outcome0 = createTask(""outcome0"", org.jboss.jbossts.qa.CrashRecovery12Outcomes.Outcome01.class, Task.TaskType.EXPECT_PASS_FAIL, 240, ""store"");
 		outcome0.start(""CR12_03.log"", ""yes"");
 		outcome0.waitFor();
-        client0.waitFor();
 	}
 
 	@Test public void CrashRecovery12_Test04()
@@ -89,7 +88,7 @@ public String getTestGroupName()
 		Task outcome0 = createTask(""outcome0"", org.jboss.jbossts.qa.CrashRecovery12Outcomes.Outcome01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
 		outcome0.start(""CR12_04.log"", ""no"");
 		outcome0.waitFor();
-        client0.waitFor();
+		client0.waitFor();
 	}
 
 	@Test public void CrashRecovery12_Test05()
@@ -106,10 +105,10 @@ public String getTestGroupName()
 	@Test public void CrashRecovery12_Test06()
 	{
 		setTestName(""Test06"");
-		Task client0 = createTask(""client0"", org.jboss.jbossts.qa.CrashRecovery12Clients.Client01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
+		Task client0 = createTask(""client0"", org.jboss.jbossts.qa.CrashRecovery12Clients.Client01.class, Task.TaskType.EXPECT_PASS_FAIL, 240, ""store"");
 		client0.start(""commit"", ""CR12_06.log"");
 		client0.waitFor();
-		Task outcome0 = createTask(""outcome0"", org.jboss.jbossts.qa.CrashRecovery12Outcomes.Outcome01.class, Task.TaskType.EXPECT_PASS_FAIL, 240);
+		Task outcome0 = createTask(""outcome0"", org.jboss.jbossts.qa.CrashRecovery12Outcomes.Outcome01.class, Task.TaskType.EXPECT_PASS_FAIL, 240, ""store"");
 		outcome0.start(""CR12_06.log"", ""yes"");
 		outcome0.waitFor();
 	}
@@ -124,4 +123,4 @@ public String getTestGroupName()
 		outcome0.start(""CR12_07.log"", ""no"");
 		outcome0.waitFor();
 	}
-}
\ No newline at end of file
+}",2013-06-28T15:02:01Z,205
"@@ -2,16 +2,16 @@
 
 import org.jboss.narayana.rest.integration.api.Participant;
 
-import com.arjuna.ats.arjuna.common.Uid;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
  *
  */
 public final class ParticipantInformation {
 
-    private final Uid id;
+    private final String id;
+
+    private final String applicationId;
 
     private final String recoveryURL;
 
@@ -21,12 +21,13 @@ public final class ParticipantInformation {
 
     private String status;
 
-    public ParticipantInformation(final Uid id, final String recoveryURL, final String baseUrl, final Participant participant) {
-        this(id, recoveryURL, baseUrl, participant, null);
+    public ParticipantInformation(final String id, final String applicationId, final String recoveryURL, final String baseUrl, final Participant participant) {
+        this(id, applicationId, recoveryURL, baseUrl, participant, null);
     }
 
-    public ParticipantInformation(final Uid id, final String recoveryURL, final String baseUrl, final Participant participant, final String status) {
+    public ParticipantInformation(final String id, final String applicationId, final String recoveryURL, final String baseUrl, final Participant participant, final String status) {
         this.id = id;
+        this.applicationId = applicationId;
         this.recoveryURL = recoveryURL;
         this.baseUrl = baseUrl;
         this.participant = participant;
@@ -41,10 +42,14 @@ public void setStatus(final String status) {
         this.status = status;
     }
 
-    public Uid getId() {
+    public String getId() {
         return id;
     }
 
+    public String getApplicationId() {
+        return applicationId;
+    }
+
     public String getRecoveryURL() {
         return recoveryURL;
     }",2013-05-28T09:15:31Z,206
"@@ -25,8 +25,6 @@
 import org.jboss.narayana.rest.integration.api.Vote;
 import org.jboss.resteasy.client.ClientRequest;
 
-import com.arjuna.ats.arjuna.common.Uid;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
@@ -40,7 +38,7 @@ public final class ParticipantResource {
     private static final Logger LOG = Logger.getLogger(ParticipantResource.class);
 
     @HEAD
-    public Response getTerminatorUrl(@PathParam(""participantId"") final Uid participantId, @Context final UriInfo uriInfo) {
+    public Response getTerminatorUrl(@PathParam(""participantId"") final String participantId, @Context final UriInfo uriInfo) {
         if (LOG.isTraceEnabled()) {
             LOG.trace(""HEAD request on ParticipantResource. ParticipantId: "" + participantId);
         }
@@ -61,13 +59,13 @@ public Response getTerminatorUrl(@PathParam(""participantId"") final Uid participa
 
     @GET
     @Produces(TxMediaType.TX_STATUS_MEDIA_TYPE)
-    public Response getStatus(@PathParam(""participantId"") final Uid participantId) {
+    public Response getStatus(@PathParam(""participantId"") final String participantId) {
         if (LOG.isTraceEnabled()) {
             LOG.trace(""GET request on ParticipantResource. ParticipantId: "" + participantId);
         }
 
-        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance().getParticipantInformation(
-                participantId);
+        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
 
         if (participantInformation == null) {
             if (LOG.isTraceEnabled()) {
@@ -83,13 +81,15 @@ public Response getStatus(@PathParam(""participantId"") final Uid participantId) {
     @PUT
     @Consumes(TxMediaType.TX_STATUS_MEDIA_TYPE)
     @Produces(TxMediaType.TX_STATUS_MEDIA_TYPE)
-    public Response terminate(@PathParam(""participantId"") final Uid participantId, final String content) throws HeuristicException {
+    public Response terminate(@PathParam(""participantId"") final String participantId, final String content)
+            throws HeuristicException {
+
         if (LOG.isTraceEnabled()) {
             LOG.trace(""PUT request on ParticipantResource. ParticipantId: "" + participantId + "", content: "" + content);
         }
 
-        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance().getParticipantInformation(
-                participantId);
+        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
 
         if (participantInformation == null) {
             if (LOG.isTraceEnabled()) {
@@ -134,13 +134,13 @@ public Response terminate(@PathParam(""participantId"") final Uid participantId, f
     }
 
     @DELETE
-    public Response forgetHeuristic(@PathParam(""participantId"") final Uid participantId) {
+    public Response forgetHeuristic(@PathParam(""participantId"") final String participantId) {
         if (LOG.isTraceEnabled()) {
             LOG.trace(""DELETE request on ParticipantResource. ParticipantId: "" + participantId);
         }
 
-        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance().getParticipantInformation(
-                participantId);
+        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
 
         if (participantInformation == null) {
             if (LOG.isTraceEnabled()) {
@@ -155,6 +155,7 @@ public Response forgetHeuristic(@PathParam(""participantId"") final Uid participan
                 || TxStatus.TransactionHeuristicHazard.name().equals(participantInformation.getStatus())
                 || TxStatus.TransactionHeuristicMixed.name().equals(participantInformation.getStatus())) {
 
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());
 
             return Response.ok().build();
@@ -176,6 +177,7 @@ private Vote prepare(final ParticipantInformation participantInformation) throws
             rollback(participantInformation);
         } else if (vote instanceof Prepared) {
             participantInformation.setStatus(TxStatus.TransactionPrepared.name());
+            RecoveryManager.getInstance().persistParticipantInformation(participantInformation);
         } else if (vote instanceof ReadOnly) {
             readOnly(participantInformation);
         }
@@ -187,6 +189,7 @@ private Vote prepareHeuristic(final ParticipantInformation participantInformatio
         if (TxStatus.TransactionHeuristicCommit.name().equals(participantInformation.getStatus())) {
             return new Prepared();
         } else {
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             return new Aborted();
         }
     }
@@ -202,11 +205,13 @@ private void commit(final ParticipantInformation participantInformation) throws
             } catch (HeuristicException e) {
                 if (!e.getHeuristicType().equals(HeuristicType.HEURISTIC_COMMIT)) {
                     participantInformation.setStatus(e.getHeuristicType().toTxStatus());
+                    RecoveryManager.getInstance().persistParticipantInformation(participantInformation);
                     throw new HeuristicException(e.getHeuristicType());
                 }
             }
 
             participantInformation.setStatus(TxStatus.TransactionCommitted.name());
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());
         }
     }
@@ -216,6 +221,7 @@ private void commitHeuristic(final ParticipantInformation participantInformation
             throw new HeuristicException(HeuristicType.fromTxStatus(participantInformation.getStatus()));
         } else {
             participantInformation.setStatus(TxStatus.TransactionCommitted.name());
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());
         }
     }
@@ -240,11 +246,13 @@ private void rollback(final ParticipantInformation participantInformation) throw
             } catch (HeuristicException e) {
                 if (!e.getHeuristicType().equals(HeuristicType.HEURISTIC_ROLLBACK)) {
                     participantInformation.setStatus(e.getHeuristicType().toTxStatus());
+                    RecoveryManager.getInstance().persistParticipantInformation(participantInformation);
                     throw new HeuristicException(e.getHeuristicType());
                 }
             }
 
             participantInformation.setStatus(TxStatus.TransactionRolledBack.name());
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());
         }
     }
@@ -254,6 +262,7 @@ private void rollbackHeuristic(final ParticipantInformation participantInformati
             throw new HeuristicException(HeuristicType.fromTxStatus(participantInformation.getStatus()));
         } else {
             participantInformation.setStatus(TxStatus.TransactionRolledBack.name());
+            RecoveryManager.getInstance().removeParticipantInformation(participantInformation);
             ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());
         }
     }
@@ -264,7 +273,7 @@ private void readOnly(final ParticipantInformation participantInformation) {
         try {
             new ClientRequest(participantInformation.getRecoveryURL()).delete();
         } catch (Exception e) {
-            // TODO log
+            LOG.warn(e.getMessage(), e);
         }
 
         ParticipantsContainer.getInstance().removeParticipantInformation(participantInformation.getId());",2013-05-28T09:15:31Z,207
"@@ -3,8 +3,6 @@
 import java.util.Map;
 import java.util.concurrent.ConcurrentHashMap;
 
-import com.arjuna.ats.arjuna.common.Uid;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
@@ -14,25 +12,25 @@ public final class ParticipantsContainer {
 
     private static final ParticipantsContainer INSTANCE = new ParticipantsContainer();
 
-    private final Map<Uid, ParticipantInformation> participantsInformation;
+    private final Map<String, ParticipantInformation> participantsInformation;
 
     public static ParticipantsContainer getInstance() {
         return INSTANCE;
     }
 
     private ParticipantsContainer() {
-        participantsInformation = new ConcurrentHashMap<Uid, ParticipantInformation>();
+        participantsInformation = new ConcurrentHashMap<String, ParticipantInformation>();
     }
 
-    public ParticipantInformation getParticipantInformation(final Uid participantId) {
+    public ParticipantInformation getParticipantInformation(final String participantId) {
         return participantsInformation.get(participantId);
     }
 
-    public void addParticipantInformation(final Uid participantId, final ParticipantInformation participantInformation) {
+    public void addParticipantInformation(final String participantId, final ParticipantInformation participantInformation) {
         participantsInformation.put(participantId, participantInformation);
     }
 
-    public void removeParticipantInformation(final Uid participantId) {
+    public void removeParticipantInformation(final String participantId) {
         participantsInformation.remove(participantId);
     }
 ",2013-05-28T09:15:31Z,208
"@@ -2,6 +2,7 @@
 
 import org.jboss.jbossts.star.util.TxStatus;
 import org.jboss.jbossts.star.util.TxSupport;
+import org.jboss.narayana.rest.integration.api.ParticipantDeserializer;
 import org.jboss.narayana.rest.integration.api.HeuristicType;
 import org.jboss.narayana.rest.integration.api.Participant;
 import org.jboss.narayana.rest.integration.api.ParticipantsManager;
@@ -15,7 +16,7 @@
  */
 public final class ParticipantsManagerImpl implements ParticipantsManager {
 
-    public String baseUrl;
+    private String baseUrl;
 
     @Override
     public String getBaseUrl() {
@@ -28,23 +29,18 @@ public void setBaseUrl(final String baseUrl) {
     }
 
     @Override
-    public Uid enlist(final TxSupport txSupport, final Participant participant) {
-        return enlist(txSupport.getDurableParticipantEnlistmentURI(), participant);
-    }
-
-    @Override
-    public Uid enlist(final String participantEnlistmentURL, final Participant participant) {
+    public String enlist(final String applicationId, final String participantEnlistmentURL, final Participant participant) {
         if (baseUrl == null) {
             throw new IllegalStateException(""Base URL was not defined."");
         }
 
-        final Uid participantId = new Uid();
+        final String participantId = new Uid().toString();
         final String participantUrl = getParticipantUrl(participantId, baseUrl);
 
         String participantRecoveryURL = enlistParticipant(participantUrl, participantEnlistmentURL);
 
-        ParticipantInformation participantInformation = new ParticipantInformation(participantId, participantRecoveryURL,
-                baseUrl, participant);
+        ParticipantInformation participantInformation = new ParticipantInformation(participantId, applicationId,
+                participantRecoveryURL, baseUrl, participant);
         participantInformation.setStatus(TxStatus.TransactionActive.name());
 
         ParticipantsContainer.getInstance().addParticipantInformation(participantId, participantInformation);
@@ -53,32 +49,39 @@ public Uid enlist(final String participantEnlistmentURL, final Participant parti
     }
 
     @Override
-    public void reportHeuristic(Uid participantId, HeuristicType heuristicType) {
-        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance().getParticipantInformation(
-                participantId);
-
-            switch (heuristicType) {
-                case HEURISTIC_ROLLBACK:
-                    participantInformation.setStatus(TxStatus.TransactionHeuristicRollback.name());
-                    break;
-
-                case HEURISTIC_COMMIT:
-                    participantInformation.setStatus(TxStatus.TransactionHeuristicCommit.name());
-                    break;
-
-                case HEURISTIC_HAZARD:
-                    participantInformation.setStatus(TxStatus.TransactionHeuristicHazard.name());
-                    break;
-
-                case HEURISTIC_MIXED:
-                    participantInformation.setStatus(TxStatus.TransactionHeuristicMixed.name());
-                    break;
-
-                default:
-                    throw new IllegalArgumentException(""Unknown heuristic type"");
-            }
+    public void registerDeserializer(final String applicationId, final ParticipantDeserializer deserializer) {
+        RecoveryManager.getInstance().registerDeserializer(applicationId, deserializer);
+    }
+
+    @Override
+    public void reportHeuristic(String participantId, HeuristicType heuristicType) {
+        final ParticipantInformation participantInformation = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
+
+        switch (heuristicType) {
+            case HEURISTIC_ROLLBACK:
+                participantInformation.setStatus(TxStatus.TransactionHeuristicRollback.name());
+                break;
+
+            case HEURISTIC_COMMIT:
+                participantInformation.setStatus(TxStatus.TransactionHeuristicCommit.name());
+                break;
+
+            case HEURISTIC_HAZARD:
+                participantInformation.setStatus(TxStatus.TransactionHeuristicHazard.name());
+                break;
+
+            case HEURISTIC_MIXED:
+                participantInformation.setStatus(TxStatus.TransactionHeuristicMixed.name());
+                break;
+
+            default:
+                throw new IllegalArgumentException(""Unknown heuristic type"");
         }
 
+        RecoveryManager.getInstance().persistParticipantInformation(participantInformation);
+    }
+
     private String enlistParticipant(final String participantUrl, final String participantEnlistmentURL) {
         TxSupport txSupport = new TxSupport();
         String participantLinkHeader = txSupport.makeTwoPhaseAwareParticipantLinkHeader(participantUrl, participantUrl);
@@ -87,7 +90,7 @@ private String enlistParticipant(final String participantUrl, final String parti
         return recoveryUrl;
     }
 
-    private String getParticipantUrl(final Uid participantId, String baseUrl) {
+    private String getParticipantUrl(final String participantId, String baseUrl) {
         if (!baseUrl.substring(baseUrl.length() - 1).equals(""/"")) {
             baseUrl += ""/"";
         }",2013-05-28T09:15:31Z,209
"@@ -0,0 +1,230 @@
+package org.jboss.narayana.rest.integration;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
+import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.state.OutputObjectState;
+import com.arjuna.ats.internal.arjuna.common.UidHelper;
+import org.jboss.jbossts.star.util.TxLinkNames;
+import org.jboss.logging.Logger;
+import org.jboss.narayana.rest.integration.api.Participant;
+import org.jboss.narayana.rest.integration.api.ParticipantDeserializer;
+import org.jboss.narayana.rest.integration.api.ParticipantsManagerFactory;
+import org.jboss.narayana.rest.integration.api.PersistableParticipant;
+import org.jboss.resteasy.client.ClientRequest;
+import org.jboss.resteasy.spi.Link;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.Serializable;
+import java.util.Map;
+import java.util.concurrent.ConcurrentHashMap;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+public final class RecoveryManager {
+
+    private static final String PARTICIPANT_INFORMATION_RECORD_TYPE = ""/REST-AT/Integration/ParticipantInformationRecoveryRecord"";
+
+    private static final Logger LOG = Logger.getLogger(RecoveryManager.class);
+
+    private static final RecoveryManager INSTANCE = new RecoveryManager();
+
+    private final Map<String, ParticipantDeserializer> deserializers = new ConcurrentHashMap<String, ParticipantDeserializer>();
+
+    private RecoveryManager() {
+    }
+
+    public static RecoveryManager getInstance() {
+        return INSTANCE;
+    }
+
+    public void registerDeserializer(final String applicationId, final ParticipantDeserializer deserializer) {
+        if (!deserializers.containsKey(applicationId)) {
+            deserializers.put(applicationId, deserializer);
+            recoverParticipants();
+        }
+    }
+
+    public void persistParticipantInformation(final ParticipantInformation participantInformation) {
+        if (!isRecoverableParticipant(participantInformation.getParticipant())) {
+            return;
+        }
+
+        try {
+            final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();
+            final OutputObjectState state = getParticipantInformationOutputState(participantInformation);
+            final Uid uid = new Uid(participantInformation.getId());
+
+            recoveryStore.write_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE, state);
+        } catch (Exception e) {
+            LOG.warn(""Failure while persisting participant information."", e);
+        }
+    }
+
+    public void removeParticipantInformation(final ParticipantInformation participantInformation) {
+        final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();
+        final Uid uid = new Uid(participantInformation.getId());
+
+        try {
+            recoveryStore.remove_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE);
+        } catch (ObjectStoreException e) {
+            LOG.warn(""Failure while removing participant information from the object store."", e);
+        }
+    }
+
+    private OutputObjectState getParticipantInformationOutputState(final ParticipantInformation participantInformation)
+            throws IOException {
+
+        final Uid uid = new Uid(participantInformation.getId());
+        final OutputObjectState state = new OutputObjectState(uid, PARTICIPANT_INFORMATION_RECORD_TYPE);
+
+        state.packString(participantInformation.getId());
+        state.packString(participantInformation.getApplicationId());
+        state.packString(participantInformation.getStatus());
+        state.packString(participantInformation.getBaseUrl());
+        state.packString(participantInformation.getRecoveryURL());
+        state.packBytes(getParticipantBytes(participantInformation.getParticipant()));
+
+        return state;
+    }
+
+    private byte[] getParticipantBytes(final Participant participant) throws IOException {
+        if (participant instanceof Serializable) {
+            return serializeParticipant(participant);
+        } else if (participant instanceof PersistableParticipant) {
+            return ((PersistableParticipant) participant).getRecoveryState();
+        }
+
+        // Shouldn't happen
+        return new byte[] {};
+    }
+
+    private byte[] serializeParticipant(final Participant participant) throws IOException {
+        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
+        final ObjectOutputStream objectOutputStream = new ObjectOutputStream(byteArrayOutputStream);
+        objectOutputStream.writeObject(participant);
+
+        return byteArrayOutputStream.toByteArray();
+    }
+
+    private boolean isRecoverableParticipant(final Participant participant) {
+        return (participant instanceof Serializable) || (participant instanceof PersistableParticipant);
+    }
+
+    private void recoverParticipants() {
+        if (ParticipantsManagerFactory.getInstance().getBaseUrl() != null) {
+            final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();
+            final InputObjectState states = new InputObjectState();
+
+            try {
+                if (recoveryStore.allObjUids(PARTICIPANT_INFORMATION_RECORD_TYPE, states)) {
+                    Uid uid;
+
+                    while ((uid = UidHelper.unpackFrom(states)).notEquals(Uid.nullUid())) {
+                        final ParticipantInformation participantInformation = recreateParticipantInformation(
+                                recoveryStore, uid);
+
+                        if (participantInformation != null) {
+                            ParticipantsContainer.getInstance().addParticipantInformation(
+                                    participantInformation.getId(), participantInformation);
+                        }
+                    }
+                }
+            } catch (ObjectStoreException e) {
+                LOG.warn(e.getMessage(), e);
+            } catch (IOException e) {
+                LOG.warn(e.getMessage(), e);
+            }
+        } else {
+            LOG.warn(""Participants cannot be loaded from the object store, because base URL was not set."");
+        }
+    }
+
+    private ParticipantInformation recreateParticipantInformation(final RecoveryStore recoveryStore, final Uid uid)
+            throws ObjectStoreException, IOException {
+
+        final InputObjectState inputObjectState = recoveryStore.read_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE);
+        final String id = inputObjectState.unpackString();
+
+        if (ParticipantsContainer.getInstance().getParticipantInformation(id) != null) {
+            // Participant is already loaded.
+            return null;
+        }
+
+        final String applicationId = inputObjectState.unpackString();
+
+        if (!deserializers.containsKey(applicationId)) {
+            // There is no appropriate deserializer.
+            return null;
+        }
+
+        final String status = inputObjectState.unpackString();
+        final String baseUrl = inputObjectState.unpackString();
+        final String recoveryUrl = inputObjectState.unpackString();
+        final Participant participant = recreateParticipant(inputObjectState, applicationId);
+
+        if (participant == null) {
+            // Deserializer failed to recreate participant.
+            return null;
+        }
+
+        ParticipantInformation participantInformation = new ParticipantInformation(id, applicationId, recoveryUrl,
+                baseUrl, participant, status);
+
+        if (!ParticipantsManagerFactory.getInstance().getBaseUrl().equals(baseUrl)) {
+            notifyCoordinatorAboutNewUrl(participantInformation);
+            participantInformation = new ParticipantInformation(id, applicationId, recoveryUrl,
+                    ParticipantsManagerFactory.getInstance().getBaseUrl(), participant, status);
+        }
+
+        return participantInformation;
+    }
+
+    private Participant recreateParticipant(final InputObjectState inputObjectState, final String applicationId)
+            throws IOException {
+
+        final ParticipantDeserializer deserializer = deserializers.get(applicationId);
+        final byte[] participantBytes = inputObjectState.unpackBytes();
+
+        Participant participant = deserializer.recreate(participantBytes);
+
+        if (participant == null) {
+            final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(participantBytes);
+            final ObjectInputStream objectInputStream = new ObjectInputStream(byteArrayInputStream);
+
+            participant = deserializer.deserialize(objectInputStream);
+        }
+
+        return participant;
+    }
+
+    private void notifyCoordinatorAboutNewUrl(final ParticipantInformation participantInformation) {
+        final String participantUrl = getParticipantUrl(participantInformation.getId(), participantInformation.getBaseUrl());
+        final Link participantLink = new Link(TxLinkNames.PARTICIPANT_RESOURCE, TxLinkNames.PARTICIPANT_RESOURCE,
+                participantUrl, null, null);
+        final Link terminatorLink = new Link(TxLinkNames.PARTICIPANT_TERMINATOR, TxLinkNames.PARTICIPANT_TERMINATOR,
+                participantUrl, null, null);
+
+        try {
+            new ClientRequest(participantInformation.getRecoveryURL()).addLink(participantLink).addLink(terminatorLink).put();
+        } catch (Exception e) {
+            LOG.warn(e.getMessage(), e);
+        }
+    }
+
+    private String getParticipantUrl(final String participantId, String baseUrl) {
+        if (!baseUrl.substring(baseUrl.length() - 1).equals(""/"")) {
+            baseUrl += ""/"";
+        }
+
+        return baseUrl + ParticipantResource.BASE_PATH_SEGMENT + ""/"" + participantId;
+    }
+
+}",2013-05-28T09:15:31Z,210
"@@ -1,13 +1,11 @@
 package org.jboss.narayana.rest.integration.api;
 
-import java.io.Serializable;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
  *
  */
-public interface Participant extends Serializable {
+public interface Participant {
 
     Vote prepare();
 ",2013-05-28T09:15:31Z,211
"@@ -0,0 +1,30 @@
+package org.jboss.narayana.rest.integration.api;
+
+import java.io.ObjectInputStream;
+
+
+/**
+ *
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ *
+ */
+public interface ParticipantDeserializer {
+
+    /**
+     * Deserializes serializable participants.
+     *
+     *
+     * @param objectInputStream
+     * @return Participant instance if participant can be deserialized or null if not.
+     */
+    Participant deserialize(ObjectInputStream objectInputStream);
+
+    /**
+     * Recreates participant from byte array.
+     *
+     * @param recoveryState
+     * @return Participant instance if participant can be recreated or null if not.
+     */
+    Participant recreate(byte[] recoveryState);
+
+}",2013-05-28T09:15:31Z,212
"@@ -1,24 +1,52 @@
 package org.jboss.narayana.rest.integration.api;
 
-import org.jboss.jbossts.star.util.TxSupport;
-
-import com.arjuna.ats.arjuna.common.Uid;
-
 /**
  *
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
  *
  */
 public interface ParticipantsManager {
 
+    /**
+     * Returns the URL of the deployment which contains the ParticipantsManager.
+     *
+     * @return
+     */
     String getBaseUrl();
 
+    /**
+     * Set the URL of the deployment which contains the ParticipantsManager.
+     *
+     * NOTE: not needed if application is deployed to the WildFly and uses RTS subsystem.
+     *
+     * @param baseUrl
+     */
     void setBaseUrl(String baseUrl);
 
-    Uid enlist(String participantEnlistmentURL, Participant participant);
-
-    Uid enlist(TxSupport txSupport, Participant participant);
-
-    void reportHeuristic(Uid participantId, HeuristicType heuristicType);
+    /**
+     * Enlist participant to REST-AT transaction.
+     *
+     * @param applicationId Application ID unique in the container scope.
+     * @param participantEnlistmentURL Participant enlistment URL returned by the transaction manager after creating REST-AT transaction.
+     * @param participant Participant to be enlisted.
+     * @return Participant ID which can be later used to report heuristic decision.
+     */
+    String enlist(String applicationId, String participantEnlistmentURL, Participant participant);
+
+    /**
+     * Register ParticipantDeserializer instance which can be used during recovery to recreate participant instances.
+     *
+     * @param applicationId Application ID unique in the container scope.
+     * @param deserializer Instance of ParticipantDeserializer.
+     */
+    void registerDeserializer(String applicationId, ParticipantDeserializer deserializer);
+
+    /**
+     * Report heuristic decision.
+     *
+     * @param participantId Participant ID received after enlisting participant to the transaction.
+     * @param heuristicType Type of the heuristic.
+     */
+    void reportHeuristic(String participantId, HeuristicType heuristicType);
 
 }",2013-05-28T09:15:31Z,213
"@@ -0,0 +1,13 @@
+package org.jboss.narayana.rest.integration.api;
+
+/**
+ * Participants implementing this interface can write their state to the byte array which is later written to the object
+ * store for recovery.
+ *
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+public interface PersistableParticipant {
+
+    byte[] getRecoveryState();
+
+}",2013-05-28T09:15:31Z,214
"@@ -1,5 +1,6 @@
 package org.jboss.narayana.rest.integration.test.common;
 
+import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -11,7 +12,7 @@
  * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
  *
  */
-public final class LoggingParticipant implements Participant {
+public final class LoggingParticipant implements Participant, Serializable {
 
     private static final long serialVersionUID = 7584938841973602732L;
 
@@ -49,4 +50,8 @@ public List<String> getInvocations() {
         return invocations;
     }
 
+    public Vote getOutcome() {
+        return outcome;
+    }
+
 }",2013-05-28T09:15:31Z,215
"@@ -0,0 +1,36 @@
+package org.jboss.narayana.rest.integration.test.common;
+
+import org.jboss.narayana.rest.integration.api.Participant;
+import org.jboss.narayana.rest.integration.api.ParticipantDeserializer;
+
+import java.io.ObjectInputStream;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+public class TestParticipantDeserializer implements ParticipantDeserializer {
+
+    @Override
+    public Participant deserialize(ObjectInputStream objectInputStream) {
+        Object object = null;
+
+        try {
+            object = objectInputStream.readObject();
+        } catch (Exception e) {
+            e.printStackTrace();
+            return null;
+        }
+
+        if (object instanceof Participant) {
+            return (Participant) object;
+        }
+
+        return null;
+    }
+
+    @Override
+    public Participant recreate(byte[] recoveryState) {
+        return null;
+    }
+
+}",2013-05-28T09:15:31Z,216
"@@ -0,0 +1,71 @@
+package org.jboss.narayana.rest.integration.test.common;
+
+import javax.ws.rs.GET;
+import javax.ws.rs.POST;
+import javax.ws.rs.PUT;
+import javax.ws.rs.Path;
+import javax.ws.rs.QueryParam;
+import javax.ws.rs.core.Context;
+import javax.ws.rs.core.Response;
+import javax.ws.rs.core.UriInfo;
+
+import org.codehaus.jettison.json.JSONArray;
+import org.jboss.narayana.rest.integration.ParticipantInformation;
+import org.jboss.narayana.rest.integration.ParticipantsContainer;
+import org.jboss.narayana.rest.integration.api.Aborted;
+import org.jboss.narayana.rest.integration.api.ParticipantsManagerFactory;
+import org.jboss.narayana.rest.integration.api.Prepared;
+import org.jboss.narayana.rest.integration.api.ReadOnly;
+import org.jboss.narayana.rest.integration.api.Vote;
+
+/**
+ *
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ *
+ */
+@Path(""/"" + TransactionalService.PATH_SEGMENT)
+public final class TransactionalService {
+
+    public static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.common.TransactionalService"";
+
+    public static final String PATH_SEGMENT = ""transactional-service"";
+
+    @GET
+    public Response getParticipantInvocations(@QueryParam(""participantId"") final String participantId) {
+        ParticipantInformation information = ParticipantsContainer.getInstance().getParticipantInformation(participantId);
+
+        if (information == null) {
+            return Response.status(404).build();
+        }
+
+        final JSONArray jsonArray = new JSONArray(((LoggingParticipant)information.getParticipant()).getInvocations());
+
+        return Response.ok().entity(jsonArray.toString()).build();
+    }
+
+    @POST
+    public String enlistParticipant(@QueryParam(""participantEnlistmentUrl"") final String participantEnlistmentUrl,
+                                    @QueryParam(""vote"") final String stringVote, @Context final UriInfo uriInfo) {
+
+        final Vote vote = stringVoteToVote(stringVote);
+        final LoggingParticipant participant = new LoggingParticipant(vote);
+
+        return ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, participantEnlistmentUrl, participant).toString();
+    }
+
+    @PUT
+    public void registerDeserializer() {
+        ParticipantsManagerFactory.getInstance().registerDeserializer(APPLICATION_ID, new TestParticipantDeserializer());
+    }
+
+    private Vote stringVoteToVote(final String stringVote) {
+        if (Prepared.class.getName().equals(stringVote)) {
+            return new Prepared();
+        } else if (ReadOnly.class.getName().equals(stringVote)) {
+            return new ReadOnly();
+        }
+
+        return new Aborted();
+    }
+
+}
\ No newline at end of file",2013-05-28T09:15:31Z,217
"@@ -13,6 +13,7 @@
 import org.jboss.narayana.rest.integration.ParticipantResource;
 import org.jboss.narayana.rest.integration.ParticipantsContainer;
 import org.jboss.narayana.rest.integration.api.Aborted;
+import org.jboss.narayana.rest.integration.api.HeuristicType;
 import org.jboss.narayana.rest.integration.api.Participant;
 import org.jboss.narayana.rest.integration.api.Prepared;
 import org.jboss.narayana.rest.integration.api.ReadOnly;
@@ -39,13 +40,20 @@
  */
 public final class ParticipantResourceTestCase {
 
+    private static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.functional.ParticipantResourceTestCase"";
+
     private static final String BASE_URL = ""http://localhost:"" + TestPortProvider.getPort();
 
     private static final String PARTICIPANT_URL = BASE_URL + ""/"" + ParticipantResource.BASE_PATH_SEGMENT;
 
     private static NettyJaxrsServer NETTY;
 
-    private Uid participantId;
+    private String participantId;
+
+    @Test
+    public void simpleTest() {
+        System.out.println(HeuristicType.valueOf(""HEURISTIC_ROLLBACK""));
+    }
 
     @BeforeClass
     public static void beforeClass() {
@@ -68,7 +76,7 @@ public static void afterClass() {
 
     @Before
     public void before() {
-        participantId = new Uid();
+        participantId = new Uid().toString();
         ParticipantsContainer.getInstance().clear();
     }
 
@@ -305,43 +313,46 @@ public void testForgetHeuristicWithoutHeuristic() throws Exception {
         Assert.assertEquals(TxStatus.TransactionActive.name(), participantInformation.getStatus());
     }
 
-    private void registerParticipant(final Uid participantId, final Participant participant) throws MalformedURLException {
-        ParticipantInformation participantInformation = new ParticipantInformation(participantId, """", BASE_URL, participant);
+    private void registerParticipant(final String participantId, final Participant participant)
+            throws MalformedURLException {
+
+        ParticipantInformation participantInformation = new ParticipantInformation(participantId, APPLICATION_ID, """",
+                BASE_URL, participant);
         participantInformation.setStatus(TxStatus.TransactionActive.name());
         ParticipantsContainer.getInstance().addParticipantInformation(participantId, participantInformation);
     }
 
     @SuppressWarnings(""rawtypes"")
-    private ClientResponse getParticipantTerminator(final Uid participantId) throws Exception {
+    private ClientResponse getParticipantTerminator(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).head();
     }
 
-    private ClientResponse<String> getParticipantStatus(final Uid participantId) throws Exception {
+    private ClientResponse<String> getParticipantStatus(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).get(String.class);
     }
 
-    private ClientResponse<String> prepareParticipant(final Uid participantId) throws Exception {
+    private ClientResponse<String> prepareParticipant(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).body(TxMediaType.TX_STATUS_MEDIA_TYPE,
                 TxSupport.toStatusContent(TxStatus.TransactionPrepared.name())).put(String.class);
     }
 
-    private ClientResponse<String> commitParticipant(final Uid participantId) throws Exception {
+    private ClientResponse<String> commitParticipant(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).body(TxMediaType.TX_STATUS_MEDIA_TYPE,
                 TxSupport.toStatusContent(TxStatus.TransactionCommitted.name())).put(String.class);
     }
 
-    private ClientResponse<String> commitParticipantInOnePhase(final Uid participantId) throws Exception {
+    private ClientResponse<String> commitParticipantInOnePhase(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).body(TxMediaType.TX_STATUS_MEDIA_TYPE,
                 TxSupport.toStatusContent(TxStatus.TransactionCommittedOnePhase.name())).put(String.class);
     }
 
-    private ClientResponse<String> rollbackParticipant(final Uid participantId) throws Exception {
+    private ClientResponse<String> rollbackParticipant(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).body(TxMediaType.TX_STATUS_MEDIA_TYPE,
                 TxSupport.toStatusContent(TxStatus.TransactionRolledBack.name())).put(String.class);
     }
 
     @SuppressWarnings(""rawtypes"")
-    private ClientResponse forgetParticipantHeuristic(final Uid participantId) throws Exception {
+    private ClientResponse forgetParticipantHeuristic(final String participantId) throws Exception {
         return new ClientRequest(PARTICIPANT_URL + ""/"" + participantId).delete();
     }
 ",2013-05-28T09:15:31Z,218
"@@ -20,6 +20,8 @@
 
 public final class ParticipantsManagerTestCase {
 
+    private static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.functional.ParticipantResourceTestCase"";
+
     private ParticipantsManager participantsManager;
 
     @Before
@@ -43,7 +45,7 @@ public void testSetBaseUrl() {
 
     @Test
     public void testReportHeuristic() throws MalformedURLException {
-        final Uid participantId = new Uid();
+        final String participantId = new Uid().toString();
         registerParticipant(participantId, new LoggingParticipant(new Prepared()));
         final ParticipantInformation participantInformation = ParticipantsContainer.getInstance().getParticipantInformation(participantId);
         participantInformation.setStatus(TxStatus.TransactionPrepared.name());
@@ -53,8 +55,8 @@ public void testReportHeuristic() throws MalformedURLException {
         Assert.assertEquals(TxStatus.TransactionHeuristicRollback.name(), participantInformation.getStatus());
     }
 
-    private void registerParticipant(final Uid participantId, final Participant participant) throws MalformedURLException {
-        ParticipantInformation participantInformation = new ParticipantInformation(participantId, """", """", participant);
+    private void registerParticipant(final String participantId, final Participant participant) throws MalformedURLException {
+        ParticipantInformation participantInformation = new ParticipantInformation(participantId, APPLICATION_ID, """", """", participant);
         participantInformation.setStatus(TxStatus.TransactionActive.name());
         ParticipantsContainer.getInstance().addParticipantInformation(participantId, participantInformation);
     }",2013-05-28T09:15:31Z,219
"@@ -0,0 +1,69 @@
+package org.jboss.narayana.rest.integration.test.functional;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import junit.framework.Assert;
+import org.jboss.jbossts.star.util.TxStatus;
+import org.jboss.narayana.rest.integration.ParticipantInformation;
+import org.jboss.narayana.rest.integration.ParticipantsContainer;
+import org.jboss.narayana.rest.integration.RecoveryManager;
+import org.jboss.narayana.rest.integration.api.ParticipantsManagerFactory;
+import org.jboss.narayana.rest.integration.api.Prepared;
+import org.jboss.narayana.rest.integration.test.common.LoggingParticipant;
+import org.jboss.narayana.rest.integration.test.common.TestParticipantDeserializer;
+import org.junit.Test;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+public class RecoveryManagerTestCase {
+
+    private static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.functional.RecoveryManagerTestCase"";
+
+    @Test
+    public void testRecoveryWithExistingDeserializer() {
+        final String participantId = new Uid().toString();
+        final LoggingParticipant loggingParticipantBefore = new LoggingParticipant(new Prepared());
+        loggingParticipantBefore.commit();
+
+        final ParticipantInformation participantInformationBefore = new ParticipantInformation(participantId, APPLICATION_ID,
+                """", """", loggingParticipantBefore, TxStatus.TransactionCommitted.name());
+
+        ParticipantsContainer.getInstance().clear();
+        ParticipantsManagerFactory.getInstance().setBaseUrl("""");
+        RecoveryManager.getInstance().persistParticipantInformation(participantInformationBefore);
+        RecoveryManager.getInstance().registerDeserializer(APPLICATION_ID, new TestParticipantDeserializer());
+
+        final ParticipantInformation participantInformationAfter = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
+        Assert.assertEquals(participantInformationBefore.getApplicationId(), participantInformationAfter.getApplicationId());
+        Assert.assertEquals(participantInformationBefore.getBaseUrl(), participantInformationAfter.getBaseUrl());
+        Assert.assertEquals(participantInformationBefore.getStatus(), participantInformationAfter.getStatus());
+        Assert.assertEquals(participantInformationBefore.getRecoveryURL(), participantInformationAfter.getRecoveryURL());
+        Assert.assertEquals(participantInformationBefore.getId(), participantInformationAfter.getId());
+
+        final LoggingParticipant loggingParticipantAfter = (LoggingParticipant) participantInformationAfter.getParticipant();
+        Assert.assertEquals(loggingParticipantBefore.getInvocations(), loggingParticipantAfter.getInvocations());
+        Assert.assertTrue(loggingParticipantAfter.getOutcome() instanceof Prepared);
+
+    }
+
+    @Test
+    public void testRecoveryWithoutDeserializer() {
+        final String participantId = new Uid().toString();
+        final LoggingParticipant loggingParticipantBefore = new LoggingParticipant(new Prepared());
+        loggingParticipantBefore.commit();
+
+        final ParticipantInformation participantInformationBefore = new ParticipantInformation(participantId, APPLICATION_ID + ""1"",
+                """", """", loggingParticipantBefore, TxStatus.TransactionCommitted.name());
+
+        ParticipantsContainer.getInstance().clear();
+        ParticipantsManagerFactory.getInstance().setBaseUrl("""");
+        RecoveryManager.getInstance().persistParticipantInformation(participantInformationBefore);
+        RecoveryManager.getInstance().registerDeserializer(APPLICATION_ID + ""2"", new TestParticipantDeserializer());
+
+        final ParticipantInformation participantInformationAfter = ParticipantsContainer.getInstance()
+                .getParticipantInformation(participantId);
+        Assert.assertNull(participantInformationAfter);
+    }
+
+}",2013-05-28T09:15:31Z,220
"@@ -28,8 +28,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import com.arjuna.ats.arjuna.common.Uid;
-
 /**
  *
  * TODO implement test for heuristics after prepare.
@@ -40,6 +38,8 @@
 @RunWith(Arquillian.class)
 public final class BasicIntegrationTestCase extends AbstractIntegrationTestCase {
 
+    private static final String APPLICATION_ID = ""org.jboss.narayana.rest.integration.test.integration.BasicIntegrationTestCase"";
+
     private static final String DEPENDENCIES = ""Dependencies: org.jboss.narayana.rts\n"";
 
     @Deployment(name = DEPLOYMENT_NAME, managed = false, testable = true)
@@ -66,8 +66,8 @@ public void testCommit() {
         LoggingParticipant participant1 = new LoggingParticipant(new Prepared());
         LoggingParticipant participant2 = new LoggingParticipant(new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, participant1);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, participant2);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), participant1);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), participant2);
 
         txSupport.commitTx();
 
@@ -81,7 +81,8 @@ public void testCommitOnePhase() {
 
         LoggingParticipant participant = new LoggingParticipant(new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, participant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                participant);
 
         txSupport.commitTx();
 
@@ -97,7 +98,7 @@ public void testReadOnly() {
                 new LoggingParticipant(new Prepared()) });
 
         for (LoggingParticipant p : participants) {
-            ParticipantsManagerFactory.getInstance().enlist(txSupport, p);
+            ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), p);
         }
 
         txSupport.commitTx();
@@ -122,8 +123,8 @@ public void testRollback() {
         LoggingParticipant participant1 = new LoggingParticipant(new Prepared());
         LoggingParticipant participant2 = new LoggingParticipant(new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, participant1);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, participant2);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), participant1);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), participant2);
 
         txSupport.rollbackTx();
 
@@ -139,7 +140,7 @@ public void testRollbackByParticipant() {
                 new LoggingParticipant(new Aborted()), new LoggingParticipant(new Aborted()), });
 
         for (LoggingParticipant p : participants) {
-            ParticipantsManagerFactory.getInstance().enlist(txSupport, p);
+            ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), p);
         }
 
         txSupport.commitTx();
@@ -163,10 +164,11 @@ public void testHeuristicRollbackBeforePrepare() throws JAXBException {
         final List<LoggingParticipant> participants = Arrays.asList(new LoggingParticipant[] {
                 new LoggingParticipant(new Prepared()), new LoggingParticipant(new Prepared()) });
 
-        Uid lastParticipantid = null;
+        String lastParticipantid = null;
 
         for (LoggingParticipant p : participants) {
-            lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(txSupport, p);
+            lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID,
+                    txSupport.getDurableParticipantEnlistmentURI(), p);
         }
 
         ParticipantsManagerFactory.getInstance().reportHeuristic(lastParticipantid, HeuristicType.HEURISTIC_ROLLBACK);
@@ -189,10 +191,11 @@ public void testSecondParticipantHeuristicCommitWithFirstParticipantSuccessfullP
         final List<LoggingParticipant> participants = Arrays.asList(new LoggingParticipant[] {
                 new LoggingParticipant(new Prepared()), new LoggingParticipant(new Prepared()) });
 
-        Uid lastParticipantid = null;
+        String lastParticipantid = null;
 
         for (LoggingParticipant p : participants) {
-            lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(txSupport, p);
+            lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(
+                    APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), p);
         }
 
         ParticipantsManagerFactory.getInstance().reportHeuristic(lastParticipantid, HeuristicType.HEURISTIC_COMMIT);
@@ -211,8 +214,10 @@ public void testSecondParticipantHeuristicCommitWithFirstParticipantUnsuccessful
         LoggingParticipant loggingParticipant1 = new LoggingParticipant(new Aborted());
         LoggingParticipant loggingParticipant2 = new LoggingParticipant(new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant1);
-        Uid lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant2);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                loggingParticipant1);
+        String lastParticipantid = ParticipantsManagerFactory.getInstance().enlist(
+                APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(), loggingParticipant2);
 
         ParticipantsManagerFactory.getInstance().reportHeuristic(lastParticipantid, HeuristicType.HEURISTIC_COMMIT);
 
@@ -232,8 +237,10 @@ public void testHeuristicCommitAfterSuccessfullPrepare() {
         LoggingParticipant loggingParticipant = new LoggingParticipant(new Prepared());
         HeuristicParticipant heuristicParticipant = new HeuristicParticipant(HeuristicType.HEURISTIC_COMMIT, new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, heuristicParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                loggingParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                heuristicParticipant);
 
         final String transactionStatus = TxSupport.getStatus(txSupport.commitTx());
 
@@ -249,8 +256,10 @@ public void testHeuristicCommitAfterUnsuccessfullPrepare() {
         LoggingParticipant loggingParticipant = new LoggingParticipant(new Aborted());
         HeuristicParticipant heuristicParticipant = new HeuristicParticipant(HeuristicType.HEURISTIC_COMMIT, new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, heuristicParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                loggingParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                heuristicParticipant);
 
         final String transactionStatus = TxSupport.getStatus(txSupport.commitTx());
 
@@ -266,8 +275,10 @@ public void testHeuristicRollbackAfterSuccessfullPrepare() {
         LoggingParticipant loggingParticipant = new LoggingParticipant(new Prepared());
         HeuristicParticipant heuristicParticipant = new HeuristicParticipant(HeuristicType.HEURISTIC_ROLLBACK, new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, heuristicParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                loggingParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                heuristicParticipant);
 
         final String transactionStatus = TxSupport.getStatus(txSupport.commitTx());
 
@@ -283,8 +294,10 @@ public void testHeuristicRollbackAfterUnsuccessfullPrepare() {
         LoggingParticipant loggingParticipant = new LoggingParticipant(new Aborted());
         HeuristicParticipant heuristicParticipant = new HeuristicParticipant(HeuristicType.HEURISTIC_ROLLBACK, new Prepared());
 
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, loggingParticipant);
-        ParticipantsManagerFactory.getInstance().enlist(txSupport, heuristicParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                loggingParticipant);
+        ParticipantsManagerFactory.getInstance().enlist(APPLICATION_ID, txSupport.getDurableParticipantEnlistmentURI(),
+                heuristicParticipant);
 
         final String transactionStatus = TxSupport.getStatus(txSupport.commitTx());
 ",2013-05-28T09:15:31Z,221
"@@ -0,0 +1,108 @@
+package org.jboss.narayana.rest.integration.test.integration;
+
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.star.provider.HttpResponseException;
+import org.jboss.jbossts.star.util.media.txstatusext.TransactionStatusElement;
+import org.jboss.narayana.rest.integration.api.Prepared;
+import org.jboss.narayana.rest.integration.api.Vote;
+import org.jboss.narayana.rest.integration.test.common.LoggingParticipant;
+import org.jboss.narayana.rest.integration.test.common.TransactionalService;
+import org.jboss.resteasy.client.ClientRequest;
+import org.jboss.resteasy.client.ClientResponse;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.After;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.io.File;
+
+/**
+ * @author <a href=""mailto:gytis@redhat.com"">Gytis Trikleris</a>
+ */
+@RunWith(Arquillian.class)
+public final class RecoveryIntegrationTestCase extends AbstractIntegrationTestCase {
+
+    private static final String DEPENDENCIES = ""Dependencies: org.jboss.narayana.rts,org.jboss.jts,org.codehaus.jettison\n"";
+
+    private static final int RECOVERY_PERIOD = 2;
+
+    private static final int RECOVERY_WAIT_CYCLES = 5;
+
+    private static final String VM_ARGUMENTS = ""-Xms64m -Xmx512m -XX:MaxPermSize=256m -Dcom.arjuna.ats.arjuna.recovery.periodicRecoveryPeriod=""
+            + RECOVERY_PERIOD;
+
+    private static final String BYTEMAN_ARGUMENTS = ""-Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:lib/byteman.jar=script:scripts/@BMScript@.btm,boot:lib/byteman.jar,listener:true"";
+
+    @Deployment(name = DEPLOYMENT_NAME, managed = false, testable = false)
+    public static WebArchive getDeployment() {
+        return ShrinkWrap.create(WebArchive.class, DEPLOYMENT_NAME + "".war"")
+                .addPackages(false, LoggingParticipant.class.getPackage()).addAsWebInfResource(new File(""web.xml""), ""web.xml"")
+                .addAsManifestResource(new StringAsset(DEPENDENCIES), ""MANIFEST.MF"");
+    }
+
+    @After
+    public void after() {
+        super.after();
+        stopContainer();
+    }
+
+    @Test
+    public void testCommit() throws Exception {
+        startContainer(VM_ARGUMENTS + "" "" + BYTEMAN_ARGUMENTS.replace(""@BMScript@"", ""CrashBeforeCommit""));
+
+        txSupport.startTx();
+
+        enlistParticipant(txSupport.getDurableParticipantEnlistmentURI(), new Prepared());
+        enlistParticipant(txSupport.getDurableParticipantEnlistmentURI(), new Prepared());
+
+        Assert.assertEquals(2, txSupport.getTransactionInfo().getTwoPhaseAware().size());
+
+        try {
+            // JVM is killed here.
+            txSupport.commitTx();
+        } catch (HttpResponseException e) {
+        }
+
+        restartContainer(VM_ARGUMENTS);
+        registerDeserializer();
+
+        TransactionStatusElement status;
+        int cycles = 0;
+
+        do {
+            Thread.sleep(RECOVERY_PERIOD * 2000);
+            status = null;
+            try {
+                // Updates coordinator's active transactions list
+                txSupport.getTransactions();
+                // After successful recovery transaction is removed and 404 is returned.
+                status = txSupport.getTransactionInfo().getStatus();
+            } catch (HttpResponseException e) {
+            }
+        } while (status != null && cycles++ < RECOVERY_WAIT_CYCLES);
+
+        if (status != null) {
+            Assert.fail(""Recovery failed"");
+        }
+    }
+
+    private void enlistParticipant(final String enlistmentUrl, final Vote vote) throws Exception {
+        ClientResponse<String> clientResponse = new ClientRequest(DEPLOYMENT_URL + ""/"" + TransactionalService.PATH_SEGMENT)
+                .queryParameter(""participantEnlistmentUrl"", enlistmentUrl).queryParameter(""vote"", vote.getClass().getName())
+                .post(String.class);
+
+        Assert.assertEquals(200, clientResponse.getStatus());
+    }
+
+    private void registerDeserializer() throws Exception {
+        ClientResponse<String> clientResponse = new ClientRequest(DEPLOYMENT_URL + ""/"" + TransactionalService.PATH_SEGMENT)
+                .put(String.class);
+
+        Assert.assertEquals(204, clientResponse.getStatus());
+    }
+
+}",2013-05-28T09:15:31Z,222
"@@ -38,6 +38,7 @@
   </build>
   <modules>
     <module>jta</module>
+    <module>spi</module>
     <module>cdi</module>
     <module>jdbc</module>
     <module>narayana-jta</module>",2013-09-17T09:24:53Z,223
"@@ -0,0 +1,206 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!--
+  JBoss, Home of Professional Open Source.
+  Copyright 2013, Red Hat, Inc., and individual contributors
+  as indicated by the @author tags. See the copyright.txt file in the
+  distribution for a full listing of individual contributors.
+
+  This is free software; you can redistribute it and/or modify it
+  under the terms of the GNU Lesser General Public License as
+  published by the Free Software Foundation; either version 2.1 of
+  the License, or (at your option) any later version.
+
+  This software is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+  Lesser General Public License for more details.
+
+  You should have received a copy of the GNU Lesser General Public
+  License along with this software; if not, write to the Free
+  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+  02110-1301 USA, or see the FSF site: http://www.fsf.org.
+-->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.jta</groupId>
+        <artifactId>narayana-jta-all</artifactId>
+        <version>5.0.0.M5-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>jboss-transaction-spi-tests</artifactId>
+    <name>Narayana: Transaction 7.0.2 SPI Testing</name>
+    <description>Narayana: Transaction 7.0.2 SPI Testing</description>
+
+    <packaging>jar</packaging>
+
+    <properties>
+        <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1]
+            -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true
+        </ipv6.server.jvm.args>
+    </properties>
+
+    <build>
+        <plugins>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss</groupId>
+            <artifactId>jboss-transaction-spi</artifactId>
+            <version>${version.org.jboss.jboss-transaction-spi}</version>
+            <scope>provided</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.jboss.logging</groupId>
+                    <artifactId>jboss-logging-spi</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.interceptor</groupId>
+            <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.interceptor}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.transaction</groupId>
+            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.transaction}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>${version.junit}</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.arquillian.protocol</groupId>
+            <artifactId>arquillian-protocol-servlet</artifactId>
+            <version>${version.org.jboss.arquillian.core}</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>javax.enterprise</groupId>
+            <artifactId>cdi-api</artifactId>
+            <version>${version.javax.enterprise}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.arquillian.junit</groupId>
+            <artifactId>arquillian-junit-container</artifactId>
+            <version>${version.org.jboss.arquillian.core}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>javax.annotation</groupId>
+            <artifactId>javax.annotation-api</artifactId>
+            <version>${version.javax.annotation}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.ejb</groupId>
+            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.ejb}</version>
+            <scope>provided</scope>
+        </dependency>
+    </dependencies>
+
+    <profiles>
+        <profile>
+            <id>arq</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-managed</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                            <systemPropertyVariables combine.children=""append"">
+                                <!--
+                                    Used in arquillian.xml
+                                -->
+                                <server.jvm.args>${jvm.args.other} ${jvm.args.memory}</server.jvm.args>
+                                <node.address>127.0.0.1</node.address>
+                            </systemPropertyVariables>
+                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+        <profile>
+            <id>arqIPv6</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-managed</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                            <argLine>${ipv6.server.jvm.args}</argLine>
+                            <systemPropertyVariables combine.children=""append"">
+                                <!--
+                                    Used in arquillian.xml
+                                -->
+                                <server.jvm.args>${jvm.args.other} ${jvm.args.memory} ${ipv6.server.jvm.args}</server.jvm.args>
+                                <node.address>[::1]</node.address>
+                            </systemPropertyVariables>
+                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+        <profile>
+            <id>arq-remote</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-remote</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+        </profile>
+    </profiles>
+</project>",2013-09-17T09:24:53Z,28
"@@ -0,0 +1,118 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2013, Red Hat Inc., and individual contributors as indicated
+ * by the @authors tag. See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.tm;
+
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import javax.annotation.Resource;
+import javax.inject.Inject;
+import javax.transaction.*;
+import org.jboss.tm.TxUtils;
+
+/**
+ * Transaction SPI integration tests
+ */
+@RunWith(Arquillian.class)
+public class TestSPI {
+    @Resource(lookup = ""java:jboss/TransactionManager"")
+    private javax.transaction.TransactionManager transactionManager;
+
+    @Deployment
+    public static WebArchive createTestArchive() {
+
+        return ShrinkWrap.create(WebArchive.class, ""test.war"")
+                .addPackage(""org.jboss.tm"")
+                .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml"");
+    }
+
+    @Test
+    public void sanityCheck() {
+        Assert.assertTrue(Boolean.TRUE);
+    }
+
+    @Test
+    public void testTimeouts() throws Exception {
+        Transaction oldTxn = null;
+        final int SLEEP = 5;
+        final int timeout = 2;
+        final boolean[] afterCompletionViaTMTimeoutThread = {false};
+
+        try {
+            oldTxn = transactionManager.suspend();
+            transactionManager.setTransactionTimeout(timeout);
+            transactionManager.begin();
+
+            Transaction newTxn = transactionManager.getTransaction();
+
+            newTxn.registerSynchronization(new Synchronization() {
+                @Override
+                public void beforeCompletion() {
+                }
+
+                @Override
+                public void afterCompletion(int status) {
+                    System.out.printf(""afterCompletion callback. Txn Status=%d%n"", status);
+                    afterCompletionViaTMTimeoutThread[0] = TxUtils.isTransactionManagerTimeoutThread();
+                    Assert.assertTrue(""afterCompletion synchronization not called via TransactionManagerTimeoutThread"",
+                            afterCompletionViaTMTimeoutThread[0]);
+                }
+            });
+
+            Thread.sleep(SLEEP * 1000); // sleep for longer than the transaction timeout period
+            int status = transactionManager.getStatus();
+
+            Assert.assertTrue(""ERROR transaction should have timed out but its state is "" + status,
+                    status == Status.STATUS_ROLLEDBACK);
+
+            transactionManager.commit();
+
+            Assert.assertTrue(""testTimeouts synchronization was not invoked"", afterCompletionViaTMTimeoutThread[0]);
+        } catch (RollbackException e) {
+            // SUCCESS: rollback exception expected
+            // any other exception is a failure
+        } finally {
+            try {
+                if (transactionManager.getStatus() == Status.STATUS_ACTIVE)
+                    transactionManager.rollback();
+            } catch (SystemException e) {
+                System.err.printf(""testTimeouts: cleanup exception %s%n"", e.getMessage());
+            }
+            if (oldTxn != null) {
+                try {
+                    transactionManager.resume(oldTxn);
+                } catch (SystemException e) {
+                    System.err.printf(""testTimeouts: resume exception %s%n"", e.getMessage());
+                } catch (InvalidTransactionException e) {
+                    System.err.printf(""testTimeouts: resume exception %s%n"", e.getMessage());
+                }
+            }
+        }
+
+    }
+}",2013-09-17T09:24:53Z,224
"@@ -474,7 +474,7 @@
     <version.org.jboss.arquillian.core>1.0.3.Final</version.org.jboss.arquillian.core>
     <version.javax.annotation>1.2-b04</version.javax.annotation>
     <version.org.jboss.arquillian.osgi>2.0.0.CR2</version.org.jboss.arquillian.osgi>
-    <version.org.jboss.jboss-transaction-spi>7.0.1.Final</version.org.jboss.jboss-transaction-spi>
+    <version.org.jboss.jboss-transaction-spi>7.0.2.Final</version.org.jboss.jboss-transaction-spi>
 
     <!-- Maven plugin versions -->
     <version.org.eclipse.m2e.lifecycle-mapping>1.0.0</version.org.eclipse.m2e.lifecycle-mapping>",2013-09-17T09:24:53Z,39
"@@ -47,6 +47,7 @@
 
 import com.arjuna.ats.arjuna.common.Uid;
 import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
+import com.arjuna.ats.arjuna.logging.tsLogger;
 import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
 import com.arjuna.ats.arjuna.objectstore.StateStatus;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
@@ -71,7 +72,6 @@
 
 public class XARecoveryModule implements RecoveryModule
 {
-
 	public XARecoveryModule()
 	{
 		this(new com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryResourceManagerImple(),
@@ -91,6 +91,15 @@ public void addXAResourceRecoveryHelper(XAResourceRecoveryHelper xaResourceRecov
 
     public void removeXAResourceRecoveryHelper(XAResourceRecoveryHelper xaResourceRecoveryHelper) {
         synchronized (_xaResourceRecoveryHelpers) {
+			if (scanning) {
+				try {
+					// do not allow a recovery helper to be removed while the
+					// scan is in progress
+					_xaResourceRecoveryHelpers.wait();
+				} catch (InterruptedException e) {
+					tsLogger.logger.warn(""problem waiting for scanLock"", e);
+				}
+			}
             _xaResourceRecoveryHelpers.remove(xaResourceRecoveryHelper);
         }
     }
@@ -121,8 +130,12 @@ public List<SerializableXAResourceDeserializer> getSeriablizableXAResourceDeseri
 	public synchronized void periodicWorkFirstPass()
 	{
 		// JBTM-1354 allow a second thread to execute the first pass but make sure it is only done once per scan (TMSTART/ENDSCAN)
-		if (!requireFirstPass) {
-			return;
+		synchronized (_xaResourceRecoveryHelpers) {
+			if (scanning) {
+				return;
+			} else {
+				scanning = true;
+			}
 		}
         if(jtaLogger.logger.isDebugEnabled()) {
             jtaLogger.logger.debugv(""{0} - first pass"", _logName);
@@ -160,17 +173,11 @@ public synchronized void periodicWorkFirstPass()
 		List<XAResource> resources = new ArrayList<XAResource>(_resources);
 		for (XAResource xaResource : resources) {
 			try {
-				// This calls out to remote systems and may block. Consider
-				// using alternate concurrency
-				// control rather than sync on __xaResourceRecoveryHelpers
-				// to
-				// avoid blocking problems?
 				xaRecoveryFirstPass(xaResource);
 			} catch (Exception ex) {
 				jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
 			}
 		}
-		requireFirstPass = false;
 	}
 
 	public void periodicWorkSecondPass()
@@ -205,8 +212,9 @@ public void periodicWorkSecondPass()
 
 		clearAllFailures();
 
-		synchronized (this) {
-			requireFirstPass = true;
+		synchronized (_xaResourceRecoveryHelpers) {
+			scanning = false;
+			_xaResourceRecoveryHelpers.notify();
 		}
 	}
 
@@ -409,11 +417,6 @@ record = _recoveryManagerClass.getResource(theUid);
     private void bottomUpRecovery() {
 			for (XAResource xaResource : _resources) {
 				try {
-					// This calls out to remote systems and may block. Consider
-					// using alternate concurrency
-					// control rather than sync on __xaResourceRecoveryHelpers
-					// to
-					// avoid blocking problems?
 					xaRecoverySecondPass(xaResource);
 				} catch (Exception ex) {
 					jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
@@ -896,7 +899,7 @@ private void clearAllFailures()
 
 	private List<XAResource> _resources;
 
-	private boolean requireFirstPass = true;
+	private boolean scanning;
 
 	private final List<XAResourceRecovery> _xaRecoverers;
 ",2013-09-26T07:28:33Z,18
"@@ -55,7 +55,7 @@ public interface JDBCAccess
      * @throws NamingException 
      */
 
-    public Connection getConnection () throws SQLException, NamingException;
+    public Connection getConnection () throws SQLException;
 
     /**
      * This method can be used to pass additional information to the",2013-08-22T09:46:40Z,58
"@@ -57,8 +57,9 @@
 
 public abstract class JDBCImple_driver {
 
-	protected static ThreadLocal<Connection> connection;
+	// protected Connection connection;
 	protected String tableName;
+	private JDBCAccess jdbcAccess;
 
 	public boolean commit_state(Uid objUid, String typeName)
 			throws ObjectStoreException {
@@ -70,13 +71,12 @@ public boolean commit_state(Uid objUid, String typeName)
 		PreparedStatement pstmt = null;
 		PreparedStatement pstmt2 = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			// Delete any previously committed state
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""DELETE FROM ""
-									+ tableName
-									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+					.prepareStatement(""DELETE FROM ""
+							+ tableName
+							+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -90,23 +90,22 @@ public boolean commit_state(Uid objUid, String typeName)
 
 			// now do the commit itself:
 			pstmt2 = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
-									+ StateStatus.OS_UNCOMMITTED);
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
+							+ StateStatus.OS_UNCOMMITTED);
 
 			pstmt2.setString(1, objUid.stringForm());
 			pstmt2.setString(2, typeName);
 
 			int rowcount2 = pstmt2.executeUpdate();
 			if (rowcount2 > 0) {
 				result = true;
-				connection.get().commit();
+				connection.commit();
 			} else {
-				connection.get().rollback();
+				connection.rollback();
 			}
+			connection.close();
 
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -139,12 +138,11 @@ public boolean hide_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 1 WHERE UidString = ? AND TypeName = ? AND Hidden = 0"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -153,7 +151,8 @@ public boolean hide_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_1(e);
 		} finally {
@@ -178,12 +177,11 @@ public boolean reveal_state(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
+			Connection connection = jdbcAccess.getConnection();
 			pstmt = connection
-					.get()
-					.prepareStatement(
-							""UPDATE ""
-									+ tableName
-									+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
+					.prepareStatement(""UPDATE ""
+							+ tableName
+							+ "" SET Hidden = 0 WHERE UidString = ? AND TypeName = ? AND Hidden = 1"");
 
 			pstmt.setString(1, objUid.stringForm());
 			pstmt.setString(2, typeName);
@@ -192,7 +190,8 @@ public boolean reveal_state(Uid objUid, String typeName)
 			if (rowcount > 0) {
 				result = true;
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_2(e);
 		} finally {
@@ -223,8 +222,10 @@ public int currentState(Uid objUid, String typeName)
 
 		PreparedStatement pstmt = null;
 		try {
-			pstmt = connection.get().prepareStatement(
-					""SELECT StateType, Hidden FROM "" + tableName
+			Connection connection = jdbcAccess.getConnection();
+			pstmt = connection
+					.prepareStatement(""SELECT StateType, Hidden FROM ""
+							+ tableName
 							+ "" WHERE UidString = ? AND TypeName = ?"");
 
 			pstmt.setString(1, objUid.stringForm());
@@ -261,7 +262,8 @@ public int currentState(Uid objUid, String typeName)
 					break;
 				}
 			}
-			connection.get().commit();
+			connection.commit();
+			connection.close();
 
 			// examine in reverse order:
 			if (have_OS_COMMITTED_HIDDEN) {
@@ -311,7 +313,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -339,7 +342,8 @@ public boolean allObjUids(String typeName, InputObjectState state, int match)
 						finished = true;
 					}
 				}
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_4(e);
 			} finally {
@@ -368,7 +372,8 @@ public boolean allTypes(InputObjectState foundTypes)
 		try {
 			OutputObjectState store = new OutputObjectState();
 
-			Statement stmt = connection.get().createStatement();
+			Connection connection = jdbcAccess.getConnection();
+			Statement stmt = connection.createStatement();
 			ResultSet rs = null;
 
 			try {
@@ -395,7 +400,8 @@ public boolean allTypes(InputObjectState foundTypes)
 					}
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 			} catch (Exception e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_6(e);
 			} finally {
@@ -428,12 +434,11 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 
 				PreparedStatement pstmt = null;
 				try {
+					Connection connection = jdbcAccess.getConnection();
 					pstmt = connection
-							.get()
-							.prepareStatement(
-									""DELETE FROM ""
-											+ tableName
-											+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+							.prepareStatement(""DELETE FROM ""
+									+ tableName
+									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
 					pstmt.setString(1, objUid.stringForm());
 					pstmt.setString(2, typeName);
@@ -443,7 +448,8 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 						result = true;
 					}
 
-					connection.get().commit();
+					connection.commit();
+					connection.close();
 				} catch (SQLException e) {
 					tsLogger.i18NLogger.warn_objectstore_JDBCImple_8(e);
 				} finally {
@@ -480,19 +486,16 @@ public InputObjectState read_state(Uid objUid, String typeName,
 
 			PreparedStatement pstmt = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
-						.prepareStatement(
-								""SELECT ObjectState FROM ""
-										+ tableName
-										+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+						.prepareStatement(""SELECT ObjectState FROM ""
+								+ tableName
+								+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 				pstmt.setString(1, objUid.stringForm());
 				pstmt.setString(2, typeName);
 				pstmt.setInt(3, stateType);
 
 				rs = pstmt.executeQuery();
-
-				connection.get().commit();
 				if (rs.next()) {
 
 					byte[] buffer = rs.getBytes(1);
@@ -504,6 +507,9 @@ public InputObjectState read_state(Uid objUid, String typeName,
 								.warn_objectstore_JDBCImple_readfailed();
 					}
 				}
+
+				connection.commit();
+				connection.close();
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_14(e);
 			} finally {
@@ -546,8 +552,8 @@ public boolean write_state(Uid objUid, String typeName,
 			PreparedStatement pstmt = null;
 			PreparedStatement pstmt2 = null;
 			try {
+				Connection connection = jdbcAccess.getConnection();
 				pstmt = connection
-						.get()
 						.prepareStatement(
 								""SELECT ObjectState, UidString, StateType, TypeName FROM ""
 										+ tableName
@@ -565,14 +571,12 @@ public boolean write_state(Uid objUid, String typeName,
 					updateBytes(rs, 1, b);
 					rs.updateRow();
 				} else {
-					connection.get().commit();
+					// TODO connection.get().commit();
 					// not in database, do insert:
 					pstmt2 = connection
-							.get()
-							.prepareStatement(
-									""INSERT INTO ""
-											+ tableName
-											+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
+							.prepareStatement(""INSERT INTO ""
+									+ tableName
+									+ "" (StateType,Hidden,TypeName,UidString,ObjectState) VALUES (?,0,?,?,?)"");
 
 					pstmt2.setInt(1, stateType);
 					pstmt2.setString(2, typeName);
@@ -582,7 +586,8 @@ public boolean write_state(Uid objUid, String typeName,
 					pstmt2.executeUpdate();
 				}
 
-				connection.get().commit();
+				connection.commit();
+				connection.close();
 				result = true;
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
@@ -623,28 +628,31 @@ public boolean write_state(Uid objUid, String typeName,
 	public void initialise(final JDBCAccess jdbcAccess, String tableName,
 			ObjectStoreEnvironmentBean jdbcStoreEnvironmentBean)
 			throws SQLException, NamingException {
+		this.jdbcAccess = jdbcAccess;
 
-		connection = new ThreadLocal<Connection>() {
+		// connection = new ThreadLocal<Connection>() {
+		//
+		// @Override
+		// protected Connection initialValue() {
+		// try {
+		// return jdbcAccess.getConnection();
+		// } catch (Exception e) {
+		// throw new RuntimeException(e);
+		// }
+		// }
+		// };
 
-			@Override
-			protected Connection initialValue() {
-				try {
-					return jdbcAccess.getConnection();
-				} catch (Exception e) {
-					throw new RuntimeException(e);
-				}
-			}
-		};
+		Connection connection = jdbcAccess.getConnection();
 
-		Statement stmt = connection.get().createStatement();
+		Statement stmt = connection.createStatement();
 
 		// table [type, object UID, format, blob]
 
 		if (jdbcStoreEnvironmentBean.getDropTable()) {
 			try {
 				stmt.executeUpdate(""DROP TABLE "" + tableName);
 			} catch (SQLException ex) {
-				checkDropTableException(ex);
+				checkDropTableException(connection, ex);
 			}
 		}
 
@@ -659,9 +667,11 @@ protected Connection initialValue() {
 		stmt.close();
 
 		// This can be the case when triggering via EmptyObjectStore
-		if (!connection.get().getAutoCommit()) {
-			connection.get().commit();
+		if (!connection.getAutoCommit()) {
+			connection.commit();
 		}
+		connection.close();
+
 		this.tableName = tableName;
 	}
 
@@ -687,7 +697,7 @@ protected String getObjectStateSQLType() {
 	protected abstract void checkCreateTableError(SQLException ex)
 			throws SQLException;
 
-	protected abstract void checkDropTableException(SQLException ex)
+	protected abstract void checkDropTableException(Connection connection, SQLException ex)
 			throws SQLException;
 
 	public int getMaxStateSize() {",2013-08-22T09:46:40Z,59
"@@ -44,11 +44,11 @@
 
 public class DataSourceJDBCAccess implements JDBCAccess {
 
+	private DataSource dataSource;
 	private String datasourceName;
 
-	public Connection getConnection() throws SQLException, NamingException {
-		Connection connection = ((DataSource) new InitialContext()
-				.lookup(datasourceName)).getConnection();
+	public Connection getConnection() throws SQLException {
+		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;
 	}
@@ -69,6 +69,12 @@ public void initialise(StringTokenizer tokenizer) {
 			throw new FatalError(
 					""The JDBC ObjectStore was not configured with a datasource name"");
 		}
+		
+		try {
+			InitialContext context = new InitialContext();
+			dataSource = (DataSource) context.lookup(datasourceName);
+		} catch (NamingException ex) {
+			throw new FatalError(toString() + "" : "" + ex, ex);
+		}
 	}
-
 }",2013-08-22T09:46:40Z,60
"@@ -39,7 +39,6 @@
 import java.util.Map;
 import java.util.StringTokenizer;
 
-import javax.naming.NamingException;
 import javax.sql.DataSource;
 
 import com.arjuna.ats.arjuna.exceptions.FatalError;
@@ -48,7 +47,7 @@
 public class DynamicDataSourceJDBCAccess implements JDBCAccess {
 	private DataSource dataSource;
 
-	public Connection getConnection() throws SQLException, NamingException {
+	public Connection getConnection() throws SQLException {
 		Connection connection = dataSource.getConnection();
 		connection.setAutoCommit(false);
 		return connection;",2013-08-22T09:46:40Z,61
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,7 +39,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,62
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -42,7 +43,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42704"") && ex.getErrorCode() != -204) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,63
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,64
"@@ -37,6 +37,7 @@
 
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -59,7 +60,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""S0005"") && ex.getErrorCode() != 3701) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,65
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 /**
@@ -43,7 +44,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42S02"")) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,66
"@@ -42,6 +42,7 @@
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
 import java.sql.Blob;
+import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.SQLException;
 
@@ -76,7 +77,8 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42000"") && ex.getErrorCode() != 942) {
 			throw ex;
 		}",2013-08-22T09:46:40Z,67
"@@ -20,6 +20,7 @@
  */
 package com.arjuna.ats.internal.arjuna.objectstore.jdbc.drivers;
 
+import java.sql.Connection;
 import java.sql.SQLException;
 
 import com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCImple_driver;
@@ -38,13 +39,14 @@ protected void checkCreateTableError(SQLException ex) throws SQLException {
 	}
 
 	@Override
-	protected void checkDropTableException(SQLException ex) throws SQLException {
+	protected void checkDropTableException(Connection connection,
+			SQLException ex) throws SQLException {
 		if (!ex.getSQLState().equals(""42P01"")) {
 			throw ex;
 		} else {
 			// For some reason PSQL leaves the transaction in a bad state on a
 			// failed drop
-			connection.get().commit();
+			connection.commit();
 		}
 	}
 }",2013-08-22T09:46:40Z,68
"@@ -38,6 +38,7 @@
   </build>
   <modules>
     <module>jta</module>
+    <module>spi</module>
     <module>cdi</module>
     <module>jdbc</module>
     <module>narayana-jta</module>",2013-09-17T09:24:53Z,223
"@@ -0,0 +1,206 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!--
+  JBoss, Home of Professional Open Source.
+  Copyright 2013, Red Hat, Inc., and individual contributors
+  as indicated by the @author tags. See the copyright.txt file in the
+  distribution for a full listing of individual contributors.
+
+  This is free software; you can redistribute it and/or modify it
+  under the terms of the GNU Lesser General Public License as
+  published by the Free Software Foundation; either version 2.1 of
+  the License, or (at your option) any later version.
+
+  This software is distributed in the hope that it will be useful,
+  but WITHOUT ANY WARRANTY; without even the implied warranty of
+  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+  Lesser General Public License for more details.
+
+  You should have received a copy of the GNU Lesser General Public
+  License along with this software; if not, write to the Free
+  Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+  02110-1301 USA, or see the FSF site: http://www.fsf.org.
+-->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.jta</groupId>
+        <artifactId>narayana-jta-all</artifactId>
+        <version>5.0.0.M5-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>jboss-transaction-spi-tests</artifactId>
+    <name>Narayana: Transaction 7.0.2 SPI Testing</name>
+    <description>Narayana: Transaction 7.0.2 SPI Testing</description>
+
+    <packaging>jar</packaging>
+
+    <properties>
+        <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1]
+            -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true
+        </ipv6.server.jvm.args>
+    </properties>
+
+    <build>
+        <plugins>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss</groupId>
+            <artifactId>jboss-transaction-spi</artifactId>
+            <version>${version.org.jboss.jboss-transaction-spi}</version>
+            <scope>provided</scope>
+            <exclusions>
+                <exclusion>
+                    <groupId>org.jboss.logging</groupId>
+                    <artifactId>jboss-logging-spi</artifactId>
+                </exclusion>
+            </exclusions>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.interceptor</groupId>
+            <artifactId>jboss-interceptors-api_1.2_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.interceptor}</version>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.transaction</groupId>
+            <artifactId>jboss-transaction-api_1.2_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.transaction}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>junit</groupId>
+            <artifactId>junit</artifactId>
+            <version>${version.junit}</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.arquillian.protocol</groupId>
+            <artifactId>arquillian-protocol-servlet</artifactId>
+            <version>${version.org.jboss.arquillian.core}</version>
+            <scope>test</scope>
+        </dependency>
+        <dependency>
+            <groupId>javax.enterprise</groupId>
+            <artifactId>cdi-api</artifactId>
+            <version>${version.javax.enterprise}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.arquillian.junit</groupId>
+            <artifactId>arquillian-junit-container</artifactId>
+            <version>${version.org.jboss.arquillian.core}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>javax.annotation</groupId>
+            <artifactId>javax.annotation-api</artifactId>
+            <version>${version.javax.annotation}</version>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.ejb</groupId>
+            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
+            <version>${version.org.jboss.spec.javax.ejb}</version>
+            <scope>provided</scope>
+        </dependency>
+    </dependencies>
+
+    <profiles>
+        <profile>
+            <id>arq</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-managed</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                            <systemPropertyVariables combine.children=""append"">
+                                <!--
+                                    Used in arquillian.xml
+                                -->
+                                <server.jvm.args>${jvm.args.other} ${jvm.args.memory}</server.jvm.args>
+                                <node.address>127.0.0.1</node.address>
+                            </systemPropertyVariables>
+                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+        <profile>
+            <id>arqIPv6</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-managed</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                            <argLine>${ipv6.server.jvm.args}</argLine>
+                            <systemPropertyVariables combine.children=""append"">
+                                <!--
+                                    Used in arquillian.xml
+                                -->
+                                <server.jvm.args>${jvm.args.other} ${jvm.args.memory} ${ipv6.server.jvm.args}</server.jvm.args>
+                                <node.address>[::1]</node.address>
+                            </systemPropertyVariables>
+                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+        <profile>
+            <id>arq-remote</id>
+            <activation>
+                <activeByDefault>false</activeByDefault>
+            </activation>
+            <build>
+                <plugins>
+                    <plugin>
+                        <artifactId>maven-surefire-plugin</artifactId>
+                        <configuration>
+                            <skip>false</skip>
+                        </configuration>
+                    </plugin>
+                </plugins>
+            </build>
+            <dependencies>
+                <dependency>
+                    <groupId>org.wildfly</groupId>
+                    <artifactId>wildfly-arquillian-container-remote</artifactId>
+                    <version>${jboss-as.version}</version>
+                    <scope>test</scope>
+                </dependency>
+            </dependencies>
+        </profile>
+    </profiles>
+</project>",2013-09-17T09:24:53Z,28
"@@ -0,0 +1,118 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2013, Red Hat Inc., and individual contributors as indicated
+ * by the @authors tag. See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.tm;
+
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.Assert;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import javax.annotation.Resource;
+import javax.inject.Inject;
+import javax.transaction.*;
+import org.jboss.tm.TxUtils;
+
+/**
+ * Transaction SPI integration tests
+ */
+@RunWith(Arquillian.class)
+public class TestSPI {
+    @Resource(lookup = ""java:jboss/TransactionManager"")
+    private javax.transaction.TransactionManager transactionManager;
+
+    @Deployment
+    public static WebArchive createTestArchive() {
+
+        return ShrinkWrap.create(WebArchive.class, ""test.war"")
+                .addPackage(""org.jboss.tm"")
+                .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml"");
+    }
+
+    @Test
+    public void sanityCheck() {
+        Assert.assertTrue(Boolean.TRUE);
+    }
+
+    @Test
+    public void testTimeouts() throws Exception {
+        Transaction oldTxn = null;
+        final int SLEEP = 5;
+        final int timeout = 2;
+        final boolean[] afterCompletionViaTMTimeoutThread = {false};
+
+        try {
+            oldTxn = transactionManager.suspend();
+            transactionManager.setTransactionTimeout(timeout);
+            transactionManager.begin();
+
+            Transaction newTxn = transactionManager.getTransaction();
+
+            newTxn.registerSynchronization(new Synchronization() {
+                @Override
+                public void beforeCompletion() {
+                }
+
+                @Override
+                public void afterCompletion(int status) {
+                    System.out.printf(""afterCompletion callback. Txn Status=%d%n"", status);
+                    afterCompletionViaTMTimeoutThread[0] = TxUtils.isTransactionManagerTimeoutThread();
+                    Assert.assertTrue(""afterCompletion synchronization not called via TransactionManagerTimeoutThread"",
+                            afterCompletionViaTMTimeoutThread[0]);
+                }
+            });
+
+            Thread.sleep(SLEEP * 1000); // sleep for longer than the transaction timeout period
+            int status = transactionManager.getStatus();
+
+            Assert.assertTrue(""ERROR transaction should have timed out but its state is "" + status,
+                    status == Status.STATUS_ROLLEDBACK);
+
+            transactionManager.commit();
+
+            Assert.assertTrue(""testTimeouts synchronization was not invoked"", afterCompletionViaTMTimeoutThread[0]);
+        } catch (RollbackException e) {
+            // SUCCESS: rollback exception expected
+            // any other exception is a failure
+        } finally {
+            try {
+                if (transactionManager.getStatus() == Status.STATUS_ACTIVE)
+                    transactionManager.rollback();
+            } catch (SystemException e) {
+                System.err.printf(""testTimeouts: cleanup exception %s%n"", e.getMessage());
+            }
+            if (oldTxn != null) {
+                try {
+                    transactionManager.resume(oldTxn);
+                } catch (SystemException e) {
+                    System.err.printf(""testTimeouts: resume exception %s%n"", e.getMessage());
+                } catch (InvalidTransactionException e) {
+                    System.err.printf(""testTimeouts: resume exception %s%n"", e.getMessage());
+                }
+            }
+        }
+
+    }
+}",2013-09-17T09:24:53Z,224
"@@ -474,7 +474,7 @@
     <version.org.jboss.arquillian.core>1.0.3.Final</version.org.jboss.arquillian.core>
     <version.javax.annotation>1.2-b04</version.javax.annotation>
     <version.org.jboss.arquillian.osgi>2.0.0.CR2</version.org.jboss.arquillian.osgi>
-    <version.org.jboss.jboss-transaction-spi>7.0.1.Final</version.org.jboss.jboss-transaction-spi>
+    <version.org.jboss.jboss-transaction-spi>7.0.2.Final</version.org.jboss.jboss-transaction-spi>
 
     <!-- Maven plugin versions -->
     <version.org.eclipse.m2e.lifecycle-mapping>1.0.0</version.org.eclipse.m2e.lifecycle-mapping>",2013-09-17T09:24:53Z,39
"@@ -1,6 +1,6 @@
-call:comment_on_pull ""Started testing this pull request: %BUILD_URL%""
+call:comment_on_pull ""Started testing this pull request with BLACKTIE profile on Windows: %BUILD_URL%""
 
-call build.bat clean install ""-DskipTests"" || (call:comment_on_pull ""Narayana Failed %BUILD_URL%"" && exit -1)
+call build.bat clean install ""-DskipTests"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Narayana Failed %BUILD_URL%"" && exit -1)
 
 echo ""Cloning AS""
 rmdir /S /Q jboss-as
@@ -13,11 +13,11 @@ if %ERRORLEVEL% NEQ 0 exit -1
 
 echo ""Building AS""
 set MAVEN_OPTS=""-Xmx768M""
-call build.bat clean install ""-DskipTests"" ""-Drelease=true"" || (call:comment_on_pull ""AS Failed %BUILD_URL%"" && exit -1)
+call build.bat clean install ""-DskipTests"" ""-Drelease=true"" || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - AS Failed %BUILD_URL%"" && exit -1)
 
 echo ""Building Blacktie Subsystem""
 cd ..\
-call build.bat -f blacktie\wildfly-blacktie\pom.xml clean install || (call:comment_on_pull ""Build Blacktie Subsystem Failed %BUILD_URL%"" && exit -1)
+call build.bat -f blacktie\wildfly-blacktie\pom.xml clean install || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - Build Blacktie Subsystem Failed %BUILD_URL%"" && exit -1)
 
 echo ""Building BlackTie
 cd blacktie
@@ -27,9 +27,9 @@ set JBOSS_HOME=%CD%\wildfly-%WILDFLY_MASTER_VERSION%\
 copy ..\rts\at\webservice\target\restat-web-%NARAYANA_CURRENT_VERSION%.war %JBOSS_HOME%\standalone\deployments\
 unzip wildfly-blacktie\build\target\wildfly-blacktie-build-%WILDFLY_MASTER_VERSION%-bin.zip -d %JBOSS_HOME%
 set WORKSPACE=%WORKSPACE%\blacktie 
-call scripts\hudson\blacktie-vc9x32.bat || (call:comment_on_pull ""BlackTie Failed %BUILD_URL%"" && exit -1)
+call scripts\hudson\blacktie-vc9x32.bat || (call:comment_on_pull ""BLACKTIE profile tests failed on Windows - BlackTie Failed %BUILD_URL%"" && exit -1)
 
-call:comment_on_pull ""All tests passed - Job complete %BUILD_URL%""
+call:comment_on_pull ""BLACKTIE profile tests passed on Windows - Job complete %BUILD_URL%""
 
 rem -------------------------------------------------------
 rem -                 Functions bellow                    -",2013-09-19T09:57:25Z,147
"@@ -1,5 +1,12 @@
 function fatal {
-  comment_on_pull ""Tests failed ($BUILD_URL): $1""
+  if [[ -z $PROFILE ]]; then
+      comment_on_pull ""Tests failed ($BUILD_URL): $1""
+  elif [[ $PROFILE == ""BLACKTIE"" ]]; then
+      comment_on_pull ""$PROFILE profile tests failed on Linux ($BUILD_URL): $1""
+  else
+      comment_on_pull ""$PROFILE profile tests failed ($BUILD_URL): $1""
+  fi
+
   echo ""$1""
   exit 1
 }
@@ -21,27 +28,35 @@ function init_test_options {
     PULL_DESCRIPTION=$(get_pull_description)
 
     if [[ $PROFILE == ""NO_TEST"" ]] || [[ $PULL_DESCRIPTION =~ ""NO_TEST"" ]]; then
+        export COMMENT_ON_PULL=""""
         export AS_BUILD=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""MAIN"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!MAIN"" ]]; then
+        comment_on_pull ""Started testing this pull request with MAIN profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=1 RTS_TESTS=1 JTA_CDI_TESTS=1 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""XTS"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!XTS"" ]]; then
+        comment_on_pull ""Started testing this pull request with XTS profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=1 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""QA_JTA"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTA"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTA profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=1 JAC_ORB=0 QA_TARGET=ci-tests-nojts
     elif [[ $PROFILE == ""QA_JTS_JACORB"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTS_JACORB"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTS_JACORB profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=0 JAC_ORB=1 QA_TARGET=ci-jts-tests
     elif [[ $PROFILE == ""QA_JTS_JDKORB"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTS_JDKORB"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTS_JDKORB profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=1 JAC_ORB=0 QA_TARGET=ci-jts-tests
     elif [[ $PROFILE == ""BLACKTIE"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!BLACKTIE"" ]]; then
+        comment_on_pull ""Started testing this pull request with BLACKTIE profile on Linux: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=1 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ -z $PROFILE ]]; then
+        comment_on_pull ""Started testing this pull request: $BUILD_URL""
         # if the following env variables have not been set initialize them to their defaults
         [ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
         [ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
@@ -58,6 +73,7 @@ function init_test_options {
         [ $JAC_ORB ] || JAC_ORB=1 # Run QA test suite against JacORB
         [ $txbridge ] || txbridge=1 # bridge tests
     else
+        export COMMENT_ON_PULL=""""
         export AS_BUILD=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     fi
@@ -434,8 +450,6 @@ function qa_tests {
 
 check_if_pull_closed
 
-comment_on_pull ""Started testing this pull request: $BUILD_URL""
-
 init_test_options
 
 # if QA_BUILD_ARGS is unset then get the db drivers form the file system otherwise get them from the
@@ -476,5 +490,12 @@ export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 [ $RTS_TESTS = 1 ] && rts_tests ""$@""
 [ $QA_TESTS = 1 ] && qa_tests ""$@""
 
-comment_on_pull ""All tests passed - Job complete $BUILD_URL""
+if [[ -z $PROFILE ]]; then
+    comment_on_pull ""All tests passed - Job complete $BUILD_URL""
+elif [[ $PROFILE == ""BLACKTIE"" ]]; then
+    comment_on_pull ""$PROFILE profile tests passed on Linux - Job complete $BUILD_URL""
+else
+    comment_on_pull ""$PROFILE profile tests passed - Job complete $BUILD_URL""
+fi
+
 exit 0 # any failure would have resulted in fatal being called which exits with a value of 1",2013-09-19T09:57:25Z,10
"@@ -1,5 +1,12 @@
 function fatal {
-  comment_on_pull ""Tests failed ($BUILD_URL): $1""
+  if [[ -z $PROFILE ]]; then
+      comment_on_pull ""Tests failed ($BUILD_URL): $1""
+  elif [[ $PROFILE == ""BLACKTIE"" ]]; then
+      comment_on_pull ""$PROFILE profile tests failed on Linux ($BUILD_URL): $1""
+  else
+      comment_on_pull ""$PROFILE profile tests failed ($BUILD_URL): $1""
+  fi
+
   echo ""$1""
   exit 1
 }
@@ -21,27 +28,35 @@ function init_test_options {
     PULL_DESCRIPTION=$(get_pull_description)
 
     if [[ $PROFILE == ""NO_TEST"" ]] || [[ $PULL_DESCRIPTION =~ ""NO_TEST"" ]]; then
+        export COMMENT_ON_PULL=""""
         export AS_BUILD=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""MAIN"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!MAIN"" ]]; then
+        comment_on_pull ""Started testing this pull request with MAIN profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=1 RTS_TESTS=1 JTA_CDI_TESTS=1 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""XTS"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!XTS"" ]]; then
+        comment_on_pull ""Started testing this pull request with XTS profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=1 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ $PROFILE == ""QA_JTA"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTA"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTA profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=1 JAC_ORB=0 QA_TARGET=ci-tests-nojts
     elif [[ $PROFILE == ""QA_JTS_JACORB"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTS_JACORB"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTS_JACORB profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=0 JAC_ORB=1 QA_TARGET=ci-jts-tests
     elif [[ $PROFILE == ""QA_JTS_JDKORB"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!QA_JTS_JDKORB"" ]]; then
+        comment_on_pull ""Started testing this pull request with QA_JTS_JDKORB profile: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=1 JAC_ORB=0 QA_TARGET=ci-jts-tests
     elif [[ $PROFILE == ""BLACKTIE"" ]] && [[ ! $PULL_DESCRIPTION =~ ""!BLACKTIE"" ]]; then
+        comment_on_pull ""Started testing this pull request with BLACKTIE profile on Linux: $BUILD_URL""
         export AS_BUILD=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=1 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     elif [[ -z $PROFILE ]]; then
+        comment_on_pull ""Started testing this pull request: $BUILD_URL""
         # if the following env variables have not been set initialize them to their defaults
         [ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
         [ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
@@ -58,6 +73,7 @@ function init_test_options {
         [ $JAC_ORB ] || JAC_ORB=1 # Run QA test suite against JacORB
         [ $txbridge ] || txbridge=1 # bridge tests
     else
+        export COMMENT_ON_PULL=""""
         export AS_BUILD=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0
     fi
@@ -434,8 +450,6 @@ function qa_tests {
 
 check_if_pull_closed
 
-comment_on_pull ""Started testing this pull request: $BUILD_URL""
-
 init_test_options
 
 # if QA_BUILD_ARGS is unset then get the db drivers form the file system otherwise get them from the
@@ -476,5 +490,12 @@ export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 [ $RTS_TESTS = 1 ] && rts_tests ""$@""
 [ $QA_TESTS = 1 ] && qa_tests ""$@""
 
-comment_on_pull ""All tests passed - Job complete $BUILD_URL""
+if [[ -z $PROFILE ]]; then
+    comment_on_pull ""All tests passed - Job complete $BUILD_URL""
+elif [[ $PROFILE == ""BLACKTIE"" ]]; then
+    comment_on_pull ""$PROFILE profile tests passed on Linux - Job complete $BUILD_URL""
+else
+    comment_on_pull ""$PROFILE profile tests passed - Job complete $BUILD_URL""
+fi
+
 exit 0 # any failure would have resulted in fatal being called which exits with a value of 1",2013-09-19T09:57:25Z,225
"@@ -0,0 +1,34 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2011, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.jbossts.xts.bytemanSupport.participantReadOnly;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+public class ParticipantCompletionReadOnlyRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantReadOnly/participant_completion_coordinator_readonly_rules.btm"";
+
+    public static void enableReadOnlyCheck() {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2013-08-14T07:44:59Z,226
"@@ -0,0 +1,39 @@
+RULE enable readonly check
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantReadOnly.ParticipantCompletionReadOnlyRules
+METHOD enableReadOnlyCheck()
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion_readonly.enable""),
+  flag(""enabled"")
+ENDRULE
+
+RULE readonly delay 3s for test
+CLASS com.arjuna.wst11.messaging.CoordinatorProcessorImpl
+METHOD readOnly(Notification, MAP, ArjunaContext)
+AT ENTRY
+IF TRUE
+DO debug(""readonly delay 3s""),
+   Thread.sleep(3000)
+ENDRULE
+
+RULE readonly called
+CLASS com.arjuna.wst11.messaging.CoordinatorProcessorImpl
+METHOD readOnly(Notification, MAP, ArjunaContext)
+AT RETURN
+BIND NOTHING
+IF (flagged(""enabled""))
+DO debug(""coordinator_processor_readonly.called.waking""),
+   signalWake(""readonly"", true),
+   debug(""coordinator_processor_readonly.called.donewake"")
+ENDRULE
+
+RULE prepare called
+CLASS com.arjuna.wst11.messaging.ParticipantProcessorImpl
+METHOD prepare(Notification, MAP, ArjunaContext)
+BIND NOTHING
+IF (flagged(""enabled""))
+DO debug(""participant_processor.prepare.waiting""),
+   waitFor(""readonly""),
+   debug(""participant_processor.prepare.woken""),
+   clear(""enabled"")
+ENDRULE",2013-08-14T07:44:59Z,227
"@@ -26,11 +26,15 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantReadOnly.ParticipantCompletionReadOnlyRules;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -69,6 +73,7 @@ public static WebArchive createDeployment() {
                 .addPackage(""com.jboss.transaction.wstf.webservices.sc007.server"")
                 .addPackage(""com.jboss.transaction.wstf.webservices.soapfault.client"")
                 .addPackage(""org.jboss.jbossts.xts.soapfault"")
+                .addPackage(""org.jboss.jbossts.xts.bytemanSupport.participantReadOnly"")
                 .addAsResource(""sc007/participanthandlers.xml"", ""com/jboss/transaction/wstf/webservices/sc007/sei/participanthandlers.xml"")
                 .addAsWebInfResource(""sc007/wsdl/sc007.wsdl"", ""classes/com/jboss/transaction/wstf/webservices/sc007/generated/wsdl/sc007.wsdl"")                          
                 .addAsResource(""soapfault/wsdl/soapfault.wsdl"", ""org/jboss/jbossts/xts/soapfault/soapfault.wsdl"")
@@ -82,6 +87,16 @@ public static WebArchive createDeployment() {
                 .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml"")
                 .addAsManifestResource(new StringAsset(""Dependencies: org.jboss.jts,org.jboss.ws.api,javax.xml.ws.api,org.jboss.xts,org.dom4j,org.jboss.ws.jaxws-client services export,org.jboss.ws.cxf.jbossws-cxf-client services export,com.sun.xml.bind services export\n""), ""MANIFEST.MF"");
     }
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionReadOnlyRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionReadOnlyRules.RESOURCE_PATH);
+    }
     
     @Before
     public void setUp() {
@@ -127,6 +142,7 @@ public void test3_3() throws Exception {
     
     @Test
     public void test3_4() throws Exception {
+        ParticipantCompletionReadOnlyRules.enableReadOnlyCheck();
         test.test3_4();
     }
     ",2013-08-14T07:44:59Z,228
"@@ -26,10 +26,14 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantReadOnly.ParticipantCompletionReadOnlyRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
+import org.junit.BeforeClass;
+import org.junit.AfterClass;
 import org.junit.runner.RunWith;
 
 import com.jboss.transaction.txinterop.proxy.ProxyConversation;
@@ -53,6 +57,16 @@ public class ATTest {
     public static WebArchive createDeployment() {
         return WarDeployment.getDeployment();
     }
+
+    @BeforeClass
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionReadOnlyRules.RESOURCE_PATH);
+    }
+
+    @AfterClass
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionReadOnlyRules.RESOURCE_PATH);
+    }
     
     @Before
     public void setUp() {
@@ -101,6 +115,7 @@ public void testAT3_3() throws Exception {
     
     @Test
     public void testAT4_1() throws Exception {
+        ParticipantCompletionReadOnlyRules.enableReadOnlyCheck();
         test.testAT4_1();
     }
     ",2013-08-14T07:44:59Z,229
"@@ -22,6 +22,7 @@
 
 package com.jboss.transaction.txinterop.interop;
 
+import org.jboss.jbossts.xts.bytemanSupport.participantReadOnly.ParticipantCompletionReadOnlyRules;
 import org.jboss.jbossts.xts.soapfault.SoapFaultPortType;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
@@ -82,6 +83,7 @@ public static WebArchive getDeployment(){
                 .addPackage(CoordinationContextHandler.class.getPackage())
                 .addPackage(SoapFaultClient.class.getPackage())
                 .addPackage(SoapFaultPortType.class.getPackage())
+                .addPackage(ParticipantCompletionReadOnlyRules.class.getPackage())
                 .addAsResource(""interop11/participanthandlers.xml"", ""com/jboss/transaction/txinterop/webservices/atinterop/sei/participanthandlers.xml"")
                 .addAsResource(""interop11/participanthandlers.xml"", ""com/jboss/transaction/txinterop/webservices/bainterop/sei/participanthandlers.xml"")
                 .addAsWebInfResource(""interop11/wsdl/interopat.wsdl"", ""classes/com/jboss/transaction/txinterop/webservices/atinterop/generated/wsdl/interopat.wsdl"")",2013-08-14T07:44:59Z,230
"@@ -258,8 +258,13 @@ public void run() {
 			thread.start();
 		}
 		synchronized (phase2CommitAborted) {
-			if (phase2CommitAborted.getCount() < 2) {
-				phase2CommitAborted.wait();
+		    int waitedCount = 0;
+			while (phase2CommitAborted.getCount() < 2) {
+				phase2CommitAborted.wait(5000);
+				waitedCount++;
+	            if (waitedCount > 2 && phase2CommitAborted.getCount() < 2) {
+	                fail(""Servers were not aborted"");
+	            }           
 			}
 		}
 
@@ -352,8 +357,11 @@ public void run() {
 		thread.start();
 		synchronized (phase2CommitAborted) {
 			if (phase2CommitAborted.getCount() < 1) {
-				phase2CommitAborted.wait();
+				phase2CommitAborted.wait(5000);
 			}
+            if (phase2CommitAborted.getCount() < 1) {
+                fail(""Servers were not aborted"");
+            }
 		}
 
 		reboot(""1000"");
@@ -432,8 +440,11 @@ public void run() {
 		thread.start();
 		synchronized (phase2CommitAborted) {
 			if (phase2CommitAborted.getCount() < 1) {
-				phase2CommitAborted.wait();
+				phase2CommitAborted.wait(5000);
 			}
+            if (phase2CommitAborted.getCount() < 1) {
+                fail(""Servers were not aborted"");
+            }
 		}
 
 		reboot(""1000"");
@@ -518,8 +529,11 @@ public void run() {
 		thread.start();
 		synchronized (phase2CommitAborted) {
 			if (phase2CommitAborted.getCount() < 1) {
-				phase2CommitAborted.wait();
+				phase2CommitAborted.wait(5000);
 			}
+            if (phase2CommitAborted.getCount() < 1) {
+                fail(""Servers were not aborted"");
+            }
 		}
 		reboot(""1000"");
 		reboot(""2000"");
@@ -607,8 +621,11 @@ public void run() {
 		thread.start();
 		synchronized (phase2CommitAborted) {
 			if (phase2CommitAborted.getCount() < 1) {
-				phase2CommitAborted.wait();
+				phase2CommitAborted.wait(5000);
 			}
+            if (phase2CommitAborted.getCount() < 1) {
+                fail(""Servers were not aborted"");
+            }
 		}
 		reboot(""1000"");
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
@@ -660,8 +677,11 @@ public void run() {
 		thread.start();
 		synchronized (phase2CommitAborted) {
 			if (phase2CommitAborted.getCount() < 1) {
-				phase2CommitAborted.wait();
+				phase2CommitAborted.wait(5000);
 			}
+            if (phase2CommitAborted.getCount() < 1) {
+                fail(""Servers were not aborted"");
+            }
 		}
 
 		reboot(""1000"");",2012-02-17T17:57:07Z,231
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/04/2013
+ */
+@Named(""DummyData"")
+@CompensationScoped
+public class DummyData implements Serializable {
+
+    private String value = """";
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+
+    public String getValue() {
+
+        return value;
+    }
+}",2013-05-25T08:04:33Z,232
"@@ -0,0 +1,164 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.UserBusinessActivity;
+import com.arjuna.mw.wst11.UserBusinessActivityFactory;
+import com.arjuna.wst.TransactionRolledBackException;
+import junit.framework.Assert;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
+import org.jboss.narayana.txframework.functional.common.EventLog;
+import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
+import org.jboss.shrinkwrap.api.ArchivePaths;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.JavaArchive;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.lang.annotation.Annotation;
+import java.util.Arrays;
+import java.util.List;
+
+@RunWith(Arquillian.class)
+public class DistributedTest {
+
+    UserBusinessActivity uba;
+    TestService client;
+
+    @Deployment()
+    public static JavaArchive createTestArchive() {
+        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+                .addPackages(false, DistributedTest.class.getPackage())
+                .addPackage(DummyCompensationHandler1.class.getPackage())
+                .addClass(ParticipantCompletionCoordinatorRules.class)
+                .addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml""))
+                .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
+
+        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
+
+        String ManifestMF = ""Manifest-Version: 1.0\n""
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.xts\n"";
+
+        archive.setManifest(new StringAsset(ManifestMF));
+
+        return archive;
+    }
+
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @Before
+    public void setupTest() throws Exception {
+
+        uba = UserBusinessActivityFactory.userBusinessActivity();
+        client = new TestServiceClient();
+    }
+
+    @After
+    public void teardownTest() throws Exception {
+
+        client.resetHandlerFlags();
+        cancelIfActive(uba);
+    }
+
+    @Test
+    public void testSimple() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        client.saveData(false);
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(true, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+
+    }
+
+
+
+    @Test
+    public void testClientDrivenCompensate() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        uba.begin();
+        client.saveData(false);
+        uba.cancel();
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(true, client.wasCompensationHandlerInvoked());
+    }
+
+
+    @Test
+    public void testRuntimeException() throws Exception {
+
+        try {
+            uba.begin();
+            client.saveData(true);
+            Assert.fail(""Exception should have been thrown by now"");
+        } catch (RuntimeException e) {
+            //Exception expected
+        } finally {
+            uba.cancel();
+        }
+
+        Assert.assertEquals(false, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+    }
+
+    public void cancelIfActive(UserBusinessActivity uba) {
+
+        try {
+            uba.cancel();
+        } catch (Throwable e) {
+            // do nothing, not active
+        }
+    }
+}",2013-05-25T08:04:33Z,114
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/05/2013
+ */
+@Named(""State"")
+@CompensationScoped
+public class State implements Serializable {
+
+    private String value;
+
+    public String getValue() {
+
+        return value;
+    }
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+}",2013-05-25T08:04:33Z,233
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import javax.ejb.Remote;
+import javax.jws.WebMethod;
+
+@Remote
+public interface TestService {
+
+    @WebMethod
+    public void saveData(Boolean throwException);
+
+    @WebMethod
+    public void resetHandlerFlags();
+
+    @WebMethod
+    public boolean wasCompensationHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionLoggedHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionConfirmedHandlerInvoked();
+
+}",2013-05-25T08:04:33Z,234
"@@ -0,0 +1,74 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
+import org.jboss.narayana.compensations.api.Compensatable;
+import javax.xml.namespace.QName;
+import javax.xml.ws.Service;
+import java.net.URL;
+
+public class TestServiceClient implements TestService {
+
+    private TestService testService;
+
+    public TestServiceClient() throws Exception {
+
+        URL wsdlLocation = new URL(""http://localhost:8080/test/TestServiceService/TestService?wsdl"");
+        QName serviceName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+        QName portName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+
+        Service service = Service.create(wsdlLocation, serviceName);
+        testService = service.getPort(portName, TestService.class, new WSTXFeature());
+    }
+
+    @Override
+    @Compensatable
+    public void saveData(Boolean throwException) {
+        testService.saveData(throwException);
+    }
+
+    @Override
+    public void resetHandlerFlags() {
+        testService.resetHandlerFlags();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return testService.wasCompensationHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return testService.wasTransactionLoggedHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return testService.wasTransactionConfirmedHandlerInvoked();
+    }
+}
+",2013-05-25T08:04:33Z,235
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyConfirmationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyTransactionLoggedHandler1;
+
+import javax.ejb.Stateless;
+import javax.inject.Inject;
+import javax.jws.WebMethod;
+import javax.jws.WebService;
+import javax.jws.soap.SOAPBinding;
+
+
+/**
+ * @author Paul Robinson (paul.robinson@redhat.com)
+ */
+@Stateless
+@WebService(serviceName = ""TestServiceService"", portName = ""TestServiceService"",
+        name = ""TestService"", targetNamespace = ""http://www.jboss.com/functional/compensations/distributed/"")
+@SOAPBinding(style = SOAPBinding.Style.RPC)
+public class TestServiceService implements TestService {
+
+    @Inject
+    private State state;
+
+
+    @Compensatable
+    @TxCompensate(DummyCompensationHandler1.class)
+    @TxConfirm(DummyConfirmationHandler1.class)
+    @TxLogged(DummyTransactionLoggedHandler1.class)
+    public void saveData(Boolean throwRuntimeException) {
+
+        if (throwRuntimeException) {
+            throw new RuntimeException(""Test instructed the service to throw a RuntimeException"");
+        }
+
+        state.setValue(""myValue"");
+    }
+
+    @WebMethod
+    public void resetHandlerFlags() {
+
+        DummyConfirmationHandler1.reset();
+        DummyTransactionLoggedHandler1.reset();
+        DummyCompensationHandler1.reset();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return DummyConfirmationHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return DummyTransactionLoggedHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return DummyCompensationHandler1.getCalled();
+    }
+}",2013-05-25T08:04:33Z,236
"@@ -174,6 +174,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,237
"@@ -199,6 +199,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,238
"@@ -187,6 +187,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,69
"@@ -251,6 +251,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,29
"@@ -270,6 +270,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,30
"@@ -268,6 +268,7 @@
         	  <doCheck>false</doCheck>
         	  <doUpdate>false</doUpdate>
         	  <scmBranchPropertyName>buildScmBranch</scmBranchPropertyName>
+            <revisionOnScmFailure>${project.version}-noscm</revisionOnScmFailure>
         	</configuration>
 	      </plugin>
             </plugins>",2013-07-11T14:39:04Z,33
"@@ -20,7 +20,7 @@ cd ..\blacktie
 rmdir wildfly-%WILDFLY_MASTER_VERSION% /s /q
 unzip ..\jboss-as\dist\target\wildfly-%WILDFLY_MASTER_VERSION%.zip
 set JBOSS_HOME=%CD%\wildfly-%WILDFLY_MASTER_VERSION%\
-copy ..\rts\at\webservice\target\restat-web-%NARAYANA_CURRENT_VERSION%.war %JBOSS_HOME%\standalone\deployments\
+copy ..\rts\at\webservice\target\restat-web-5.0.0.M4-SNAPSHOT.war %JBOSS_HOME%\standalone\deployments\
 set WORKSPACE=%WORKSPACE%\blacktie 
 call scripts\hudson\blacktie-vc9x32.bat || (call:comment_on_pull ""BlackTie Failed %BUILD_URL%"" && exit -1)
 ",2013-07-23T12:53:11Z,147
"@@ -160,7 +160,7 @@ function blacktie {
   cd blacktie
   rm -rf $PWD/wildfly-${WILDFLY_MASTER_VERSION}
   unzip ../jboss-as/dist/target/wildfly-${WILDFLY_MASTER_VERSION}.zip
-  cp ../rts/at/webservice/target/restat-web-${NARAYANA_CURRENT_VERSION}.war $PWD/wildfly-${WILDFLY_MASTER_VERSION}/standalone/deployments/
+  cp ../rts/at/webservice/target/restat-web-5.0.0.M4-SNAPSHOT.war $PWD/wildfly-${WILDFLY_MASTER_VERSION}/standalone/deployments/
   WORKSPACE=$WORKSPACE/blacktie JBOSS_HOME=$PWD/wildfly-${WILDFLY_MASTER_VERSION} ./scripts/hudson/blacktie-linux.sh ""$@""
   [ $? = 0 ] || fatal ""BlackTie build failed""
   cd -
@@ -394,7 +394,6 @@ comment_on_pull ""Started testing this pull request: $BUILD_URL""
 
 [ -z ""${WORKSPACE}"" ] && fatal ""UNSET WORKSPACE""
 [ -z ""${WILDFLY_MASTER_VERSION}"" ] && fatal ""UNSET WILDFLY_MASTER_VERSION""
-[ -z ""${NARAYANA_CURRENT_VERSION}"" ] && fatal ""UNSET NARAYANA_CURRENT_VERSION""
 
 # FOR DEBUGGING SUBSEQUENT ISSUES
 free -m",2013-07-23T12:53:11Z,10
"@@ -41,8 +41,9 @@
 
 public class CompensationContext implements Context {
 
-    //TODO: garbage collect. Register a participant and remove at end?
-    private static final Map<TxContext, Map<String, Object>> localTXMap = new HashMap<TxContext, Map<String, Object>>();
+    private static final Map<TxContext, Map<String, Object>> beanStorePerTransaction = new HashMap<TxContext, Map<String, Object>>();
+
+    private static ThreadLocal<TxContext> txContextToExtend = new ThreadLocal<TxContext>();
 
     @Override
     public Class<? extends Annotation> getScope() {
@@ -82,13 +83,17 @@ public <T> T get(Contextual<T> contextual) {
     private Map getBeansForThisTransaction() {
 
         try {
-            BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
-            TxContext currentTX = bam.currentTransaction();
 
-            if (localTXMap.get(currentTX) == null) {
-                localTXMap.put(currentTX, new HashMap<String, Object>());
+            TxContext currentTX = txContextToExtend.get();
+            if (currentTX == null) {
+                BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
+                currentTX = bam.currentTransaction();
             }
-            return localTXMap.get(currentTX);
+
+            if (beanStorePerTransaction.get(currentTX) == null) {
+                beanStorePerTransaction.put(currentTX, new HashMap<String, Object>());
+            }
+            return beanStorePerTransaction.get(currentTX);
 
         } catch (SystemException e) {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
@@ -97,6 +102,10 @@ private Map getBeansForThisTransaction() {
 
     public boolean isActive() {
 
+        if (txContextToExtend.get() != null) {
+            return true;
+        }
+
         try {
             BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
             TxContext currentTX = bam.currentTransaction();
@@ -105,5 +114,19 @@ public boolean isActive() {
             throw new CompensationTransactionRuntimeException(""Error looking up Transaction"", e);
         }
     }
+
+    public static void setTxContextToExtend(TxContext currentTX) {
+
+        txContextToExtend.set(currentTX);
+    }
+
+    /**
+     * Garbage collect the beans. Call when the context is closed and can't be used again.
+     *
+     * @param currentTX the Transaction Context associated with this context.
+     */
+    public static void close(TxContext currentTX) {
+        beanStorePerTransaction.remove(currentTX);
+    }
 }
 ",2013-08-02T12:16:51Z,118
"@@ -22,6 +22,7 @@
 
 package org.jboss.narayana.compensations.impl;
 
+import com.arjuna.mw.wst.TxContext;
 import com.arjuna.wst.BusinessAgreementWithParticipantCompletionParticipant;
 import com.arjuna.wst.FaultedException;
 import com.arjuna.wst.SystemException;
@@ -41,23 +42,25 @@
 public class Participant implements BusinessAgreementWithParticipantCompletionParticipant, ConfirmCompletedParticipant {
 
     private Class<? extends CompensationHandler> compensationHandler;
-
     private Class<? extends ConfirmationHandler> confirmationHandler;
-
     private Class<? extends TransactionLoggedHandler> transactionLoggedHandler;
 
     private BeanManager beanManager;
+    private ClassLoader applicationClassloader;
+    private TxContext currentTX;
 
     private Map txDataMapState;
 
-    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass) {
+    public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass, TxContext currentTX) {
 
         this.compensationHandler = compensationHandlerClass;
         this.confirmationHandler = confirmationHandlerClass;
         this.transactionLoggedHandler = transactionLoggedHandlerClass;
+        this.currentTX = currentTX;
 
         beanManager = BeanManagerUtil.getBeanManager();
         txDataMapState = TXDataMapImpl.getState();
+        applicationClassloader = Thread.currentThread().getContextClassLoader();
     }
 
     private <T extends Object> T instantiate(Class<T> clazz) {
@@ -72,21 +75,35 @@ private <T extends Object> T instantiate(Class<T> clazz) {
     public void confirmCompleted(boolean confirmed) {
 
         if (transactionLoggedHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+
             TXDataMapImpl.resume(txDataMapState);
             TransactionLoggedHandler handler = instantiate(transactionLoggedHandler);
             handler.transactionLogged(confirmed);
             TXDataMapImpl.suspend();
+
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
     @Override
     public void close() throws WrongStateException, SystemException {
 
         if (confirmationHandler != null) {
+
+            ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+            Thread.currentThread().setContextClassLoader(applicationClassloader);
+            CompensationContext.setTxContextToExtend(currentTX);
+
             TXDataMapImpl.resume(txDataMapState);
             ConfirmationHandler handler = instantiate(confirmationHandler);
             handler.confirm();
             TXDataMapImpl.suspend();
+
+            CompensationContext.close(currentTX);
+            Thread.currentThread().setContextClassLoader(origClassLoader);
         }
     }
 
@@ -100,10 +117,18 @@ public void compensate() throws FaultedException, WrongStateException, SystemExc
 
         try {
             if (compensationHandler != null) {
+
+                ClassLoader origClassLoader = Thread.currentThread().getContextClassLoader();
+                Thread.currentThread().setContextClassLoader(applicationClassloader);
+                CompensationContext.setTxContextToExtend(currentTX);
                 TXDataMapImpl.resume(txDataMapState);
+
                 CompensationHandler handler = instantiate(compensationHandler);
                 handler.compensate();
+
                 TXDataMapImpl.suspend();
+                CompensationContext.close(currentTX);
+                Thread.currentThread().setContextClassLoader(origClassLoader);
             }
         } catch (Exception e) {
             e.printStackTrace();",2013-08-02T12:16:51Z,119
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends CompensationHandler> compensationHandler = getCompensationHandler(method);
-        Participant compensationParticipant = new Participant(compensationHandler, null, null);
+        Participant compensationParticipant = new Participant(compensationHandler, null, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,120
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends ConfirmationHandler> confirmationHandler = getConfirmationHandler(method);
-        Participant compensationParticipant = new Participant(null, confirmationHandler, null);
+        Participant compensationParticipant = new Participant(null, confirmationHandler, null, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,121
"@@ -61,7 +61,7 @@ protected BAParticipantManager enlistParticipant(BusinessActivityManager bam, Me
         }
 
         Class<? extends TransactionLoggedHandler> transactionLogHandler = getTransactionLoggedHandler(method);
-        Participant compensationParticipant = new Participant(null, null, transactionLogHandler);
+        Participant compensationParticipant = new Participant(null, null, transactionLogHandler, bam.currentTransaction());
         return bam.enlistForBusinessAgreementWithParticipantCompletion(compensationParticipant, String.valueOf(UUID.randomUUID()));
     }
 ",2013-08-02T12:16:51Z,122
"@@ -20,50 +20,59 @@
  * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
  */
 
-package org.jboss.narayana.compensations.functional;
+package org.jboss.narayana.compensations.functional.compensationScoped;
 
 import com.arjuna.mw.wst.TxContext;
 import com.arjuna.mw.wst11.BusinessActivityManager;
 import com.arjuna.mw.wst11.BusinessActivityManagerFactory;
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserBusinessActivityFactory;
-import junit.framework.Assert;
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.jbossts.xts.bytemanSupport.BMScript;
 import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
 import org.jboss.narayana.compensations.functional.common.DummyData;
 import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.EmptyAsset;
 import org.jboss.shrinkwrap.api.asset.StringAsset;
 import org.jboss.shrinkwrap.api.spec.JavaArchive;
-import org.junit.After;
 import org.junit.AfterClass;
+import org.junit.Assert;
+import org.junit.Before;
 import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
 import javax.enterprise.context.ContextNotActiveException;
 import javax.inject.Inject;
 
+
 /**
  * @author paul.robinson@redhat.com 22/03/2013
  */
 @RunWith(Arquillian.class)
 public class CompensationScopedTest {
 
+    @Inject
+    Service service;
+
     @Inject
     DummyData dummyData;
 
     UserBusinessActivity uba = UserBusinessActivityFactory.userBusinessActivity();
     BusinessActivityManager bam = BusinessActivityManagerFactory.businessActivityManager();
 
+
     @Deployment
     public static JavaArchive createTestArchive() {
 
         JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
                 .addPackages(true, ""org.jboss.narayana.compensations.functional"")
+                .addClass(ParticipantCompletionCoordinatorRules.class)
                 .addAsManifestResource(EmptyAsset.INSTANCE, ""beans.xml"")
                 .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
 
@@ -77,14 +86,30 @@ public static JavaArchive createTestArchive() {
         return archive;
     }
 
-    @After
-    public void tearDown() {
 
-        try {
-            uba.close();
-        } catch (Exception e) {
-            // do nothing
-        }
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+
+    @Before
+    public void resetParticipants() {
+
+        DataConfirmationHandler.reset();
+        DataCompensationHandler.reset();
+        DataTxLoggedHandler.reset();
+
+        MyCompensationHandler.dataAvailable = false;
+        MyConfirmationHandler.dataAvailable = false;
+        MyTransactionLoggedHandler.dataAvailable = false;
     }
 
     @Test
@@ -160,4 +185,41 @@ private void assertContextUnavailable() {
     }
 
 
-}
\ No newline at end of file
+    @Test
+    public void testCompensationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.cancel();
+
+        Assert.assertEquals(true, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(false, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+
+    @Test
+    public void testConfirmationHandler() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        MyCompensationHandler.expectedData = ""blah"";
+        MyConfirmationHandler.expectedData = ""blah"";
+        MyTransactionLoggedHandler.expectedData = ""blah"";
+
+        uba.begin();
+        service.doWork(""blah"");
+        uba.close();
+
+        Assert.assertEquals(false, MyCompensationHandler.dataAvailable);
+        Assert.assertEquals(true, MyConfirmationHandler.dataAvailable);
+        Assert.assertEquals(true, MyTransactionLoggedHandler.dataAvailable);
+    }
+
+}",2013-08-02T12:16:51Z,123
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+@CompensationScoped
+@Named
+public class DataPojo implements Serializable {
+
+    private String data;
+
+    public String getData() {
+
+        return data;
+    }
+
+    public void setData(String data) {
+
+        this.data = data;
+    }
+}",2013-08-02T12:16:51Z,124
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyCompensationHandler implements CompensationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void compensate() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,125
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationHandler;
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyConfirmationHandler implements ConfirmationHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void confirm() {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,126
"@@ -0,0 +1,49 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.ConfirmationHandler;
+import org.jboss.narayana.compensations.api.TransactionLoggedHandler;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 29/07/2013
+ */
+public class MyTransactionLoggedHandler implements TransactionLoggedHandler {
+
+    @Inject
+    DataPojo myData;
+
+    public static boolean dataAvailable = false;
+
+    public static String expectedData;
+
+    @Override
+    public void transactionLogged(boolean success) {
+
+        if (myData != null && myData.getData() != null && myData.getData().equals(expectedData)) {
+            dataAvailable = true;
+        }
+    }
+}",2013-08-02T12:16:51Z,127
"@@ -0,0 +1,53 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DataCompensationHandler;
+import org.jboss.narayana.compensations.functional.common.DataConfirmationHandler;
+import org.jboss.narayana.compensations.functional.common.DataTxLoggedHandler;
+import org.jboss.narayana.compensations.functional.common.MyRuntimeException;
+import org.jboss.narayana.txframework.api.management.TXDataMap;
+
+import javax.inject.Inject;
+
+/**
+ * @author paul.robinson@redhat.com 24/04/2013
+ */
+public class Service {
+
+    @Inject
+    DataPojo myData;
+
+    @Compensatable
+    @TxCompensate(MyCompensationHandler.class)
+    @TxLogged(MyTransactionLoggedHandler.class)
+    @TxConfirm(MyConfirmationHandler.class)
+    public void doWork(String setValue) throws MyRuntimeException {
+        myData.setData(setValue);
+    }
+
+}",2013-08-02T12:16:51Z,128
"@@ -39,8 +39,10 @@
         <configuration>
             <property name=""serverConfig"">standalone-xts.xml</property>
             <property name=""javaVmArguments"">${server.jvm.args}</property>
+            <property name=""javaVmArguments"">-Xmx512m -XX:MaxPermSize=128m
+                            -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n ${server.jvm.args}</property>
             <property name=""managementAddress"">${node.address}</property>
         </configuration>
     </container>
 
-</arquillian>
\ No newline at end of file
+</arquillian>",2013-08-02T12:16:51Z,129
"@@ -67,50 +67,64 @@ public boolean commit_state(Uid objUid, String typeName)
 			typeName = typeName.substring(1);
 
 		boolean result = false;
-
+		PreparedStatement pstmt = null;
+		PreparedStatement pstmt2 = null;
 		try {
 			// Delete any previously committed state
-			{
-				PreparedStatement pstmt = connection
-						.get()
-						.prepareStatement(
-								""DELETE FROM ""
-										+ tableName
-										+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
+			pstmt = connection
+					.get()
+					.prepareStatement(
+							""DELETE FROM ""
+									+ tableName
+									+ "" WHERE UidString = ? AND TypeName = ? AND StateType = ?"");
 
-				pstmt.setString(1, objUid.stringForm());
-				pstmt.setString(2, typeName);
-				pstmt.setInt(3, 1);
+			pstmt.setString(1, objUid.stringForm());
+			pstmt.setString(2, typeName);
+			pstmt.setInt(3, 1);
 
-				int rowcount = pstmt.executeUpdate();
-				if (rowcount > 0) {
-					tsLogger.i18NLogger
-							.trace_JDBCImple_previouslycommitteddeleted(rowcount);
-				}
+			int rowcount = pstmt.executeUpdate();
+			if (rowcount > 0) {
+				tsLogger.i18NLogger
+						.trace_JDBCImple_previouslycommitteddeleted(rowcount);
 			}
+
 			// now do the commit itself:
-			{
-				PreparedStatement pstmt = connection
-						.get()
-						.prepareStatement(
-								""UPDATE ""
-										+ tableName
-										+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
-										+ StateStatus.OS_UNCOMMITTED);
+			pstmt2 = connection
+					.get()
+					.prepareStatement(
+							""UPDATE ""
+									+ tableName
+									+ "" SET StateType = 1 WHERE UidString = ? AND TypeName = ? AND StateType = ""
+									+ StateStatus.OS_UNCOMMITTED);
 
-				pstmt.setString(1, objUid.stringForm());
-				pstmt.setString(2, typeName);
+			pstmt2.setString(1, objUid.stringForm());
+			pstmt2.setString(2, typeName);
 
-				int rowcount = pstmt.executeUpdate();
-				if (rowcount > 0) {
-					result = true;
-					connection.get().commit();
-				} else {
-					connection.get().rollback();
-				}
+			int rowcount2 = pstmt2.executeUpdate();
+			if (rowcount2 > 0) {
+				result = true;
+				connection.get().commit();
+			} else {
+				connection.get().rollback();
 			}
+
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
+		} finally {
+			if (pstmt != null) {
+				try {
+					pstmt.close();
+				} catch (SQLException e) {
+					// Ignore
+				}
+			}
+			if (pstmt2 != null) {
+				try {
+					pstmt2.close();
+				} catch (SQLException e) {
+					// Ignore
+				}
+			}
 		}
 
 		return result;
@@ -123,8 +137,9 @@ public boolean hide_state(Uid objUid, String typeName)
 			typeName = typeName.substring(1);
 		boolean result = false;
 
+		PreparedStatement pstmt = null;
 		try {
-			PreparedStatement pstmt = connection
+			pstmt = connection
 					.get()
 					.prepareStatement(
 							""UPDATE ""
@@ -141,6 +156,14 @@ public boolean hide_state(Uid objUid, String typeName)
 			connection.get().commit();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_1(e);
+		} finally {
+			if (pstmt != null) {
+				try {
+					pstmt.close();
+				} catch (SQLException e) {
+					// Ignore
+				}
+			}
 		}
 
 		return result;
@@ -153,8 +176,9 @@ public boolean reveal_state(Uid objUid, String typeName)
 			typeName = typeName.substring(1);
 		boolean result = false;
 
+		PreparedStatement pstmt = null;
 		try {
-			PreparedStatement pstmt = connection
+			pstmt = connection
 					.get()
 					.prepareStatement(
 							""UPDATE ""
@@ -171,6 +195,14 @@ public boolean reveal_state(Uid objUid, String typeName)
 			connection.get().commit();
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_2(e);
+		} finally {
+			if (pstmt != null) {
+				try {
+					pstmt.close();
+				} catch (SQLException e) {
+					// Ignore
+				}
+			}
 		}
 
 		return result;
@@ -189,9 +221,9 @@ public int currentState(Uid objUid, String typeName)
 		int theState = StateStatus.OS_UNKNOWN;
 		ResultSet rs = null;
 
+		PreparedStatement pstmt = null;
 		try {
-
-			PreparedStatement pstmt = connection.get().prepareStatement(
+			pstmt = connection.get().prepareStatement(
 					""SELECT StateType, Hidden FROM "" + tableName
 							+ "" WHERE UidString = ? AND TypeName = ?"");
 
@@ -247,6 +279,21 @@ public int currentState(Uid objUid, String typeName)
 		} catch (SQLException e) {
 			tsLogger.i18NLogger.warn_objectstore_JDBCImple_3(e);
 			theState = StateStatus.OS_UNKNOWN;
+		} finally {
+			if (rs != null) {
+				try {
+					rs.close();
+				} catch (SQLException e) {
+					// ignore
+				}
+			}
+			if (pstmt != null) {
+				try {
+					pstmt.close();
+				} catch (SQLException e) {
+					// Ignore
+				}
+			}
 		}
 
 		return theState;
@@ -379,9 +426,9 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 			if ((stateType == StateStatus.OS_COMMITTED)
 					|| (stateType == StateStatus.OS_UNCOMMITTED)) {
 
+				PreparedStatement pstmt = null;
 				try {
-
-					PreparedStatement pstmt = connection
+					pstmt = connection
 							.get()
 							.prepareStatement(
 									""DELETE FROM ""
@@ -399,6 +446,14 @@ public boolean remove_state(Uid objUid, String typeName, int stateType)
 					connection.get().commit();
 				} catch (SQLException e) {
 					tsLogger.i18NLogger.warn_objectstore_JDBCImple_8(e);
+				} finally {
+					if (pstmt != null) {
+						try {
+							pstmt.close();
+						} catch (SQLException e) {
+							// Ignore
+						}
+					}
 				}
 			} else {
 				// can only remove (UN)COMMITTED objs
@@ -423,8 +478,9 @@ public InputObjectState read_state(Uid objUid, String typeName,
 				|| (stateType == StateStatus.OS_UNCOMMITTED)) {
 			ResultSet rs = null;
 
+			PreparedStatement pstmt = null;
 			try {
-				PreparedStatement pstmt = connection
+				pstmt = connection
 						.get()
 						.prepareStatement(
 								""SELECT ObjectState FROM ""
@@ -451,12 +507,20 @@ public InputObjectState read_state(Uid objUid, String typeName,
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_14(e);
 			} finally {
-				if (rs != null)
+				if (rs != null) {
 					try {
 						rs.close();
 					} catch (SQLException e) {
 						// Ignore
 					}
+				}
+				if (pstmt != null) {
+					try {
+						pstmt.close();
+					} catch (SQLException e) {
+						// Ignore
+					}
+				}
 			}
 		}
 
@@ -479,8 +543,10 @@ public boolean write_state(Uid objUid, String typeName,
 			byte[] b = state.buffer();
 			ResultSet rs = null;
 
+			PreparedStatement pstmt = null;
+			PreparedStatement pstmt2 = null;
 			try {
-				PreparedStatement pstmt = connection
+				pstmt = connection
 						.get()
 						.prepareStatement(
 								""SELECT ObjectState, UidString, StateType, TypeName FROM ""
@@ -501,7 +567,7 @@ public boolean write_state(Uid objUid, String typeName,
 				} else {
 					connection.get().commit();
 					// not in database, do insert:
-					PreparedStatement pstmt2 = connection
+					pstmt2 = connection
 							.get()
 							.prepareStatement(
 									""INSERT INTO ""
@@ -521,12 +587,27 @@ public boolean write_state(Uid objUid, String typeName,
 			} catch (SQLException e) {
 				tsLogger.i18NLogger.warn_objectstore_JDBCImple_writefailed(e);
 			} finally {
-				if (rs != null)
+				if (rs != null) {
 					try {
 						rs.close();
 					} catch (SQLException e) {
 						// Ignore
 					}
+				}
+				if (pstmt != null) {
+					try {
+						pstmt.close();
+					} catch (SQLException e) {
+						// Ignore
+					}
+				}
+				if (pstmt2 != null) {
+					try {
+						pstmt2.close();
+					} catch (SQLException e) {
+						// Ignore
+					}
+				}
 			}
 
 		}
@@ -575,6 +656,8 @@ protected Connection initialValue() {
 			}
 		}
 
+		stmt.close();
+
 		// This can be the case when triggering via EmptyObjectStore
 		if (!connection.get().getAutoCommit()) {
 			connection.get().commit();",2013-01-11T11:49:38Z,59
"@@ -394,7 +394,7 @@
     <jvm.args.other>-server</jvm.args.other>
     
     <!-- External dependencies versions -->
-    <jboss-as.version>8.0.0.Alpha2-SNAPSHOT</jboss-as.version>    
+    <jboss-as.version>8.0.0.Alpha3-SNAPSHOT</jboss-as.version>    
     <version.org.jboss.jbossas>1.0.4.Final</version.org.jboss.jbossas>
     <version.org.jboss>7.0.0.Final</version.org.jboss>
     <version.org.jboss.logmanager>1.4.1.Final</version.org.jboss.logmanager>",2013-07-15T10:42:32Z,39
"@@ -394,7 +394,7 @@
     <jvm.args.other>-server</jvm.args.other>
     
     <!-- External dependencies versions -->
-    <jboss-as.version>8.0.0.Alpha2-SNAPSHOT</jboss-as.version>    
+    <jboss-as.version>8.0.0.Alpha3-SNAPSHOT</jboss-as.version>    
     <version.org.jboss.jbossas>1.0.4.Final</version.org.jboss.jbossas>
     <version.org.jboss>7.0.0.Final</version.org.jboss>
     <version.org.jboss.logmanager>1.4.1.Final</version.org.jboss.logmanager>",2013-07-15T10:42:32Z,239
"@@ -402,6 +402,7 @@ public Response terminateTransaction(@PathParam(""TxId"")String txId, @QueryParam(
 
         Transaction tx = getTransaction(txId);
         String how = TxSupport.getStringValue(content, TxStatusMediaType.STATUS_PROPERTY);
+        TxStatus currentStatus = tx.getTxStatus();
         String status;
         int scRes;
 
@@ -410,7 +411,7 @@ public Response terminateTransaction(@PathParam(""TxId"")String txId, @QueryParam(
          * 276records information about transactions that have rolled back, (not necessary for presumed
          * 277rollback semantics) but at a minimum MUST return 404.
          */
-        if (!tx.isRunning())
+        if (!currentStatus.isRunning() && !currentStatus.isRollbackOnly())
             return Response.status(HttpURLConnection.HTTP_PRECON_FAILED).build();
 
 		/*",2013-06-08T18:32:11Z,240
"@@ -217,6 +217,58 @@ public void testRollback() throws Exception {
         }
     }
 
+    @Test
+    public void testRollbackOnly() throws Exception {
+        TxSupport txn = new TxSupport();
+
+        txn.startTx();
+
+        Assert.assertEquals(TxStatusMediaType.TX_ROLLBACK_ONLY, txn.markTxRollbackOnly());
+        Assert.assertEquals(TxStatusMediaType.TX_ROLLEDBACK, txn.rollbackTx());
+
+        /*
+        296... Upon termination, the resource and all associated
+        297resources are implicitly deleted. For any subsequent PUT invocation, such as due to a
+        298timeout/retry, then an implementation MAY return 410 if the implementation records information
+        299about transactions that have rolled back, (not necessary for presumed rollback semantics) but at
+        300a minimum MUST return 404. The invoker can assume this was a rollback.
+        */
+        try {
+            txn.rollbackTx();
+        } catch (HttpResponseException e) {
+            Assert.assertTrue(e.getActualResponse() == HttpURLConnection.HTTP_GONE ||
+                    e.getActualResponse() == HttpURLConnection.HTTP_NOT_FOUND);
+        }
+    }
+
+    @Test
+    public void testRollbackOnlyWithCommit() throws Exception {
+        TxSupport txn = new TxSupport();
+
+        txn.startTx();
+
+        Assert.assertEquals(TxStatusMediaType.TX_ROLLBACK_ONLY, txn.markTxRollbackOnly());
+
+        /*
+         * committing a transaction marked rollback only should automatically abort the transaction
+         */
+        Assert.assertEquals(TxStatusMediaType.TX_ROLLEDBACK, txn.commitTx());
+
+        /*
+        296... Upon termination, the resource and all associated
+        297resources are implicitly deleted. For any subsequent PUT invocation, such as due to a
+        298timeout/retry, then an implementation MAY return 410 if the implementation records information
+        299about transactions that have rolled back, (not necessary for presumed rollback semantics) but at
+        300a minimum MUST return 404. The invoker can assume this was a rollback.
+        */
+        try {
+            txn.rollbackTx();
+        } catch (HttpResponseException e) {
+            Assert.assertTrue(e.getActualResponse() == HttpURLConnection.HTTP_GONE ||
+                    e.getActualResponse() == HttpURLConnection.HTTP_NOT_FOUND);
+        }
+    }
+
     @Test
     public void testEnlistResource() throws Exception {
         TxSupport txn = new TxSupport();",2013-06-08T18:32:11Z,241
"@@ -84,6 +84,10 @@ public boolean isReadOnly() {
         return this.equals(TxStatus.TransactionReadOnly);
     }
 
+    public boolean isRollbackOnly() {
+        return this.equals(TxStatus.TransactionRollbackOnly);
+    }
+
     public boolean isRunning() {
         return this.equals(TransactionActive);
     }",2013-06-08T18:32:11Z,242
"@@ -24,6 +24,7 @@ public class TxStatusMediaType extends TxMediaType{
     public static final String TX_PREPARED = toMediaType(TxStatus.TransactionPrepared);
     public static final String TX_COMMITTED = toMediaType(TxStatus.TransactionCommitted);
     public static final String TX_ROLLEDBACK = toMediaType(TxStatus.TransactionRolledBack);
+    public static final String TX_ROLLBACK_ONLY = toMediaType(TxStatus.TransactionRollbackOnly);
     public static final String TX_COMMITTED_ONE_PHASE = toMediaType(TxStatus.TransactionCommittedOnePhase);
     public static final String TX_H_MIXED = toMediaType(TxStatus.TransactionHeuristicMixed);
     public static final String TX_H_ROLLBACK = toMediaType(TxStatus.TransactionHeuristicRollback);",2013-06-08T18:32:11Z,243
"@@ -180,6 +180,10 @@ public String rollbackTx() throws HttpResponseException {
         return httpRequest(new int[] {HttpURLConnection.HTTP_OK}, links.get(TxLinkNames.TERMINATOR), ""PUT"",
                 TxMediaType.TX_STATUS_MEDIA_TYPE, TxStatusMediaType.TX_ROLLEDBACK, null);
     }
+    public String markTxRollbackOnly() throws HttpResponseException {
+        return httpRequest(new int[] {HttpURLConnection.HTTP_OK}, links.get(TxLinkNames.TERMINATOR), ""PUT"",
+                TxMediaType.TX_STATUS_MEDIA_TYPE, TxStatusMediaType.TX_ROLLBACK_ONLY, null);
+    }
 
     /**
      * Get the status of the current transacton",2013-06-08T18:32:11Z,244
"@@ -87,8 +87,10 @@ function init_jboss_home {
 
 function xts_as_tests {
   echo ""#-1. XTS AS Integration Test""
-  mvn -f ${WORKSPACE}/jboss-as/testsuite/integration/xts/pom.xml -Pxts.integration.tests.profile ""$@"" test
+  cd ${WORKSPACE}/jboss-as
+  ./build.sh -f ./testsuite/integration/xts/pom.xml -Pxts.integration.tests.profile ""$@"" test
   [ $? = 0 ] || fatal ""XTS AS Integration Test failed""
+  cd ${WORKSPACE}
 }
 
 function txframework_tests {",2012-10-04T10:25:32Z,10
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/04/2013
+ */
+@Named(""DummyData"")
+@CompensationScoped
+public class DummyData implements Serializable {
+
+    private String value = """";
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+
+    public String getValue() {
+
+        return value;
+    }
+}",2013-05-25T08:04:33Z,232
"@@ -0,0 +1,164 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.UserBusinessActivity;
+import com.arjuna.mw.wst11.UserBusinessActivityFactory;
+import com.arjuna.wst.TransactionRolledBackException;
+import junit.framework.Assert;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
+import org.jboss.narayana.txframework.functional.common.EventLog;
+import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
+import org.jboss.shrinkwrap.api.ArchivePaths;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.JavaArchive;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.lang.annotation.Annotation;
+import java.util.Arrays;
+import java.util.List;
+
+@RunWith(Arquillian.class)
+public class DistributedTest {
+
+    UserBusinessActivity uba;
+    TestService client;
+
+    @Deployment()
+    public static JavaArchive createTestArchive() {
+        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+                .addPackages(false, DistributedTest.class.getPackage())
+                .addPackage(DummyCompensationHandler1.class.getPackage())
+                .addClass(ParticipantCompletionCoordinatorRules.class)
+                .addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml""))
+                .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
+
+        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
+
+        String ManifestMF = ""Manifest-Version: 1.0\n""
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.xts\n"";
+
+        archive.setManifest(new StringAsset(ManifestMF));
+
+        return archive;
+    }
+
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @Before
+    public void setupTest() throws Exception {
+
+        uba = UserBusinessActivityFactory.userBusinessActivity();
+        client = new TestServiceClient();
+    }
+
+    @After
+    public void teardownTest() throws Exception {
+
+        client.resetHandlerFlags();
+        cancelIfActive(uba);
+    }
+
+    @Test
+    public void testSimple() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        client.saveData(false);
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(true, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+
+    }
+
+
+
+    @Test
+    public void testClientDrivenCompensate() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        uba.begin();
+        client.saveData(false);
+        uba.cancel();
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(true, client.wasCompensationHandlerInvoked());
+    }
+
+
+    @Test
+    public void testRuntimeException() throws Exception {
+
+        try {
+            uba.begin();
+            client.saveData(true);
+            Assert.fail(""Exception should have been thrown by now"");
+        } catch (RuntimeException e) {
+            //Exception expected
+        } finally {
+            uba.cancel();
+        }
+
+        Assert.assertEquals(false, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+    }
+
+    public void cancelIfActive(UserBusinessActivity uba) {
+
+        try {
+            uba.cancel();
+        } catch (Throwable e) {
+            // do nothing, not active
+        }
+    }
+}",2013-05-25T08:04:33Z,114
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/05/2013
+ */
+@Named(""State"")
+@CompensationScoped
+public class State implements Serializable {
+
+    private String value;
+
+    public String getValue() {
+
+        return value;
+    }
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+}",2013-05-25T08:04:33Z,233
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import javax.ejb.Remote;
+import javax.jws.WebMethod;
+
+@Remote
+public interface TestService {
+
+    @WebMethod
+    public void saveData(Boolean throwException);
+
+    @WebMethod
+    public void resetHandlerFlags();
+
+    @WebMethod
+    public boolean wasCompensationHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionLoggedHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionConfirmedHandlerInvoked();
+
+}",2013-05-25T08:04:33Z,234
"@@ -0,0 +1,74 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
+import org.jboss.narayana.compensations.api.Compensatable;
+import javax.xml.namespace.QName;
+import javax.xml.ws.Service;
+import java.net.URL;
+
+public class TestServiceClient implements TestService {
+
+    private TestService testService;
+
+    public TestServiceClient() throws Exception {
+
+        URL wsdlLocation = new URL(""http://localhost:8080/test/TestServiceService/TestService?wsdl"");
+        QName serviceName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+        QName portName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+
+        Service service = Service.create(wsdlLocation, serviceName);
+        testService = service.getPort(portName, TestService.class, new WSTXFeature());
+    }
+
+    @Override
+    @Compensatable
+    public void saveData(Boolean throwException) {
+        testService.saveData(throwException);
+    }
+
+    @Override
+    public void resetHandlerFlags() {
+        testService.resetHandlerFlags();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return testService.wasCompensationHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return testService.wasTransactionLoggedHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return testService.wasTransactionConfirmedHandlerInvoked();
+    }
+}
+",2013-05-25T08:04:33Z,235
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyConfirmationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyTransactionLoggedHandler1;
+
+import javax.ejb.Stateless;
+import javax.inject.Inject;
+import javax.jws.WebMethod;
+import javax.jws.WebService;
+import javax.jws.soap.SOAPBinding;
+
+
+/**
+ * @author Paul Robinson (paul.robinson@redhat.com)
+ */
+@Stateless
+@WebService(serviceName = ""TestServiceService"", portName = ""TestServiceService"",
+        name = ""TestService"", targetNamespace = ""http://www.jboss.com/functional/compensations/distributed/"")
+@SOAPBinding(style = SOAPBinding.Style.RPC)
+public class TestServiceService implements TestService {
+
+    @Inject
+    private State state;
+
+
+    @Compensatable
+    @TxCompensate(DummyCompensationHandler1.class)
+    @TxConfirm(DummyConfirmationHandler1.class)
+    @TxLogged(DummyTransactionLoggedHandler1.class)
+    public void saveData(Boolean throwRuntimeException) {
+
+        if (throwRuntimeException) {
+            throw new RuntimeException(""Test instructed the service to throw a RuntimeException"");
+        }
+
+        state.setValue(""myValue"");
+    }
+
+    @WebMethod
+    public void resetHandlerFlags() {
+
+        DummyConfirmationHandler1.reset();
+        DummyTransactionLoggedHandler1.reset();
+        DummyCompensationHandler1.reset();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return DummyConfirmationHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return DummyTransactionLoggedHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return DummyCompensationHandler1.getCalled();
+    }
+}",2013-05-25T08:04:33Z,236
"@@ -16,7 +16,7 @@
     <properties>
         <narayana.version>4.16.1.Final</narayana.version>
         <arquillian.version>1.0.0.CR7</arquillian.version>
-        <jboss.version>7.1.0.Final-SNAPSHOT</jboss.version>
+        <jboss.version>7.1.1.Final-SNAPSHOT</jboss.version>
     </properties>
 
     <build>
@@ -29,6 +29,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.7.2</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
     </build>
 
@@ -110,7 +117,21 @@
         <dependency>
             <groupId>org.hibernate.javax.persistence</groupId>
             <artifactId>hibernate-jpa-2.0-api</artifactId>
-            <version>1.0.1.Final</version>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.spec.javax.ejb</groupId>
+            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.apache.cxf</groupId>
+            <artifactId>cxf-rt-frontend-jaxws</artifactId>
+            <version>2.4.6</version>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.ws</groupId>
+            <artifactId>jbossws-spi</artifactId>
+            <version>2.0.2.GA</version>
         </dependency>
         <dependency>
             <groupId>org.jboss.spec.javax.ejb</groupId>
@@ -121,9 +142,9 @@
 
     <profiles>
         <profile>
-            <id>default</id>
+            <id>arq</id>
             <activation>
-                <activeByDefault>true</activeByDefault>
+                <activeByDefault>false</activeByDefault>
             </activation>
             <build>
                 <plugins>",2012-03-05T10:33:58Z,245
"@@ -17,10 +17,18 @@ public Object intercept(InvocationContext ic) throws Throwable
     {
         Method serviceMethod = ic.getMethod();
         Object serviceImpl = ic.getTarget();
-
         ProtocolHandler protocolHandler = HandlerFactory.createInstance(serviceImpl, serviceMethod);
 
-        return protocolHandler.proceed(ic);
+        Object result = null;
+        try {
+            result = protocolHandler.proceed(ic);
+            protocolHandler.notifySuccess();
+        } catch (Exception e) {
+            protocolHandler.notifyFailure();
+            throw e;
+        }
+
+        return result;
     }
 
 }",2012-03-05T10:33:58Z,246
"@@ -0,0 +1,139 @@
+package org.jboss.narayana.txframework.impl;
+
+import javax.ejb.Stateless;
+import javax.xml.namespace.QName;
+import javax.xml.ws.handler.MessageContext;
+import javax.xml.ws.handler.soap.SOAPHandler;
+import javax.xml.ws.handler.soap.SOAPMessageContext;
+import java.lang.reflect.Method;
+import java.util.HashSet;
+import java.util.Set;
+
+import org.apache.cxf.frontend.MethodDispatcher;
+import org.apache.cxf.jaxws.context.WrappedMessageContext;
+import org.apache.cxf.message.Exchange;
+import org.apache.cxf.service.Service;
+import org.apache.cxf.service.model.BindingOperationInfo;
+import org.jboss.narayana.txframework.api.annotation.service.ServiceRequest;
+import org.jboss.narayana.txframework.api.exception.TXFrameworkException;
+import org.jboss.narayana.txframework.impl.handlers.HandlerFactory;
+import org.jboss.narayana.txframework.impl.handlers.ProtocolHandler;
+import org.jboss.wsf.spi.deployment.Endpoint;
+import org.jboss.wsf.spi.deployment.Reference;
+
+public class ServiceRequestSoapHandler implements SOAPHandler<SOAPMessageContext> {
+
+    private ProtocolHandler interceptor;
+
+    private boolean shouldIntercept = false;
+
+    public Set<QName> getHeaders() {
+
+        System.out.println(""ServiceRequestSoapHandler.getHeaders()"");
+        return new HashSet<QName>();
+    }
+
+    public boolean handleMessage(SOAPMessageContext soapMessageContext) {
+
+        Boolean outbound = (Boolean) soapMessageContext.get(MessageContext.MESSAGE_OUTBOUND_PROPERTY);
+
+        if (outbound) {
+            return handleOutboundMessage(soapMessageContext);
+        } else {
+            return handleInboundMessage(soapMessageContext);
+        }
+    }
+
+    private boolean handleInboundMessage(SOAPMessageContext soapMessageContext) {
+        System.out.println(""ServiceRequestSoapHandler.handleInboundMessage()"");
+
+        Object instance = getInstance(soapMessageContext);
+        Method method = getMethod(soapMessageContext);
+
+        shouldIntercept = !isEJB(instance) && isServiceRequestMethod(method);
+
+        if (shouldIntercept) {
+            try {
+                interceptor= HandlerFactory.createInstance(instance, method);
+            } catch (TXFrameworkException e) {
+                //todo: use logger
+                e.printStackTrace();
+                return false;
+            }
+        }
+
+        return true;
+    }
+
+
+    private boolean isServiceRequestMethod(Method method)
+    {
+        try {
+            ServiceRequest serviceRequest = method.getAnnotation(ServiceRequest.class);
+            return serviceRequest != null;
+        } catch (Throwable e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private boolean isEJB(Object instance)
+    {
+        try {
+            Stateless stateless = instance.getClass().getAnnotation(Stateless.class);
+            return stateless != null;
+        } catch (Throwable e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private boolean handleOutboundMessage(SOAPMessageContext soapMessageContext) {
+        System.out.println(""ServiceRequestSoapHandler.handleOutboundMessage()"");
+
+        if (shouldIntercept) {
+            try {
+                interceptor.notifySuccess();
+            } catch (TXFrameworkException e) {
+                //todo: use logger
+                e.printStackTrace();
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public boolean handleFault(SOAPMessageContext soapMessageContext) {
+        System.out.println(""ServiceRequestSoapHandler.handleFault()"");
+
+        if (shouldIntercept) {
+            try {
+                interceptor.notifyFailure();
+            } catch (TXFrameworkException e) {
+                //todo: use logger
+                e.printStackTrace();
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public void close(MessageContext messageContext) {
+        System.out.println(""ServiceRequestSoapHandler.close()"");
+    }
+
+    private Object getInstance(MessageContext ctx) {
+
+        Endpoint endpoint = ((WrappedMessageContext) ctx).getWrappedMessage().getExchange().get(Endpoint.class);
+        Reference ref = endpoint.getInstanceProvider().getInstance(endpoint.getTargetBeanName());
+        return ref.getValue();
+    }
+
+    private Method getMethod(MessageContext ctx) {
+
+        Exchange exchange = ((WrappedMessageContext) ctx).getWrappedMessage().getExchange();
+        BindingOperationInfo bop = exchange.get(BindingOperationInfo.class);
+        MethodDispatcher md = (MethodDispatcher) exchange.get(Service.class).get(MethodDispatcher.class.getName());
+        return md.getMethod(bop);
+    }
+}",2012-03-05T10:33:58Z,247
"@@ -1,14 +1,17 @@
 package org.jboss.narayana.txframework.impl.as;
 
+import org.jboss.narayana.txframework.api.management.DataControl;
 import org.jboss.narayana.txframework.impl.DataControlImpl;
 import org.jboss.narayana.txframework.impl.ServiceRequestInterceptor;
+import org.jboss.narayana.txframework.impl.handlers.wsat.ATTxControlImpl;
 
 import javax.enterprise.event.Observes;
 import javax.enterprise.inject.spi.AnnotatedType;
 import javax.enterprise.inject.spi.BeanManager;
 import javax.enterprise.inject.spi.BeforeBeanDiscovery;
 import javax.enterprise.inject.spi.Extension;
 
+
 /**
  * @author paul.robinson@redhat.com, 2012-02-13
  */
@@ -24,6 +27,12 @@ public void register(@Observes BeforeBeanDiscovery bbd, BeanManager bm) {
         final AnnotatedType<DataControlImpl> dataControlImpl = bm.createAnnotatedType(DataControlImpl.class);
         bbd.addAnnotatedType(dataControlImpl);
 
+        final AnnotatedType<DataControl> dataControl = bm.createAnnotatedType(DataControl.class);
+        bbd.addAnnotatedType(dataControl);
+
+        final AnnotatedType<ATTxControlImpl> atTxControlImpl = bm.createAnnotatedType(ATTxControlImpl.class);
+        bbd.addAnnotatedType(atTxControlImpl);
+
         final AnnotatedType<ServiceRequestInterceptor> serviceRequestInterceptor = bm.createAnnotatedType(ServiceRequestInterceptor.class);
         bbd.addAnnotatedType(serviceRequestInterceptor);
 ",2012-03-05T10:33:58Z,248
"@@ -1,8 +1,14 @@
 package org.jboss.narayana.txframework.impl.handlers;
 
+import org.jboss.narayana.txframework.api.exception.TXFrameworkException;
+
 import javax.interceptor.InvocationContext;
 
 public interface ProtocolHandler
 {
     public Object proceed(InvocationContext ic) throws Exception;
+
+    public void notifySuccess() throws TXFrameworkException;
+
+    public void notifyFailure() throws TXFrameworkException;
 }",2012-03-05T10:33:58Z,249
"@@ -1,10 +1,15 @@
 package org.jboss.narayana.txframework.impl.handlers.wsat;
 
 import com.arjuna.mw.wst.TxContext;
+import com.arjuna.ats.arjuna.common.Uid;
 import com.arjuna.mw.wst11.TransactionManager;
 import com.arjuna.mw.wst11.TransactionManagerFactory;
 import com.arjuna.mw.wst11.UserTransactionFactory;
-import com.arjuna.wst.*;
+import com.arjuna.wst.Durable2PCParticipant;
+import com.arjuna.wst.SystemException;
+import com.arjuna.wst.UnknownTransactionException;
+import com.arjuna.wst.Volatile2PCParticipant;
+import com.arjuna.wst.WrongStateException;
 import org.jboss.narayana.txframework.api.annotation.management.TxManagement;
 import org.jboss.narayana.txframework.api.exception.TXFrameworkException;
 import org.jboss.narayana.txframework.api.management.ATTxControl;
@@ -59,18 +64,20 @@ private void injectTxManagement(ATTxControl atTxControl) throws TXFrameworkExcep
         //didn't find an injection point. No problem as this is optional
     }
 
+    @Override
     public Object proceed(InvocationContext ic) throws Exception
     {
-        try
-        {
-            return ic.proceed();
-        }
-        //todo: Should this not be throwable?
-        catch (Exception e)
-        {
-            //todo: Something went wrong, so ensure TX rollback
-            throw e;
-        }
+        return ic.proceed();
+    }
+
+    @Override
+    public void notifySuccess() {
+        //do nothing
+    }
+
+    @Override
+    public void notifyFailure() {
+        //Todo: ensure transaction rolled back
     }
 
     private void registerParticipants(Object participant, String idPrefix) throws ParticipantRegistrationException",2012-03-05T10:33:58Z,250
"@@ -1,8 +1,5 @@
 package org.jboss.narayana.txframework.impl.handlers.wsba;
 
-import com.arjuna.ats.arjuna.common.Uid;
-import com.arjuna.mw.wst11.BusinessActivityManager;
-import com.arjuna.mw.wst11.BusinessActivityManagerFactory;
 import com.arjuna.wst.SystemException;
 import com.arjuna.wst.UnknownTransactionException;
 import com.arjuna.wst.WrongStateException;
@@ -16,9 +13,6 @@
 import javax.interceptor.InvocationContext;
 import java.lang.reflect.Field;
 import java.lang.reflect.Method;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
 
 public abstract class WSBAHandler implements ProtocolHandler
 {
@@ -65,25 +59,39 @@ private void injectTxManagement(WSBATxControl wsbaTxControl) throws TXFrameworkE
 
     public Object proceed(InvocationContext ic) throws Exception
     {
-        try
+        return ic.proceed();
+    }
+
+    @Override
+    public void notifySuccess() throws TXFrameworkException{
+        //todo: find a better way of getting the current status of the TX
+        if (shouldComplete(serviceMethod) && !((WSBATxControlImpl) wsbaTxControl).isCannotComplete())
         {
-            Object result = ic.proceed();
-            //todo: find a better way of getting the current status of the TX
-            if (shouldComplete(serviceMethod) && !((WSBATxControlImpl) wsbaTxControl).isCannotComplete())
-            {
+            try {
                 participantManager.completed();
+            } catch (WrongStateException e) {
+                throw new TXFrameworkException(""Error notifying completion on participant manager."", e);
+            } catch (UnknownTransactionException e) {
+                throw new TXFrameworkException(""Error notifying completion on participant manager."", e);
+            } catch (SystemException e) {
+                throw new TXFrameworkException(""Error notifying completion on participant manager."", e);
             }
-            return result;
-        }
-        //todo: Should this not be throwable?
-        catch (Exception e)
-        {
-            //Something went wrong, so notify cannot completed
-            participantManager.cannotComplete();
-            throw e;
         }
     }
 
+    @Override
+    public void notifyFailure() throws TXFrameworkException {
+        try {
+                participantManager.cannotComplete();
+            } catch (WrongStateException e) {
+                throw new TXFrameworkException(""Error notifying cannotComplete on participant manager."", e);
+            } catch (UnknownTransactionException e) {
+                throw new TXFrameworkException(""Error notifying cannotComplete on participant manager."", e);
+            } catch (SystemException e) {
+                throw new TXFrameworkException(""Error notifying cannotComplete on participant manager."", e);
+            }
+    }
+
     private boolean shouldComplete(Method serviceMethod)
     {
         Completes completes = serviceMethod.getAnnotation(Completes.class);",2012-03-05T10:33:58Z,251
"@@ -21,7 +21,7 @@ public WSBAInternalParticipant() throws ParticipantRegistrationException
         }
         catch (SystemException e)
         {
-            throw new ParticipantRegistrationException(""Unable to lookup current tranaction id"", e);
+            throw new ParticipantRegistrationException(""Unable to lookup current transaction id"", e);
         }
     }
 ",2012-03-05T10:33:58Z,252
"@@ -6,6 +6,7 @@
 import org.jboss.narayana.txframework.api.annotation.lifecycle.wsat.*;
 import org.jboss.narayana.txframework.functional.clients.ATClient;
 import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.AT;
 import org.jboss.shrinkwrap.api.asset.Asset;
 import org.junit.After;
@@ -22,7 +23,7 @@
 import static org.jboss.narayana.txframework.functional.common.ServiceCommand.*;
 
 @RunWith(Arquillian.class)
-public class ATTest extends BaseFunctionalTest
+public class ATTest extends BaseFunctionalTestWar
 {
     private UserTransaction ut;
     private AT client;
@@ -101,9 +102,8 @@ public void testApplicationException() throws Exception
             client.invoke(THROW_APPLICATION_EXCEPTION);
             Assert.fail(""Exception should have been thrown by now"");
         }
-        catch (SOAPFaultException e)
+        catch (SomeApplicationException e)
         {
-            //todo: can we pass application exceptions over SOAP when using an EJB exposed as a JAX-WS ws?
             System.out.println(""Caught exception"");
         }
         finally",2012-03-05T10:33:58Z,253
"@@ -0,0 +1,54 @@
+package org.jboss.narayana.txframework.functional;
+
+import com.arjuna.mw.wst11.UserBusinessActivity;
+import com.arjuna.mw.wst11.UserTransaction;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.narayana.txframework.functional.clients.ATClient;
+import org.jboss.narayana.txframework.functional.common.EventLog;
+import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
+import org.jboss.narayana.txframework.functional.interfaces.AT;
+import org.jboss.narayana.txframework.functional.services.ATService;
+import org.jboss.shrinkwrap.api.ArchivePaths;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.ByteArrayAsset;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.WebArchive;
+
+public class BaseFunctionalTestWar {
+
+    @Deployment
+    public static WebArchive createTestArchive() {
+        //todo: Does the application developer have to specify the interceptor?
+        WebArchive archive = ShrinkWrap.create(WebArchive.class, ""echo_service.war"")
+                .addClasses(ATClient.class, AT.class, ATService.class, SomeApplicationException.class, EventLog.class, BaseFunctionalTestWar.class, ServiceCommand.class)
+                .addAsWebInfResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml""))
+                .addAsWebInfResource(""web.xml"", ""web.xml"");
+
+        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
+
+        String ManifestMF = ""Manifest-Version: 1.0\n""
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.as.xts,org.jboss.xts,org.jboss.modules,deployment.arquillian-service,org.jboss.msc,org.jboss.jts\n"";
+        archive.setManifest(new StringAsset(ManifestMF));
+
+        return archive;
+    }
+
+    public void rollbackIfActive(UserTransaction ut) {
+        try {
+            ut.rollback();
+        } catch (Throwable th2) {
+            // do nothing, not active
+        }
+    }
+
+    public void cancelIfActive(UserBusinessActivity uba) {
+        try {
+            uba.cancel();
+        } catch (Throwable e) {
+            // do nothing, not active
+        }
+    }
+
+}",2012-03-05T10:33:58Z,254
"@@ -33,7 +33,7 @@ public class ATClient
 {
     public static AT newInstance() throws Exception
     {
-        URL wsdlLocation = new URL(""http://localhost:8080/test/ATService/AT?wsdl"");
+        URL wsdlLocation = new URL(""http://localhost:8080/echo_service/ATService?wsdl"");
         QName serviceName = new QName(""http://www.jboss.com/functional/at/"", ""ATService"");
         QName portName = new QName(""http://www.jboss.com/functional/at/"", ""AT"");
 ",2012-03-05T10:33:58Z,255
"@@ -3,10 +3,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.common.EventLog;
 import org.jboss.narayana.txframework.functional.common.ServiceCommand;
-import javax.ejb.Remote;
+
 import javax.jws.WebMethod;
 
-@Remote
 public interface AT
 {
     @WebMethod",2012-03-05T10:33:58Z,256
"@@ -32,12 +32,8 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.common.EventLog;
 import org.jboss.narayana.txframework.functional.common.ServiceCommand;
-import org.jboss.narayana.txframework.functional.interfaces.AT;
 import org.jboss.narayana.txframework.impl.TXControlException;
-import javax.ejb.Remote;
-import javax.ejb.Stateless;
 import javax.inject.Inject;
-import javax.jws.HandlerChain;
 import javax.jws.WebMethod;
 import javax.jws.WebService;
 import javax.jws.soap.SOAPBinding;
@@ -46,12 +42,10 @@
 /**
  * @author Paul Robinson (paul.robinson@redhat.com)
  */
-@Remote(AT.class)
 @WSAT(bridgeType = BridgeType.NONE)
-@Stateless
 @WebService(serviceName = ""ATService"", portName = ""AT"", name = ""AT"", targetNamespace = ""http://www.jboss.com/functional/at/"")
 @SOAPBinding(style = SOAPBinding.Style.RPC)
-public class ATService implements AT
+public class ATService
 {
     @Inject
     DataControl dataControl;",2012-03-05T10:33:58Z,257
"@@ -0,0 +1,38 @@
+<!--
+  JBoss, Home of Professional Open Source
+  Copyright 2006, Red Hat Middleware LLC, and individual contributors
+  as indicated by the @author tags.
+  See the copyright.txt in the distribution for a full listing
+  of individual contributors.
+  This copyrighted material is made available to anyone wishing to use,
+  modify, copy, or redistribute it subject to the terms and conditions
+  of the GNU Lesser General Public License, v. 2.1.
+  This program is distributed in the hope that it will be useful, but WITHOUT A
+  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+  You should have received a copy of the GNU Lesser General Public License,
+  v.2.1 along with this distribution; if not, write to the Free Software
+  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+  MA  02110-1301, USA.
+
+
+  (C) 2005-2006,
+  @author JBoss Inc.
+-->
+<web-app xmlns=""http://java.sun.com/xml/ns/j2ee""
+         xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd""
+         version=""2.4"">
+
+    <servlet>
+        <servlet-name>ATService</servlet-name>
+        <servlet-class>org.jboss.narayana.txframework.functional.services.ATService</servlet-class>
+    </servlet>
+
+    <servlet-mapping>
+        <servlet-name>ATService</servlet-name>
+        <url-pattern>/ATService</url-pattern>
+    </servlet-mapping>
+
+
+</web-app>
\ No newline at end of file",2012-03-05T10:33:58Z,258
"@@ -22,7 +22,11 @@
 
 package org.jboss.narayana.txframework.functional.rest.at.simpleEJB;
 
+import java.lang.annotation.Annotation;
+import java.util.Arrays;
+
 import junit.framework.Assert;
+
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.at.Commit;
@@ -43,9 +47,6 @@
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
-import java.lang.annotation.Annotation;
-import java.util.Arrays;
-
 /**
  * @author paul.robinson@redhat.com 06/04/2012
  */",2013-03-01T12:27:52Z,200
"@@ -22,16 +22,12 @@
 
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
-import com.arjuna.mw.wst11.client.JaxWSHeaderContextProcessor;
-import org.jboss.narayana.txframework.functional.ws.at.bridged.ATBridge;
+import java.net.URL;
 
 import javax.xml.namespace.QName;
-import javax.xml.ws.BindingProvider;
 import javax.xml.ws.Service;
-import javax.xml.ws.handler.Handler;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
 
 public class ATBridgeClient {
 
@@ -42,15 +38,7 @@ public static ATBridge newInstance() throws Exception {
         QName portName = new QName(""http://www.jboss.com/functional/at/bridge"", ""ATBridge"");
 
         Service service = Service.create(wsdlLocation, serviceName);
-        ATBridge client = service.getPort(portName, ATBridge.class);
-
-        /*
-           Add client handler chain
-        */
-        BindingProvider bindingProvider = (BindingProvider) client;
-        List<Handler> handlers = new ArrayList<Handler>();
-        handlers.add(new JaxWSHeaderContextProcessor());
-        bindingProvider.getBinding().setHandlerChain(handlers);
+        ATBridge client = service.getPort(portName, ATBridge.class, new WSTXFeature());
 
         return client;
     }",2013-03-01T12:27:52Z,259
"@@ -22,15 +22,17 @@
 
 package org.jboss.narayana.txframework.functional.ws.ba.bridged;
 
-import com.arjuna.mw.wst11.client.JaxWSHeaderContextProcessor;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
 
 import javax.xml.namespace.QName;
 import javax.xml.ws.BindingProvider;
 import javax.xml.ws.Service;
 import javax.xml.ws.handler.Handler;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
+
+import com.arjuna.mw.wst11.client.JaxWSHeaderContextProcessor;
+import com.arjuna.mw.wst11.client.WSTXFeature;
 
 public class BABridgedClient {
 
@@ -41,15 +43,7 @@ public static BABridged newInstance() throws Exception {
         QName portName = new QName(""http://www.jboss.com/functional/ba/bridged/"", ""BABridgedService"");
 
         Service service = Service.create(wsdlLocation, serviceName);
-        BABridged client = service.getPort(portName, BABridged.class);
-
-        /*
-           Add client handler chain
-        */
-        BindingProvider bindingProvider = (BindingProvider) client;
-        List<Handler> handlers = new ArrayList<Handler>(1);
-        handlers.add(new JaxWSHeaderContextProcessor());
-        bindingProvider.getBinding().setHandlerChain(handlers);
+        BABridged client = service.getPort(portName, BABridged.class, new WSTXFeature());
 
         return client;
     }",2013-03-01T12:27:52Z,260
"@@ -22,16 +22,12 @@
 
 package org.jboss.narayana.txframework.functional.ws.ba.coordinatorCompletion;
 
-import com.arjuna.mw.wst11.client.JaxWSHeaderContextProcessor;
-import org.jboss.narayana.txframework.functional.ws.ba.coordinatorCompletion.BACoordinatorCompletion;
+import java.net.URL;
 
 import javax.xml.namespace.QName;
-import javax.xml.ws.BindingProvider;
 import javax.xml.ws.Service;
-import javax.xml.ws.handler.Handler;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
 
 public class BACoordinatorCompletionClient {
 
@@ -42,15 +38,7 @@ public static BACoordinatorCompletion newInstance() throws Exception {
         QName portName = new QName(""http://www.jboss.com/functional/ba/coordinatorcompletion/"", ""BACoordinatorCompletionService"");
 
         Service service = Service.create(wsdlLocation, serviceName);
-        BACoordinatorCompletion client = service.getPort(portName, BACoordinatorCompletion.class);
-
-        /*
-           Add client handler chain
-        */
-        BindingProvider bindingProvider = (BindingProvider) client;
-        List<Handler> handlers = new ArrayList<Handler>(1);
-        handlers.add(new JaxWSHeaderContextProcessor());
-        bindingProvider.getBinding().setHandlerChain(handlers);
+        BACoordinatorCompletion client = service.getPort(portName, BACoordinatorCompletion.class, new WSTXFeature());
 
         return client;
     }",2013-03-01T12:27:52Z,261
"@@ -22,16 +22,12 @@
 
 package org.jboss.narayana.txframework.functional.ws.ba.participantCompletion;
 
-import com.arjuna.mw.wst11.client.JaxWSHeaderContextProcessor;
-import org.jboss.narayana.txframework.functional.ws.ba.participantCompletion.BAParticipantCompletion;
+import java.net.URL;
 
 import javax.xml.namespace.QName;
-import javax.xml.ws.BindingProvider;
 import javax.xml.ws.Service;
-import javax.xml.ws.handler.Handler;
-import java.net.URL;
-import java.util.ArrayList;
-import java.util.List;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
 
 public class BAParticipantCompletionClient {
 
@@ -42,15 +38,7 @@ public static BAParticipantCompletion newInstance() throws Exception {
         QName portName = new QName(""http://www.jboss.com/functional/ba/participantcompletion/"", ""BAParticipantCompletionService"");
 
         Service service = Service.create(wsdlLocation, serviceName);
-        BAParticipantCompletion client = service.getPort(portName, BAParticipantCompletion.class);
-
-        /*
-           Add client handler chain
-        */
-        BindingProvider bindingProvider = (BindingProvider) client;
-        List<Handler> handlers = new ArrayList<Handler>(1);
-        handlers.add(new JaxWSHeaderContextProcessor());
-        bindingProvider.getBinding().setHandlerChain(handlers);
+        BAParticipantCompletion client = service.getPort(portName, BAParticipantCompletion.class, new WSTXFeature());
 
         return client;
     }",2013-03-01T12:27:52Z,262
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/04/2013
+ */
+@Named(""DummyData"")
+@CompensationScoped
+public class DummyData implements Serializable {
+
+    private String value = """";
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+
+    public String getValue() {
+
+        return value;
+    }
+}",2013-05-25T08:04:33Z,232
"@@ -0,0 +1,164 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.UserBusinessActivity;
+import com.arjuna.mw.wst11.UserBusinessActivityFactory;
+import com.arjuna.wst.TransactionRolledBackException;
+import junit.framework.Assert;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
+import org.jboss.narayana.txframework.functional.common.EventLog;
+import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
+import org.jboss.shrinkwrap.api.ArchivePaths;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.JavaArchive;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.lang.annotation.Annotation;
+import java.util.Arrays;
+import java.util.List;
+
+@RunWith(Arquillian.class)
+public class DistributedTest {
+
+    UserBusinessActivity uba;
+    TestService client;
+
+    @Deployment()
+    public static JavaArchive createTestArchive() {
+        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+                .addPackages(false, DistributedTest.class.getPackage())
+                .addPackage(DummyCompensationHandler1.class.getPackage())
+                .addClass(ParticipantCompletionCoordinatorRules.class)
+                .addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml""))
+                .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
+
+        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
+
+        String ManifestMF = ""Manifest-Version: 1.0\n""
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.xts\n"";
+
+        archive.setManifest(new StringAsset(ManifestMF));
+
+        return archive;
+    }
+
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @Before
+    public void setupTest() throws Exception {
+
+        uba = UserBusinessActivityFactory.userBusinessActivity();
+        client = new TestServiceClient();
+    }
+
+    @After
+    public void teardownTest() throws Exception {
+
+        client.resetHandlerFlags();
+        cancelIfActive(uba);
+    }
+
+    @Test
+    public void testSimple() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        client.saveData(false);
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(true, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+
+    }
+
+
+
+    @Test
+    public void testClientDrivenCompensate() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        uba.begin();
+        client.saveData(false);
+        uba.cancel();
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(true, client.wasCompensationHandlerInvoked());
+    }
+
+
+    @Test
+    public void testRuntimeException() throws Exception {
+
+        try {
+            uba.begin();
+            client.saveData(true);
+            Assert.fail(""Exception should have been thrown by now"");
+        } catch (RuntimeException e) {
+            //Exception expected
+        } finally {
+            uba.cancel();
+        }
+
+        Assert.assertEquals(false, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+    }
+
+    public void cancelIfActive(UserBusinessActivity uba) {
+
+        try {
+            uba.cancel();
+        } catch (Throwable e) {
+            // do nothing, not active
+        }
+    }
+}",2013-05-25T08:04:33Z,114
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/05/2013
+ */
+@Named(""State"")
+@CompensationScoped
+public class State implements Serializable {
+
+    private String value;
+
+    public String getValue() {
+
+        return value;
+    }
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+}",2013-05-25T08:04:33Z,233
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import javax.ejb.Remote;
+import javax.jws.WebMethod;
+
+@Remote
+public interface TestService {
+
+    @WebMethod
+    public void saveData(Boolean throwException);
+
+    @WebMethod
+    public void resetHandlerFlags();
+
+    @WebMethod
+    public boolean wasCompensationHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionLoggedHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionConfirmedHandlerInvoked();
+
+}",2013-05-25T08:04:33Z,234
"@@ -0,0 +1,74 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
+import org.jboss.narayana.compensations.api.Compensatable;
+import javax.xml.namespace.QName;
+import javax.xml.ws.Service;
+import java.net.URL;
+
+public class TestServiceClient implements TestService {
+
+    private TestService testService;
+
+    public TestServiceClient() throws Exception {
+
+        URL wsdlLocation = new URL(""http://localhost:8080/test/TestServiceService/TestService?wsdl"");
+        QName serviceName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+        QName portName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+
+        Service service = Service.create(wsdlLocation, serviceName);
+        testService = service.getPort(portName, TestService.class, new WSTXFeature());
+    }
+
+    @Override
+    @Compensatable
+    public void saveData(Boolean throwException) {
+        testService.saveData(throwException);
+    }
+
+    @Override
+    public void resetHandlerFlags() {
+        testService.resetHandlerFlags();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return testService.wasCompensationHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return testService.wasTransactionLoggedHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return testService.wasTransactionConfirmedHandlerInvoked();
+    }
+}
+",2013-05-25T08:04:33Z,235
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyConfirmationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyTransactionLoggedHandler1;
+
+import javax.ejb.Stateless;
+import javax.inject.Inject;
+import javax.jws.WebMethod;
+import javax.jws.WebService;
+import javax.jws.soap.SOAPBinding;
+
+
+/**
+ * @author Paul Robinson (paul.robinson@redhat.com)
+ */
+@Stateless
+@WebService(serviceName = ""TestServiceService"", portName = ""TestServiceService"",
+        name = ""TestService"", targetNamespace = ""http://www.jboss.com/functional/compensations/distributed/"")
+@SOAPBinding(style = SOAPBinding.Style.RPC)
+public class TestServiceService implements TestService {
+
+    @Inject
+    private State state;
+
+
+    @Compensatable
+    @TxCompensate(DummyCompensationHandler1.class)
+    @TxConfirm(DummyConfirmationHandler1.class)
+    @TxLogged(DummyTransactionLoggedHandler1.class)
+    public void saveData(Boolean throwRuntimeException) {
+
+        if (throwRuntimeException) {
+            throw new RuntimeException(""Test instructed the service to throw a RuntimeException"");
+        }
+
+        state.setValue(""myValue"");
+    }
+
+    @WebMethod
+    public void resetHandlerFlags() {
+
+        DummyConfirmationHandler1.reset();
+        DummyTransactionLoggedHandler1.reset();
+        DummyCompensationHandler1.reset();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return DummyConfirmationHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return DummyTransactionLoggedHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return DummyCompensationHandler1.getCalled();
+    }
+}",2013-05-25T08:04:33Z,236
"@@ -0,0 +1,40 @@
+package org.jboss.narayana.compensations.impl;
+
+import javax.enterprise.context.spi.CreationalContext;
+import javax.enterprise.inject.spi.Bean;
+import javax.enterprise.inject.spi.BeanManager;
+import javax.naming.InitialContext;
+import javax.naming.NamingException;
+import java.lang.reflect.Type;
+import java.util.Iterator;
+
+public class BeanManagerUtil {
+
+
+    public static BeanManager getBeanManager() {
+
+        try {
+            return InitialContext.doLookup(""java:comp/BeanManager"");
+        } catch (NamingException e) {
+            //Do nothing, and move onto alternative
+        }
+
+        try {
+            return InitialContext.doLookup(""java:comp/env/BeanManager"");
+        } catch (NamingException e) {
+            throw new RuntimeException(""BeanManager not available in JNDI"");
+        }
+    }
+
+    public static <T> T createBeanInstance(Class<T> clazz, BeanManager bm) {
+
+        Iterator<Bean<?>> iter = bm.getBeans(clazz).iterator();
+        if (!iter.hasNext()) {
+            throw new IllegalStateException(""CDI BeanManager cannot find an instance of requested type "" + clazz.getName());
+        }
+        Bean<T> bean = (Bean<T>) iter.next();
+        CreationalContext<T> ctx = bm.createCreationalContext(bean);
+        return(T) bm.getReference(bean, clazz, ctx);
+    }
+
+}
\ No newline at end of file",2013-05-25T08:04:33Z,263
"@@ -28,7 +28,6 @@
 import com.arjuna.wst.WrongStateException;
 import com.arjuna.wst11.ConfirmCompletedParticipant;
 import org.jboss.narayana.compensations.api.CompensationHandler;
-import org.jboss.narayana.compensations.api.CompensationTransactionRuntimeException;
 import org.jboss.narayana.compensations.api.ConfirmationHandler;
 import org.jboss.narayana.compensations.api.TransactionLoggedHandler;
 import org.jboss.weld.bootstrap.api.SingletonProvider;
@@ -48,10 +47,6 @@ public class Participant implements BusinessAgreementWithParticipantCompletionPa
 
     private Class<? extends TransactionLoggedHandler> transactionLoggedHandler;
 
-    private Map<String, Object> rememberedBeans;
-
-    private SingletonProvider singletonProvider;
-
     private BeanManager beanManager;
 
     public Participant(Class<? extends CompensationHandler> compensationHandlerClass, Class<? extends ConfirmationHandler> confirmationHandlerClass, Class<? extends TransactionLoggedHandler> transactionLoggedHandlerClass) {
@@ -60,17 +55,15 @@ public Participant(Class<? extends CompensationHandler> compensationHandlerClass
         this.confirmationHandler = confirmationHandlerClass;
         this.transactionLoggedHandler = transactionLoggedHandlerClass;
 
-        rememberedBeans = CompensationContext.getBeansForThisTransaction();
-        beanManager = BeanManagerLookup.getBeanManager();
-        singletonProvider = TCCLSingletonProvider.instance();
+        beanManager = BeanManagerUtil.getBeanManager();
     }
 
     private <T extends Object> T instantiate(Class<T> clazz) {
 
         if (clazz == null) {
             return null;
         }
-        return (T) ProgrammaticBeanLookup.lookup(clazz, beanManager);
+        return BeanManagerUtil.createBeanInstance(clazz, beanManager);
     }
 
     @Override
@@ -85,12 +78,10 @@ public void confirmCompleted(boolean confirmed) {
     @Override
     public void close() throws WrongStateException, SystemException {
 
-        CompensationContext.rememberForAfterTransaction(rememberedBeans);
         if (confirmationHandler != null) {
             ConfirmationHandler handler = instantiate(confirmationHandler);
             handler.confirm();
         }
-        CompensationContext.forgetAfterTransactionBeans();
     }
 
     @Override
@@ -102,14 +93,10 @@ public void cancel() throws FaultedException, WrongStateException, SystemExcepti
     public void compensate() throws FaultedException, WrongStateException, SystemException {
 
         try {
-            CompensationContext.rememberForAfterTransaction(rememberedBeans);
-            TCCLSingletonProvider.reset();
-            TCCLSingletonProvider.initialize(singletonProvider);
             if (compensationHandler != null) {
                 CompensationHandler handler = instantiate(compensationHandler);
                 handler.compensate();
             }
-            CompensationContext.forgetAfterTransactionBeans();
         } catch (Exception e) {
             e.printStackTrace();
         }",2013-05-25T08:04:33Z,119
"@@ -1,48 +0,0 @@
-/*
- * JBoss, Home of Professional Open Source.
- * Copyright 2013, Red Hat, Inc., and individual contributors
- * as indicated by the @author tags. See the copyright.txt file in the
- * distribution for a full listing of individual contributors.
- *
- * This is free software; you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as
- * published by the Free Software Foundation; either version 2.1 of
- * the License, or (at your option) any later version.
- *
- * This software is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this software; if not, write to the Free
- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
- */
-
-package org.jboss.narayana.compensations.functional.compensationScoped;
-
-import org.jboss.narayana.compensations.api.CompensationScoped;
-
-import javax.inject.Named;
-import java.io.Serializable;
-
-/**
- * @author paul.robinson@redhat.com 23/04/2013
- */
-@Named(""DummyData"")
-@CompensationScoped
-public class DummyData implements Serializable {
-
-    private String value = """";
-
-    public void setValue(String value) {
-
-        this.value = value;
-    }
-
-    public String getValue() {
-
-        return value;
-    }
-}",2013-05-25T08:04:33Z,232
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.compensationScoped;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/04/2013
+ */
+@Named(""DummyData"")
+@CompensationScoped
+public class DummyData implements Serializable {
+
+    private String value = """";
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+
+    public String getValue() {
+
+        return value;
+    }
+}",2013-05-25T08:04:33Z,232
"@@ -0,0 +1,164 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.UserBusinessActivity;
+import com.arjuna.mw.wst11.UserBusinessActivityFactory;
+import com.arjuna.wst.TransactionRolledBackException;
+import junit.framework.Assert;
+import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
+import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
+import org.jboss.narayana.txframework.functional.common.EventLog;
+import org.jboss.narayana.txframework.functional.common.ServiceCommand;
+import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
+import org.jboss.shrinkwrap.api.ArchivePaths;
+import org.jboss.shrinkwrap.api.ShrinkWrap;
+import org.jboss.shrinkwrap.api.asset.EmptyAsset;
+import org.jboss.shrinkwrap.api.asset.StringAsset;
+import org.jboss.shrinkwrap.api.spec.JavaArchive;
+import org.junit.After;
+import org.junit.AfterClass;
+import org.junit.Before;
+import org.junit.BeforeClass;
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import java.lang.annotation.Annotation;
+import java.util.Arrays;
+import java.util.List;
+
+@RunWith(Arquillian.class)
+public class DistributedTest {
+
+    UserBusinessActivity uba;
+    TestService client;
+
+    @Deployment()
+    public static JavaArchive createTestArchive() {
+        JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
+                .addPackages(false, DistributedTest.class.getPackage())
+                .addPackage(DummyCompensationHandler1.class.getPackage())
+                .addClass(ParticipantCompletionCoordinatorRules.class)
+                .addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml""))
+                .addAsManifestResource(""META-INF/services/javax.enterprise.inject.spi.Extension"", ""services/javax.enterprise.inject.spi.Extension"");
+
+        archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
+
+        String ManifestMF = ""Manifest-Version: 1.0\n""
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.xts\n"";
+
+        archive.setManifest(new StringAsset(ManifestMF));
+
+        return archive;
+    }
+
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @Before
+    public void setupTest() throws Exception {
+
+        uba = UserBusinessActivityFactory.userBusinessActivity();
+        client = new TestServiceClient();
+    }
+
+    @After
+    public void teardownTest() throws Exception {
+
+        client.resetHandlerFlags();
+        cancelIfActive(uba);
+    }
+
+    @Test
+    public void testSimple() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        client.saveData(false);
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(true, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+
+    }
+
+
+
+    @Test
+    public void testClientDrivenCompensate() throws Exception {
+
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
+        uba.begin();
+        client.saveData(false);
+        uba.cancel();
+
+        Assert.assertEquals(true, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(true, client.wasCompensationHandlerInvoked());
+    }
+
+
+    @Test
+    public void testRuntimeException() throws Exception {
+
+        try {
+            uba.begin();
+            client.saveData(true);
+            Assert.fail(""Exception should have been thrown by now"");
+        } catch (RuntimeException e) {
+            //Exception expected
+        } finally {
+            uba.cancel();
+        }
+
+        Assert.assertEquals(false, client.wasTransactionLoggedHandlerInvoked());
+        Assert.assertEquals(false, client.wasTransactionConfirmedHandlerInvoked());
+        Assert.assertEquals(false, client.wasCompensationHandlerInvoked());
+    }
+
+    public void cancelIfActive(UserBusinessActivity uba) {
+
+        try {
+            uba.cancel();
+        } catch (Throwable e) {
+            // do nothing, not active
+        }
+    }
+}",2013-05-25T08:04:33Z,114
"@@ -0,0 +1,48 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.CompensationScoped;
+
+import javax.inject.Named;
+import java.io.Serializable;
+
+/**
+ * @author paul.robinson@redhat.com 23/05/2013
+ */
+@Named(""State"")
+@CompensationScoped
+public class State implements Serializable {
+
+    private String value;
+
+    public String getValue() {
+
+        return value;
+    }
+
+    public void setValue(String value) {
+
+        this.value = value;
+    }
+}",2013-05-25T08:04:33Z,233
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import javax.ejb.Remote;
+import javax.jws.WebMethod;
+
+@Remote
+public interface TestService {
+
+    @WebMethod
+    public void saveData(Boolean throwException);
+
+    @WebMethod
+    public void resetHandlerFlags();
+
+    @WebMethod
+    public boolean wasCompensationHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionLoggedHandlerInvoked();
+
+    @WebMethod
+    public boolean wasTransactionConfirmedHandlerInvoked();
+
+}",2013-05-25T08:04:33Z,234
"@@ -0,0 +1,74 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+
+package org.jboss.narayana.compensations.functional.distributed;
+
+import com.arjuna.mw.wst11.client.WSTXFeature;
+import org.jboss.narayana.compensations.api.Compensatable;
+import javax.xml.namespace.QName;
+import javax.xml.ws.Service;
+import java.net.URL;
+
+public class TestServiceClient implements TestService {
+
+    private TestService testService;
+
+    public TestServiceClient() throws Exception {
+
+        URL wsdlLocation = new URL(""http://localhost:8080/test/TestServiceService/TestService?wsdl"");
+        QName serviceName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+        QName portName = new QName(""http://www.jboss.com/functional/compensations/distributed/"", ""TestServiceService"");
+
+        Service service = Service.create(wsdlLocation, serviceName);
+        testService = service.getPort(portName, TestService.class, new WSTXFeature());
+    }
+
+    @Override
+    @Compensatable
+    public void saveData(Boolean throwException) {
+        testService.saveData(throwException);
+    }
+
+    @Override
+    public void resetHandlerFlags() {
+        testService.resetHandlerFlags();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return testService.wasCompensationHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return testService.wasTransactionLoggedHandlerInvoked();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return testService.wasTransactionConfirmedHandlerInvoked();
+    }
+}
+",2013-05-25T08:04:33Z,235
"@@ -0,0 +1,90 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.compensations.functional.distributed;
+
+import org.jboss.narayana.compensations.api.Compensatable;
+import org.jboss.narayana.compensations.api.TxCompensate;
+import org.jboss.narayana.compensations.api.TxConfirm;
+import org.jboss.narayana.compensations.api.TxLogged;
+import org.jboss.narayana.compensations.functional.common.DummyCompensationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyConfirmationHandler1;
+import org.jboss.narayana.compensations.functional.common.DummyTransactionLoggedHandler1;
+
+import javax.ejb.Stateless;
+import javax.inject.Inject;
+import javax.jws.WebMethod;
+import javax.jws.WebService;
+import javax.jws.soap.SOAPBinding;
+
+
+/**
+ * @author Paul Robinson (paul.robinson@redhat.com)
+ */
+@Stateless
+@WebService(serviceName = ""TestServiceService"", portName = ""TestServiceService"",
+        name = ""TestService"", targetNamespace = ""http://www.jboss.com/functional/compensations/distributed/"")
+@SOAPBinding(style = SOAPBinding.Style.RPC)
+public class TestServiceService implements TestService {
+
+    @Inject
+    private State state;
+
+
+    @Compensatable
+    @TxCompensate(DummyCompensationHandler1.class)
+    @TxConfirm(DummyConfirmationHandler1.class)
+    @TxLogged(DummyTransactionLoggedHandler1.class)
+    public void saveData(Boolean throwRuntimeException) {
+
+        if (throwRuntimeException) {
+            throw new RuntimeException(""Test instructed the service to throw a RuntimeException"");
+        }
+
+        state.setValue(""myValue"");
+    }
+
+    @WebMethod
+    public void resetHandlerFlags() {
+
+        DummyConfirmationHandler1.reset();
+        DummyTransactionLoggedHandler1.reset();
+        DummyCompensationHandler1.reset();
+    }
+
+    @Override
+    public boolean wasTransactionConfirmedHandlerInvoked() {
+
+        return DummyConfirmationHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasTransactionLoggedHandlerInvoked() {
+
+        return DummyTransactionLoggedHandler1.getCalled();
+    }
+
+    @Override
+    public boolean wasCompensationHandlerInvoked() {
+
+        return DummyCompensationHandler1.getCalled();
+    }
+}",2013-05-25T08:04:33Z,236
"@@ -1,6 +1,8 @@
 package org.jboss.narayana.txframework.impl;
 
 import org.jboss.narayana.txframework.api.management.DataControl;
+
+import javax.inject.Named;
 import java.util.HashMap;
 import java.util.Map;
 ",2012-02-13T15:44:12Z,264
"@@ -0,0 +1,31 @@
+package org.jboss.narayana.txframework.impl.as;
+
+import org.jboss.narayana.txframework.impl.DataControlImpl;
+import org.jboss.narayana.txframework.impl.ServiceRequestInterceptor;
+
+import javax.enterprise.event.Observes;
+import javax.enterprise.inject.spi.AnnotatedType;
+import javax.enterprise.inject.spi.BeanManager;
+import javax.enterprise.inject.spi.BeforeBeanDiscovery;
+import javax.enterprise.inject.spi.Extension;
+
+/**
+ * @author paul.robinson@redhat.com, 2012-02-13
+ */
+public class TXFrameworkCDIExtension implements Extension {
+
+    /**
+     * Register all admin CDI beans.
+     *
+     * @param bbd the bbd event
+     * @param bm  the bean manager
+     */
+    public void register(@Observes BeforeBeanDiscovery bbd, BeanManager bm) {
+        final AnnotatedType<DataControlImpl> dataControlImpl = bm.createAnnotatedType(DataControlImpl.class);
+        bbd.addAnnotatedType(dataControlImpl);
+
+        final AnnotatedType<ServiceRequestInterceptor> serviceRequestInterceptor = bm.createAnnotatedType(ServiceRequestInterceptor.class);
+        bbd.addAnnotatedType(serviceRequestInterceptor);
+
+    }
+}",2012-02-13T15:44:12Z,248
"@@ -14,7 +14,7 @@ public static JavaArchive createTestArchive()
     {
         //todo: Does the application developer have to specify the interceptor?
         JavaArchive archive = ShrinkWrap.create(JavaArchive.class, ""test.jar"")
-                .addPackages(true, ""org.jboss.narayana.txframework"")
+                .addPackages(true, ""org.jboss.narayana.txframework.functional"")
                 .addAsResource(""jaxws-handlers-jaxws-service.xml"")
                 .addAsManifestResource(""persistence.xml"")
                 .addAsManifestResource(new ByteArrayAsset(""<interceptors><class>org.jboss.narayana.txframework.impl.ServiceRequestInterceptor</class></interceptors>"".getBytes()),
@@ -23,7 +23,7 @@ public static JavaArchive createTestArchive()
         archive.delete(ArchivePaths.create(""META-INF/MANIFEST.MF""));
 
         String ManifestMF = ""Manifest-Version: 1.0\n""
-                + ""Dependencies: org.jboss.as.xts,org.jboss.xts,org.jboss.modules,deployment.arquillian-service,org.jboss.msc,org.jboss.jts\n"";
+                + ""Dependencies: org.jboss.narayana.txframework,org.jboss.as.xts,org.jboss.xts,org.jboss.modules,deployment.arquillian-service,org.jboss.msc,org.jboss.jts\n"";
         archive.setManifest(new StringAsset(ManifestMF));
 
         return archive;",2012-02-13T15:44:12Z,265
"@@ -24,10 +24,12 @@
 package org.jboss.narayana.txframework.functional.services;
 
 
+import com.arjuna.ats.jta.UserTransaction;
 import org.jboss.narayana.txframework.api.annotation.transaction.WSAT;
 import org.jboss.narayana.txframework.functional.interfaces.ATBridge;
 
 import javax.ejb.*;
+import javax.inject.Inject;
 import javax.persistence.*;
 import javax.jws.WebService;
 import javax.jws.WebMethod;",2012-02-13T15:44:12Z,266
"@@ -965,7 +965,10 @@
     <emma.jar.location>${project.basedir}/ext/emma.jar</emma.jar.location>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     <findbugs.skip>true</findbugs.skip>
+<!--
     <jboss-as.version>7.1.2.Final-SNAPSHOT</jboss-as.version>
+-->
+    <jboss-as.version>7.2.0.Alpha1-SNAPSHOT</jboss-as.version>
         <version.org.jboss.arquillian.core>1.0.0.Final</version.org.jboss.arquillian.core>
         <version.org.jboss.arquillian.osgi>1.0.2.Final</version.org.jboss.arquillian.osgi>
   </properties>",2012-06-18T12:41:58Z,39
"@@ -0,0 +1,2 @@
+export UPSTREAM_AS_BRANCH=master
+export ORIGIN_AS_BRANCH=5_BRANCH
\ No newline at end of file",2013-02-08T16:09:11Z,267
"@@ -0,0 +1,36 @@
+function fatal {
+  echo ""Failed: $1""
+  exit 1
+}
+
+. branch-names.sh
+
+echo ""Rebaseing origin/$ORIGIN_AS_BRANCH with upstream/$UPSTREAM_AS_BRANCH""
+
+GIT_URL=""git@github.com:jbosstm/jboss-as.git""
+UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+TEMPORARY_REBASE_LOCATION=/tmp/rebase-jbossas-branch
+
+rm -rf $TEMPORARY_REBASE_LOCATION || fatal
+mkdir $TEMPORARY_REBASE_LOCATION || fatal
+cd $TEMPORARY_REBASE_LOCATION || fatal
+
+git clone $GIT_URL || fatal
+cd jboss-as
+git checkout -t origin/$ORIGIN_AS_BRANCH || fatal
+
+git remote add upstream $UPSTREAM_GIT_URL
+git pull --rebase --ff-only upstream $UPSTREAM_AS_BRANCH
+
+while [ $? != 0 ]
+do
+ for i in `git status -s | sed ""s/UU \(.*\)/\1/g""`
+ do
+    awk '/^<+ HEAD$/,/^=+$/{next} /^>+ /{next} 1' $i > $i.bak; mv $i.bak $i; git add $i
+ done
+ git rebase --continue
+done
+[ $? = 0 ] || fatal ""git rebase failed""
+
+git push origin $ORIGIN_AS_BRANCH -f
+rm -rf $TEMPORARY_REBASE_LOCATION",2013-02-08T16:09:11Z,268
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""5.0.0.M2-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-09-25T19:52:29Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-09-25T19:52:29Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-09-25T19:52:29Z,271
"@@ -890,9 +890,6 @@ public interface wstI18NLogger {
 	@LogMessage(level = WARN)
 	public void warn_recovery_participant_ba_BAParticipantRecoveryRecord_saveState_3(String arg0, @Cause() Throwable arg1);
 
-    @Message(id = 43228, value = ""Delay of {0} ms reached before changing state from {1} to something else"", format = MESSAGE_FORMAT)
-   	@LogMessage(level = WARN)
-   	public void warn_state_change_timeout(String arg0, String arg1);
 
     /*
         Allocate new messages directly above this notice.",2013-01-15T16:13:39Z,272
"@@ -526,7 +526,6 @@ private State waitForState(final State origState, final long delay)
                 final long remaining = end - System.currentTimeMillis() ;
                 if (remaining <= 0)
                 {
-                    WSTLogger.i18NLogger.warn_state_change_timeout(String.valueOf(delay), origState.toString());
                     break ;
                 }
                 try",2013-01-15T16:13:39Z,72
"@@ -183,7 +183,7 @@
                                 <!--
                                     Used in arquillian.xml
                                 -->
-                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory} -Dorg.jboss.jbossts.xts.transport.transportTimeout=60000</server.jvm.args>
+                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory}</server.jvm.args>
                             </systemPropertyVariables>
                         </configuration>
                     </plugin>",2013-01-15T16:13:39Z,41
"@@ -15,15 +15,18 @@ if [ """" == ""$JBOSS_BUILD_HOME"" ]; then
 fi
 
 if [ ""$2"" == ""--clean"" ] || [ ""$3"" == ""--clean"" ]; then
+    echo ""Cleaning""
     CLEAN=clean
 fi
 
 if [ ""$2"" == ""--xts"" ] || [ ""$3"" == ""--xts"" ]; then
+    echo ""Rebuilding XTS""
     cd ..
     ./build.sh -f ./XTS/pom.xml $CLEAN install -DskipTests || fail
     cd -
 fi
 
+
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail",2013-01-15T16:13:39Z,198
"@@ -55,7 +55,7 @@ public class ATBridgeImpl implements ATBridge {
     public void incrementCounter(int how_many) {
 
         SimpleEntity entity = getSimpleEntity();
-        entity.incrimentCounter(how_many);
+        entity.incrementCounter(how_many);
         em.merge(entity);
     }
 
@@ -81,7 +81,7 @@ private SimpleEntity getSimpleEntity() {
 
         SimpleEntity entity = em.find(SimpleEntity.class, ENTITY_ID);
         if (entity == null) {
-            entity = new SimpleEntity();
+            entity = new SimpleEntity(ENTITY_ID, 0);
             em.persist(entity);
         }
 ",2013-01-15T16:13:39Z,273
"@@ -1,6 +1,6 @@
 /*
  * JBoss, Home of Professional Open Source.
- * Copyright 2012, Red Hat, Inc., and individual contributors
+ * Copyright 2013, Red Hat, Inc., and individual contributors
  * as indicated by the @author tags. See the copyright.txt file in the
  * distribution for a full listing of individual contributors.
  *",2013-01-15T16:13:39Z,201
"@@ -22,7 +22,6 @@
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
 import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
 import java.io.Serializable;
 
@@ -41,8 +40,13 @@ public SimpleEntity() {
 
     }
 
+    public SimpleEntity(int id, int initialCounterValue) {
+
+        this.id = id;
+        this.bookingCount = initialCounterValue;
+    }
+
     @Id
-    @GeneratedValue
     public int getId() {
 
         return id;
@@ -63,8 +67,8 @@ public void setCounter(int counter) {
         this.bookingCount = counter;
     }
 
-    public void incrimentCounter(int how_many) {
+    public void incrementCounter(int howMany) {
 
-        setCounter(getCounter() + how_many);
+        setCounter(getCounter() + howMany);
     }
 }",2013-01-15T16:13:39Z,274
"@@ -87,26 +87,6 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <skip>true</skip>
-                    <!-- Prevent test and server output appearing in console. -->
-                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
-                    <enableAssertions>true</enableAssertions>
-                    <!-- Tests to execute. -->
-                    <includes>
-                        <include>**/*Tests.java</include>
-                    </includes>
-                    <!-- System properties passed to test cases -->
-                    <systemPropertyVariables>
-                        <!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
-                        <server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
-                        <java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
-                    </systemPropertyVariables>
-                </configuration>
-            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -233,4 +213,58 @@
         </dependency>
 
     </dependencies>
+	<profiles>
+		<profile>
+			<id>default</id>
+			<activation>
+				<activeByDefault>true</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<skip>true</skip>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+		<profile>
+			<id>arq</id>
+			<activation>
+				<activeByDefault>false</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<!-- Prevent test and server output appearing in console. -->
+							<redirectTestOutputToFile>true</redirectTestOutputToFile>
+							<enableAssertions>true</enableAssertions>
+							<!-- Tests to execute. -->
+							<includes>
+								<include>**/*Tests.java</include>
+							</includes>
+							<!-- System properties passed to test cases -->
+							<systemPropertyVariables>
+								<!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
+								<server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
+								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
+							</systemPropertyVariables>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+			<dependencies>
+				<dependency>
+					<groupId>org.jboss.as</groupId>
+					<artifactId>jboss-as-arquillian-container-managed</artifactId>
+					<version>${jboss-as.version}</version>
+					<scope>test</scope>
+				</dependency>
+			</dependencies>
+		</profile>
+	</profiles>
 </project>",2012-05-07T06:29:32Z,162
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -0,0 +1,2 @@
+export UPSTREAM_AS_BRANCH=master
+export ORIGIN_AS_BRANCH=5_BRANCH
\ No newline at end of file",2013-02-08T16:09:11Z,267
"@@ -0,0 +1,36 @@
+function fatal {
+  echo ""Failed: $1""
+  exit 1
+}
+
+. branch-names.sh
+
+echo ""Rebaseing origin/$ORIGIN_AS_BRANCH with upstream/$UPSTREAM_AS_BRANCH""
+
+GIT_URL=""git@github.com:jbosstm/jboss-as.git""
+UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+TEMPORARY_REBASE_LOCATION=/tmp/rebase-jbossas-branch
+
+rm -rf $TEMPORARY_REBASE_LOCATION || fatal
+mkdir $TEMPORARY_REBASE_LOCATION || fatal
+cd $TEMPORARY_REBASE_LOCATION || fatal
+
+git clone $GIT_URL || fatal
+cd jboss-as
+git checkout -t origin/$ORIGIN_AS_BRANCH || fatal
+
+git remote add upstream $UPSTREAM_GIT_URL
+git pull --rebase --ff-only upstream $UPSTREAM_AS_BRANCH
+
+while [ $? != 0 ]
+do
+ for i in `git status -s | sed ""s/UU \(.*\)/\1/g""`
+ do
+    awk '/^<+ HEAD$/,/^=+$/{next} /^>+ /{next} 1' $i > $i.bak; mv $i.bak $i; git add $i
+ done
+ git rebase --continue
+done
+[ $? = 0 ] || fatal ""git rebase failed""
+
+git push origin $ORIGIN_AS_BRANCH -f
+rm -rf $TEMPORARY_REBASE_LOCATION",2013-02-08T16:09:11Z,268
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""5.0.0.M2-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-09-25T19:52:29Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-09-25T19:52:29Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-09-25T19:52:29Z,271
"@@ -890,9 +890,6 @@ public interface wstI18NLogger {
 	@LogMessage(level = WARN)
 	public void warn_recovery_participant_ba_BAParticipantRecoveryRecord_saveState_3(String arg0, @Cause() Throwable arg1);
 
-    @Message(id = 43228, value = ""Delay of {0} ms reached before changing state from {1} to something else"", format = MESSAGE_FORMAT)
-   	@LogMessage(level = WARN)
-   	public void warn_state_change_timeout(String arg0, String arg1);
 
     /*
         Allocate new messages directly above this notice.",2013-01-15T16:13:39Z,272
"@@ -526,7 +526,6 @@ private State waitForState(final State origState, final long delay)
                 final long remaining = end - System.currentTimeMillis() ;
                 if (remaining <= 0)
                 {
-                    WSTLogger.i18NLogger.warn_state_change_timeout(String.valueOf(delay), origState.toString());
                     break ;
                 }
                 try",2013-01-15T16:13:39Z,72
"@@ -183,7 +183,7 @@
                                 <!--
                                     Used in arquillian.xml
                                 -->
-                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory} -Dorg.jboss.jbossts.xts.transport.transportTimeout=60000</server.jvm.args>
+                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory}</server.jvm.args>
                             </systemPropertyVariables>
                         </configuration>
                     </plugin>",2013-01-15T16:13:39Z,41
"@@ -15,15 +15,18 @@ if [ """" == ""$JBOSS_BUILD_HOME"" ]; then
 fi
 
 if [ ""$2"" == ""--clean"" ] || [ ""$3"" == ""--clean"" ]; then
+    echo ""Cleaning""
     CLEAN=clean
 fi
 
 if [ ""$2"" == ""--xts"" ] || [ ""$3"" == ""--xts"" ]; then
+    echo ""Rebuilding XTS""
     cd ..
     ./build.sh -f ./XTS/pom.xml $CLEAN install -DskipTests || fail
     cd -
 fi
 
+
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail",2013-01-15T16:13:39Z,198
"@@ -55,7 +55,7 @@ public class ATBridgeImpl implements ATBridge {
     public void incrementCounter(int how_many) {
 
         SimpleEntity entity = getSimpleEntity();
-        entity.incrimentCounter(how_many);
+        entity.incrementCounter(how_many);
         em.merge(entity);
     }
 
@@ -81,7 +81,7 @@ private SimpleEntity getSimpleEntity() {
 
         SimpleEntity entity = em.find(SimpleEntity.class, ENTITY_ID);
         if (entity == null) {
-            entity = new SimpleEntity();
+            entity = new SimpleEntity(ENTITY_ID, 0);
             em.persist(entity);
         }
 ",2013-01-15T16:13:39Z,273
"@@ -1,6 +1,6 @@
 /*
  * JBoss, Home of Professional Open Source.
- * Copyright 2012, Red Hat, Inc., and individual contributors
+ * Copyright 2013, Red Hat, Inc., and individual contributors
  * as indicated by the @author tags. See the copyright.txt file in the
  * distribution for a full listing of individual contributors.
  *",2013-01-15T16:13:39Z,201
"@@ -22,7 +22,6 @@
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
 import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
 import java.io.Serializable;
 
@@ -41,8 +40,13 @@ public SimpleEntity() {
 
     }
 
+    public SimpleEntity(int id, int initialCounterValue) {
+
+        this.id = id;
+        this.bookingCount = initialCounterValue;
+    }
+
     @Id
-    @GeneratedValue
     public int getId() {
 
         return id;
@@ -63,8 +67,8 @@ public void setCounter(int counter) {
         this.bookingCount = counter;
     }
 
-    public void incrimentCounter(int how_many) {
+    public void incrementCounter(int howMany) {
 
-        setCounter(getCounter() + how_many);
+        setCounter(getCounter() + howMany);
     }
 }",2013-01-15T16:13:39Z,274
"@@ -87,26 +87,6 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <skip>true</skip>
-                    <!-- Prevent test and server output appearing in console. -->
-                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
-                    <enableAssertions>true</enableAssertions>
-                    <!-- Tests to execute. -->
-                    <includes>
-                        <include>**/*Tests.java</include>
-                    </includes>
-                    <!-- System properties passed to test cases -->
-                    <systemPropertyVariables>
-                        <!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
-                        <server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
-                        <java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
-                    </systemPropertyVariables>
-                </configuration>
-            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -233,4 +213,58 @@
         </dependency>
 
     </dependencies>
+	<profiles>
+		<profile>
+			<id>default</id>
+			<activation>
+				<activeByDefault>true</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<skip>true</skip>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+		<profile>
+			<id>arq</id>
+			<activation>
+				<activeByDefault>false</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<!-- Prevent test and server output appearing in console. -->
+							<redirectTestOutputToFile>true</redirectTestOutputToFile>
+							<enableAssertions>true</enableAssertions>
+							<!-- Tests to execute. -->
+							<includes>
+								<include>**/*Tests.java</include>
+							</includes>
+							<!-- System properties passed to test cases -->
+							<systemPropertyVariables>
+								<!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
+								<server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
+								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
+							</systemPropertyVariables>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+			<dependencies>
+				<dependency>
+					<groupId>org.jboss.as</groupId>
+					<artifactId>jboss-as-arquillian-container-managed</artifactId>
+					<version>${jboss-as.version}</version>
+					<scope>test</scope>
+				</dependency>
+			</dependencies>
+		</profile>
+	</profiles>
 </project>",2012-05-07T06:29:32Z,162
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -0,0 +1,2 @@
+export UPSTREAM_AS_BRANCH=master
+export ORIGIN_AS_BRANCH=5_BRANCH
\ No newline at end of file",2013-02-08T16:09:11Z,267
"@@ -0,0 +1,36 @@
+function fatal {
+  echo ""Failed: $1""
+  exit 1
+}
+
+. branch-names.sh
+
+echo ""Rebaseing origin/$ORIGIN_AS_BRANCH with upstream/$UPSTREAM_AS_BRANCH""
+
+GIT_URL=""git@github.com:jbosstm/jboss-as.git""
+UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+TEMPORARY_REBASE_LOCATION=/tmp/rebase-jbossas-branch
+
+rm -rf $TEMPORARY_REBASE_LOCATION || fatal
+mkdir $TEMPORARY_REBASE_LOCATION || fatal
+cd $TEMPORARY_REBASE_LOCATION || fatal
+
+git clone $GIT_URL || fatal
+cd jboss-as
+git checkout -t origin/$ORIGIN_AS_BRANCH || fatal
+
+git remote add upstream $UPSTREAM_GIT_URL
+git pull --rebase --ff-only upstream $UPSTREAM_AS_BRANCH
+
+while [ $? != 0 ]
+do
+ for i in `git status -s | sed ""s/UU \(.*\)/\1/g""`
+ do
+    awk '/^<+ HEAD$/,/^=+$/{next} /^>+ /{next} 1' $i > $i.bak; mv $i.bak $i; git add $i
+ done
+ git rebase --continue
+done
+[ $? = 0 ] || fatal ""git rebase failed""
+
+git push origin $ORIGIN_AS_BRANCH -f
+rm -rf $TEMPORARY_REBASE_LOCATION",2013-02-08T16:09:11Z,268
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""5.0.0.M2-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-09-25T19:52:29Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-09-25T19:52:29Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-09-25T19:52:29Z,271
"@@ -890,9 +890,6 @@ public interface wstI18NLogger {
 	@LogMessage(level = WARN)
 	public void warn_recovery_participant_ba_BAParticipantRecoveryRecord_saveState_3(String arg0, @Cause() Throwable arg1);
 
-    @Message(id = 43228, value = ""Delay of {0} ms reached before changing state from {1} to something else"", format = MESSAGE_FORMAT)
-   	@LogMessage(level = WARN)
-   	public void warn_state_change_timeout(String arg0, String arg1);
 
     /*
         Allocate new messages directly above this notice.",2013-01-15T16:13:39Z,272
"@@ -526,7 +526,6 @@ private State waitForState(final State origState, final long delay)
                 final long remaining = end - System.currentTimeMillis() ;
                 if (remaining <= 0)
                 {
-                    WSTLogger.i18NLogger.warn_state_change_timeout(String.valueOf(delay), origState.toString());
                     break ;
                 }
                 try",2013-01-15T16:13:39Z,72
"@@ -183,7 +183,7 @@
                                 <!--
                                     Used in arquillian.xml
                                 -->
-                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory} -Dorg.jboss.jbossts.xts.transport.transportTimeout=60000</server.jvm.args>
+                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory}</server.jvm.args>
                             </systemPropertyVariables>
                         </configuration>
                     </plugin>",2013-01-15T16:13:39Z,41
"@@ -15,15 +15,18 @@ if [ """" == ""$JBOSS_BUILD_HOME"" ]; then
 fi
 
 if [ ""$2"" == ""--clean"" ] || [ ""$3"" == ""--clean"" ]; then
+    echo ""Cleaning""
     CLEAN=clean
 fi
 
 if [ ""$2"" == ""--xts"" ] || [ ""$3"" == ""--xts"" ]; then
+    echo ""Rebuilding XTS""
     cd ..
     ./build.sh -f ./XTS/pom.xml $CLEAN install -DskipTests || fail
     cd -
 fi
 
+
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail",2013-01-15T16:13:39Z,198
"@@ -55,7 +55,7 @@ public class ATBridgeImpl implements ATBridge {
     public void incrementCounter(int how_many) {
 
         SimpleEntity entity = getSimpleEntity();
-        entity.incrimentCounter(how_many);
+        entity.incrementCounter(how_many);
         em.merge(entity);
     }
 
@@ -81,7 +81,7 @@ private SimpleEntity getSimpleEntity() {
 
         SimpleEntity entity = em.find(SimpleEntity.class, ENTITY_ID);
         if (entity == null) {
-            entity = new SimpleEntity();
+            entity = new SimpleEntity(ENTITY_ID, 0);
             em.persist(entity);
         }
 ",2013-01-15T16:13:39Z,273
"@@ -1,6 +1,6 @@
 /*
  * JBoss, Home of Professional Open Source.
- * Copyright 2012, Red Hat, Inc., and individual contributors
+ * Copyright 2013, Red Hat, Inc., and individual contributors
  * as indicated by the @author tags. See the copyright.txt file in the
  * distribution for a full listing of individual contributors.
  *",2013-01-15T16:13:39Z,201
"@@ -22,7 +22,6 @@
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
 import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
 import java.io.Serializable;
 
@@ -41,8 +40,13 @@ public SimpleEntity() {
 
     }
 
+    public SimpleEntity(int id, int initialCounterValue) {
+
+        this.id = id;
+        this.bookingCount = initialCounterValue;
+    }
+
     @Id
-    @GeneratedValue
     public int getId() {
 
         return id;
@@ -63,8 +67,8 @@ public void setCounter(int counter) {
         this.bookingCount = counter;
     }
 
-    public void incrimentCounter(int how_many) {
+    public void incrementCounter(int howMany) {
 
-        setCounter(getCounter() + how_many);
+        setCounter(getCounter() + howMany);
     }
 }",2013-01-15T16:13:39Z,274
"@@ -87,26 +87,6 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <skip>true</skip>
-                    <!-- Prevent test and server output appearing in console. -->
-                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
-                    <enableAssertions>true</enableAssertions>
-                    <!-- Tests to execute. -->
-                    <includes>
-                        <include>**/*Tests.java</include>
-                    </includes>
-                    <!-- System properties passed to test cases -->
-                    <systemPropertyVariables>
-                        <!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
-                        <server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
-                        <java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
-                    </systemPropertyVariables>
-                </configuration>
-            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -233,4 +213,58 @@
         </dependency>
 
     </dependencies>
+	<profiles>
+		<profile>
+			<id>default</id>
+			<activation>
+				<activeByDefault>true</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<skip>true</skip>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+		<profile>
+			<id>arq</id>
+			<activation>
+				<activeByDefault>false</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<!-- Prevent test and server output appearing in console. -->
+							<redirectTestOutputToFile>true</redirectTestOutputToFile>
+							<enableAssertions>true</enableAssertions>
+							<!-- Tests to execute. -->
+							<includes>
+								<include>**/*Tests.java</include>
+							</includes>
+							<!-- System properties passed to test cases -->
+							<systemPropertyVariables>
+								<!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
+								<server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
+								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
+							</systemPropertyVariables>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+			<dependencies>
+				<dependency>
+					<groupId>org.jboss.as</groupId>
+					<artifactId>jboss-as-arquillian-container-managed</artifactId>
+					<version>${jboss-as.version}</version>
+					<scope>test</scope>
+				</dependency>
+			</dependencies>
+		</profile>
+	</profiles>
 </project>",2012-05-07T06:29:32Z,162
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -0,0 +1,2 @@
+export UPSTREAM_AS_BRANCH=master
+export ORIGIN_AS_BRANCH=5_BRANCH
\ No newline at end of file",2013-02-08T16:09:11Z,267
"@@ -0,0 +1,36 @@
+function fatal {
+  echo ""Failed: $1""
+  exit 1
+}
+
+. branch-names.sh
+
+echo ""Rebaseing origin/$ORIGIN_AS_BRANCH with upstream/$UPSTREAM_AS_BRANCH""
+
+GIT_URL=""git@github.com:jbosstm/jboss-as.git""
+UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+TEMPORARY_REBASE_LOCATION=/tmp/rebase-jbossas-branch
+
+rm -rf $TEMPORARY_REBASE_LOCATION || fatal
+mkdir $TEMPORARY_REBASE_LOCATION || fatal
+cd $TEMPORARY_REBASE_LOCATION || fatal
+
+git clone $GIT_URL || fatal
+cd jboss-as
+git checkout -t origin/$ORIGIN_AS_BRANCH || fatal
+
+git remote add upstream $UPSTREAM_GIT_URL
+git pull --rebase --ff-only upstream $UPSTREAM_AS_BRANCH
+
+while [ $? != 0 ]
+do
+ for i in `git status -s | sed ""s/UU \(.*\)/\1/g""`
+ do
+    awk '/^<+ HEAD$/,/^=+$/{next} /^>+ /{next} 1' $i > $i.bak; mv $i.bak $i; git add $i
+ done
+ git rebase --continue
+done
+[ $? = 0 ] || fatal ""git rebase failed""
+
+git push origin $ORIGIN_AS_BRANCH -f
+rm -rf $TEMPORARY_REBASE_LOCATION",2013-02-08T16:09:11Z,268
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""5.0.0.M2-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-09-25T19:52:29Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-09-25T19:52:29Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-09-25T19:52:29Z,271
"@@ -890,9 +890,6 @@ public interface wstI18NLogger {
 	@LogMessage(level = WARN)
 	public void warn_recovery_participant_ba_BAParticipantRecoveryRecord_saveState_3(String arg0, @Cause() Throwable arg1);
 
-    @Message(id = 43228, value = ""Delay of {0} ms reached before changing state from {1} to something else"", format = MESSAGE_FORMAT)
-   	@LogMessage(level = WARN)
-   	public void warn_state_change_timeout(String arg0, String arg1);
 
     /*
         Allocate new messages directly above this notice.",2013-01-15T16:13:39Z,272
"@@ -526,7 +526,6 @@ private State waitForState(final State origState, final long delay)
                 final long remaining = end - System.currentTimeMillis() ;
                 if (remaining <= 0)
                 {
-                    WSTLogger.i18NLogger.warn_state_change_timeout(String.valueOf(delay), origState.toString());
                     break ;
                 }
                 try",2013-01-15T16:13:39Z,72
"@@ -183,7 +183,7 @@
                                 <!--
                                     Used in arquillian.xml
                                 -->
-                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory} -Dorg.jboss.jbossts.xts.transport.transportTimeout=60000</server.jvm.args>
+                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory}</server.jvm.args>
                             </systemPropertyVariables>
                         </configuration>
                     </plugin>",2013-01-15T16:13:39Z,41
"@@ -15,15 +15,18 @@ if [ """" == ""$JBOSS_BUILD_HOME"" ]; then
 fi
 
 if [ ""$2"" == ""--clean"" ] || [ ""$3"" == ""--clean"" ]; then
+    echo ""Cleaning""
     CLEAN=clean
 fi
 
 if [ ""$2"" == ""--xts"" ] || [ ""$3"" == ""--xts"" ]; then
+    echo ""Rebuilding XTS""
     cd ..
     ./build.sh -f ./XTS/pom.xml $CLEAN install -DskipTests || fail
     cd -
 fi
 
+
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail",2013-01-15T16:13:39Z,198
"@@ -55,7 +55,7 @@ public class ATBridgeImpl implements ATBridge {
     public void incrementCounter(int how_many) {
 
         SimpleEntity entity = getSimpleEntity();
-        entity.incrimentCounter(how_many);
+        entity.incrementCounter(how_many);
         em.merge(entity);
     }
 
@@ -81,7 +81,7 @@ private SimpleEntity getSimpleEntity() {
 
         SimpleEntity entity = em.find(SimpleEntity.class, ENTITY_ID);
         if (entity == null) {
-            entity = new SimpleEntity();
+            entity = new SimpleEntity(ENTITY_ID, 0);
             em.persist(entity);
         }
 ",2013-01-15T16:13:39Z,273
"@@ -1,6 +1,6 @@
 /*
  * JBoss, Home of Professional Open Source.
- * Copyright 2012, Red Hat, Inc., and individual contributors
+ * Copyright 2013, Red Hat, Inc., and individual contributors
  * as indicated by the @author tags. See the copyright.txt file in the
  * distribution for a full listing of individual contributors.
  *",2013-01-15T16:13:39Z,201
"@@ -22,7 +22,6 @@
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
 import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
 import java.io.Serializable;
 
@@ -41,8 +40,13 @@ public SimpleEntity() {
 
     }
 
+    public SimpleEntity(int id, int initialCounterValue) {
+
+        this.id = id;
+        this.bookingCount = initialCounterValue;
+    }
+
     @Id
-    @GeneratedValue
     public int getId() {
 
         return id;
@@ -63,8 +67,8 @@ public void setCounter(int counter) {
         this.bookingCount = counter;
     }
 
-    public void incrimentCounter(int how_many) {
+    public void incrementCounter(int howMany) {
 
-        setCounter(getCounter() + how_many);
+        setCounter(getCounter() + howMany);
     }
 }",2013-01-15T16:13:39Z,274
"@@ -87,26 +87,6 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <skip>true</skip>
-                    <!-- Prevent test and server output appearing in console. -->
-                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
-                    <enableAssertions>true</enableAssertions>
-                    <!-- Tests to execute. -->
-                    <includes>
-                        <include>**/*Tests.java</include>
-                    </includes>
-                    <!-- System properties passed to test cases -->
-                    <systemPropertyVariables>
-                        <!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
-                        <server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
-                        <java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
-                    </systemPropertyVariables>
-                </configuration>
-            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -233,4 +213,58 @@
         </dependency>
 
     </dependencies>
+	<profiles>
+		<profile>
+			<id>default</id>
+			<activation>
+				<activeByDefault>true</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<skip>true</skip>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+		<profile>
+			<id>arq</id>
+			<activation>
+				<activeByDefault>false</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<!-- Prevent test and server output appearing in console. -->
+							<redirectTestOutputToFile>true</redirectTestOutputToFile>
+							<enableAssertions>true</enableAssertions>
+							<!-- Tests to execute. -->
+							<includes>
+								<include>**/*Tests.java</include>
+							</includes>
+							<!-- System properties passed to test cases -->
+							<systemPropertyVariables>
+								<!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
+								<server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
+								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
+							</systemPropertyVariables>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+			<dependencies>
+				<dependency>
+					<groupId>org.jboss.as</groupId>
+					<artifactId>jboss-as-arquillian-container-managed</artifactId>
+					<version>${jboss-as.version}</version>
+					<scope>test</scope>
+				</dependency>
+			</dependencies>
+		</profile>
+	</profiles>
 </project>",2012-05-07T06:29:32Z,162
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -0,0 +1,2 @@
+export UPSTREAM_AS_BRANCH=master
+export ORIGIN_AS_BRANCH=5_BRANCH
\ No newline at end of file",2013-02-08T16:09:11Z,267
"@@ -0,0 +1,36 @@
+function fatal {
+  echo ""Failed: $1""
+  exit 1
+}
+
+. branch-names.sh
+
+echo ""Rebaseing origin/$ORIGIN_AS_BRANCH with upstream/$UPSTREAM_AS_BRANCH""
+
+GIT_URL=""git@github.com:jbosstm/jboss-as.git""
+UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+TEMPORARY_REBASE_LOCATION=/tmp/rebase-jbossas-branch
+
+rm -rf $TEMPORARY_REBASE_LOCATION || fatal
+mkdir $TEMPORARY_REBASE_LOCATION || fatal
+cd $TEMPORARY_REBASE_LOCATION || fatal
+
+git clone $GIT_URL || fatal
+cd jboss-as
+git checkout -t origin/$ORIGIN_AS_BRANCH || fatal
+
+git remote add upstream $UPSTREAM_GIT_URL
+git pull --rebase --ff-only upstream $UPSTREAM_AS_BRANCH
+
+while [ $? != 0 ]
+do
+ for i in `git status -s | sed ""s/UU \(.*\)/\1/g""`
+ do
+    awk '/^<+ HEAD$/,/^=+$/{next} /^>+ /{next} 1' $i > $i.bak; mv $i.bak $i; git add $i
+ done
+ git rebase --continue
+done
+[ $? = 0 ] || fatal ""git rebase failed""
+
+git push origin $ORIGIN_AS_BRANCH -f
+rm -rf $TEMPORARY_REBASE_LOCATION",2013-02-08T16:09:11Z,268
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""5.0.0.M2-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-09-25T19:52:29Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-09-25T19:52:29Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-09-25T19:52:29Z,271
"@@ -890,9 +890,6 @@ public interface wstI18NLogger {
 	@LogMessage(level = WARN)
 	public void warn_recovery_participant_ba_BAParticipantRecoveryRecord_saveState_3(String arg0, @Cause() Throwable arg1);
 
-    @Message(id = 43228, value = ""Delay of {0} ms reached before changing state from {1} to something else"", format = MESSAGE_FORMAT)
-   	@LogMessage(level = WARN)
-   	public void warn_state_change_timeout(String arg0, String arg1);
 
     /*
         Allocate new messages directly above this notice.",2013-01-15T16:13:39Z,272
"@@ -526,7 +526,6 @@ private State waitForState(final State origState, final long delay)
                 final long remaining = end - System.currentTimeMillis() ;
                 if (remaining <= 0)
                 {
-                    WSTLogger.i18NLogger.warn_state_change_timeout(String.valueOf(delay), origState.toString());
                     break ;
                 }
                 try",2013-01-15T16:13:39Z,72
"@@ -183,7 +183,7 @@
                                 <!--
                                     Used in arquillian.xml
                                 -->
-                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory} -Dorg.jboss.jbossts.xts.transport.transportTimeout=60000</server.jvm.args>
+                                <server.jvm.args>${jvm.args.byteman} ${jvm.args.memory}</server.jvm.args>
                             </systemPropertyVariables>
                         </configuration>
                     </plugin>",2013-01-15T16:13:39Z,41
"@@ -15,15 +15,18 @@ if [ """" == ""$JBOSS_BUILD_HOME"" ]; then
 fi
 
 if [ ""$2"" == ""--clean"" ] || [ ""$3"" == ""--clean"" ]; then
+    echo ""Cleaning""
     CLEAN=clean
 fi
 
 if [ ""$2"" == ""--xts"" ] || [ ""$3"" == ""--xts"" ]; then
+    echo ""Rebuilding XTS""
     cd ..
     ./build.sh -f ./XTS/pom.xml $CLEAN install -DskipTests || fail
     cd -
 fi
 
+
 mvn $CLEAN install || fail
 kill-jboss
 $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/xts/pom.xml -DskipTests || fail",2013-01-15T16:13:39Z,198
"@@ -55,7 +55,7 @@ public class ATBridgeImpl implements ATBridge {
     public void incrementCounter(int how_many) {
 
         SimpleEntity entity = getSimpleEntity();
-        entity.incrimentCounter(how_many);
+        entity.incrementCounter(how_many);
         em.merge(entity);
     }
 
@@ -81,7 +81,7 @@ private SimpleEntity getSimpleEntity() {
 
         SimpleEntity entity = em.find(SimpleEntity.class, ENTITY_ID);
         if (entity == null) {
-            entity = new SimpleEntity();
+            entity = new SimpleEntity(ENTITY_ID, 0);
             em.persist(entity);
         }
 ",2013-01-15T16:13:39Z,273
"@@ -1,6 +1,6 @@
 /*
  * JBoss, Home of Professional Open Source.
- * Copyright 2012, Red Hat, Inc., and individual contributors
+ * Copyright 2013, Red Hat, Inc., and individual contributors
  * as indicated by the @author tags. See the copyright.txt file in the
  * distribution for a full listing of individual contributors.
  *",2013-01-15T16:13:39Z,201
"@@ -22,7 +22,6 @@
 package org.jboss.narayana.txframework.functional.ws.at.bridged;
 
 import javax.persistence.Entity;
-import javax.persistence.GeneratedValue;
 import javax.persistence.Id;
 import java.io.Serializable;
 
@@ -41,8 +40,13 @@ public SimpleEntity() {
 
     }
 
+    public SimpleEntity(int id, int initialCounterValue) {
+
+        this.id = id;
+        this.bookingCount = initialCounterValue;
+    }
+
     @Id
-    @GeneratedValue
     public int getId() {
 
         return id;
@@ -63,8 +67,8 @@ public void setCounter(int counter) {
         this.bookingCount = counter;
     }
 
-    public void incrimentCounter(int how_many) {
+    public void incrementCounter(int howMany) {
 
-        setCounter(getCounter() + how_many);
+        setCounter(getCounter() + howMany);
     }
 }",2013-01-15T16:13:39Z,274
"@@ -87,26 +87,6 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-surefire-plugin</artifactId>
-                <configuration>
-                    <skip>true</skip>
-                    <!-- Prevent test and server output appearing in console. -->
-                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
-                    <enableAssertions>true</enableAssertions>
-                    <!-- Tests to execute. -->
-                    <includes>
-                        <include>**/*Tests.java</include>
-                    </includes>
-                    <!-- System properties passed to test cases -->
-                    <systemPropertyVariables>
-                        <!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
-                        <server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
-                        <java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
-                    </systemPropertyVariables>
-                </configuration>
-            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -233,4 +213,58 @@
         </dependency>
 
     </dependencies>
+	<profiles>
+		<profile>
+			<id>default</id>
+			<activation>
+				<activeByDefault>true</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<skip>true</skip>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+		</profile>
+		<profile>
+			<id>arq</id>
+			<activation>
+				<activeByDefault>false</activeByDefault>
+			</activation>
+			<build>
+				<plugins>
+					<plugin>
+						<artifactId>maven-surefire-plugin</artifactId>
+						<configuration>
+							<!-- Prevent test and server output appearing in console. -->
+							<redirectTestOutputToFile>true</redirectTestOutputToFile>
+							<enableAssertions>true</enableAssertions>
+							<!-- Tests to execute. -->
+							<includes>
+								<include>**/*Tests.java</include>
+							</includes>
+							<!-- System properties passed to test cases -->
+							<systemPropertyVariables>
+								<!-- Used in arquillian.xml - arguments for all JBoss AS instances. -->
+								<server.jvm.args>${general.server.jvm.args} ${byteman.server.jvm.args} ${jpda.server.jvm.args}</server.jvm.args>
+								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
+							</systemPropertyVariables>
+						</configuration>
+					</plugin>
+				</plugins>
+			</build>
+			<dependencies>
+				<dependency>
+					<groupId>org.jboss.as</groupId>
+					<artifactId>jboss-as-arquillian-container-managed</artifactId>
+					<version>${jboss-as.version}</version>
+					<scope>test</scope>
+				</dependency>
+			</dependencies>
+		</profile>
+	</profiles>
 </project>",2012-05-07T06:29:32Z,162
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -144,6 +144,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,237
"@@ -42,4 +42,24 @@
     <module>txoj</module>
     <module>arjunacore</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,288
"@@ -114,4 +114,24 @@
       <scope>test</scope>
     </dependency>
   </dependencies>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,289
"@@ -160,6 +160,17 @@
         <id>release</id>
         <build>
           <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,238
"@@ -41,4 +41,24 @@
     <module>jdbc</module>
     <module>narayana-jta</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,223
"@@ -61,18 +61,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jta</groupId>
       <artifactId>jta</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+      <scope>provided</scope>
     </dependency>
     <dependency>
       <groupId>org.jboss</groupId>
@@ -146,6 +150,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,69
"@@ -167,10 +167,22 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
@@ -179,6 +191,12 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>jacorb-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -201,6 +219,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,29
"@@ -167,14 +167,32 @@
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>orbportability</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jts</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>org.jboss.narayana.jts</groupId>
       <artifactId>jtax</artifactId>
+        <exclusions>
+          <exclusion>
+            <groupId>org.jboss.narayana.jts</groupId>
+            <artifactId>idlj-idl</artifactId>
+          </exclusion>
+        </exclusions>
     </dependency>
     <dependency>
       <groupId>tanukisoft</groupId>
@@ -221,6 +239,17 @@
         <id>release</id>
         <build>
           <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,30
"@@ -45,4 +45,24 @@
     <module>narayana-jts-idlj</module>
     <module>integration</module>
   </modules>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,290
"@@ -27,4 +27,24 @@
             <artifactId>byteman-submit</artifactId>
         </dependency>
     </dependencies>
+    <profiles>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,275
"@@ -215,6 +215,17 @@
         <id>release</id>
         <build>
           <plugins>
+            <plugin>
+              <groupId>org.apache.maven.plugins</groupId>
+              <artifactId>maven-install-plugin</artifactId>
+              <executions>
+                <execution>
+                  <id>default-install</id>
+                  <phase>install</phase>
+                </execution>
+              </executions>
+              <inherited>false</inherited>
+            </plugin>
 	      <plugin>
         	<groupId>org.codehaus.mojo</groupId>
 	        <artifactId>buildnumber-maven-plugin</artifactId>",2013-01-22T15:55:37Z,33
"@@ -29,6 +29,16 @@
     </properties>
 
     <build>
+        <pluginManagement>
+            <plugins>
+                <plugin>
+                    <artifactId>maven-surefire-plugin</artifactId>
+                    <configuration>
+                        <skip>true</skip>
+                    </configuration>
+                </plugin>
+            </plugins>
+        </pluginManagement>
         <plugins>
             <plugin>
                 <groupId>org.apache.maven.plugins</groupId>
@@ -94,26 +104,6 @@
         </dependency>
     </dependencies>
     <profiles>
-        <!-- The default profile skips all tests, though you can tune it
-            to run just unit tests based on a custom pattern -->
-        <!-- Seperate profiles are provided for running all tests, including
-            Arquillian tests that execute in the specified container -->
-        <profile>
-            <id>default</id>
-            <activation>
-                <activeByDefault>true</activeByDefault>
-            </activation>
-            <build>
-                <plugins>
-                    <plugin>
-                        <artifactId>maven-surefire-plugin</artifactId>
-                        <configuration>
-                            <skip>true</skip>
-                        </configuration>
-                    </plugin>
-                </plugins>
-            </build>
-        </profile>
         <profile>
             <id>arq-remote</id>
             <activation>
@@ -132,6 +122,7 @@
                                 <server.jvm.args>${jvm.args.memory} ${ipv4.server.jvm.args}</server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -165,6 +156,7 @@
                                 </server.jvm.args>
                                 <node.address>127.0.0.1</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>
@@ -199,6 +191,7 @@
                                 </server.jvm.args>
                                 <node.address>[::1]</node.address>
                             </systemPropertyVariables>
+                            <skip>false</skip>
                         </configuration>
                     </plugin>
                 </plugins>",2013-01-22T15:55:37Z,34
"@@ -50,4 +50,24 @@
     <module>jbossxts</module>
     <module>localjunit</module>
   </modules>
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,285
"@@ -69,4 +69,25 @@
     </dependency>
     <!-- END TEST -->
   </dependencies>
+
+    <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+    </profiles>
 </project>",2013-01-22T15:55:37Z,286
"@@ -1099,5 +1099,37 @@
         <module>STM</module>
       </modules>
     </profile>
+    <profile>
+      <id>release</id>
+      <build>
+          <pluginManagement>
+              <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>none</phase>
+                      </execution>
+                    </executions>
+                  </plugin>
+              </plugins>
+          </pluginManagement>
+          <plugins>
+          <plugin>
+            <groupId>org.apache.maven.plugins</groupId>
+            <artifactId>maven-install-plugin</artifactId>
+            <executions>
+              <execution>
+                <id>default-install</id>
+                <phase>install</phase>
+              </execution>
+            </executions>
+            <inherited>false</inherited>
+          </plugin>
+          </plugins>
+      </build>
+    </profile>
   </profiles>
 </project>",2013-01-22T15:55:37Z,39
"@@ -51,4 +51,24 @@ Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
   <properties>
     <version.org.jboss.resteasy>2.0.0.GA</version.org.jboss.resteasy>
   </properties>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                <plugin>
+                  <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-install-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>default-install</id>
+                      <phase>install</phase>
+                    </execution>
+                  </executions>
+                  <inherited>false</inherited>
+                </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,291
"@@ -171,4 +171,24 @@
       </plugin>
     </plugins>
   </build>
+  <profiles>
+      <profile>
+          <id>release</id>
+          <build>
+              <plugins>
+                  <plugin>
+                      <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-install-plugin</artifactId>
+                      <executions>
+                          <execution>
+                              <id>default-install</id>
+                              <phase>install</phase>
+                          </execution>
+                      </executions>
+                      <inherited>false</inherited>
+                  </plugin>
+              </plugins>
+          </build>
+      </profile>
+  </profiles>
 </project>",2013-01-22T15:55:37Z,292
"@@ -94,6 +94,13 @@
                     <target>1.6</target>
                 </configuration>
             </plugin>
+            <plugin>
+                <artifactId>maven-surefire-plugin</artifactId>
+                <version>2.11</version>
+                <configuration>
+                    <skip>true</skip>
+                </configuration>
+            </plugin>
         </plugins>
         <pluginManagement>
         	<plugins>
@@ -221,23 +228,6 @@
 
     </dependencies>
 	<profiles>
-		<profile>
-			<id>default</id>
-			<activation>
-				<activeByDefault>true</activeByDefault>
-			</activation>
-			<build>
-				<plugins>
-					<plugin>
-						<artifactId>maven-surefire-plugin</artifactId>
-						<version>2.11</version>
-						<configuration>
-							<skip>true</skip>
-						</configuration>
-					</plugin>
-				</plugins>
-			</build>
-		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -263,6 +253,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>localhost</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -305,6 +296,7 @@
 								<java.rmi.server.codebase>file://target/test-classes/</java.rmi.server.codebase>
 								<node.address>[::1]</node.address>
 							</systemPropertyVariables>
+                            <skip>false</skip>
 						</configuration>
 					</plugin>
 				</plugins>
@@ -333,5 +325,23 @@
 				</dependency>
 			</dependencies>
 		</profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                  <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                    <artifactId>maven-install-plugin</artifactId>
+                    <executions>
+                      <execution>
+                        <id>default-install</id>
+                        <phase>install</phase>
+                      </execution>
+                    </executions>
+                    <inherited>false</inherited>
+                  </plugin>
+                </plugins>
+            </build>
+        </profile>
 	</profiles>
 </project>",2013-01-22T15:55:37Z,162
"@@ -214,6 +214,24 @@
                 </dependency>
             </dependencies>
         </profile>
+        <profile>
+            <id>release</id>
+            <build>
+                <plugins>
+                    <plugin>
+                        <groupId>org.apache.maven.plugins</groupId>
+                        <artifactId>maven-install-plugin</artifactId>
+                        <executions>
+                            <execution>
+                                <id>default-install</id>
+                                <phase>install</phase>
+                            </execution>
+                        </executions>
+                        <inherited>false</inherited>
+                    </plugin>
+                </plugins>
+            </build>
+        </profile>
     </profiles>
 
 </project>",2013-01-22T15:55:37Z,41
"@@ -69,13 +69,12 @@
     <property name=""version"" value=""4.17.2.Final-SNAPSHOT""/>
 -->
   <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
-  <!--property name=""workdir"" location=""/tmp/narayana_releases""/-->
+  <property name=""workdir"" location=""/tmp/narayana_releases""/>
   <!-- where to get the source -->
-  <property name=""svnbase"" value=""https://svn.jboss.org/repos/labs/labs/jbosstm/tags""/>
+  <property name=""gitbase"" value=""https://github.com/jbosstm""/>
   <!-- The tag as it appears under svnbase -->
-  <property name=""tag"" value=""5_0_0_M1""/>
-  <!-- The file name base for the user downloadable files. Derive it from the tag -->
-  <property name=""version"" value=""5.0.0.M1""/>
+  <property name=""pageName"" value=""4_17_0_Final""/>
+  <property name=""tag"" value=""4.17.0.Final""/>
   <!-- which uber jar to use -->
   <property name=""orb"" value=""jacorb""/>
   <!-- the location the JBossTS web site content is copied to -->
@@ -100,40 +99,116 @@
         </not>
       </condition>
     </fail>
-    <fail message=""You must not already have a local maven cached repository to do a release build"">
-      <condition>
-        <available file=""repository"" type=""dir""/>
-      </condition>
-    </fail>
     <fail message=""You cannot perform a build without cleaning the old version out"">
       <condition>
         <available file=""${workdir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <mkdir dir=""${workdir}""/>
-    <!-- pull the source code from svn -->
-    <exec executable=""svn"" dir=""${workdir}"">
+    <!-- pull the source code from git -->
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/narayana.git""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}"">
       <arg value=""checkout""/>
-      <arg value=""${svnbase}/${tag}""/>
+      <arg value=""${tag}""/>
     </exec>
   </target>
   <target name=""dist"" depends=""dist-init"" description=""build the end-user release bundles (src and binary)"">
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
-    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
-    <delete file=""${workdir}/narayana-jta-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-jta-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**""/>
     <!-- package the full source release (all src tree) -->
-    <delete file=""${workdir}/narayana-full-${version}-src.zip""/>
-    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${version}-src.zip"" includes=""${tag}/**"" excludes=""${tag}/repository/**""/>
+    <delete file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <zip basedir=""${workdir}"" destfile=""${workdir}/narayana-full-${tag}-src.zip"" includes=""${tag}/**""/>
     <!-- build the binary releases -->
     <exec dir=""${workdir}/${tag}"" executable=""tools/maven/bin/mvn"" failonerror=""true"">
       <arg line=""deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar""/>
     </exec>
   </target>
   <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
+  <target name=""docs"">
+    <fail>
+      <condition>
+        <not>
+          <available file=""${downloads.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+    <fail>
+      <condition>
+        <not>
+          <available file=""${docs.dir}"" type=""dir""/>
+        </not>
+      </condition>
+    </fail>
+
+    <exec executable=""git"" dir=""${workdir}"">
+      <arg value=""clone""/>
+      <arg value=""${gitbase}/documentation.git""/>
+      <arg value=""${tag}-docs""/>
+    </exec>
+    <exec executable=""git"" dir=""${workdir}/${tag}-docs"">
+      <arg value=""checkout""/>
+      <arg value=""${tag}""/>
+    </exec>
+    <exec dir=""${workdir}/${tag}-docs"" executable=""mvn"" failonerror=""true"">
+      <arg line=""install""/>
+    </exec>
+    <delete dir=""tmp-docs-dir-docs""/>
+    <mkdir dir=""tmp-docs-dir-docs""/>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-orbportability_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jts-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/arjunacore-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-quick_start_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-installation_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-administration_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/narayana-jta-development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/xts-administration_and_development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/failure_recovery_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/failure_recovery_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/development_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/development_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/transactions_overview_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/transactions_overview_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <copy todir=""tmp-docs-dir-docs/guides/txbridge_guide"">
+      <fileset dir=""${workdir}/${tag}-docs/docs/txbridge_guide/target/docbook/publish/en-US/html_single""/>
+    </copy>
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
+      <fileset dir=""tmp-docs-dir-docs""/>
+    </move>
+  </target> 
   <target name=""downloads"" description=""copy release bundles to JBossTS web site content"">
     <fail>
       <condition>
@@ -144,7 +219,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${downloads.dir}/${version}"" type=""dir""/>
+        <available file=""${downloads.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <fail>
@@ -156,7 +231,7 @@
     </fail>
     <fail>
       <condition>
-        <available file=""${docs.dir}/${version}"" type=""dir""/>
+        <available file=""${docs.dir}/${tag}"" type=""dir""/>
       </condition>
     </fail>
     <delete dir=""tmp-downloads-dir""/>
@@ -167,91 +242,37 @@
     <delete dir=""tmp-docs-dir""/>
     <mkdir dir=""tmp-docs-dir""/>
     <copy todir=""tmp-downloads-dir/src"">
-      <fileset dir=""${workdir}"" includes=""narayana-*-${version}-src.zip""/>
+      <fileset dir=""${workdir}"" includes=""narayana-*-${tag}-src.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/binary"">
-      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${version}-bin.zip""/>
+      <fileset dir=""${workdir}/${tag}/narayana-full/target/"" includes=""narayana-full-${tag}-bin.zip""/>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/arjuna"">
         <include name=""ArjunaOTS.idl""/>
       </fileset>
     </copy>
     <copy todir=""tmp-downloads-dir/idl"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/jts/idl/omg"">
+      <fileset dir=""${workdir}/${tag}/ArjunaJTS/idl/src/main/idl/omg"">
         <include name=""CosTransactions.idl""/>
         <include name=""XA.idl""/>
       </fileset>
     </copy>
-    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
-    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
-    <copy file=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
-    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-orbportability_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jts-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/arjunacore-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-quick_start_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-installation_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-administration_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/narayana-jta-development_guide"">
-      <fileset dir=""${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/xts-administration_and_development_guide"">
-      <fileset dir=""${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/failure_recovery_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/release_notes"">
-      <fileset dir=""${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/development_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/transactions_overview_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <copy todir=""tmp-docs-dir/guides/txbridge_guide"">
-      <fileset dir=""${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html""/>
-    </copy>
-    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
-    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
-    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
-    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
-    <move todir=""${downloads.dir}/${version}"" verbose=""true"">
+    <copy file=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jts""/>
+    <copy file=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/jta""/>
+    <copy file=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/rts""/>
+    <copy file=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" todir=""tmp-downloads-dir/api/xts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/jbossjts-jacorb-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jts""/>
+    <unzip src=""${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/jta""/>
+    <unzip src=""${workdir}/${tag}/rest-tx/tx/target/restat-api-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/rts""/>
+    <unzip src=""${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${tag}-javadoc.jar"" dest=""tmp-docs-dir/api/xts""/>
+    <move todir=""${downloads.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-downloads-dir""/>
     </move>
-    <move todir=""${docs.dir}/${version}"" verbose=""true"">
+    <move todir=""${docs.dir}/${tag}"" verbose=""true"">
       <fileset dir=""tmp-docs-dir""/>
     </move>
   </target>
-  <!-- copy the release artifacts to the maven repository -->
-  <target name=""mvn-repository"" description=""copy the release artifacts to the maven repository"">
-    <!-- xts -->
-    <mvn-artifact.macro artifact=""jbossxts-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/tests""/>
-    <mvn-artifact.macro artifact=""jbossxts-interop-tests"" packaging=""zip"" dir=""${workdir}/build/${tag}/xts/interop-tests""/>
-  </target>
   <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
      xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
       right click jbosstm/downloads node, import from xml, then right click new node and activate.
@@ -261,20 +282,24 @@
     <exec executable=""date"" outputproperty=""date"">
       <arg line=""+'%FT%H:%M:%S.000Z'""/>
     </exec>
-    <length property=""jta-src-length"" file=""${workdir}/jbossts-jta-${version}-src.zip""/>
-    <length property=""full-src-length"" file=""${workdir}/jbossts-full-${version}-src.zip""/>
-    <length property=""jta-bin-length"" file=""${workdir}/jbossts-jta-${version}.zip""/>
-    <length property=""full-bin-length"" file=""${workdir}/jbossts-full-${version}.zip""/>
-    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${version}.xml"" filtering=""true"" overwrite=""true"">
+    <length property=""full-src-length"" file=""${workdir}/narayana-full-${tag}-src.zip""/>
+    <length property=""full-bin-length"" file=""${workdir}/${tag}/narayana-full/target/narayana-full-${tag}-bin.zip""/>
+    <copy file=""magnolia-release-download-page-template.xml"" tofile=""${workdir}/website.jbosstm.downloads.${pageName}.xml"" filtering=""true"" overwrite=""true"">
       <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
         <filter token=""tag"" value=""${tag}""/>
-        <filter token=""version"" value=""${version}""/>
+        <filter token=""version"" value=""${tag}""/>
         <filter token=""date"" value=""${date}""/>
-        <filter token=""jta-src-length"" value=""${jta-src-length}""/>
         <filter token=""full-src-length"" value=""${full-src-length}""/>
-        <filter token=""jta-bin-length"" value=""${jta-bin-length}""/>
         <filter token=""full-bin-length"" value=""${full-bin-length}""/>
       </filterset>
     </copy>
+    <copy file=""magnolia-release-documentation-page-template.xml"" tofile=""${workdir}/website.jbosstm.documentation.${pageName}.xml"" filtering=""true"" overwrite=""true"">
+      <filterset>
+        <filter token=""pageName"" value=""${pageName}""/>
+        <filter token=""tag"" value=""${tag}""/>
+        <filter token=""date"" value=""${date}""/>
+      </filterset>
+    </copy>
   </target>
 </project>",2012-10-16T15:39:17Z,269
"@@ -0,0 +1,237 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+  <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+    <sv:value>mgnl:content</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+    <sv:value>mix:lockable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+    <sv:value>14f62a08-1dfe-41b3-bdce-61ce87b8129d</sv:value>
+  </sv:property>
+  <sv:property sv:name=""enableRSS"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""hideInNav"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""menubar"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaCache"" sv:type=""String"">
+    <sv:value>disable</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaExpire"" sv:type=""String"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""metaRobots"" sv:type=""String"">
+    <sv:value>all</sv:value>
+  </sv:property>
+  <sv:property sv:name=""redirectWindow"" sv:type=""Boolean"">
+    <sv:value>false</sv:value>
+  </sv:property>
+  <sv:property sv:name=""title"" sv:type=""String"">
+    <sv:value>Narayana Documentation @tag@</sv:value>
+  </sv:property>
+  <sv:property sv:name=""useTitle"" sv:type=""Boolean"">
+    <sv:value>true</sv:value>
+  </sv:property>
+  <sv:node sv:name=""MetaData"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:metaData</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+      <sv:value>true</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+      <sv:value>superuser</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+      <sv:value>tm</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:comment"" sv:type=""String"">
+      <sv:value>Made references to git and subversion</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+      <sv:value>2009-12-10T11:47:09.824-05:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+      <sv:value>2012-04-27T05:09:36.605-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+      <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+    </sv:property>
+    <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+      <sv:value>jbossorgProjectSubPage</sv:value>
+    </sv:property>
+  </sv:node>
+  <sv:node sv:name=""mainColumnParagraphs"">
+    <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+      <sv:value>mgnl:contentNode</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+      <sv:value>mix:lockable</sv:value>
+    </sv:property>
+    <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+      <sv:value>43dab693-c6e7-4eda-869e-5b1d9ad358d5</sv:value>
+    </sv:property>
+    <sv:node sv:name=""MetaData"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:metaData</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+        <sv:value>true</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+        <sv:value>superuser</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+        <sv:value>tm</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+        <sv:value>2009-12-10T11:47:46.060-05:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+        <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+      </sv:property>
+      <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+        <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+      </sv:property>
+    </sv:node>
+    <sv:node sv:name=""0"">
+      <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+        <sv:value>mgnl:contentNode</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+        <sv:value>mix:lockable</sv:value>
+      </sv:property>
+      <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+        <sv:value>6aec081e-5217-4adf-b06c-8c5bf92a886b</sv:value>
+      </sv:property>
+      <sv:property sv:name=""flow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""headerSize"" sv:type=""String"">
+        <sv:value>h3</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""imageLocation"" sv:type=""String"">
+        <sv:value>left</sv:value>
+      </sv:property>
+      <sv:property sv:name=""inherit"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""lineAbove"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkImage"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkText"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkTitle"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""linkWindowMenubar"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:property sv:name=""spacer"" sv:type=""Long"">
+        <sv:value>0</sv:value>
+      </sv:property>
+      <sv:property sv:name=""text"" sv:type=""String"">
+        <sv:value>&lt;h1&gt;JBoss Narayana Documentation Library&lt;/h1&gt; &lt;p&gt; &lt;table cellspacing=""5"" class=""infotable"" style=""margin: 2px; padding: 2px; font-size: 90%;""&gt;     &lt;tbody&gt;         &lt;tr&gt;             &lt;th width=""220"" class=""grey""&gt;JBoss Narayana Document&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Version&lt;/th&gt;             &lt;th width=""80"" class=""grey""&gt;Released&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;             &lt;th class=""blank""&gt;&amp;nbsp;&lt;/th&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ORB Portability Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-orbportability_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;NarayanaJTS Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-quick_start_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTS Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jts-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;ArjunaCore Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/arjunacore-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Quick Start Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-quick_start/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Installation Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-installation_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Administration Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-administration_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Narayana JTA Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/narayana-jta-development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS Administration and Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/xts-administration_and_development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Failure Recovery Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/failure_recovery_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Release Notes&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/release_notes/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Development Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/development_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;Transactions Overview Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/transactions_overview_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;TXBridge Guide&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/guides/txbridge_guide/index.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jts/jbossjts-jacorb-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTA API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/jta/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/jta/narayana-jta-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;RTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/rts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/rts/restat-api-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;XTS API&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://docs.jboss.org/jbosstm/@tag@/api/xts/overview-summary.html"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;View Online&lt;/a&gt;&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/api/xts/jbossxts-@tag@-javadoc.jar"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - ArjunaOTS&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/ArjunaOTS.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - CosTransactions.idl&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/CosTransactions.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;         &lt;tr&gt;             &lt;td&gt;&lt;b&gt;JTS IDL - XA&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;&lt;b&gt;@tag@&lt;/b&gt;&lt;/td&gt;             &lt;td&gt;@date@&lt;/td&gt;             &lt;td class=""button""&gt;&lt;a href=""http://download.jboss.org/jbosstm/@tag@/idl/XA.idl"" onmouseover=""this.parentNode.style.backgroundColor='#cccccc';"" onmouseout=""this. parentNode.style.backgroundColor='#777777';""&gt;Download&lt;/a&gt;&lt;/td&gt;         &lt;/tr&gt;     &lt;/tbody&gt; &lt;/table&gt; &lt;/p&gt;</sv:value>
+      </sv:property>
+      <sv:property sv:name=""titleLinkNewWindow"" sv:type=""Boolean"">
+        <sv:value>false</sv:value>
+      </sv:property>
+      <sv:node sv:name=""MetaData"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:metaData</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+          <sv:value>true</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+          <sv:value>superuser</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:authorid"" sv:type=""String"">
+          <sv:value>tm</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+          <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+          <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:lastmodified"" sv:type=""Date"">
+          <sv:value>2011-09-05T08:44:35.809-04:00</sv:value>
+        </sv:property>
+        <sv:property sv:name=""mgnl:template"" sv:type=""String"">
+          <sv:value>richTextHtml</sv:value>
+        </sv:property>
+      </sv:node>
+      <sv:node sv:name=""text_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>41f11088-5628-42b3-8c36-51b7a4199eaf</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.061-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+      <sv:node sv:name=""imageFooter_files"">
+        <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+          <sv:value>mgnl:contentNode</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:mixinTypes"" sv:type=""Name"">
+          <sv:value>mix:lockable</sv:value>
+        </sv:property>
+        <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
+          <sv:value>6b6abc15-1022-44a0-917e-29a9691832e4</sv:value>
+        </sv:property>
+        <sv:node sv:name=""MetaData"">
+          <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
+            <sv:value>mgnl:metaData</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activated"" sv:type=""Boolean"">
+            <sv:value>true</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:activatorid"" sv:type=""String"">
+            <sv:value>superuser</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:creationdate"" sv:type=""Date"">
+            <sv:value>2009-12-10T11:47:46.064-05:00</sv:value>
+          </sv:property>
+          <sv:property sv:name=""mgnl:lastaction"" sv:type=""Date"">
+            <sv:value>2012-04-27T05:09:36.606-04:00</sv:value>
+          </sv:property>
+        </sv:node>
+      </sv:node>
+    </sv:node>
+  </sv:node>
+</sv:node>",2012-10-16T15:39:17Z,270
"@@ -1,5 +1,5 @@
 <?xml version=""1.0"" encoding=""UTF-8""?>
-<sv:node sv:name=""@tag@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
+<sv:node sv:name=""@pageName@"" xmlns:sv=""http://www.jcp.org/jcr/sv/1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
   <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">
     <sv:value>mgnl:content</sv:value>
   </sv:property>
@@ -31,7 +31,7 @@
     <sv:value>false</sv:value>
   </sv:property>
   <sv:property sv:name=""title"" sv:type=""String"">
-    <sv:value>JBossTS @filename@ release</sv:value>
+    <sv:value>JBossTS @tag@ release</sv:value>
   </sv:property>
   <sv:property sv:name=""useTitle"" sv:type=""String"">
     <sv:value>true</sv:value>
@@ -99,12 +99,6 @@
       <sv:property sv:name=""jcr:uuid"" sv:type=""String"">
         <sv:value>00bd1847-65cd-4ff1-b7ce-20b8084be52b</sv:value>
       </sv:property>
-      <sv:property sv:name=""desc21"" sv:type=""String"">
-        <sv:value>The JBoss Transactions JTA @filename@ Source</sv:value>
-      </sv:property>
-      <sv:property sv:name=""desc22"" sv:type=""String"">
-        <sv:value>JBoss Transactions JTA @filename@ Binary</sv:value>
-      </sv:property>
       <sv:property sv:name=""desc23"" sv:type=""String"">
         <sv:value>JBoss Transactions JTS (and JTA) and WS-T Source Code</sv:value>
       </sv:property>
@@ -123,17 +117,11 @@
       <sv:property sv:name=""license24"" sv:type=""String"">
         <sv:value>LGPL</sv:value>
       </sv:property>
-      <sv:property sv:name=""name21"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""name22"" sv:type=""String"">
-        <sv:value>jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""name23"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""name24"" sv:type=""String"">
-        <sv:value>jbossts-full-@filename@.zip</sv:value>
+        <sv:value>narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""popup"" sv:type=""String"">
         <sv:value>true</sv:value>
@@ -168,20 +156,14 @@
       <sv:property sv:name=""showVersion"" sv:type=""String"">
         <sv:value>false</sv:value>
       </sv:property>
-      <sv:property sv:name=""size21"" sv:type=""String"">
-        <sv:value>@jta-src-length@</sv:value>
-      </sv:property>
-      <sv:property sv:name=""size22"" sv:type=""String"">
-        <sv:value>@full-src-length@</sv:value>
-      </sv:property>
       <sv:property sv:name=""size23"" sv:type=""String"">
-        <sv:value>@jta-bin-length@</sv:value>
+        <sv:value>@full-src-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""size24"" sv:type=""String"">
         <sv:value>@full-bin-length@</sv:value>
       </sv:property>
       <sv:property sv:name=""tableTitle"" sv:type=""String"">
-        <sv:value>JBossTS @filename@ release</sv:value>
+        <sv:value>JBossTS @tag@ release</sv:value>
       </sv:property>
       <sv:property sv:name=""text21"" sv:type=""String"">
         <sv:value>Download</sv:value>
@@ -195,17 +177,11 @@
       <sv:property sv:name=""text24"" sv:type=""String"">
         <sv:value>Download</sv:value>
       </sv:property>
-      <sv:property sv:name=""url21"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-jta-@filename@-src.zip</sv:value>
-      </sv:property>
-      <sv:property sv:name=""url22"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-jta-@filename@.zip</sv:value>
-      </sv:property>
       <sv:property sv:name=""url23"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/src/jbossts-full-@filename@-src.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/src/narayana-full-@tag@-src.zip</sv:value>
       </sv:property>
       <sv:property sv:name=""url24"" sv:type=""String"">
-        <sv:value>http://www.jboss.org/jbosstm/downloads/@filename@/binary/jbossts-full-@filename@.zip</sv:value>
+        <sv:value>http://www.jboss.org/jbosstm/downloads/@tag@/binary/narayana-full-@tag@-bin.zip</sv:value>
       </sv:property>
       <sv:node sv:name=""MetaData"">
         <sv:property sv:name=""jcr:primaryType"" sv:type=""Name"">",2012-10-16T15:39:17Z,271
"@@ -223,6 +223,7 @@
 				<plugins>
 					<plugin>
 						<artifactId>maven-surefire-plugin</artifactId>
+						<version>2.11</version>
 						<configuration>
 							<skip>true</skip>
 						</configuration>
@@ -239,6 +240,7 @@
 				<plugins>
 					<plugin>
 						<artifactId>maven-surefire-plugin</artifactId>
+						<version>2.11</version>
 						<configuration>
 							<!-- Prevent test and server output appearing in console. -->
 							<redirectTestOutputToFile>true</redirectTestOutputToFile>",2012-06-12T13:38:05Z,162
"@@ -57,7 +57,7 @@ protected void cleanTxStore() throws Exception {
     protected void rebootServer(ContainerController controller) throws Exception {
 
         instrumentor.removeLocalState();
-        File rulesFile = File.createTempFile(""jbosstxbridgetests"", "".btm"");
+        File rulesFile = File.createTempFile(""jbosstxbridgetests"", """");
         rulesFile.deleteOnExit();
         instrumentor.setRedirectedSubmissionsFile(rulesFile);
 ",2012-06-12T13:38:05Z,293
"@@ -22,7 +22,6 @@
 
 import javax.jws.WebService;
 import javax.jws.soap.SOAPBinding;
-import javax.xml.ws.WebServiceClient;
 
 /**
  * Interface for a web service used by txbridge test cases. Client side version.",2012-06-12T13:38:05Z,294
"@@ -74,7 +74,7 @@ public void init(final ServletConfig config)
             userTransaction = (UserTransaction) ic.lookup(""java:comp/UserTransaction"");
 
             URL wsdlLocation = new URL(""http://localhost:8080/txbridge-outbound-tests-service/TestServiceImpl?wsdl"");
-            QName serviceName = new QName(""http://service.outbound.tests.txbridge.jbossts.jboss.org/"", ""TestServiceImplService"");
+            QName serviceName = new QName(""http://client.outbound.tests.txbridge.jbossts.jboss.org/"", ""TestServiceImplService"");
 
             Service service = Service.create(wsdlLocation, serviceName);
             testService = service.getPort(TestService.class);",2012-06-12T13:38:05Z,295
"@@ -28,8 +28,7 @@
  *
  * @author Jonathan Halliday (jonathan.halliday@redhat.com) 2010-03
  */
-@WebService(targetNamespace = ""http://service.outbound.tests.txbridge.jbossts.jboss.org/"",
-        portName = ""TestServiceImplPort"")
+@WebService(name = ""TestServiceImpl"", targetNamespace = ""http://client.outbound.tests.txbridge.jbossts.jboss.org/"")
 @SOAPBinding(style = SOAPBinding.Style.RPC)
 public interface TestService {
     public void doNothing();",2012-06-12T13:38:05Z,296
"@@ -40,7 +40,7 @@
  *
  * @author Jonathan Halliday (jonathan.halliday@redhat.com) 2010-03
  */
-@WebService()
+@WebService(targetNamespace = ""http://client.outbound.tests.txbridge.jbossts.jboss.org/"")
 @SOAPBinding(style = SOAPBinding.Style.RPC)
 @HandlerChain(file = ""/jaxws-handlers-server.xml"") // relative path from the class file
 @WebServlet(name=""OutboundTestServiceServlet"", urlPatterns=TestServiceImpl.URL_PATTERN)",2012-06-12T13:38:05Z,297
"@@ -50,6 +50,7 @@
 import com.arjuna.ats.arjuna.objectstore.RecoveryStore;
 import com.arjuna.ats.arjuna.objectstore.StateStatus;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.recovery.RecoveryManager;
 import com.arjuna.ats.arjuna.recovery.RecoveryModule;
 import com.arjuna.ats.arjuna.state.InputObjectState;
 import com.arjuna.ats.internal.arjuna.common.UidHelper;
@@ -70,6 +71,7 @@
 
 public class XARecoveryModule implements RecoveryModule
 {
+
 	public XARecoveryModule()
 	{
 		this(new com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryResourceManagerImple(),
@@ -116,8 +118,12 @@ public List<SerializableXAResourceDeserializer> getSeriablizableXAResourceDeseri
 	}
 
 
-	public void periodicWorkFirstPass()
+	public synchronized void periodicWorkFirstPass()
 	{
+		// JBTM-1354 allow a second thread to execute the first pass but make sure it is only done once per scan (TMSTART/ENDSCAN)
+		if (!requireFirstPass) {
+			return;
+		}
         if(jtaLogger.logger.isDebugEnabled()) {
             jtaLogger.logger.debugv(""{0} - first pass"", _logName);
         }
@@ -143,6 +149,27 @@ public void periodicWorkFirstPass()
 		{
             jtaLogger.i18NLogger.warn_recovery_periodicfirstpass(_logName+"".periodicWorkFirstPass"", e);
 		}
+		// JBTM-1354 JCA needs to be able to recover XAResources associated with a subordinate transaction so we have to do at least
+		// the start scan to make sure that we have loaded all the XAResources we possibly can to assist subordinate transactions recovering
+
+		// scan using statically configured plugins;
+		_resources = resourceInitiatedRecovery();
+		// scan using dynamically configured plugins:
+		_resources.addAll(resourceInitiatedRecoveryForRecoveryHelpers());
+
+		for (XAResource xaResource : _resources) {
+			try {
+				// This calls out to remote systems and may block. Consider
+				// using alternate concurrency
+				// control rather than sync on __xaResourceRecoveryHelpers
+				// to
+				// avoid blocking problems?
+				xaRecoveryFirstPass(xaResource);
+			} catch (Exception ex) {
+				jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
+			}
+		}
+		requireFirstPass = false;
 	}
 
 	public void periodicWorkSecondPass()
@@ -176,6 +203,10 @@ public void periodicWorkSecondPass()
 		}
 
 		clearAllFailures();
+
+		synchronized (this) {
+			requireFirstPass = true;
+		}
 	}
 
 	public String id()
@@ -189,12 +220,13 @@ public String id()
 	 * @return the XAResource than can be used to commit/rollback the specified
 	 *         transaction.
 	 */
-
 	private XAResource getNewXAResource(Xid xid)
 	{
-		if (_xidScans == null) {
-			bottomUpRecovery();
-        }
+		// JBTM-1354 JCA needs to be able to recover XAResources associated with a subordinate transaction so we have to do at least
+		// the start scan to make sure that we have loaded all the XAResources we possibly can to assist subordinate transactions recovering
+    	// the reason we can't do bottom up recovery is if this server has an XAResource which tries to recover a remote server (e.g. distributed JTA)
+    	// then we get deadlock on the secondpass
+    	periodicWorkFirstPass();
 
         if (_xidScans != null)
 		{
@@ -212,14 +244,14 @@ private XAResource getNewXAResource(Xid xid)
 		}
 
 		return null;
-	}
+    }
 
-	/**
-	 * @param xaResourceRecord The record to reassociate.
-	 *
-	 * @return the XAResource than can be used to commit/rollback the specified
-	 *         record.
-	 */
+       /**
+        * @param xaResourceRecord The record to reassociate.
+        *
+        * @return the XAResource than can be used to commit/rollback the specified
+        *         record.
+        */
     public XAResource getNewXAResource(XAResourceRecord xaResourceRecord)
     {
         return getNewXAResource(xaResourceRecord.getXid());
@@ -371,11 +403,19 @@ record = _recoveryManagerClass.getResource(theUid);
 	 * @see XARecoveryModule#getNewXAResource(XAResourceRecord)
 	 */
     private void bottomUpRecovery() {
+			for (XAResource xaResource : _resources) {
+				try {
+					// This calls out to remote systems and may block. Consider
+					// using alternate concurrency
+					// control rather than sync on __xaResourceRecoveryHelpers
+					// to
+					// avoid blocking problems?
+					xaRecoverySecondPass(xaResource);
+				} catch (Exception ex) {
+					jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
+				}
+			}
 
-        // scan using statically configured plugins;
-        resourceInitiatedRecovery();
-        // scan using dynamically configured plugins:
-        resourceInitiatedRecoveryForRecoveryHelpers();
 
         // JBTM-895 garbage collection is now done when we return XAResources {@see XARecoveryModule#getNewXAResource(XAResourceRecord)}
         // JBTM-924 requires this here garbage collection, see JBTM-1155:
@@ -413,35 +453,25 @@ private void bottomUpRecovery() {
 	 * transaction, because we don't know which process it was.
 	 */
 
-	private final boolean resourceInitiatedRecovery()
+	private final List<XAResource> resourceInitiatedRecovery()
 	{
 		/*
 		 * Now any additional connections we may need to create. Relies upon
 		 * information provided by the application.
 		 */
 
+		List<XAResource> xaresources = new ArrayList<XAResource>();
 		if (_xaRecoverers.size() > 0)
 		{
 			for (int i = 0; i < _xaRecoverers.size(); i++)
 			{
-				XAResource resource = null;
-
 				try
 				{
 					XAResourceRecovery ri = (XAResourceRecovery) _xaRecoverers.get(i);
 
 					while (ri.hasMoreResources())
 					{
-						try
-						{
-							resource = ri.getXAResource();
-
-							xaRecovery(resource);
-						}
-						catch (Exception exp)
-						{
-                            jtaLogger.i18NLogger.warn_recovery_getxaresource(exp);
-						}
+						xaresources.add(ri.getXAResource());
 					}
 				}
 				catch (Exception ex)
@@ -451,11 +481,12 @@ private final boolean resourceInitiatedRecovery()
 			}
 		}
 
-		return true;
+		return xaresources;
 	}
 
-    private boolean resourceInitiatedRecoveryForRecoveryHelpers()
+    private List<XAResource> resourceInitiatedRecoveryForRecoveryHelpers()
     {
+		List<XAResource> xaresources = new ArrayList<XAResource>();
         synchronized (_xaResourceRecoveryHelpers)
         {
             for (XAResourceRecoveryHelper xaResourceRecoveryHelper : _xaResourceRecoveryHelpers)
@@ -467,16 +498,7 @@ private boolean resourceInitiatedRecoveryForRecoveryHelpers()
                     {
                         for (XAResource xaResource : xaResources)
                         {
-                            try
-                            {
-                                // This calls out to remote systems and may block. Consider using alternate concurrency
-                                // control rather than sync on __xaResourceRecoveryHelpers to avoid blocking problems?
-                                xaRecovery(xaResource);
-                            }
-                            catch (Exception ex)
-                            {
-                                jtaLogger.i18NLogger.warn_recovery_getxaresource(ex);
-                            }
+                        	xaresources.add(xaResource);
                         }
                     }
                 }
@@ -487,18 +509,17 @@ private boolean resourceInitiatedRecoveryForRecoveryHelpers()
             }
         }
 
-        return true;
+        return xaresources;
     }
 
 
-	private final boolean xaRecovery(XAResource xares)
+	private final void xaRecoveryFirstPass(XAResource xares)
 	{
 		if (jtaLogger.logger.isDebugEnabled()) {
             jtaLogger.logger.debug(""xarecovery of "" + xares);
         }
 
-		try
-		{
+		
 			Xid[] trans = null;
 
 			try
@@ -523,7 +544,7 @@ private final boolean xaRecovery(XAResource xares)
 				{
 				}
 
-				return false;
+				return;
 			}
 
 			RecoveryXids xidsToRecover = null;
@@ -569,7 +590,11 @@ private final boolean xaRecovery(XAResource xares)
 			}
 
 			xidsToRecover.nextScan(trans);
-
+	}
+	
+	private void xaRecoverySecondPass(XAResource xares) { 		
+		RecoveryXids xidsToRecover = _xidScans.get(xares);
+		try {
 			Xid[] xids = xidsToRecover.toRecover();
 
 			if (xids != null)
@@ -667,7 +692,7 @@ private final boolean xaRecovery(XAResource xares)
             jtaLogger.i18NLogger.warn_recovery_xarecovery1(_logName+"".xaRecovery"", XAHelper.printXAErrorCode(e), e);
 		}
 
-		return true;
+		return;
 	}
 
     /**
@@ -860,6 +885,10 @@ private void clearAllFailures()
 
 	private InputObjectState _uids = new InputObjectState();
 
+	private List<XAResource> _resources;
+
+	private boolean requireFirstPass = true;
+
 	private final List<XAResourceRecovery> _xaRecoverers;
 
     private final List<XAResourceRecoveryHelper> _xaResourceRecoveryHelpers = new LinkedList<XAResourceRecoveryHelper>();",2012-12-14T14:34:44Z,18
"@@ -79,7 +79,8 @@ public void testHeuristicRollback() throws Exception {
 
 		RecoveryEnvironmentBean recoveryEnvironmentBean = BeanPopulator
 				.getDefaultInstance(RecoveryEnvironmentBean.class);
-		recoveryEnvironmentBean.setRecoveryBackoffPeriod(Integer.MAX_VALUE);
+		// JBTM-1354 we need to make sure that a full scan has gone off
+		recoveryEnvironmentBean.setRecoveryBackoffPeriod(1);
 		recoveryEnvironmentBean.setPeriodicRecoveryPeriod(Integer.MAX_VALUE);
 
 		List<String> recoveryModuleClassNames = new ArrayList<String>();
@@ -113,6 +114,10 @@ public void testHeuristicRollback() throws Exception {
 			throw new Exception(""No XARM"");
 		}
 
+		// JBTM-1354 Run a scan to make sure that the recovery thread has completed a full run before starting the test
+		// The important thing is that replayCompletion is allowed to do a scan of the transactions 
+		RecoveryManager.manager().scan();
+
 		XAResource firstResource = new SimpleResource();
 		Object toWakeUp = new Object();
 		final SimpleResourceXA_RETRYHeuristicRollback secondResource = new SimpleResourceXA_RETRYHeuristicRollback();",2012-12-14T14:34:44Z,298
"@@ -1,19 +1,20 @@
 RULE create counter
 CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
 METHOD setParticipantCount(Integer)
-BIND counter:Integer=$1
+BIND counter:Integer=$1, disabled:boolean=false
 IF TRUE
 DO debug(""participant_completion.counter.create: "" + counter),
   deleteCounter(""completes""),
-  createCounter(""completes"", counter)
+  createCounter(""completes"", counter),
+  flag(""enabled"")
 ENDRULE
 
 RULE complete called
 CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
 METHOD completedOperation(NotificationType)
 AT RETURN
 BIND NOTHING
-IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+IF (flagged(""enabled"") AND debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
 DO debug(""participant_completion.called.waking""),
    signalWake(""complete"", true),
    debug(""participant_completion.called.donewake"")
@@ -23,18 +24,20 @@ RULE close called
 CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
 METHOD closeOperation(NotificationType)
 BIND NOTHING
-IF TRUE
+IF (flagged(""enabled""))
 DO debug(""participant_completion.close.waiting""),
    waitFor(""complete""),
-   debug(""participant_completion.close.woken"")
+   debug(""participant_completion.close.woken""),
+   clear(""enabled"")
 ENDRULE
 
 RULE cancel called
 CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
 METHOD cancelOperation(NotificationType)
 BIND NOTHING
-IF TRUE
+IF (flagged(""enabled""))
 DO debug(""participant_completion.cancel.waiting""),
    waitFor(""complete""),
-   debug(""participant_completion.cancel.woken"")
+   debug(""participant_completion.cancel.woken""),
+   clear(""enabled"")
 ENDRULE
\ No newline at end of file",2012-12-13T17:27:38Z,278
"@@ -27,6 +27,7 @@ $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/build/pom.xml -Ds
 JBOSS_BUILD_NAME=$(ls $JBOSS_BUILD_HOME/build/target/ | grep jboss-as)
 cp $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/docs/examples/configs/standalone-xts.xml $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/standalone/configuration/ || fail
 echo JAVA_OPTS=\""\$JAVA_OPTS -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n\"" >> $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/bin/standalone.conf
+echo JAVA_OPTS=\""\$JAVA_OPTS -Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:/opt/byteman-download-2.1.0/lib/byteman.jar=listener:true\"" >> $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/bin/standalone.conf
 cp ../rest-tx/webservice/target/restat-web-*.war $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/standalone/deployments/
 
 END=$(date +%s)",2012-12-13T17:27:38Z,198
"@@ -3,6 +3,7 @@
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserTransaction;
 import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.ByteArrayAsset;
@@ -18,6 +19,7 @@ public static JavaArchive createTestArchive() {
                 .addPackages(true, ""org.jboss.narayana.txframework.functional"")
                 .addAsResource(""jaxws-handlers-jaxws-service.xml"")
                 .addAsManifestResource(""persistence.xml"")
+                .addClass(ParticipantCompletionCoordinatorRules.class)
                 .addAsManifestResource(new ByteArrayAsset(""<interceptors><class>org.jboss.narayana.txframework.impl.ServiceRequestInterceptor</class></interceptors>"".getBytes()),
                         ArchivePaths.create(""beans.xml""));
 ",2012-12-13T17:27:38Z,299
"@@ -47,7 +47,6 @@ public class Service1Impl implements Service1 {
     @Inject
     Map TXDataMap;
 
-    private boolean rollback = false;
     private EventLog eventLog = new EventLog();
 
     @WebMethod
@@ -61,7 +60,7 @@ public Response someServiceRequest(String serviceCommand) throws SomeApplication
         }
 
         if (VOTE_ROLLBACK.equals(serviceCommand)) {
-            rollback = true;
+            TXDataMap.put(""rollback"", true);
         }
         return Response.ok().build();
     }
@@ -93,7 +92,7 @@ private void rollback() {
     private Boolean prepare() {
 
         logEvent(Prepare.class);
-        if (rollback) {
+        if (TXDataMap.containsKey(""rollback"")) {
             return false;
         } else {
             return true;",2013-01-05T20:49:39Z,300
"@@ -47,7 +47,6 @@ public class Service2Impl implements Service2 {
     @Inject
     Map TXDataMap;
 
-    private boolean rollback = false;
     private EventLog eventLog = new EventLog();
 
     @WebMethod
@@ -62,7 +61,7 @@ public Response someServiceRequest(String serviceCommand) throws SomeApplication
 
 
         if (VOTE_ROLLBACK.equals(serviceCommand)) {
-            rollback = true;
+            TXDataMap.put(""rollback"", true);
         }
         return Response.ok().build();
     }
@@ -94,7 +93,7 @@ private void rollback() {
     private Boolean prepare() {
 
         logEvent(Prepare.class);
-        if (rollback) {
+        if (TXDataMap.containsKey(""rollback"")) {
             return false;
         } else {
             return true;",2013-01-05T20:49:39Z,301
"@@ -1 +1,5 @@
-<!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd""><properties/>
\ No newline at end of file
+<!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd"">
+<properties>
+  <entry key=""ObjectStoreEnvironmentBean.objectStoreDir"">PutObjectStoreDirHere</entry>
+  <entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreDir"">PutObjectStoreDirHere</entry>
+</properties>
\ No newline at end of file",2012-11-07T11:02:37Z,302
"@@ -53,6 +53,7 @@ public void test() throws Exception
 
         XACreator creator = (XACreator) Thread.currentThread().getContextClassLoader().loadClass(xaResource).newInstance();
         XAResource theResource = creator.create(connectionString, true);
+        XAResource theResource2 = creator.create(connectionString, true);
 
         assertNotNull(xaResource);
 
@@ -63,6 +64,7 @@ public void test() throws Exception
         javax.transaction.Transaction theTransaction = tm.getTransaction();
 
         assertTrue( theTransaction.enlistResource(theResource) );
+        assertTrue( theTransaction.enlistResource(theResource2) );
 
         /*
         * XA does not support subtransactions.",2012-11-07T11:02:37Z,303
"@@ -1,19 +1,20 @@
 RULE create counter
 CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
 METHOD setParticipantCount(Integer)
-BIND counter:Integer=$1
+BIND counter:Integer=$1, disabled:boolean=false
 IF TRUE
 DO debug(""participant_completion.counter.create: "" + counter),
   deleteCounter(""completes""),
-  createCounter(""completes"", counter)
+  createCounter(""completes"", counter),
+  flag(""enabled"")
 ENDRULE
 
 RULE complete called
 CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
 METHOD completedOperation(NotificationType)
 AT RETURN
 BIND NOTHING
-IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+IF (flagged(""enabled"") AND debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
 DO debug(""participant_completion.called.waking""),
    signalWake(""complete"", true),
    debug(""participant_completion.called.donewake"")
@@ -23,18 +24,20 @@ RULE close called
 CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
 METHOD closeOperation(NotificationType)
 BIND NOTHING
-IF TRUE
+IF (flagged(""enabled""))
 DO debug(""participant_completion.close.waiting""),
    waitFor(""complete""),
-   debug(""participant_completion.close.woken"")
+   debug(""participant_completion.close.woken""),
+   clear(""enabled"")
 ENDRULE
 
 RULE cancel called
 CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
 METHOD cancelOperation(NotificationType)
 BIND NOTHING
-IF TRUE
+IF (flagged(""enabled""))
 DO debug(""participant_completion.cancel.waiting""),
    waitFor(""complete""),
-   debug(""participant_completion.cancel.woken"")
+   debug(""participant_completion.cancel.woken""),
+   clear(""enabled"")
 ENDRULE
\ No newline at end of file",2012-12-13T17:27:38Z,278
"@@ -27,6 +27,7 @@ $JBOSS_BUILD_HOME/build.sh $CLEAN install -f $JBOSS_BUILD_HOME/build/pom.xml -Ds
 JBOSS_BUILD_NAME=$(ls $JBOSS_BUILD_HOME/build/target/ | grep jboss-as)
 cp $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/docs/examples/configs/standalone-xts.xml $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/standalone/configuration/ || fail
 echo JAVA_OPTS=\""\$JAVA_OPTS -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n\"" >> $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/bin/standalone.conf
+echo JAVA_OPTS=\""\$JAVA_OPTS -Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:/opt/byteman-download-2.1.0/lib/byteman.jar=listener:true\"" >> $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/bin/standalone.conf
 cp ../rest-tx/webservice/target/restat-web-*.war $JBOSS_BUILD_HOME/build/target/$JBOSS_BUILD_NAME/standalone/deployments/
 
 END=$(date +%s)",2012-12-13T17:27:38Z,198
"@@ -3,6 +3,7 @@
 import com.arjuna.mw.wst11.UserBusinessActivity;
 import com.arjuna.mw.wst11.UserTransaction;
 import org.jboss.arquillian.container.test.api.Deployment;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.ArchivePaths;
 import org.jboss.shrinkwrap.api.ShrinkWrap;
 import org.jboss.shrinkwrap.api.asset.ByteArrayAsset;
@@ -18,6 +19,7 @@ public static JavaArchive createTestArchive() {
                 .addPackages(true, ""org.jboss.narayana.txframework.functional"")
                 .addAsResource(""jaxws-handlers-jaxws-service.xml"")
                 .addAsManifestResource(""persistence.xml"")
+                .addClass(ParticipantCompletionCoordinatorRules.class)
                 .addAsManifestResource(new ByteArrayAsset(""<interceptors><class>org.jboss.narayana.txframework.impl.ServiceRequestInterceptor</class></interceptors>"".getBytes()),
                         ArchivePaths.create(""beans.xml""));
 ",2012-12-13T17:27:38Z,299
"@@ -47,7 +47,6 @@ public class Service1Impl implements Service1 {
     @Inject
     Map TXDataMap;
 
-    private boolean rollback = false;
     private EventLog eventLog = new EventLog();
 
     @WebMethod
@@ -61,7 +60,7 @@ public Response someServiceRequest(String serviceCommand) throws SomeApplication
         }
 
         if (VOTE_ROLLBACK.equals(serviceCommand)) {
-            rollback = true;
+            TXDataMap.put(""rollback"", true);
         }
         return Response.ok().build();
     }
@@ -93,7 +92,7 @@ private void rollback() {
     private Boolean prepare() {
 
         logEvent(Prepare.class);
-        if (rollback) {
+        if (TXDataMap.containsKey(""rollback"")) {
             return false;
         } else {
             return true;",2013-01-05T20:49:39Z,300
"@@ -47,7 +47,6 @@ public class Service2Impl implements Service2 {
     @Inject
     Map TXDataMap;
 
-    private boolean rollback = false;
     private EventLog eventLog = new EventLog();
 
     @WebMethod
@@ -62,7 +61,7 @@ public Response someServiceRequest(String serviceCommand) throws SomeApplication
 
 
         if (VOTE_ROLLBACK.equals(serviceCommand)) {
-            rollback = true;
+            TXDataMap.put(""rollback"", true);
         }
         return Response.ok().build();
     }
@@ -94,7 +93,7 @@ private void rollback() {
     private Boolean prepare() {
 
         logEvent(Prepare.class);
-        if (rollback) {
+        if (TXDataMap.containsKey(""rollback"")) {
             return false;
         } else {
             return true;",2013-01-05T20:49:39Z,301
"@@ -26,6 +26,7 @@
 
 import java.io.File;
 import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.Iterator;
@@ -45,6 +46,7 @@
 import org.jboss.byteman.contrib.bmunit.BMScript;
 import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
 import org.jboss.byteman.rule.exception.ExecuteException;
+import org.jfree.io.IOUtils;
 import org.junit.AfterClass;
 import org.junit.BeforeClass;
 import org.junit.Test;
@@ -293,14 +295,24 @@ public void run() {
 
 		synchronized (lock) {
 			while (lock.getCount() < 2) {
-				lock.wait();
+				lock.wait(300000);
+			}
+			
+			if (lock.getCount() < 2) {
+				fail(""Did not get notification for both recovery runs, deadlock in recovery manager scan detected"");
+				ProcessBuilder processBuilder = new ProcessBuilder(""/bin/sh"", ""-c"", ""kill -3 $PPID"");  
+				processBuilder.redirectErrorStream(true);
+				Process process = processBuilder.start();       
+				InputStream inputStream = process.getInputStream();       
+				IOUtils.getInstance().copyStreams(inputStream, System.out);
 			}
 		}
 
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 3);
+		// JBTM-1260 simultaneous recover can cause spurious Xid rollback of normally completed Xid, should not be an issue
+		assertTrue("""" + completionCounter.getRollbackCount(""1000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""1000"")));
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 3);
+		assertTrue("""" + completionCounter.getRollbackCount(""2000""), Arrays.asList(new Integer[] {3, 4}).contains(completionCounter.getRollbackCount(""2000"")));
 
 	}
 ",2012-09-20T09:04:36Z,16
"@@ -0,0 +1,30 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.narayana.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>5.0.0.M2-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+</project>",2012-12-07T10:03:43Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:03:43Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:03:43Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:03:43Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:03:43Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:03:43Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:03:43Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:03:43Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:03:43Z,284
"@@ -18,18 +18,51 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
         </properties>
 
+    <build>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
+    </build>
+
 	<dependencies>
 		<dependency>
 			<groupId>org.jboss.narayana.xts</groupId>
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.narayana.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>
@@ -67,6 +100,37 @@
 				</plugins>
 			</build>
 		</profile>
+        <profile>
+      			<id>arq-remote</id>
+      			<activation>
+      				<activeByDefault>false</activeByDefault>
+      			</activation>
+      			<build>
+      				<plugins>
+      					<plugin>
+      						<artifactId>maven-surefire-plugin</artifactId>
+      						<configuration>
+      							<forkMode>once</forkMode>
+      							<systemPropertyVariables combine.children=""append"">
+      							<!--
+      							  Used in arquillian.xml
+      							-->
+      							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
+                                    <node.address>127.0.0.1</node.address>
+      							</systemPropertyVariables>
+      						</configuration>
+      					</plugin>
+      				</plugins>
+      			</build>
+      			<dependencies>
+      				<dependency>
+      					<groupId>org.jboss.as</groupId>
+      					<artifactId>jboss-as-arquillian-container-remote</artifactId>
+      					<version>${jboss-as.version}</version>
+      					<scope>test</scope>
+      				</dependency>
+      			</dependencies>
+      		</profile>
 		<profile>
 			<id>arq</id>
 			<activation>
@@ -83,7 +147,7 @@
 							  Used in arquillian.xml
 							-->
 							  <server.jvm.args>${general.server.jvm.args} ${ipv4.server.jvm.args}</server.jvm.args>
-                                                          <node.address>127.0.0.1</node.address>
+                              <node.address>127.0.0.1</node.address>
 							</systemPropertyVariables>
 						</configuration>
 					</plugin>",2012-12-07T10:03:43Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:03:43Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:03:43Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+	<groupId>org.jboss.narayana.xts</groupId>
+	<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+      </dependency>
       <dependency>
         <groupId>org.jboss.narayana.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:03:43Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+	<dependency>
+	   <groupId>org.jboss.narayana.xts</groupId>
+	   <artifactId>byteman_support</artifactId>
+           <scope>test</scope>
+	</dependency>
         <dependency>
             <groupId>org.jboss.narayana.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:03:43Z,41
"@@ -5,6 +5,8 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
@@ -13,7 +15,9 @@
 import org.jboss.narayana.txframework.functional.common.SomeApplicationException;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -27,6 +31,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -45,9 +60,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -57,9 +73,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -68,10 +85,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -80,9 +98,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:03:43Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:03:43Z,129
"@@ -0,0 +1,50 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<!-- JBoss, Home of Professional Open Source Copyright 2008, Red Hat Middleware LLC, and others contributors as indicated by the @authors tag. All rights reserved. See the copyright.txt in the distribution 
+	for a full listing of individual contributors. This copyrighted material is made available to anyone wishing to use, modify, copy, or redistribute it subject to the terms and conditions of the GNU Lesser 
+	General Public License, v. 2.1. This program is distributed in the hope that it will be useful, but WITHOUT A WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
+	PURPOSE. See the GNU Lesser General Public License for more details. You should have received a copy of the GNU Lesser General Public License, v.2.1 along with this distribution; if not, write to the Free 
+	Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. -->
+<project xmlns=""http://maven.apache.org/POM/4.0.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
+         xsi:schemaLocation=""http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"">
+    <parent>
+        <groupId>org.jboss.jbossts.xts</groupId>
+        <artifactId>xts-all</artifactId>
+        <version>4.17.4.Final-SNAPSHOT</version>
+        <relativePath>../pom.xml</relativePath>
+    </parent>
+    <modelVersion>4.0.0</modelVersion>
+    <artifactId>byteman_support</artifactId>
+    <packaging>jar</packaging>
+    <name>Reusable Byteman rules for xts</name>
+    
+    <dependencies>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.jboss.byteman</groupId>
+            <artifactId>byteman-submit</artifactId>
+        </dependency>
+    </dependencies>
+  <profiles>
+    <profile>
+        <id>release</id>
+        <build>
+            <plugins>
+              <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-install-plugin</artifactId>
+                <executions>
+                  <execution>
+                    <id>default-install</id>
+                    <phase>install</phase>
+                  </execution>
+                </executions>
+                <inherited>false</inherited>
+              </plugin>
+            </plugins>
+        </build>
+    </profile>
+  </profiles>
+</project>",2012-12-07T10:27:20Z,275
"@@ -0,0 +1,53 @@
+package org.jboss.jbossts.xts.bytemanSupport;
+
+import org.jboss.byteman.agent.submit.Submit;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * @Author paul.robinson@redhat.com 22/11/2012
+ */
+public class BMScript {
+
+    private static final Submit submit = new Submit();
+
+    public static void submit(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.addRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to submit Byteman script"", e);
+        }
+    }
+
+    public static void remove(String scriptResourcePath) {
+
+        try {
+            List<InputStream> streams = getScriptFromResource(scriptResourcePath);
+            submit.deleteRulesFromResources(streams);
+        } catch (Exception e) {
+            throw new RuntimeException(""Failed to remove Byteman script"", e);
+        }
+    }
+
+    private static List<InputStream> getScriptFromResource(String scriptResourcePath) {
+        URL resource = Thread.currentThread().getContextClassLoader().getResource(scriptResourcePath);
+        if (resource == null) {
+            throw new RuntimeException(""'"" + scriptResourcePath + ""' can't be found on the classpath"");
+        }
+
+        List<InputStream> streams = new ArrayList<InputStream>();
+        try {
+            streams.add(resource.openStream());
+        } catch (IOException e) {
+            throw new RuntimeException(""Unable to open stream at url location: "" + resource.toString());
+        }
+        return streams;
+    }
+
+}",2012-12-07T10:27:20Z,276
"@@ -0,0 +1,13 @@
+package org.jboss.jbossts.xts.bytemanSupport.participantCompletion;
+
+/**
+ * @Author paul.robinson@redhat.com 26/11/2012
+ */
+public class ParticipantCompletionCoordinatorRules {
+
+    public static String RESOURCE_PATH= ""org/jboss/jbossts/xts/bytemanSupport/participantCompletion/participant_completion_coordinator_rules.btm"";
+
+    public static void setParticipantCount(Integer participantCount) {
+        //Dummy method, detected by Byteman Rules
+    }
+}",2012-12-07T10:27:20Z,277
"@@ -0,0 +1,40 @@
+RULE create counter
+CLASS org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules
+METHOD setParticipantCount(Integer)
+BIND counter:Integer=$1
+IF TRUE
+DO debug(""participant_completion.counter.create: "" + counter),
+  deleteCounter(""completes""),
+  createCounter(""completes"", counter)
+ENDRULE
+
+RULE complete called
+CLASS com.arjuna.webservices11.wsba.sei.BusinessAgreementWithParticipantCompletionCoordinatorPortTypeImpl
+METHOD completedOperation(NotificationType)
+AT RETURN
+BIND NOTHING
+IF (debug(""participant_completion.counter.decrement"") AND decrementCounter(""completes"") == 0)
+DO debug(""participant_completion.called.waking""),
+   signalWake(""complete"", true),
+   debug(""participant_completion.called.donewake"")
+ENDRULE
+
+RULE close called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD closeOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.close.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.close.woken"")
+ENDRULE
+
+RULE cancel called
+CLASS com.arjuna.webservices11.wsarjtx.sei.TerminationCoordinatorPortTypeImpl
+METHOD cancelOperation(NotificationType)
+BIND NOTHING
+IF TRUE
+DO debug(""participant_completion.cancel.waiting""),
+   waitFor(""complete""),
+   debug(""participant_completion.cancel.woken"")
+ENDRULE
\ No newline at end of file",2012-12-07T10:27:20Z,278
"@@ -67,8 +67,6 @@ public void testClose()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:27:20Z,279
"@@ -68,8 +68,6 @@ public void testExit()
             throw eouter;
         }
 
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
 
 	    assertTrue(p.passed());",2012-12-07T10:27:20Z,280
"@@ -73,8 +73,6 @@ public void testMultiClose()
             }
             throw eouter;
         }
-        //[JBTM-1292]
-        Thread.sleep(3*1000);
 	    uba.close();
         assertTrue(p.passed());
     }",2012-12-07T10:27:20Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CloseTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Close.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testClose();
 	}
 }",2012-12-07T10:27:20Z,282
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -20,11 +24,23 @@ public class CompensateTest {
 	public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				Compensate.class,
-				DemoBusinessParticipant.class);
+				DemoBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
 		test.testCompensate();
 	}
 }",2012-12-07T10:27:20Z,283
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -14,6 +18,7 @@
 
 @RunWith(Arquillian.class)
 public class MultiCloseTest {
+    
 	@Inject
 	MultiClose test;
 	
@@ -22,11 +27,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiClose.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
-	
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiClose();
 	}
 }",2012-12-07T10:27:20Z,281
"@@ -4,7 +4,11 @@
 
 import org.jboss.arquillian.container.test.api.Deployment;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.shrinkwrap.api.spec.WebArchive;
+import org.junit.AfterClass;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -22,11 +26,23 @@ public static WebArchive createDeployment() {
 		return WarDeployment.getDeployment(
 				MultiCompensate.class,
 				DemoBusinessParticipant.class,
-				FailureBusinessParticipant.class);
+				FailureBusinessParticipant.class,
+                ParticipantCompletionCoordinatorRules.class);
 	}
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
 	
 	@Test
 	public void test() throws Exception {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(2);
 		test.testMultiCompensate();
 	}
 }",2012-12-07T10:27:20Z,284
"@@ -18,7 +18,12 @@
 	<description>localjunit tests for xts</description>
         <properties>
             <buildType>11</buildType>
-            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m</general.server.jvm.args>
+            <general.server.jvm.args>-Xms64m -Xmx1024m -XX:MaxPermSize=512m
+                                     -Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:${project.build.directory}/lib/byteman.jar=listener:true
+            </general.server.jvm.args>
             <ipv4.server.jvm.args></ipv4.server.jvm.args>
             <ipv6.server.jvm.args>-Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1] -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true</ipv6.server.jvm.args>
             <server.debug.args>Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006</server.debug.args>
@@ -35,6 +40,26 @@
                 </plugin>
             </plugins>
         </pluginManagement>
+        <plugins>
+                <plugin>
+                    <groupId>org.apache.maven.plugins</groupId>
+                      <artifactId>maven-dependency-plugin</artifactId>
+                      <executions>
+                        <execution>
+                          <id>copy-dependencies</id>
+                          <phase>test-compile</phase>
+                          <goals>
+                            <goal>copy-dependencies</goal>
+                          </goals>
+                          <configuration>
+                              <stripVersion>true</stripVersion>
+                              <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                          </configuration>
+                        </execution>
+                      </executions>
+                </plugin>
+        </plugins>
     </build>
 
 	<dependencies>
@@ -43,6 +68,16 @@
 			<artifactId>jbossxts</artifactId>
 			<scope>provided</scope>
 		</dependency>
+		<dependency>
+			<groupId>org.jboss.jbossts.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
+        <dependency>
+            <groupId>org.jboss.jbossts</groupId>
+            <artifactId>common</artifactId>
+            <scope>provided</scope>
+        </dependency>
 		<dependency>
 			<groupId>junit</groupId>
 			<artifactId>junit</artifactId>",2012-12-07T10:27:20Z,34
"@@ -37,6 +37,7 @@
     </plugins>
   </build>
   <modules>
+    <module>byteman_support</module>
     <module>WSAS</module>
     <module>WSAS/xts-test-servlet</module>
     <module>WS-C</module>",2012-12-07T10:27:20Z,285
"@@ -52,6 +52,14 @@
     </plugins>
   </build>
   <dependencies>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+    </dependency>
     <!-- START TEST -->
     <dependency>
       <groupId>junit</groupId>",2012-12-07T10:27:20Z,286
"@@ -942,6 +942,11 @@
         <artifactId>service</artifactId>
         <version>${project.version}</version>
       </dependency>
+      <dependency>
+		<groupId>org.jboss.jbossts.xts</groupId>
+		<artifactId>byteman_support</artifactId>
+        <version>${project.version}</version>
+	  </dependency>
       <dependency>
         <groupId>org.jboss.jbossts.rts</groupId>
         <artifactId>restat-web</artifactId>
@@ -973,27 +978,27 @@
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-install</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-submit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-bmunit</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
       <dependency>
         <groupId>org.jboss.byteman</groupId>
         <artifactId>byteman-dtest</artifactId>
-        <version>2.0.1</version>
+        <version>2.1.2</version>
       </dependency>
   </dependencies>
   </dependencyManagement>",2012-12-07T10:27:20Z,39
"@@ -37,6 +37,24 @@
                     <skip>true</skip>
                 </configuration>
             </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                  <artifactId>maven-dependency-plugin</artifactId>
+                  <executions>
+                    <execution>
+                      <id>copy-dependencies</id>
+                      <phase>test-compile</phase>
+                      <goals>
+                        <goal>copy-dependencies</goal>
+                      </goals>
+                      <configuration>
+                          <stripVersion>true</stripVersion>
+                          <includeGroupIds>org.jboss.byteman</includeGroupIds>
+                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                      </configuration>
+                    </execution>
+                  </executions>
+            </plugin>
         </plugins>
     </build>
 
@@ -112,6 +130,11 @@
                 </exclusion>
             </exclusions>
         </dependency>
+		<dependency>
+			<groupId>org.jboss.jbossts.xts</groupId>
+			<artifactId>byteman_support</artifactId>
+            <scope>test</scope>
+		</dependency>
         <dependency>
             <groupId>org.jboss.jbossts.rts</groupId>
             <artifactId>restat-util</artifactId>",2012-12-07T10:27:20Z,41
"@@ -5,14 +5,18 @@
 import com.arjuna.wst.TransactionRolledBackException;
 import junit.framework.Assert;
 import org.jboss.arquillian.junit.Arquillian;
+import org.jboss.jbossts.xts.bytemanSupport.BMScript;
+import org.jboss.jbossts.xts.bytemanSupport.participantCompletion.ParticipantCompletionCoordinatorRules;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Close;
 import org.jboss.narayana.txframework.functional.clients.BAParticipantCompletionClient;
 import org.jboss.narayana.txframework.functional.common.ServiceCommand;
 import org.jboss.narayana.txframework.functional.interfaces.BAParticipantCompletion;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.Compensate;
 import org.jboss.narayana.txframework.api.annotation.lifecycle.ba.ConfirmCompleted;
 import org.junit.After;
+import org.junit.AfterClass;
 import org.junit.Before;
+import org.junit.BeforeClass;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import javax.xml.ws.soap.SOAPFaultException;
@@ -26,6 +30,17 @@ public class BAParticipantCompletionTest extends BaseFunctionalTest
     UserBusinessActivity uba;
     BAParticipantCompletion client;
 
+
+    @BeforeClass()
+    public static void submitBytemanScript() throws Exception {
+        BMScript.submit(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
+    @AfterClass()
+    public static void removeBytemanScript() {
+        BMScript.remove(ParticipantCompletionCoordinatorRules.RESOURCE_PATH);
+    }
+
     @Before
     public void setupTest() throws Exception
     {
@@ -44,9 +59,10 @@ public void teardownTest() throws Exception
     @Test
     public void testAutoComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -56,9 +72,10 @@ public void testAutoComplete() throws Exception
     @Test
     public void testManualComplete() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -67,10 +84,11 @@ public void testManualComplete() throws Exception
     @Test
     public void testMultiInvoke() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+        
         uba.begin();
         client.saveDataManualComplete();
         client.saveDataManualComplete(ServiceCommand.COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
 
         assertOrder(ConfirmCompleted.class, Close.class);
@@ -79,9 +97,10 @@ public void testMultiInvoke() throws Exception
     @Test
     public void testClientDrivenCompensate() throws Exception
     {
+        ParticipantCompletionCoordinatorRules.setParticipantCount(1);
+
         uba.begin();
         client.saveDataAutoComplete();
-        Thread.sleep(10000); //JBTM-1203
         uba.cancel();
 
         assertOrder(ConfirmCompleted.class, Compensate.class);
@@ -113,8 +132,8 @@ public void testCannotComplete() throws Exception
     {
         uba.begin();
         client.saveDataAutoComplete(ServiceCommand.CANNOT_COMPLETE);
-        Thread.sleep(10000); //JBTM-1203
         uba.close();
+        
         assertOrder();
     }
 ",2012-12-07T10:27:20Z,287
"@@ -16,6 +16,11 @@
       <!-- If you want to use the JBOSS_HOME environment variable, just delete the jbossHome property -->
       <configuration>
 			<property name=""serverConfig"">standalone-xts.xml</property>
+            <property name=""javaVmArguments"">-Dorg.jboss.byteman.verbose
+                                    -Djboss.modules.system.pkgs=org.jboss.byteman
+                                    -Dorg.jboss.byteman.transform.all
+                                    -javaagent:../lib/byteman.jar=listener:true
+            </property>
       </configuration>
    </container>
 ",2012-12-07T10:27:20Z,129
"@@ -13,4 +13,5 @@ qa/transaction.log.1
 qa/transaction.log.2
 qa/value_1
 qa/value_2
-
+qa/testoutput-idlj.zip
+qa/testoutput-jacorb.zip",2012-10-22T08:37:20Z,304
"@@ -34,6 +34,7 @@
 import static org.junit.Assert.assertFalse;
 import static org.junit.Assert.assertTrue;
 
+import java.lang.reflect.Field;
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Vector;
@@ -49,6 +50,8 @@
 import com.arjuna.ats.arjuna.common.RecoveryEnvironmentBean;
 import com.arjuna.ats.arjuna.common.Uid;
 import com.arjuna.ats.arjuna.coordinator.ActionStatus;
+import com.arjuna.ats.arjuna.coordinator.BasicAction;
+import com.arjuna.ats.arjuna.coordinator.RecordList;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
 import com.arjuna.ats.arjuna.recovery.ActionStatusService;
 import com.arjuna.ats.arjuna.recovery.RecoverAtomicAction;
@@ -166,8 +169,8 @@ public void testHeuristicRollback() throws Exception {
 
 		RecoveryEnvironmentBean recoveryEnvironmentBean = BeanPopulator
 				.getDefaultInstance(RecoveryEnvironmentBean.class);
-		recoveryEnvironmentBean.setRecoveryBackoffPeriod(1);
-		recoveryEnvironmentBean.setPeriodicRecoveryPeriod(1);
+		recoveryEnvironmentBean.setRecoveryBackoffPeriod(Integer.MAX_VALUE);
+		recoveryEnvironmentBean.setPeriodicRecoveryPeriod(Integer.MAX_VALUE);
 
 		List<String> recoveryModuleClassNames = new ArrayList<String>();
 
@@ -202,8 +205,7 @@ public void testHeuristicRollback() throws Exception {
 
 		XAResource firstResource = new SimpleResource();
 		Object toWakeUp = new Object();
-		final SimpleResourceXA_RETRYHeuristicRollback secondResource = new SimpleResourceXA_RETRYHeuristicRollback(
-				toWakeUp);
+		final SimpleResourceXA_RETRYHeuristicRollback secondResource = new SimpleResourceXA_RETRYHeuristicRollback();
 
 		xaRecoveryModule
 				.addXAResourceRecoveryHelper(new XAResourceRecoveryHelper() {
@@ -239,36 +241,57 @@ public XAResource[] getXAResources() throws Exception {
 
 		tm.commit();
 
-		synchronized (toWakeUp) {
-			toWakeUp.wait();
-		}
-		assertTrue(secondResource.wasCommitted());
-
 		InputObjectState uids = new InputObjectState();
 		String type = new AtomicAction().type();
-		StoreManager.getRecoveryStore().allObjUids(
-				type,
-				uids);
+		StoreManager.getRecoveryStore().allObjUids(type, uids);
 		boolean moreUids = true;
 
 		boolean found = false;
 		while (moreUids) {
 			Uid theUid = UidHelper.unpackFrom(uids);
 			if (theUid.equals(txUid)) {
-	            ActionStatusService ass = new ActionStatusService();
-
-	            int theStatus = ass.getTransactionStatus(type, theUid.stringForm());
-	            System.out.println(ActionStatus.stringForm( theStatus )) ;
-	            RecoverAtomicAction rcvAtomicAction =
-	                    new RecoverAtomicAction( theUid, theStatus ) ;
-	            theStatus = rcvAtomicAction.status();
-	            System.out.println(ActionStatus.stringForm( theStatus )) ;
 				found = true;
+				Field heuristicListField = BasicAction.class
+						.getDeclaredField(""heuristicList"");
+				heuristicListField.setAccessible(true);
+				ActionStatusService ass = new ActionStatusService();
+
+				{
+					int theStatus = ass.getTransactionStatus(type,
+							theUid.stringForm());
+					assertTrue(theStatus == ActionStatus.COMMITTED);
+					RecoverAtomicAction rcvAtomicAction = new RecoverAtomicAction(
+							theUid, theStatus);
+					theStatus = rcvAtomicAction.status();
+					rcvAtomicAction.replayPhase2();
+					assertTrue(theStatus == ActionStatus.COMMITTED);
+					assertTrue(secondResource.wasCommitted());
+					RecordList heuristicList = (RecordList) heuristicListField
+							.get(rcvAtomicAction);
+					assertTrue(
+							""Expected 1 heuristics: "" + heuristicList.size(),
+							heuristicList.size() == 1);
+				}
+				{
+					int theStatus = ass.getTransactionStatus(type,
+							theUid.stringForm());
+					assertTrue(theStatus == ActionStatus.COMMITTED);
+					RecoverAtomicAction rcvAtomicAction = new RecoverAtomicAction(
+							theUid, theStatus);
+					theStatus = rcvAtomicAction.status();
+					assertTrue(theStatus == ActionStatus.COMMITTED);
+					RecordList heuristicList = (RecordList) heuristicListField
+							.get(rcvAtomicAction);
+					assertTrue(
+							""Expected 1 heuristics: "" + heuristicList.size(),
+							heuristicList.size() == 1);
+					assertTrue(secondResource.wasCommitted());
+				}
 			} else if (theUid.equals(Uid.nullUid())) {
 				moreUids = false;
 			}
 		}
-		
+
 		if (!found) {
 			throw new Exception(""Could not locate the Uid"");
 		}",2012-05-29T14:52:19Z,305
"@@ -28,11 +28,6 @@ public class SimpleResourceXA_RETRYHeuristicRollback implements XAResource {
 	private Xid xid;
 	private boolean firstAttemptToCommit = true;
 	private boolean committed = false;
-	private Object toWakeUp;
-
-	public SimpleResourceXA_RETRYHeuristicRollback(Object toWakeUp) {
-		this.toWakeUp = toWakeUp;
-	}
 
 	public void commit(Xid xid, boolean onePhase) throws XAException {
 		System.out.println(""SimpleResourceXA_RETRY commit called: "" + xid);
@@ -43,9 +38,6 @@ public void commit(Xid xid, boolean onePhase) throws XAException {
 		}
 		xid = null;
 		committed = true;
-		synchronized (toWakeUp) {
-			toWakeUp.notify();
-		}
 		throw new XAException(XAException.XA_HEURRB);
 	}
 ",2012-05-29T14:52:19Z,306
"@@ -1,121 +1,174 @@
-if [ -z ""${WORKSPACE}"" ]; then
-  echo ""UNSET WORKSPACE""
-  exit -1;
-fi
-
-isIdlj=0
-for arg in ""$@""; do
-  if [ `echo ""$arg"" |grep ""idlj""` ]; then
-    isIdlj=1
+function fatal {
+  echo ""$1""
+  exit -1
+}
+
+#BUILD NARAYANA WITH FINDBUGS
+function build_narayana {
+  echo ""Building Narayana""
+  cd $WORKSPACE
+  [ $NARAYANA_TESTS == 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=""-DskipTests""
+  [ $IDLJ == 1 ] && NARAYANA_ARGS=""$NARAYANA_ARGS -Pidlj""
+
+  ./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" $NARAYANA_ARGS $IPV6_OPTS clean install
+  [ $? = 0 ] || fatal ""narayana build failed""
+  cp_narayana_to_as
+  return 0
+}
+
+function cp_narayana_to_as {
+  echo ""Copying Narayana to AS""
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || return 1
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || return 1
+
+  echo ""WARNING - check that narayana version ${NARAYANA_VERSION} is the one you want""
+  JAR1=narayana-jts-integration-${NARAYANA_VERSION}.jar
+  JAR2=narayana-jts-${NARAYANA_VERSION}.jar
+# TODO make sure ${JBOSS_HOME} doesn't already contain a different version of narayana
+  echo ""cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/""
+  echo ""cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/""
+  cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/
+  [ $? = 0 ] || return 1
+  cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/
+}
+
+function build_as {
+  echo ""Building AS""
+  GIT_URL=""https://github.com/jbosstm/jboss-as.git""
+  UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+
+  cd ${WORKSPACE}
+  rm -rf jboss-as
+  git clone $GIT_URL
+  [ $? = 0 ] || fatal ""git clone $GIT_URL failed""
+
+  cd jboss-as
+  git checkout -t origin/5_BRANCH
+  [ $? = 0 ] || fatal ""git checkout 5_BRANCH failed""
+
+  git remote add upstream $UPSTREAM_GIT_URL
+  git pull --rebase --ff-only upstream master
+  [ $? = 0 ] || fatal ""git rebase failed""
+
+  export MAVEN_OPTS=""-XX:MaxPermSize=512m""
+  export JAVA_OPTS=""-Xms1303m -Xmx1303m -XX:MaxPermSize=512m""
+  ./build.sh clean install -DskipTests -Dts.smoke=false $IPV6_OPTS
+  [ $? = 0 ] || fatal ""AS build failed""
+  init_jboss_home
+}
+
+function init_jboss_home {
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || fatal ""missing AS - cannot set JBOSS_VERSION""
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || fatal ""missing AS - $JBOSS_HOME is not a directory""
+  echo ""JBOSS_HOME=$JBOSS_HOME""
+}
+
+function txframework_tests {
+  echo ""#0. TXFramework Test""
+  cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
+  ./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
+  [ $? = 0 ] || fatal ""TxFramework build failed""
+}
+
+function xts_tests {
+  echo ""#1 XTS: WSTX11 INTEROP, UNIT TESTS, xtstest and CRASH RECOVERY TESTS""
+
+  cd $WORKSPACE
+  ran_crt=0
+
+  if [ $WSTX_MODULES ]; then
+    [[ $WSTX_MODULES = *crash-recovery-tests* ]] && ran_crt=1
+    echo ""BUILDING SPECIFIC WSTX11 modules""
+    ./build.sh -f XTS/localjunit/pom.xml --projects ""$WSTX_MODULES"" -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+  else
+    ./build.sh -f XTS/localjunit/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+    ran_crt=0
+  fi
+
+  [ $? = 0 ] || fatal ""XTS: SOME TESTS failed""
+
+  if [ $ran_crt = 1 ]; then
+    (cd XTS/sar/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
+    [ $? = 0 ] || fatal ""Simplify CRASH RECOVERY logs failed""
   fi
-done
+}
+
+function tx_bridge_tests {
+  echo ""XTS: TXBRIDGE TESTS update conf""
+  cd $WORKSPACE
+  CONF=""${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml""
+  grep recovery-listener ""$CONF""
+  sed -e s/recovery-listener=\""true\""//g -i $CONF
+  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+
+#  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS: sed failed""
+
+  echo ""XTS: TXBRIDGE TESTS""
+  ./build.sh -f txbridge/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS test
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS failed""
+}
+
+function qa_tests {
+  echo ""QA Test Suite""
+  cd $WORKSPACE/qa
+
+  sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
+  [ $? = 0 ] || fatal ""sed TaskImpl.properties failed""
 
-# test whether the IPV6 evironment variable is set
-if [ -v IPV6 ]; then
-  mvn_arqprof=""-ParqIPv6""
-else
-  mvn_arqprof=""-Parq""
-fi
+  # delete lines containing jacorb
+  [ $IDLJ == 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
+  ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
+  [ $? = 0 ] || fatal ""qa build failed""
+
+  [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
+  ant -f run-tests.xml $target
+  [ $? = 0 ] || fatal ""some qa tests failed""
+}
+
+# if the following env variables have not been set initialize them to their defaults
+[ $NARAYANA_VERSION ] || NARAYANA_VERSION=""5.0.0.M2-SNAPSHOT""
+[ $ARQ_PROF ] || ARQ_PROF=arq	# IPv4 arquillian profile
+
+[ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
+[ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
+[ $AS_BUILD ] || AS_BUILD=1 # git clone and build a fresh copy of the AS
+[ $TXF_TESTS ] || TXF_TESTS=0 # TxFramework tests
+[ $XTS_TESTS ] || XTS_TESTS=1 # XTS tests
+[ $QA_TESTS ] || QA_TESTS=1 # QA test suite
+[ $txbridge ] || txbridge=1 # bridge tests
+[ $IDLJ ] || IDLJ=0 # use the Sun orb instead of the default JacORB
+
+QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
+
+# for IPv6 testing use export ARQ_PROF=arqIPv6
+# if you don't want to run all the XTS tests set WSTX_MODULES to the ones you want, eg:
+# export WSTX_MODULES=""WSAS,WSCF,WSTX,WS-C,WS-T,xtstest,crash-recovery-tests""
+
+[ -z ""${WORKSPACE}"" ] && fatal ""UNSET WORKSPACE""
 
 # FOR DEBUGGING SUBSEQUENT ISSUES
 free -m
 
 #Make sure no JBoss processes running
-for i in `ps -eaf | grep java | grep ""standalone"" | grep -v grep | cut -c10-15`; do kill $i; done
+for i in `ps -eaf | grep java | grep ""standalone*.xml"" | grep -v grep | cut -c10-15`; do kill $i; done
 
-#BUILD NARAYANA WITH FINDBUGS
-./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-GIT_URL=""https://github.com/jbosstm/jboss-as.git""
-UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
-
-#BUILD JBOSS-AS
-cd ${WORKSPACE}
-rm -rf jboss-as
-git clone $GIT_URL
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-cd jboss-as
-git checkout -t origin/5_BRANCH
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-git remote add upstream $UPSTREAM_GIT_URL
-git pull --rebase --ff-only upstream master
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-MAVEN_OPTS=-XX:MaxPermSize=256m ./build.sh ""$@"" clean install -DskipTests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
-export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
-
-cd ${WORKSPACE}
-
-#0. TXFramework Tests
-#cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
-#./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
-#if [ ""$?"" != ""0"" ]; then
-#        exit -1
-#fi
-
-#1.WSTX11 INTEROP and UNIT TESTS and CRASH RECOVERY TESTS
-./build.sh -f XTS/localjunit/pom.xml $mvn_arqprof ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#2.CHECK CRASH REC OUTPUT
-(cd XTS/localjunit/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#3.TXBRIDGE TESTS
-cd ${WORKSPACE}
-sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i ${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-./build.sh -f txbridge/pom.xml $mvn_arqprof ""$@"" clean test
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#RUN QA TESTS
-cd $WORKSPACE/qa
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-if [ $isIdlj == 1 ]; then
-# delete lines containing jacorb
-	sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
-fi
-
-ant -DisIdlj=$isIdlj -Ddriver.url=file:///home/hudson/dbdrivers get.drivers dist
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-ant -f run-tests.xml ci-tests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
+# if we are building with IPv6 tell ant about it
+export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
+
+# run the job
+[ $NARAYANA_BUILD = 1 ] && build_narayana ""$@""
+[ $AS_BUILD = 1 ] && build_as ""$@"" || init_jboss_home
+[ $TXF_TESTS = 1 ] && txframework_tests ""$@""
+[ $XTS_TESTS = 1 ] && xts_tests ""$@""
+[ $txbridge = 1 ] && tx_bridge_tests ""$@""
+[ $QA_TESTS = 1 ] && qa_tests ""$@""
+
+exit 0",2012-07-13T19:18:21Z,10
"@@ -1028,6 +1028,7 @@
         <module>txbridge</module>
         <module>fileio</module>
         <module>STM</module>
+        <module>txframework</module>
         <module>narayana-full</module>
       </modules>
     </profile>",2012-06-20T13:38:51Z,39
"@@ -1,121 +1,174 @@
-if [ -z ""${WORKSPACE}"" ]; then
-  echo ""UNSET WORKSPACE""
-  exit -1;
-fi
-
-isIdlj=0
-for arg in ""$@""; do
-  if [ `echo ""$arg"" |grep ""idlj""` ]; then
-    isIdlj=1
+function fatal {
+  echo ""$1""
+  exit -1
+}
+
+#BUILD NARAYANA WITH FINDBUGS
+function build_narayana {
+  echo ""Building Narayana""
+  cd $WORKSPACE
+  [ $NARAYANA_TESTS == 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=""-DskipTests""
+  [ $IDLJ == 1 ] && NARAYANA_ARGS=""$NARAYANA_ARGS -Pidlj""
+
+  ./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" $NARAYANA_ARGS $IPV6_OPTS clean install
+  [ $? = 0 ] || fatal ""narayana build failed""
+  cp_narayana_to_as
+  return 0
+}
+
+function cp_narayana_to_as {
+  echo ""Copying Narayana to AS""
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || return 1
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || return 1
+
+  echo ""WARNING - check that narayana version ${NARAYANA_VERSION} is the one you want""
+  JAR1=narayana-jts-integration-${NARAYANA_VERSION}.jar
+  JAR2=narayana-jts-${NARAYANA_VERSION}.jar
+# TODO make sure ${JBOSS_HOME} doesn't already contain a different version of narayana
+  echo ""cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/""
+  echo ""cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/""
+  cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/
+  [ $? = 0 ] || return 1
+  cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/
+}
+
+function build_as {
+  echo ""Building AS""
+  GIT_URL=""https://github.com/jbosstm/jboss-as.git""
+  UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+
+  cd ${WORKSPACE}
+  rm -rf jboss-as
+  git clone $GIT_URL
+  [ $? = 0 ] || fatal ""git clone $GIT_URL failed""
+
+  cd jboss-as
+  git checkout -t origin/5_BRANCH
+  [ $? = 0 ] || fatal ""git checkout 5_BRANCH failed""
+
+  git remote add upstream $UPSTREAM_GIT_URL
+  git pull --rebase --ff-only upstream master
+  [ $? = 0 ] || fatal ""git rebase failed""
+
+  export MAVEN_OPTS=""-XX:MaxPermSize=512m""
+  export JAVA_OPTS=""-Xms1303m -Xmx1303m -XX:MaxPermSize=512m""
+  ./build.sh clean install -DskipTests -Dts.smoke=false $IPV6_OPTS
+  [ $? = 0 ] || fatal ""AS build failed""
+  init_jboss_home
+}
+
+function init_jboss_home {
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || fatal ""missing AS - cannot set JBOSS_VERSION""
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || fatal ""missing AS - $JBOSS_HOME is not a directory""
+  echo ""JBOSS_HOME=$JBOSS_HOME""
+}
+
+function txframework_tests {
+  echo ""#0. TXFramework Test""
+  cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
+  ./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
+  [ $? = 0 ] || fatal ""TxFramework build failed""
+}
+
+function xts_tests {
+  echo ""#1 XTS: WSTX11 INTEROP, UNIT TESTS, xtstest and CRASH RECOVERY TESTS""
+
+  cd $WORKSPACE
+  ran_crt=0
+
+  if [ $WSTX_MODULES ]; then
+    [[ $WSTX_MODULES = *crash-recovery-tests* ]] && ran_crt=1
+    echo ""BUILDING SPECIFIC WSTX11 modules""
+    ./build.sh -f XTS/localjunit/pom.xml --projects ""$WSTX_MODULES"" -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+  else
+    ./build.sh -f XTS/localjunit/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+    ran_crt=0
+  fi
+
+  [ $? = 0 ] || fatal ""XTS: SOME TESTS failed""
+
+  if [ $ran_crt = 1 ]; then
+    (cd XTS/sar/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
+    [ $? = 0 ] || fatal ""Simplify CRASH RECOVERY logs failed""
   fi
-done
+}
+
+function tx_bridge_tests {
+  echo ""XTS: TXBRIDGE TESTS update conf""
+  cd $WORKSPACE
+  CONF=""${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml""
+  grep recovery-listener ""$CONF""
+  sed -e s/recovery-listener=\""true\""//g -i $CONF
+  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+
+#  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS: sed failed""
+
+  echo ""XTS: TXBRIDGE TESTS""
+  ./build.sh -f txbridge/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS test
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS failed""
+}
+
+function qa_tests {
+  echo ""QA Test Suite""
+  cd $WORKSPACE/qa
+
+  sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
+  [ $? = 0 ] || fatal ""sed TaskImpl.properties failed""
 
-# test whether the IPV6 evironment variable is set
-if [ -v IPV6 ]; then
-  mvn_arqprof=""-ParqIPv6""
-else
-  mvn_arqprof=""-Parq""
-fi
+  # delete lines containing jacorb
+  [ $IDLJ == 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
+  ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
+  [ $? = 0 ] || fatal ""qa build failed""
+
+  [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
+  ant -f run-tests.xml $target
+  [ $? = 0 ] || fatal ""some qa tests failed""
+}
+
+# if the following env variables have not been set initialize them to their defaults
+[ $NARAYANA_VERSION ] || NARAYANA_VERSION=""5.0.0.M2-SNAPSHOT""
+[ $ARQ_PROF ] || ARQ_PROF=arq	# IPv4 arquillian profile
+
+[ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
+[ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
+[ $AS_BUILD ] || AS_BUILD=1 # git clone and build a fresh copy of the AS
+[ $TXF_TESTS ] || TXF_TESTS=0 # TxFramework tests
+[ $XTS_TESTS ] || XTS_TESTS=1 # XTS tests
+[ $QA_TESTS ] || QA_TESTS=1 # QA test suite
+[ $txbridge ] || txbridge=1 # bridge tests
+[ $IDLJ ] || IDLJ=0 # use the Sun orb instead of the default JacORB
+
+QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
+
+# for IPv6 testing use export ARQ_PROF=arqIPv6
+# if you don't want to run all the XTS tests set WSTX_MODULES to the ones you want, eg:
+# export WSTX_MODULES=""WSAS,WSCF,WSTX,WS-C,WS-T,xtstest,crash-recovery-tests""
+
+[ -z ""${WORKSPACE}"" ] && fatal ""UNSET WORKSPACE""
 
 # FOR DEBUGGING SUBSEQUENT ISSUES
 free -m
 
 #Make sure no JBoss processes running
-for i in `ps -eaf | grep java | grep ""standalone"" | grep -v grep | cut -c10-15`; do kill $i; done
+for i in `ps -eaf | grep java | grep ""standalone*.xml"" | grep -v grep | cut -c10-15`; do kill $i; done
 
-#BUILD NARAYANA WITH FINDBUGS
-./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-GIT_URL=""https://github.com/jbosstm/jboss-as.git""
-UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
-
-#BUILD JBOSS-AS
-cd ${WORKSPACE}
-rm -rf jboss-as
-git clone $GIT_URL
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-cd jboss-as
-git checkout -t origin/5_BRANCH
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-git remote add upstream $UPSTREAM_GIT_URL
-git pull --rebase --ff-only upstream master
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-MAVEN_OPTS=-XX:MaxPermSize=256m ./build.sh ""$@"" clean install -DskipTests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
-export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
-
-cd ${WORKSPACE}
-
-#0. TXFramework Tests
-#cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
-#./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
-#if [ ""$?"" != ""0"" ]; then
-#        exit -1
-#fi
-
-#1.WSTX11 INTEROP and UNIT TESTS and CRASH RECOVERY TESTS
-./build.sh -f XTS/localjunit/pom.xml $mvn_arqprof ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#2.CHECK CRASH REC OUTPUT
-(cd XTS/localjunit/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#3.TXBRIDGE TESTS
-cd ${WORKSPACE}
-sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i ${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-./build.sh -f txbridge/pom.xml $mvn_arqprof ""$@"" clean test
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#RUN QA TESTS
-cd $WORKSPACE/qa
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-if [ $isIdlj == 1 ]; then
-# delete lines containing jacorb
-	sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
-fi
-
-ant -DisIdlj=$isIdlj -Ddriver.url=file:///home/hudson/dbdrivers get.drivers dist
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-ant -f run-tests.xml ci-tests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
+# if we are building with IPv6 tell ant about it
+export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
+
+# run the job
+[ $NARAYANA_BUILD = 1 ] && build_narayana ""$@""
+[ $AS_BUILD = 1 ] && build_as ""$@"" || init_jboss_home
+[ $TXF_TESTS = 1 ] && txframework_tests ""$@""
+[ $XTS_TESTS = 1 ] && xts_tests ""$@""
+[ $txbridge = 1 ] && tx_bridge_tests ""$@""
+[ $QA_TESTS = 1 ] && qa_tests ""$@""
+
+exit 0",2012-07-13T19:18:21Z,10
"@@ -1028,6 +1028,7 @@
         <module>txbridge</module>
         <module>fileio</module>
         <module>STM</module>
+        <module>txframework</module>
         <module>narayana-full</module>
       </modules>
     </profile>",2012-06-20T13:38:51Z,39
"@@ -25,7 +25,6 @@
   <packaging>jar</packaging>
   <build>
     <sourceDirectory>../../atsintegration/classes</sourceDirectory>
-<!--
     <testSourceDirectory>../../atsintegration/tests</testSourceDirectory>
     <testResources>
       <testResource>
@@ -35,7 +34,6 @@
         <directory>../../atsintegration/tests/byteman-scripts</directory>
       </testResource>
     </testResources>
--->
     <plugins>
       <plugin>
         <inherited>false</inherited>
@@ -84,6 +82,13 @@
           </excludes>
         </configuration>
       </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <configuration>
+          <useManifestOnlyJar>false</useManifestOnlyJar>
+        </configuration>
+      </plugin>
     </plugins>
   </build>
   <dependencies>",2012-04-20T07:06:53Z,307
"@@ -25,7 +25,6 @@
   <packaging>jar</packaging>
   <build>
     <sourceDirectory>../../atsintegration/classes</sourceDirectory>
-<!--
     <testSourceDirectory>../../atsintegration/tests</testSourceDirectory>
     <testResources>
       <testResource>
@@ -35,7 +34,6 @@
         <directory>../../atsintegration/tests/byteman-scripts</directory>
       </testResource>
     </testResources>
--->
     <plugins>
       <plugin>
         <inherited>false</inherited>
@@ -75,6 +73,13 @@
           </archive>
         </configuration>
       </plugin>
+      <plugin>
+        <groupId>org.apache.maven.plugins</groupId>
+        <artifactId>maven-surefire-plugin</artifactId>
+        <configuration>
+          <useManifestOnlyJar>false</useManifestOnlyJar>
+        </configuration>
+      </plugin>
     </plugins>
   </build>
   <dependencies>
@@ -122,5 +127,31 @@
       <artifactId>jboss-logging-processor</artifactId>
       <scope>provided</scope>
     </dependency>
+    <dependency>
+      <groupId>junit</groupId>
+      <artifactId>junit</artifactId>
+      <version>4.8.1</version>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman</artifactId>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-install</artifactId>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-submit</artifactId>
+      <scope>test</scope>
+    </dependency>
+    <dependency>
+      <groupId>org.jboss.byteman</groupId>
+      <artifactId>byteman-bmunit</artifactId>
+      <scope>test</scope>
+    </dependency>
   </dependencies>
 </project>",2012-04-20T07:06:53Z,69
"@@ -49,7 +49,7 @@ function build_as {
   [ $? = 0 ] || fatal ""git checkout 4_BRANCH failed""
 
   git remote add upstream $UPSTREAM_GIT_URL
-  git pull --rebase --ff-only upstream master
+  git pull --rebase --ff-only -s ours upstream master
   [ $? = 0 ] || fatal ""git rebase failed""
 
   export MAVEN_OPTS=""$MAVEN_OPTS -XX:MaxPermSize=512m""",2012-10-03T12:03:12Z,10
"@@ -1,121 +1,174 @@
-if [ -z ""${WORKSPACE}"" ]; then
-  echo ""UNSET WORKSPACE""
-  exit -1;
-fi
-
-isIdlj=0
-for arg in ""$@""; do
-  if [ `echo ""$arg"" |grep ""idlj""` ]; then
-    isIdlj=1
+function fatal {
+  echo ""$1""
+  exit -1
+}
+
+#BUILD NARAYANA WITH FINDBUGS
+function build_narayana {
+  echo ""Building Narayana""
+  cd $WORKSPACE
+  [ $NARAYANA_TESTS == 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=""-DskipTests""
+  [ $IDLJ == 1 ] && NARAYANA_ARGS=""$NARAYANA_ARGS -Pidlj""
+
+  ./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" $NARAYANA_ARGS $IPV6_OPTS clean install
+  [ $? = 0 ] || fatal ""narayana build failed""
+  cp_narayana_to_as
+  return 0
+}
+
+function cp_narayana_to_as {
+  echo ""Copying Narayana to AS""
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || return 1
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || return 1
+
+  echo ""WARNING - check that narayana version ${NARAYANA_VERSION} is the one you want""
+  JAR1=narayana-jts-integration-${NARAYANA_VERSION}.jar
+  JAR2=narayana-jts-${NARAYANA_VERSION}.jar
+# TODO make sure ${JBOSS_HOME} doesn't already contain a different version of narayana
+  echo ""cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/""
+  echo ""cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/""
+  cp ./ArjunaJTS/integration/target/$JAR1 ${JBOSS_HOME}/modules/org/jboss/jts/integration/main/
+  [ $? = 0 ] || return 1
+  cp ./ArjunaJTS/narayana-jts/target/$JAR2 ${JBOSS_HOME}/modules/org/jboss/jts/main/
+}
+
+function build_as {
+  echo ""Building AS""
+  GIT_URL=""https://github.com/jbosstm/jboss-as.git""
+  UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
+
+  cd ${WORKSPACE}
+  rm -rf jboss-as
+  git clone $GIT_URL
+  [ $? = 0 ] || fatal ""git clone $GIT_URL failed""
+
+  cd jboss-as
+  git checkout -t origin/5_BRANCH
+  [ $? = 0 ] || fatal ""git checkout 5_BRANCH failed""
+
+  git remote add upstream $UPSTREAM_GIT_URL
+  git pull --rebase --ff-only upstream master
+  [ $? = 0 ] || fatal ""git rebase failed""
+
+  export MAVEN_OPTS=""-XX:MaxPermSize=512m""
+  export JAVA_OPTS=""-Xms1303m -Xmx1303m -XX:MaxPermSize=512m""
+  ./build.sh clean install -DskipTests -Dts.smoke=false $IPV6_OPTS
+  [ $? = 0 ] || fatal ""AS build failed""
+  init_jboss_home
+}
+
+function init_jboss_home {
+  cd $WORKSPACE
+  JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
+  [ $? = 0 ] || fatal ""missing AS - cannot set JBOSS_VERSION""
+  export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
+  [ -d $JBOSS_HOME ] || fatal ""missing AS - $JBOSS_HOME is not a directory""
+  echo ""JBOSS_HOME=$JBOSS_HOME""
+}
+
+function txframework_tests {
+  echo ""#0. TXFramework Test""
+  cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
+  ./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
+  [ $? = 0 ] || fatal ""TxFramework build failed""
+}
+
+function xts_tests {
+  echo ""#1 XTS: WSTX11 INTEROP, UNIT TESTS, xtstest and CRASH RECOVERY TESTS""
+
+  cd $WORKSPACE
+  ran_crt=0
+
+  if [ $WSTX_MODULES ]; then
+    [[ $WSTX_MODULES = *crash-recovery-tests* ]] && ran_crt=1
+    echo ""BUILDING SPECIFIC WSTX11 modules""
+    ./build.sh -f XTS/localjunit/pom.xml --projects ""$WSTX_MODULES"" -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+  else
+    ./build.sh -f XTS/localjunit/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS clean test
+    ran_crt=0
+  fi
+
+  [ $? = 0 ] || fatal ""XTS: SOME TESTS failed""
+
+  if [ $ran_crt = 1 ]; then
+    (cd XTS/sar/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
+    [ $? = 0 ] || fatal ""Simplify CRASH RECOVERY logs failed""
   fi
-done
+}
+
+function tx_bridge_tests {
+  echo ""XTS: TXBRIDGE TESTS update conf""
+  cd $WORKSPACE
+  CONF=""${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml""
+  grep recovery-listener ""$CONF""
+  sed -e s/recovery-listener=\""true\""//g -i $CONF
+  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+
+#  sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i $CONF
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS: sed failed""
+
+  echo ""XTS: TXBRIDGE TESTS""
+  ./build.sh -f txbridge/pom.xml -P$ARQ_PROF ""$@"" $IPV6_OPTS test
+  [ $? = 0 ] || fatal ""#3.TXBRIDGE TESTS failed""
+}
+
+function qa_tests {
+  echo ""QA Test Suite""
+  cd $WORKSPACE/qa
+
+  sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
+  [ $? = 0 ] || fatal ""sed TaskImpl.properties failed""
 
-# test whether the IPV6 evironment variable is set
-if [ -v IPV6 ]; then
-  mvn_arqprof=""-ParqIPv6""
-else
-  mvn_arqprof=""-Parq""
-fi
+  # delete lines containing jacorb
+  [ $IDLJ == 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
+  ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
+  [ $? = 0 ] || fatal ""qa build failed""
+
+  [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
+  ant -f run-tests.xml $target
+  [ $? = 0 ] || fatal ""some qa tests failed""
+}
+
+# if the following env variables have not been set initialize them to their defaults
+[ $NARAYANA_VERSION ] || NARAYANA_VERSION=""5.0.0.M2-SNAPSHOT""
+[ $ARQ_PROF ] || ARQ_PROF=arq	# IPv4 arquillian profile
+
+[ $NARAYANA_TESTS ] || NARAYANA_TESTS=1	# run the narayana surefire tests
+[ $NARAYANA_BUILD ] || NARAYANA_BUILD=1 # build narayana
+[ $AS_BUILD ] || AS_BUILD=1 # git clone and build a fresh copy of the AS
+[ $TXF_TESTS ] || TXF_TESTS=0 # TxFramework tests
+[ $XTS_TESTS ] || XTS_TESTS=1 # XTS tests
+[ $QA_TESTS ] || QA_TESTS=1 # QA test suite
+[ $txbridge ] || txbridge=1 # bridge tests
+[ $IDLJ ] || IDLJ=0 # use the Sun orb instead of the default JacORB
+
+QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
+
+# for IPv6 testing use export ARQ_PROF=arqIPv6
+# if you don't want to run all the XTS tests set WSTX_MODULES to the ones you want, eg:
+# export WSTX_MODULES=""WSAS,WSCF,WSTX,WS-C,WS-T,xtstest,crash-recovery-tests""
+
+[ -z ""${WORKSPACE}"" ] && fatal ""UNSET WORKSPACE""
 
 # FOR DEBUGGING SUBSEQUENT ISSUES
 free -m
 
 #Make sure no JBoss processes running
-for i in `ps -eaf | grep java | grep ""standalone"" | grep -v grep | cut -c10-15`; do kill $i; done
+for i in `ps -eaf | grep java | grep ""standalone*.xml"" | grep -v grep | cut -c10-15`; do kill $i; done
 
-#BUILD NARAYANA WITH FINDBUGS
-./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-GIT_URL=""https://github.com/jbosstm/jboss-as.git""
-UPSTREAM_GIT_URL=""https://github.com/jbossas/jboss-as.git""
-
-#BUILD JBOSS-AS
-cd ${WORKSPACE}
-rm -rf jboss-as
-git clone $GIT_URL
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-cd jboss-as
-git checkout -t origin/5_BRANCH
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-git remote add upstream $UPSTREAM_GIT_URL
-git pull --rebase --ff-only upstream master
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-MAVEN_OPTS=-XX:MaxPermSize=256m ./build.sh ""$@"" clean install -DskipTests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-JBOSS_VERSION=`ls -1 ${WORKSPACE}/jboss-as/build/target | grep jboss-as`
-export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/${JBOSS_VERSION}
-
-cd ${WORKSPACE}
-
-#0. TXFramework Tests
-#cp ./rest-tx/webservice/target/rest-tx-web-*.war $JBOSS_HOME/standalone/deployments
-#./build.sh -f ./txframework/pom.xml $mvn_arqprof ""$@"" test
-#if [ ""$?"" != ""0"" ]; then
-#        exit -1
-#fi
-
-#1.WSTX11 INTEROP and UNIT TESTS and CRASH RECOVERY TESTS
-./build.sh -f XTS/localjunit/pom.xml $mvn_arqprof ""$@"" clean install
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#2.CHECK CRASH REC OUTPUT
-(cd XTS/localjunit/crash-recovery-tests && java -cp target/classes/ com.arjuna.qa.simplifylogs.SimplifyLogs ./target/log/ ./target/log-simplified)
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#3.TXBRIDGE TESTS
-cd ${WORKSPACE}
-sed -e ""s#\(recovery-environment\) \(socket-binding\)#\\1 recovery-listener=\""true\"" \\2#"" -i ${JBOSS_HOME}/docs/examples/configs/standalone-xts.xml
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-./build.sh -f txbridge/pom.xml $mvn_arqprof ""$@"" clean test
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-#RUN QA TESTS
-cd $WORKSPACE/qa
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-if [ $isIdlj == 1 ]; then
-# delete lines containing jacorb
-	sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
-fi
-
-ant -DisIdlj=$isIdlj -Ddriver.url=file:///home/hudson/dbdrivers get.drivers dist
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
-
-ant -f run-tests.xml ci-tests
-if [ ""$?"" != ""0"" ]; then
-	exit -1
-fi
+# if we are building with IPv6 tell ant about it
+export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
+
+# run the job
+[ $NARAYANA_BUILD = 1 ] && build_narayana ""$@""
+[ $AS_BUILD = 1 ] && build_as ""$@"" || init_jboss_home
+[ $TXF_TESTS = 1 ] && txframework_tests ""$@""
+[ $XTS_TESTS = 1 ] && xts_tests ""$@""
+[ $txbridge = 1 ] && tx_bridge_tests ""$@""
+[ $QA_TESTS = 1 ] && qa_tests ""$@""
+
+exit 0",2012-07-13T19:18:21Z,10
"@@ -65,7 +65,7 @@ function build_as {
     git remote add upstream $UPSTREAM_GIT_URL
   fi
 
-  git pull --rebase --ff-only upstream master
+  git pull --rebase --ff-only -s ours upstream master
   [ $? = 0 ] || fatal ""git rebase failed""
 
   export MAVEN_OPTS=""$MAVEN_OPTS -XX:MaxPermSize=512m""",2012-10-03T11:58:50Z,10
"@@ -118,14 +118,17 @@ function qa_tests_once {
   echo ""QA Test Suite $@""
   cd $WORKSPACE/qa
 
+  for i in $@; do
+    [ ${i%%=*} = ""orb"" ] && orb=${i##*=}
+  done
+
+  # check to see if we were called with orb=idlj as one of the arguments
+  [ x$orb = x""idlj"" ] && IDLJ=1 || IDLJ=0
+
   git checkout TaskImpl.properties
   sed -i TaskImpl.properties -e ""s#^COMMAND_LINE_0=.*#COMMAND_LINE_0=${JAVA_HOME}/bin/java#""
   [ $? = 0 ] || fatal ""sed TaskImpl.properties failed""
 
-  # check to see if we were called with orb=xyz as the first argument
-  [ ${1%%=*} = ""orb"" ] && orb=${1##*=}
-  [ x$orb = x""idlj"" ] && IDLJ=1 || IDLJ=0
-
   # delete lines containing jacorb
   [ $IDLJ == 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
@@ -134,6 +137,7 @@ function qa_tests_once {
 
   [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
   [ $IDLJ == 1 ] && target=""junit-jts-testsuite""
+  [ x$QA_TARGET = x ] || target=$QA_TARGET
 
   ant -f run-tests.xml $target
 }
@@ -146,7 +150,7 @@ function qa_tests {
     ok1=$?
   fi
   if [ $SUN_ORB = 1 ]; then
-    qa_tests_once ""orb=idlj"" ""$@"" # run qa against the Sun orb
+    qa_tests_once ""$@"" ""orb=idlj"" ""$@"" # run qa against the Sun orb
     ok2=$?
   fi
 
@@ -169,8 +173,7 @@ function qa_tests {
 [ $SUN_ORB ] || SUN_ORB=1 # Run QA test suite against the Sun orb
 [ $JAC_ORB ] || JAC_ORB=1 # Run QA test suite against JacORB
 [ $txbridge ] || txbridge=1 # bridge tests
-
-QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
+# set QA_TARGET if you want to override the QA test ant target
 
 # for IPv6 testing use export ARQ_PROF=arqIPv6
 # if you don't want to run all the XTS tests set WSTX_MODULES to the ones you want, eg:
@@ -195,4 +198,6 @@ export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 [ $txbridge = 1 ] && tx_bridge_tests ""$@""
 [ $QA_TESTS = 1 ] && qa_tests ""$@""
 
+QA_BUILD_ARGS=""-Ddriver.url=file:///home/hudson/dbdrivers""
+
 exit 0",2012-08-15T12:57:58Z,10
"@@ -133,9 +133,12 @@ function qa_tests_once {
   # delete lines containing jacorb
   [ $IDLJ = 1 ] && sed -i TaskImpl.properties -e  '/^.*separator}jacorb/ d'
 
-  [ $IPV6_OPTS ] || ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
+  # if IPV6_OPTS is not set get the jdbc drivers (we do not run the jdbc tests in IPv6 mode)
+  [ -z ""${IPV6_OPTS+x}"" ] && ant -DisIdlj=$IDLJ ""$QA_BUILD_ARGS"" get.drivers dist
   [ $? = 0 ] || fatal ""qa build failed""
 
+  # if IPV6_OPTS is not set then run everything (ci-tests) otherwise don't do the jdbc tests
+  [ -z ""${IPV6_OPTS+x}"" ] || target=""junit-testsuite"" && target=""ci-tests""
   [ $IPV6_OPTS ] && target=""junit-testsuite"" || target=""ci-tests""
   [ $IDLJ = 1 ] && target=""junit-jts-testsuite""
   [ x$QA_TARGET = x ] || target=$QA_TARGET",2012-08-31T09:46:03Z,10
"@@ -114,7 +114,12 @@ public synchronized void cancel ()
          */
         final State state = participant.cancel() ;
 
-        if (state == State.STATE_CANCELING)
+        if (state == State.STATE_COMPLETED)
+        {
+            //Complete arrived, whilst the coordinator was trying to abort.
+            compensate();
+        }
+        else if (state == State.STATE_CANCELING)
         {
             throw new SystemException() ;
         }",2012-04-19T16:37:28Z,308
"@@ -281,6 +281,8 @@ public synchronized void participantCompleted (String participantId)
         int status = status();
         // completed is only legitimate when the TX is in these states
         switch (status) {
+            case ActionStatus.ABORTED:
+                break;
             case ActionStatus.RUNNING:
             case ActionStatus.ABORT_ONLY:
                 changeParticipantStatus(participantId, COMPLETED);",2012-04-19T16:37:28Z,309
"@@ -9,13 +9,15 @@ fi
 
 SCRIPTS=$(find $DIR -name \*.txt)
 
-JARS=$(cd ../../..; find -name \*.jar)
+JARS=$(cd ../../..; find . -name \*.jar)
 
 for i in $JARS; do
 	CP=""$CP:../../../$i"";
 done
 
+CP=""$CP:../../sar/tests/target/classes""
+
 for s in $SCRIPTS; do
 	echo $s
-	bmcheck.sh -cp $CP $s | grep TestScript
+	bmcheck.sh -cp $CP $s
 done",2012-04-19T16:37:28Z,310
"@@ -18,7 +18,7 @@
 public class BaseCrashTest
 {
     protected String XTSServiceTest = "" -Dorg.jboss.jbossts.xts.servicetests.XTSServiceTestName=@TestName@"";
-    protected String BytemanArgs = ""-Xms64m -Xmx512m -XX:MaxPermSize=256m -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:target/test-classes/lib/byteman.jar=script:target/test-classes/scripts/@BMScript@.txt,boot:target/test-classes/lib/byteman.jar,listener:true"";
+    protected String BytemanArgs = ""-Xms64m -Xmx512m -XX:MaxPermSize=256m -Dorg.jboss.byteman.verbose -Djboss.modules.system.pkgs=org.jboss.byteman -Dorg.jboss.byteman.transform.all -javaagent:target/test-classes/lib/byteman.jar=script:target/test-classes/scripts/@BMScript@.txt,boot:target/test-classes/lib/byteman.jar,listener:true"";
     protected String javaVmArguments;
     protected String testName;
     protected String scriptName;",2012-04-19T16:37:28Z,311
"@@ -20,7 +20,7 @@ public void MultiParticipantCoordinatorCompletionParticipantCloseTest() throws E
 	@Test
 	public void MultiParticipantCoordinatorCompletionParticipantCloseAndExitTest() throws Exception {
 		testName = ""MultiParticipantCoordinatorCompletionParticipantCloseAndExitTest"";
-		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantCoordinatorCompletionParticipantCloseAndExitTest"";
+		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantCoordinatorCompletionParticipantCloseTest"";
 		runTest(testClass);
 	}
 	",2012-04-19T16:37:28Z,312
"@@ -20,7 +20,7 @@ public void SingleCoordinatorCompletionParticipantCloseTest() throws Exception {
 	@Test
 	public void SingleParticipantCompletionParticipantCloseTest() throws Exception {
 		testName = ""SingleParticipantCompletionParticipantCloseTest"";
-		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.SingleCoordinatorCompletionParticipantCloseTest"";
+		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.SingleParticipantCompletionParticipantCloseTest"";
 		runTest(testClass);
 
 	}",2012-04-19T16:37:28Z,313
"@@ -20,7 +20,7 @@ public void SingleCoordinatorCompletionParticipantCloseTest() throws Exception {
 	@Test
 	public void SingleParticipantCompletionParticipantCloseTest() throws Exception {
 		testName = ""SingleParticipantCompletionParticipantCloseTest"";
-		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.SingleCoordinatorCompletionParticipantCloseTest"";
+		String testClass = ""org.jboss.jbossts.xts.servicetests.test.ba.SingleParticipantCompletionParticipantCloseTest"";
 		runTest(testClass);
 
 	}",2012-04-19T16:37:28Z,314
"@@ -273,6 +273,140 @@
 #   received closed message for XXXXXXX completion participant stub XXXXXX
 #   removed committed activity XXXXXX
 #
+
+######################################################################
+#JBTM-1115 Rules
+#
+
+#####################################################################
+# Setup counter MultiParticipantParticipantCompletionParticipantCloseTest
+#
+RULE setup counter MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 3),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+#####################################################################
+# Setup counter MultiParticipantCoordinatorCompletionParticipantCloseTest
+#
+RULE setup counter MultiParticipantCoordinatorCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantParticipantCompletionParticipantCloseAndExitTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 3),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+#####################################################################
+# Setup counter MultiServiceParticipantCompletionParticipantCloseTest
+#
+RULE setup counter MultiServiceParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiServiceParticipantCompletionParticipantCloseTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 3),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+#####################################################################
+# Setup counter MultiServiceParticipantCompletionParticipantCloseAndExitTest
+#
+RULE setup counter MultiServiceParticipantCompletionParticipantCloseAndExitTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiServiceParticipantCompletionParticipantCloseAndExitTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 3),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+
+
+
+#####################################################################
+# Trigger Rendezvous after three calls to BACoordinator.complete()
+# 
+RULE trigger rendezvous on complete
+CLASS com.arjuna.mwlabs.wscf.model.sagas.arjunacore.BACoordinator
+METHOD participantCompleted(String)
+AT EXIT
+IF (debug(""decrementing"") AND decrementCounter(""closes"") == 0)
+DO debug(""closes-complete, triggering rendezvous""),
+   rendezvous(""closes-complete"")
+ENDRULE
+
+#####################################################################
+# Trigger Rendezvous after three calls to BACoordinator.exit()
+#
+RULE trigger rendezvous on exit
+CLASS com.arjuna.mwlabs.wscf.model.sagas.arjunacore.BACoordinator
+METHOD delistParticipant(String)
+AT EXIT
+IF (debug(""decrementing"") AND decrementCounter(""closes"") == 0)
+DO debug(""closes-complete, triggering rendezvous""),
+   rendezvous(""closes-complete"")
+ENDRULE
+
+
+
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiServiceParticipantCompletionParticipantCloseTest
+# 
+RULE wait for closes MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiParticipantParticipantCompletionParticipantCloseAndExitTest
+#
+RULE wait for closes MultiParticipantParticipantCompletionParticipantCloseAndExitTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiParticipantParticipantCompletionParticipantCloseAndExitTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiServiceParticipantCompletionParticipantCloseTest
+#
+RULE wait for closes MultiServiceParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiServiceParticipantCompletionParticipantCloseTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiServiceParticipantCompletionParticipantCloseAndExitTest
+#
+RULE wait for closes MultiServiceParticipantCompletionParticipantCloseAndExitTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.MultiServiceParticipantCompletionParticipantCloseAndExitTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+
+
+
+
 #######################################################################
 # This rule resets the periodic recovery wait period to 10 seconds
 # in order to speed up the test. Setting this any lower may result",2012-04-19T16:37:28Z,315
"@@ -206,6 +206,51 @@
 #   compensated recovered XXXXXXX completion participant XXXXXX
 #   JVM exit
 #
+
+######################################################################
+#JBTM-1115 Rules
+#
+
+#####################################################################
+# Setup counter SingleParticipantCompletionParticipantCloseTest
+#
+RULE setup counter SingleParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.SingleParticipantCompletionParticipantCloseTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 1),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+
+#####################################################################
+# Trigger Rendezvous after three calls to BACoordinator.complete()
+#
+RULE trigger rendezvous on complete
+CLASS com.arjuna.mwlabs.wscf.model.sagas.arjunacore.BACoordinator
+METHOD participantCompleted(String)
+AT EXIT
+IF (debug(""decrementing"") AND decrementCounter(""closes"") == 0)
+DO debug(""closes-complete, triggering rendezvous""),
+   rendezvous(""closes-complete"")
+ENDRULE
+
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on SingleParticipantCompletionParticipantCloseTest
+#
+RULE wait for closes SingleParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.SingleParticipantCompletionParticipantCloseTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+
+
+
 #######################################################################
 # This rule resets the periodic recovery wait period to 10 seconds
 # in order to speed up the test. Setting this any lower may result",2012-04-19T16:37:28Z,316
"@@ -303,6 +303,52 @@
 #   removed transaction XXXXXX
 #   JVM exit after removing both transactions
 #
+
+#####################################################################
+#JBTM-1115 Rules
+#
+
+#####################################################################
+# Setup counter MultiParticipantParticipantCompletionParticipantCloseTest
+#
+RULE setup counter subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 1),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+
+#####################################################################
+# Trigger Rendezvous after three calls to BACoordinator.complete()
+#
+RULE trigger rendezvous on complete
+CLASS com.arjuna.mwlabs.wscf.model.sagas.arjunacore.BACoordinator
+METHOD participantCompleted(String)
+AT EXIT
+IF (debug(""decrementing"") AND decrementCounter(""closes"") == 0)
+DO debug(""closes-complete, triggering rendezvous""),
+   rendezvous(""closes-complete"")
+ENDRULE
+
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiParticipantParticipantCompletionParticipantCloseTest
+#
+RULE wait for closes subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+
+
+
+
 #######################################################################
 # This rule opens a file for the trace output during XTS startup
 # It will be opened for append at reboot so messages from both runs",2012-04-19T16:37:28Z,317
"@@ -253,6 +253,7 @@
 #   JVM exit
 #
 
+
 #######################################################################
 # This rule opens a file for the trace output during XTS startup
 # It will be opened for append at reboot so messages from both runs",2012-04-19T16:37:28Z,318
"@@ -277,6 +277,53 @@
 #
 #   JVM exit
 #
+
+
+#####################################################################
+#JBTM-1115 Rules
+#
+
+#####################################################################
+# Setup counter MultiParticipantParticipantCompletionParticipantCloseTest
+#
+RULE setup counter subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT ENTRY
+IF TRUE
+DO debug(""creating counter and rendezvous""),
+   createCounter(""closes"", 1),
+   createRendezvous(""closes-complete"", 2)
+ENDRULE
+
+#####################################################################
+# Trigger Rendezvous after three calls to BACoordinator.complete()
+#
+RULE trigger rendezvous on complete
+CLASS com.arjuna.mwlabs.wscf.model.sagas.arjunacore.BACoordinator
+METHOD participantCompleted(String)
+AT EXIT
+IF (debug(""decrementing"") AND decrementCounter(""closes"") == 0)
+DO debug(""closes-complete, triggering rendezvous""),
+   rendezvous(""closes-complete"")
+ENDRULE
+
+#####################################################################
+# Wait on Rendezvous before calling uba.close() on MultiParticipantParticipantCompletionParticipantCloseTest
+#
+RULE wait for closes subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+CLASS org.jboss.jbossts.xts.servicetests.test.ba.subordinate.MultiParticipantParticipantCompletionParticipantCloseTest
+METHOD run()
+AT CALL UserBusinessActivity.close()
+IF TRUE
+DO debug(""waiting to call close""),
+   rendezvous(""closes-complete""),
+   debug(""rendezvous complete, calling close"")
+ENDRULE
+
+
+
+
 #######################################################################
 # This rule opens a file for the trace output during XTS startup
 # It will be opened for append at reboot so messages from both runs",2012-04-19T16:37:28Z,319
"@@ -154,6 +154,7 @@ public void run() {
         // now close the activity
 
         try {
+            Thread.sleep(10000);
             ba.close();
         } catch (TransactionRolledBackException e) {
             exception = e;
@@ -163,6 +164,8 @@ public void run() {
             exception = e;
         } catch (WrongStateException e) {
             exception = e;
+        } catch (InterruptedException e) {
+            exception = e;
         }
 
         if (exception != null) {",2012-04-19T16:37:28Z,320
"@@ -6,6 +6,9 @@ fi
 # FOR DEBUGGING SUBSEQUENT ISSUES
 free -m
 
+#Make sure no JBoss processes running
+for i in `ps -eaf | grep java | grep ""standalone*.xml"" | grep -v grep | cut -c10-15`; do echo $i; done
+
 #BUILD NARAYANA WITH FINDBUGS
 ./build.sh -Dfindbugs.skip=false -Dfindbugs.failOnError=false clean install
 if [ ""$?"" != ""0"" ]; then
@@ -41,13 +44,13 @@ export JBOSS_HOME=${WORKSPACE}/jboss-as/build/target/jboss-as-7.1.2.Final-SNAPSH
 cd ${WORKSPACE}
 
 #1.WSTX11 INTEROP and UNIT TESTS
-./build.sh -f XTS/localjunit/pom.xml -Parq test
+./build.sh -f XTS/localjunit/pom.xml -Parq clean test
 if [ ""$?"" != ""0"" ]; then
 	exit -1
 fi
 
 #2.XTS CRASH RECOVERY TESTS
-./build.sh -f XTS/sar/crash-recovery-tests/pom.xml -Parq test
+./build.sh -f XTS/sar/crash-recovery-tests/pom.xml -Parq clean test
 if [ ""$?"" != ""0"" ]; then
 	exit -1
 fi",2012-04-19T16:37:28Z,10
"@@ -11,10 +11,13 @@ This version of Narayana contains a JTA/JTS/XTS and RTS. You should never includ
           ---------------
 This release contains:
   bin/
-    rest-tx-web.war - This can be deployed into a server running Narayana JTA to expose the Rest-TX API
+    restat-web.war - This can be deployed into a server running Narayana JTA
+    to expose the Rest-TX API
     ws-*.war - These wars can be used to deploy XTS standalone
-    jbossts-jopr-plugin - This can be deployed into a server running Narayana JTA and RHQ to administer the server - more details below
-    start-*.[bat|sh] - These scripts can be used to launch standalone transaction managers and recovery managers
+    jbossts-jopr-plugin - This can be deployed into a server running Narayana
+    JTA and RHQ to administer the server - more details below
+    start-*.[bat|sh] - These scripts can be used to launch standalone
+    transaction managers and recovery managers
   
   docs/
     api - The various project components javadocs
@@ -32,7 +35,7 @@ This release contains:
     xts/jbossxts*.jar - More details are available in the XTS guide.
     jta/narayana-jta*.jar - See below for usage information
     jts/narayana-jts*.jar - See below for usage information
-    rts/rest-tx-api.jar
+    rts/restat-api.jar
     
   services/
     This directory contains the files required to install Narayana as an operating system service
@@ -42,21 +45,32 @@ This release contains:
     jts-setup-env-*.[bat|sh] - This will configure an environment for use with Narayana JTA
     copyright.txt - A file to provide the copyright
     readme.txt - This file
-    run_all_quickstarts.[bat|sh] - scripts to run all quickstarts. You will need to separately download and unzip the quickstarts before running these scripts
+    run_all_quickstarts.[bat|sh] - scripts to run all quickstarts. You will
+    need to separately download and unzip the quickstarts before running these
+    scripts
 
           WHAT'S NOT INCLUDED
           -------------------
 This release download does not contain project documentation or quickstarts.
 
-PDF versions of the documentation are available from the project website at https://www.jboss.org/jbosstm/documentation/<release version>. For example, if this is release 5_0_0_M4 then the documentation can be found at the following URL: https://www.jboss.org/jbosstm/documentation/5_0_0_M4
+PDF versions of the documentation are available from the project website at
+https://www.jboss.org/jbosstm/documentation/<release version>. For example, if
+this is release 5_0_0_M4 then the documentation can be found at the following
+URL: https://www.jboss.org/jbosstm/documentation/5_0_0_M4
 
-Documentation source is now in docbook format and the associated files are tagged at github: https://github.com/jbosstm/documentation/releases. Select the archive corresponding to this release.
+Documentation source is now in docbook format and the associated files are
+tagged at github: https://github.com/jbosstm/documentation/releases. Select
+the archive corresponding to this release.
 
-Previous releases contained a separate guide for the trailmap which has now been moved to the ""Narayana JTS Development Guide""
+Previous releases contained a separate guide for the trailmap which has now
+been moved to the ""Narayana JTS Development Guide""
 
 Examples to get you up and running quickly are now tagged at github:
 https://github.com/jbosstm/quickstart/releases
-Select the archive corresponding to this release and unzip it. The run_all_quickstarts shell and batch scripts will run all the quickstarts. Make sure you update the scripts to point to the directory where you unzipped the quickstart archive.
+Select the archive corresponding to this release and unzip it. The
+run_all_quickstarts shell and batch scripts will run all the quickstarts.
+Make sure you update the scripts to point to the directory where you unzipped
+the quickstart archive.
 
           ENABLING JTA
           ------------
@@ -96,7 +110,7 @@ Please read the txbridge guide for details on this, you will need to include the
           ENABLING REST-TX API
           -------------------- 
 Please read the rts guide for details on this, you will need to include the following file:
-1. lib/rts/rest-tx-api.jar
+1. lib/rts/restat-api.jar
 
 
           EMBEDDED TOOLS",2013-07-29T16:36:25Z,321
"@@ -62,13 +62,13 @@ function init_test_options {
     if ! get_pull_xargs ""$PULL_DESCRIPTION_BODY"" $PROFILE; then # see if the PR description overrides the profile
         echo ""SKIPPING PROFILE=$PROFILE""
         export COMMENT_ON_PULL=""""
-        export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+        export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
         export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 OPENJDK_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
         export PERF_TESTS=0 OSGI_TESTS=0 TOMCAT_TESTS=0 LRA_TESTS=0
     elif [[ $PROFILE == ""CORE"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!MAIN* ]] && [[ ! $PULL_DESCRIPTION_BODY == *!CORE* ]]; then
           comment_on_pull ""Started testing this pull request with MAIN profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0 OSGI_TESTS=1
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -78,7 +78,7 @@ function init_test_options {
         if [[ ! $PULL_DESCRIPTION_BODY == *!TOMCAT* ]]; then
           comment_on_pull ""Started testing this pull request with $PROFILE profile: $BUILD_URL""
           [ -z $NARAYANA_BUILD ] && NARAYANA_BUILD=1
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0 OSGI_TESTS=0
           export TOMCAT_TESTS=1 LRA_TESTS=0
         else
@@ -87,7 +87,7 @@ function init_test_options {
     elif [[ $PROFILE == ""AS_TESTS"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!AS_TESTS* ]]; then
           comment_on_pull ""Started testing this pull request with $PROFILE profile: $BUILD_URL""
-          export AS_BUILD=1 AS_DOWNLOAD=0 AS_TESTS=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=1 AS_CLONE=1 AS_DOWNLOAD=0 AS_TESTS=1 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=1 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=1 OSGI_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -96,7 +96,7 @@ function init_test_options {
     elif [[ $PROFILE == ""RTS"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!RTS* ]]; then
           comment_on_pull ""Started testing this pull request with RTS profile: $BUILD_URL""
-          export AS_BUILD=1 AS_DOWNLOAD=0 AS_TEST=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=1 AS_CLONE=1 AS_DOWNLOAD=0 AS_TEST=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=1 RTS_TESTS=1 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0 OSGI_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -105,7 +105,7 @@ function init_test_options {
     elif [[ $PROFILE == ""JACOCO"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!JACOCO* ]]; then
           comment_on_pull ""Started testing this pull request with JACOCO profile: $BUILD_URL""
-          export AS_BUILD=1 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
+          export AS_BUILD=1 AS_CLONE=1 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
           export RTS_AS_TESTS=0 RTS_TESTS=1 JTA_CDI_TESTS=1 QA_TESTS=1 SUN_ORB=1 JAC_ORB=0 JTA_AS_TESTS=1 OSGI_TESTS=0
           export TOMCAT_TESTS=1 LRA_TESTS=0 CODE_COVERAGE=1 CODE_COVERAGE_ARGS=""-PcodeCoverage -Pfindbugs""
           [ -z ${MAVEN_OPTS+x} ] && export MAVEN_OPTS=""-Xms2048m -Xmx2048m""
@@ -115,7 +115,7 @@ function init_test_options {
     elif [[ $PROFILE == ""XTS"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!XTS* ]]; then
           comment_on_pull ""Started testing this pull request with XTS profile: $BUILD_URL""
-          export AS_BUILD=1 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=1 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
+          export AS_BUILD=1 AS_CLONE=1 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=1 XTS_TESTS=1 TXF_TESTS=1 txbridge=1
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -124,7 +124,7 @@ function init_test_options {
     elif [[ $PROFILE == ""QA_JTA"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!QA_JTA* ]]; then
           comment_on_pull ""Started testing this pull request with QA_JTA profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=0 JAC_ORB=1 QA_TARGET=ci-tests-nojts JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -133,7 +133,7 @@ function init_test_options {
     elif [[ $PROFILE == ""QA_JTS_JACORB"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!QA_JTS_JACORB* ]]; then
           comment_on_pull ""Started testing this pull request with QA_JTS_JACORB profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 OPENJDK_ORB=0 SUN_ORB=0 JAC_ORB=1 QA_TARGET=ci-jts-tests JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -142,7 +142,7 @@ function init_test_options {
     elif [[ $PROFILE == ""QA_JTS_JDKORB"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!QA_JTS_JDKORB* ]]; then
           comment_on_pull ""Started testing this pull request with QA_JTS_JDKORB profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 OPENJDK_ORB=0 SUN_ORB=1 JAC_ORB=0 QA_TARGET=ci-jts-tests JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -151,7 +151,7 @@ function init_test_options {
     elif [[ $PROFILE == ""QA_JTS_OPENJDKORB"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!QA_JTS_OPENJDKORB* ]]; then
           comment_on_pull ""Started testing this pull request with QA_JTS_OPENJDKORB profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1  NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 OPENJDK_ORB=1 SUN_ORB=0 JAC_ORB=0 QA_TARGET=ci-jts-tests
           export JTA_AS_TESTS=0 TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -160,7 +160,7 @@ function init_test_options {
     elif [[ $PROFILE == ""BLACKTIE"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!BLACKTIE* ]]; then
           comment_on_pull ""Started testing this pull request with BLACKTIE profile on Linux: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TEST=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=1 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TEST=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=1 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -169,7 +169,7 @@ function init_test_options {
     elif [[ $PROFILE == ""PERFORMANCE"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!PERF* ]]; then
           comment_on_pull ""Started testing this pull request with PERF profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0 OSGI_TESTS=0 PERF_TESTS=1
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -178,7 +178,7 @@ function init_test_options {
     elif [[ $PROFILE == ""LRA"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!LRA* ]]; then
           comment_on_pull ""Started testing this pull request with LRA profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=1 AS_TESTS=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=1 AS_TESTS=0 NARAYANA_BUILD=0 NARAYANA_TESTS=0 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=0 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=1
         else
@@ -187,7 +187,7 @@ function init_test_options {
     elif [[ $PROFILE == ""DB_TESTS"" ]]; then
         if [[ ! $PULL_DESCRIPTION_BODY == *!DB_TESTS* ]]; then
           comment_on_pull ""Started testing this pull request with DB_TESTS profile: $BUILD_URL""
-          export AS_BUILD=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
+          export AS_BUILD=0 AS_CLONE=0 AS_DOWNLOAD=0 AS_TESTS=0 NARAYANA_BUILD=1 NARAYANA_TESTS=1 BLACKTIE=0 XTS_AS_TESTS=0 XTS_TESTS=0 TXF_TESTS=0 txbridge=0
           export RTS_AS_TESTS=0 RTS_TESTS=0 JTA_CDI_TESTS=0 QA_TESTS=1 SUN_ORB=0 JAC_ORB=0 JTA_AS_TESTS=0
           export TOMCAT_TESTS=0 LRA_TESTS=0
         else
@@ -199,8 +199,9 @@ function init_test_options {
     fi
     [ $NARAYANA_TESTS ] || NARAYANA_TESTS=0	# run the narayana surefire tests
     [ $NARAYANA_BUILD ] || NARAYANA_BUILD=0 # build narayana
-    [ $AS_BUILD ] && [ -z ""$JBOSS_HOME"" ] || AS_BUILD=0 # git clone and build a fresh copy of the AS when JBOSS_HOME is not provided
     [ $AS_DOWNLOAD ] && [ -z ""$JBOSS_HOME"" ] || AS_DOWNLOAD=0 # download AS when JBOSS_HOME is not provided
+    [ $AS_CLONE ]  && [ -z ""$JBOSS_HOME"" ] || AS_CLONE=0 # git clone the AS when JBOSS_HOME is not provided
+    [ $AS_BUILD ] || AS_BUILD=0 # build the AS
     [ $AS_TESTS ] || AS_TESTS=0 # Run WildFly/JBoss EAP testsuite
     [ $BLACKTIE ] || BLACKTIE=0 # Build BlackTie
     [ $OSGI_TESTS ] || OSGI_TESTS=0 # OSGI tests
@@ -1102,7 +1103,7 @@ export ANT_OPTS=""$ANT_OPTS $IPV6_OPTS""
 # run the job
 
 [ $NARAYANA_BUILD = 1 ] && build_narayana ""$@""
-[[ $AS_CLONE = 1  ||  $AS_BUILD = 1 ]] && clone_as ""$@""
+[ $AS_CLONE = 1 ] && clone_as ""$@""
 [ $AS_BUILD = 1 ] && build_as ""$@""
 [ $AS_DOWNLOAD = 1 ] && download_as ""$@""
 [ $AS_TESTS = 1 ] && tests_as ""$@""",2021-05-25T11:32:23Z,10
"@@ -308,7 +308,7 @@ public int topLevelAbort()
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -321,6 +321,19 @@ public int topLevelAbort()
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+					 
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {
+				    	    	    jtaLogger.i18NLogger.warn_resources_arjunacore_rollbackerror(XAHelper.xidToString(_tranID),
+                                _theXAResource.toString(), XAHelper.printXAErrorCode(e2), e2);
+
+                                		    removeConnection();
+
+                                		    return TwoPhaseOutcome.FINISH_ERROR;
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,1
"@@ -0,0 +1,136 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.xa;
+
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+public class JTATest {
+
+	@Test
+	public void test() throws Exception {
+
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager
+				.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		XARMERRXAResource rollbackCalled = new XARMERRXAResource(true);
+		assertTrue(theTransaction.enlistResource(rollbackCalled));
+
+		tm.rollback();
+		assertTrue(rollbackCalled.getRollbackCalled());
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+		private boolean rollbackCalled;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		public boolean getRollbackCalled() {
+			return rollbackCalled;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			rollbackCalled = true;
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,2
"@@ -330,7 +330,7 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -343,6 +343,18 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {	
+                                		jtaxLogger.i18NLogger.warn_jtax_resources_jts_orbspecific_xaerror(""XAResourceRecord.rollback"",
+                                XAHelper.printXAErrorCode(e2), _theXAResource.toString(), XAHelper.xidToString(_tranID), e2);
+
+                                		    removeConnection();
+
+                                		    throw new UNKNOWN();
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,3
"@@ -0,0 +1,146 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.jts.xa;
+ 
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+import com.arjuna.ats.internal.jts.ORBManager;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.orbportability.OA;
+import com.arjuna.orbportability.ORB;
+import com.arjuna.orbportability.RootOA;
+
+public class JTSTest {
+	@Test
+	public void test() throws Exception {
+
+		ORB myORB = ORB.getInstance(""test"");
+		RootOA myOA = OA.getRootOA(myORB);
+		myORB.initORB(new String[] {}, null);
+		myOA.initOA();
+
+		ORBManager.setORB(myORB);
+		ORBManager.setPOA(myOA);
+		jtaPropertyManager.getJTAEnvironmentBean().setTransactionManagerClassName(com.arjuna.ats.internal.jta.transaction.jts.TransactionManagerImple.class.getName());
+		jtaPropertyManager.getJTAEnvironmentBean().setUserTransactionClassName(com.arjuna.ats.internal.jta.transaction.jts.UserTransactionImple.class.getName());
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(true)));
+
+		tm.rollback();
+
+		myOA.destroy();
+		myORB.shutdown();
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,4
"@@ -308,7 +308,7 @@ public int topLevelAbort()
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -321,6 +321,19 @@ public int topLevelAbort()
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+					 
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {
+				    	    	    jtaLogger.i18NLogger.warn_resources_arjunacore_rollbackerror(XAHelper.xidToString(_tranID),
+                                _theXAResource.toString(), XAHelper.printXAErrorCode(e2), e2);
+
+                                		    removeConnection();
+
+                                		    return TwoPhaseOutcome.FINISH_ERROR;
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,1
"@@ -0,0 +1,136 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.xa;
+
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+public class JTATest {
+
+	@Test
+	public void test() throws Exception {
+
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager
+				.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		XARMERRXAResource rollbackCalled = new XARMERRXAResource(true);
+		assertTrue(theTransaction.enlistResource(rollbackCalled));
+
+		tm.rollback();
+		assertTrue(rollbackCalled.getRollbackCalled());
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+		private boolean rollbackCalled;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		public boolean getRollbackCalled() {
+			return rollbackCalled;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			rollbackCalled = true;
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,2
"@@ -330,7 +330,7 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					{
 						if (endAssociation())
 						{
-							_theXAResource.end(_tranID, XAResource.TMSUCCESS);
+							_theXAResource.end(_tranID, XAResource.TMFAIL);
 						}
 					}
 				}
@@ -343,6 +343,18 @@ public void rollback() throws org.omg.CORBA.SystemException,
 					 * Has been marked as rollback-only. We still
 					 * need to call rollback.
 					 */
+				    } else if ((e1.errorCode == XAException.XAER_RMERR) || (e1.errorCode == XAException.XAER_RMFAIL)){
+				    	    try {
+				    	    	    _theXAResource.rollback(_tranID);
+				    	    } catch (XAException e2)
+				    	    {	
+                                		jtaxLogger.i18NLogger.warn_jtax_resources_jts_orbspecific_xaerror(""XAResourceRecord.rollback"",
+                                XAHelper.printXAErrorCode(e2), _theXAResource.toString(), XAHelper.xidToString(_tranID), e2);
+
+                                		    removeConnection();
+
+                                		    throw new UNKNOWN();
+				    	    }
 				    }
 				    else
 				    {",2013-06-21T08:39:00Z,3
"@@ -0,0 +1,146 @@
+/*
+ * JBoss, Home of Professional Open Source
+ * Copyright 2006, Red Hat Middleware LLC, and individual contributors
+ * as indicated by the @author tags.
+ * See the copyright.txt in the distribution for a
+ * full listing of individual contributors.
+ * This copyrighted material is made available to anyone wishing to use,
+ * modify, copy, or redistribute it subject to the terms and conditions
+ * of the GNU Lesser General Public License, v. 2.1.
+ * This program is distributed in the hope that it will be useful, but WITHOUT A
+ * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+ * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
+ * You should have received a copy of the GNU Lesser General Public License,
+ * v.2.1 along with this distribution; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
+ * MA  02110-1301, USA.
+ *
+ * (C) 2005-2006,
+ * @author JBoss Inc.
+ */
+/*
+ * Copyright (C) 2001, 2002,
+ *
+ * Hewlett-Packard Arjuna Labs,
+ * Newcastle upon Tyne,
+ * Tyne and Wear,
+ * UK.
+ *
+ * $Id: JTATest.java 2342 2006-03-30 13:06:17Z  $
+ */
+
+package com.hp.mwtests.ts.jta.jts.xa;
+ 
+import static org.junit.Assert.assertTrue;
+
+import javax.transaction.xa.XAException;
+import javax.transaction.xa.XAResource;
+import javax.transaction.xa.Xid;
+
+import org.junit.Test;
+
+import com.arjuna.ats.internal.jts.ORBManager;
+import com.arjuna.ats.jta.common.jtaPropertyManager;
+import com.arjuna.orbportability.OA;
+import com.arjuna.orbportability.ORB;
+import com.arjuna.orbportability.RootOA;
+
+public class JTSTest {
+	@Test
+	public void test() throws Exception {
+
+		ORB myORB = ORB.getInstance(""test"");
+		RootOA myOA = OA.getRootOA(myORB);
+		myORB.initORB(new String[] {}, null);
+		myOA.initOA();
+
+		ORBManager.setORB(myORB);
+		ORBManager.setPOA(myOA);
+		jtaPropertyManager.getJTAEnvironmentBean().setTransactionManagerClassName(com.arjuna.ats.internal.jta.transaction.jts.TransactionManagerImple.class.getName());
+		jtaPropertyManager.getJTAEnvironmentBean().setUserTransactionClassName(com.arjuna.ats.internal.jta.transaction.jts.UserTransactionImple.class.getName());
+		javax.transaction.TransactionManager tm = com.arjuna.ats.jta.TransactionManager.transactionManager();
+
+		tm.begin();
+
+		javax.transaction.Transaction theTransaction = tm.getTransaction();
+
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(false)));
+		assertTrue(theTransaction.enlistResource(new XARMERRXAResource(true)));
+
+		tm.rollback();
+
+		myOA.destroy();
+		myORB.shutdown();
+	}
+
+	private class XARMERRXAResource implements XAResource {
+
+		private boolean returnRMERROutOfEnd;
+
+		public XARMERRXAResource(boolean returnRMERROutOfEnd) {
+			this.returnRMERROutOfEnd = returnRMERROutOfEnd;
+		}
+
+		@Override
+		public void commit(Xid xid, boolean onePhase) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public void end(Xid xid, int flags) throws XAException {
+			if (returnRMERROutOfEnd) {
+				throw new XAException(XAException.XAER_RMERR);
+			}
+		}
+
+		@Override
+		public void forget(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public int getTransactionTimeout() throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public boolean isSameRM(XAResource xares) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public int prepare(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+			return 0;
+		}
+
+		@Override
+		public Xid[] recover(int flag) throws XAException {
+			// TODO Auto-generated method stub
+			return null;
+		}
+
+		@Override
+		public void rollback(Xid xid) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+		@Override
+		public boolean setTransactionTimeout(int seconds) throws XAException {
+			// TODO Auto-generated method stub
+			return false;
+		}
+
+		@Override
+		public void start(Xid xid, int flags) throws XAException {
+			// TODO Auto-generated method stub
+
+		}
+
+	}
+}",2013-06-21T08:39:00Z,4
"@@ -24,6 +24,7 @@
 
 import java.io.File;
 
+import com.arjuna.ats.arjuna.logging.tsLogger;
 import com.arjuna.ats.arjuna.utils.Process;
 import com.arjuna.ats.arjuna.utils.Utility;
 import com.arjuna.ats.internal.arjuna.common.ClassloadingUtility;
@@ -39,6 +40,8 @@
 @PropertyPrefix(prefix = ""com.arjuna.ats.arjuna."")
 public class CoreEnvironmentBean implements CoreEnvironmentBeanMBean
 {
+    public static final int NODE_NAME_SIZE = 64;
+
     @FullPropertyName(name = ""com.arjuna.ats.arjuna.common.varDir"")
     private volatile String varDir = System.getProperty(""user.dir"") + File.separator + ""var"" + File.separator + ""tmp"";
 
@@ -103,11 +106,23 @@ public String getNodeIdentifier()
      * Sets the node identifier. Should be uniq amongst all instances that share resource managers or an objectstore.
      *
      * @param nodeIdentifier the Node Identifier.
-     * @throws CoreEnvironmentBeanException 
+     * @throws CoreEnvironmentBeanException if node identifier is null or too long.
      */
-    public void setNodeIdentifier(String nodeIdentifierAsString)
+    public void setNodeIdentifier(String nodeIdentifier) throws CoreEnvironmentBeanException
     {
-    	this.nodeIdentifier = nodeIdentifierAsString;
+        if (nodeIdentifier == null)
+        {
+            tsLogger.i18NLogger.fatal_nodename_null();
+            throw new CoreEnvironmentBeanException(tsLogger.i18NLogger.get_fatal_nodename_null());
+        }
+
+        if (nodeIdentifier.getBytes().length > NODE_NAME_SIZE)
+        {
+            tsLogger.i18NLogger.fatal_nodename_too_long(nodeIdentifier);
+            throw new CoreEnvironmentBeanException(tsLogger.i18NLogger.get_fatal_nodename_too_long(nodeIdentifier));
+        }
+
+    	this.nodeIdentifier = nodeIdentifier;
     }
 
     /**",2013-01-04T08:10:49Z,322
"@@ -229,7 +229,7 @@ private final static synchronized void removeTransactionStatusManager ()
 
 	private static TransactionStatusManager transactionStatusManager = null;
 
-	static String xaNodeName = null;
+	static String xaNodeName = arjPropertyManager.getCoreEnvironmentBean().getNodeIdentifier();
 
 	static int _defaultTimeout = 60; // 60 seconds
 
@@ -260,56 +260,6 @@ private final static synchronized void removeTransactionStatusManager ()
         beforeCompletionWhenRollbackOnly = arjPropertyManager.getCoordinatorEnvironmentBean().isBeforeCompletionWhenRollbackOnly();
 
 
-
-		String env =  arjPropertyManager.getCoreEnvironmentBean().getNodeIdentifier();
-		boolean writeNodeName = false;
-
-		if (env != null)
-		{
-			xaNodeName = env;
-		}
-		else {
-            /*
-                * In the past we used a Uid as the default node name. However, this is too
-                * big for the way in which we use it within Xids now that we also support
-                * ipv6. Hence the need to limit the size of a node name to 10 bytes.
-                */
-
-            String nodeName = DEFAULT_NODE_NAME + Utility.getpid();
-
-            tsLogger.i18NLogger.warn_coordinator_TxControl_1(nodeName);
-
-            xaNodeName = nodeName;
-
-            writeNodeName = true;
-        }
-
-		if (xaNodeName.getBytes().length > NODE_NAME_SIZE) {
-            String nodeName = DEFAULT_NODE_NAME + Utility.getpid();
-
-            tsLogger.i18NLogger.warn_coordinator_TxControl_2(nodeName);
-
-            xaNodeName = nodeName;
-
-            writeNodeName = true;
-        }
-
-		if ((env != null) && (env.indexOf('-') != -1)) {
-            String nodeName = DEFAULT_NODE_NAME + Utility.getpid();
-
-            tsLogger.i18NLogger.warn_coordinator_TxControl_3(nodeName);
-
-            xaNodeName = nodeName;
-
-            writeNodeName = true;
-        }
-
-		if (writeNodeName)
-		{
-            arjPropertyManager.getCoreEnvironmentBean().setNodeIdentifier( new String(xaNodeName) );
-		}
-
-
         _enableTSM = arjPropertyManager.getCoordinatorEnvironmentBean().isTransactionStatusManagerEnable();
 
         // TODO -- add this check to respect the environment setting for Environment.START_DISABLED?",2013-01-04T08:10:49Z,323
"@@ -1470,6 +1470,20 @@ public interface arjunaI18NLogger {
 	public void warn_objectstore_JDBCImple_over_max_image_size(int imageSize,
 			int maxStateSize);
 
+    @Message(id = 12372, value = ""The node identifier was too long {0}, aborting initialization"", format = MESSAGE_FORMAT)
+    @LogMessage(level = FATAL)
+    public void fatal_nodename_too_long(String xaNodeName);
+
+    @Message(id = 12373, value = ""The node identifier was too long {0}, aborting initialization"", format = MESSAGE_FORMAT)
+    public String get_fatal_nodename_too_long(String xaNodeName);
+
+    @Message(id = 12374, value = ""The node identifier cannot be null, aborting initialization"", format = MESSAGE_FORMAT)
+    @LogMessage(level = FATAL)
+    public void fatal_nodename_null();
+
+    @Message(id = 12375, value = ""The node identifier cannot be null, aborting initialization"", format = MESSAGE_FORMAT)
+    public String get_fatal_nodename_null();
+
     /*
         Allocate new messages directly above this notice.
           - id: use the next id number in numeric sequence. Don't reuse ids.",2013-01-04T08:10:49Z,324
"@@ -4,4 +4,5 @@
     <entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.VolatileStore</entry>
     <entry key=""ObjectStoreEnvironmentBean.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.VolatileStore</entry>
     <entry key=""ObjectStoreEnvironmentBean.stateStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.VolatileStore</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,325
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=com.ibm.db2.jcc.DB2DataSource;DatabaseName=BTDB1;ServerName=tywin.buildnet.ncl.jboss.com;DriverType=4;PortNumber=50001;User=db2;Password=db2</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,326
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
-</properties>
\ No newline at end of file
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+</properties>",2013-01-04T08:10:49Z,327
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=com.microsoft.sqlserver.jdbc.SQLServerDataSource;DatabaseName=jbossts;ServerName=dev30.mw.lab.eng.bos.redhat.com;PortNumber=3918;User=dtf11;Password=dtf11</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,328
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=com.mysql.jdbc.jdbc2.optional.MysqlDataSource;DatabaseName=jbossts;ServerName=tywin.buildnet.ncl.jboss.com;PortNumber=3306;User=dtf11;Password=dtf11</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,329
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=oracle.jdbc.pool.OracleDataSource;DriverType=thin;ServerName=tywin.buildnet.ncl.jboss.com;NetworkProtocol=tcp;DatabaseName=orcl;PortNumber=1521;User=dtf11;Password=dtf11</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,330
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.postgresql.ds.PGSimpleDataSource;DatabaseName=jbossts;User=dtf11;Password=dtf11;ServerName=tywin.buildnet.ncl.jboss.com;PortNumber=5432</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,331
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=com.sybase.jdbc3.jdbc.SybDataSource;DatabaseName=jbossts;ServerName=vmg07.mw.lab.eng.bos.redhat.com;PortNumber=5000;User=jbossts0;Password=jbossts0</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,332
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
-</properties>
\ No newline at end of file
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+</properties>",2013-01-04T08:10:49Z,333
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+	<entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,302
"@@ -9,4 +9,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.objectStoreType"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.JDBCStore</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,334
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
-</properties>
\ No newline at end of file
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+</properties>",2013-01-04T08:10:49Z,335
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
-</properties>
\ No newline at end of file
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+</properties>",2013-01-04T08:10:49Z,336
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
-</properties>
\ No newline at end of file
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
+</properties>",2013-01-04T08:10:49Z,337
"@@ -12,4 +12,5 @@
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.jdbcAccess"">com.arjuna.ats.internal.arjuna.objectstore.jdbc.accessors.DynamicDataSourceJDBCAccess;ClassName=org.h2.jdbcx.JdbcDataSource;URL=jdbc:h2:target/h2/JBTMDB;User=sa;Password=sa</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.tablePrefix"">Communication</entry>
 	<entry key=""ObjectStoreEnvironmentBean.communicationStore.dropTable"">true</entry>
+    <entry key=""CoreEnvironmentBean.nodeIdentifier"">1</entry>
 </properties>",2013-01-04T08:10:49Z,338
"@@ -82,6 +82,12 @@
 		   <version>${project.version}</version>
 		   <scope>provided</scope>
 	   </dependency>
+	   <dependency>
+		   <groupId>org.jboss.narayana.jts</groupId>
+		   <artifactId>jtax</artifactId>
+		   <version>${project.version}</version>
+		   <scope>provided</scope>
+	   </dependency>
 	   <dependency>
 		   <groupId>org.jboss.logging</groupId>
 		   <artifactId>jboss-logging</artifactId>
@@ -94,6 +100,12 @@
 		   <version>${version.org.apache.activemq}</version>
 		   <scope>provided</scope>
 	   </dependency>
+	   <dependency>
+		   <groupId>org.apache.karaf.shell</groupId>
+		   <artifactId>org.apache.karaf.shell.console</artifactId>
+		   <version>${version.apache.karaf}</version>
+		   <scope>provided</scope>
+	   </dependency>
 	   <dependency>
 		   <groupId>org.springframework</groupId>
 		   <artifactId>spring-tx</artifactId>
@@ -154,7 +166,7 @@
         <groupId>org.sonatype.plugins</groupId>
         <artifactId>nexus-staging-maven-plugin</artifactId>
       </plugin>
-		   <plugin>
+      <plugin>
 			   <groupId>org.apache.felix</groupId>
 			   <artifactId>maven-bundle-plugin</artifactId>
 			   <version>${maven-bundle-plugin.version}</version>
@@ -166,6 +178,8 @@
 					   <Bundle-Activator>org.jboss.narayana.osgi.jta.internal.Activator</Bundle-Activator>
 					   <Export-Package>
 						   org.jboss.tm*;version=${version.org.jboss.jboss-transaction-spi},
+						   org.jboss.narayana.osgi.jta;version=${project.version},
+						   org.jboss.narayana.osgi.jta.command;version=${project.version},
 						   javax.transaction*;version=""1.2.0""
 					   </Export-Package>
 					   <Private-Package>
@@ -174,9 +188,9 @@
 						   org.jboss.tm*
 					   </Private-Package>
 					   <Import-Package>
-						   javax.management, 
-						   javax.naming, 
-						   javax.naming.spi, 
+						   javax.management,
+						   javax.naming,
+						   javax.naming.spi,
 						   javax.xml.parsers,
 						   javax.xml.stream,
 						   org.xml.sax,
@@ -189,11 +203,16 @@
 						   org.osgi.service.log,
 						   org.osgi.util.tracker,
 						   org.springframework.*;resolution:=optional;version=""[2.5,5)"",
+						   org.apache.felix.service.command,
+						   org.apache.karaf.shell.api.action,
+						   org.apache.karaf.shell.api.action.lifecycle,
 					   </Import-Package>
 					   <Embed-Transitive>true</Embed-Transitive>
 					   <Embed-Dependency>
 						   jboss-logging;inline=false,
 						   jta;inline=false,
+						   jtax;inline=false,
+						   orbportability;inline=false,
 						   common;inline=false,
 						   arjuna;inline=false,
 						   narayana-jts-integration;inline=false,
@@ -210,6 +229,7 @@
 					   </Require-Capability>
 					   <_include>src/main/resources/META-INF/MANIFEST.MF</_include>
 					   <_removeheaders>Include-Resource,Private-Package,Embed*,Bundle-ClassPath</_removeheaders>
+					   <Karaf-Commands>org.jboss.narayana.osgi.jta.command</Karaf-Commands>
 			   </instructions>
 		   </configuration>
 	   </plugin>",2016-06-15T07:51:03Z,339
"@@ -0,0 +1,44 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta;
+
+import javax.management.MBeanException;
+import java.util.List;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+public interface ObjStoreBrowserService {
+    void probe() throws MBeanException;
+    List<String> types();
+    boolean select(String itype);
+    void list(String itype);
+
+    void attach(String id);
+    void detach();
+    void forget(int idx);
+    void delete(int idx);
+
+    void start();
+    void stop();
+}",2016-06-15T07:51:03Z,340
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Argument;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""attach"", description = ""Attach to a transaction log"")
+@Service
+public class AttachCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Argument(index = 0, name = ""id"", description = ""The transaction log id"", required = true, multiValued = false)
+    String id;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.attach(id);
+        return null;
+    }
+}",2016-06-15T07:51:03Z,341
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Argument;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""delete"", description = ""Delete the specified heuristic participant"")
+@Service
+public class DeleteCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Argument(index = 0, name = ""idx"", description = ""The participant idx"", required = true, multiValued = false)
+    Integer idx;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.delete(idx);
+        return null;
+    }
+}",2016-06-15T07:51:03Z,342
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""detach"", description = ""Detach to a transaction log"")
+@Service
+public class DetachCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.detach();
+        return null;
+    }
+}",2016-06-15T07:51:03Z,343
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Argument;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""forget"", description = ""Move the specified heuristic participant back to the prepared list"")
+@Service
+public class ForgetCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Argument(index = 0, name = ""idx"", description = ""The participant idx"", required = true, multiValued = false)
+    Integer idx;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.forget(idx);
+        return null;
+    }
+}",2016-06-15T07:51:03Z,344
"@@ -0,0 +1,51 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.apache.karaf.shell.api.action.Argument;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""ls"", description = ""List the transactions"")
+@Service
+public class ListCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Argument(index = 0, name = ""type"", description = ""The transaction type"", required = false, multiValued = false)
+    String type;
+
+    @Override
+    public Object execute() throws Exception {
+
+        osb.list(type);
+        return null;
+    }
+}",2016-06-15T07:51:03Z,345
"@@ -0,0 +1,46 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""refresh"", description = ""Refresh the view of the object store"")
+@Service
+public class ProbeCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.probe();
+        return null;
+    }
+}",2016-06-15T07:51:03Z,346
"@@ -0,0 +1,50 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Argument;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""select"", description = ""Select a particular transaction type"")
+@Service
+public class SelectCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Argument(index = 0, name = ""type"", description = ""The transaction type"", required = true, multiValued = false)
+    String type;
+
+    @Override
+    public Object execute() throws Exception {
+        osb.select(type);
+        return null;
+    }
+}",2016-06-15T07:51:03Z,347
"@@ -0,0 +1,52 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.command;
+
+import org.apache.karaf.shell.api.action.Action;
+import org.apache.karaf.shell.api.action.Command;
+import org.apache.karaf.shell.api.action.lifecycle.Reference;
+import org.apache.karaf.shell.api.action.lifecycle.Service;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+import java.util.List;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+@Command(scope = ""narayana"", name = ""types"", description = ""List record types"")
+@Service
+public class TypesCommand implements Action {
+
+    @Reference
+    private ObjStoreBrowserService osb;
+
+    @Override
+    public Object execute() throws Exception {
+        List<String> types = osb.types();
+        for(String type : types) {
+            System.out.println(type);
+        }
+
+        return null;
+    }
+}",2016-06-15T07:51:03Z,348
"@@ -0,0 +1,281 @@
+/*
+ * JBoss, Home of Professional Open Source.
+ * Copyright 2013, Red Hat, Inc., and individual contributors
+ * as indicated by the @author tags. See the copyright.txt file in the
+ * distribution for a full listing of individual contributors.
+ *
+ * This is free software; you can redistribute it and/or modify it
+ * under the terms of the GNU Lesser General Public License as
+ * published by the Free Software Foundation; either version 2.1 of
+ * the License, or (at your option) any later version.
+ *
+ * This software is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this software; if not, write to the Free
+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
+ */
+package org.jboss.narayana.osgi.jta.internal;
+
+import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.exceptions.ObjectStoreException;
+import com.arjuna.ats.arjuna.objectstore.ObjectStoreIterator;
+import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.state.InputObjectState;
+import com.arjuna.ats.arjuna.tools.log.TransactionTypeManager;
+import com.arjuna.ats.arjuna.tools.osb.mbean.ObjStoreBrowser;
+import com.arjuna.ats.arjuna.tools.osb.util.JMXServer;
+import com.arjuna.ats.internal.arjuna.tools.log.EditableTransaction;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
+
+import javax.management.AttributeList;
+import javax.management.InstanceNotFoundException;
+import javax.management.IntrospectionException;
+import javax.management.MBeanAttributeInfo;
+import javax.management.MBeanException;
+import javax.management.MBeanInfo;
+import javax.management.MBeanServer;
+import javax.management.ObjectInstance;
+import javax.management.ObjectName;
+import javax.management.ReflectionException;
+import java.io.IOException;
+import java.io.PrintStream;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * @author <a href=""mailto:zfeng@redhat.com"">Amos Feng</a>
+ */
+
+public class ObjStoreBrowserImpl implements ObjStoreBrowserService{
+    private ObjStoreBrowser osb;
+    private PrintStream printStream = new PrintStream(System.out, true);
+    private List<String> recordTypes = new ArrayList<String>();
+    private String currentType = null;
+    private String currentLog = """";
+    private boolean attached = false;
+
+    public ObjStoreBrowserImpl(ObjStoreBrowser osb) {
+        this.osb = osb;
+    }
+
+    @Override
+    public void probe() throws MBeanException {
+        osb.probe();
+    }
+
+    @Override
+    public List<String> types() {
+        recordTypes.clear();
+
+        InputObjectState types = new InputObjectState();
+
+        try {
+            if (StoreManager.getRecoveryStore().allTypes(types)) {
+                String typeName;
+
+                do {
+                    try {
+                        typeName = types.unpackString();
+                        if (!recordTypes.contains(typeName))
+                            recordTypes.add(typeName);
+                    } catch (IOException e) {
+                        typeName = """";
+                    }
+                } while (typeName.length() != 0);
+            }
+        } catch (ObjectStoreException e) {
+            System.out.println(e);
+        }
+
+        return recordTypes;
+    }
+
+    @Override
+    public boolean select(String itype) {
+        if (attached) {
+            attached = false;
+        }
+
+        if (recordTypes.size() == 0) {
+            types();
+        }
+
+        if (!recordTypes.contains(itype)) {
+            printStream.printf(""%s is not a valid transaction type%n"", itype);
+            return false;
+        } else {
+            currentType = itype;
+            return true;
+        }
+    }
+
+    @Override
+    public void list(String itype) {
+        MBeanServer mbs = JMXServer.getAgent().getServer();
+        Set<ObjectInstance> transactions;
+        String osMBeanName = ""jboss.jta:type=ObjectStore"";
+
+        if (itype != null) {
+            if (select(itype) == false) return;
+            osMBeanName += "",itype="" + itype;
+        } else if (currentType != null) {
+            osMBeanName += "",itype="" + currentType;
+        } else {
+            printStream.printf(""No type selected%n"");
+            return;
+        }
+
+        try {
+            transactions = mbs.queryMBeans(new ObjectName(osMBeanName + "",*""), null);
+        } catch (Exception e) {
+            System.out.println(e);
+            return;
+        }
+
+        for (ObjectInstance oi : transactions) {
+            String transactionId = oi.getObjectName().getCanonicalName();
+
+            if (!transactionId.contains(""puid"") && transactionId.contains(""itype"")) {
+                printStream.printf(""Transaction: %s%n"", oi.getObjectName());
+                printStream.printf(""-----------------------------------%n"");
+
+                String participantQuery =  transactionId + "",puid=*"";
+                try {
+                    Set<ObjectInstance> participants = mbs.queryMBeans(new ObjectName(participantQuery), null);
+                    printAtrributes(printStream, ""\t"", mbs, oi);
+                    printStream.printf(""\tParticipants:%n"");
+                    for (ObjectInstance poi : participants) {
+                        printStream.printf(""\t\tParticipant: %s%n"", poi);
+                        printAtrributes(printStream, ""\t\t\t"", mbs, poi);
+                    }
+                } catch (Exception e){
+
+                }
+                printStream.printf(""%n"");
+            }
+        }
+    }
+
+    private void printAtrributes(PrintStream printStream, String printPrefix, MBeanServer mbs, ObjectInstance oi)
+            throws IntrospectionException, InstanceNotFoundException, ReflectionException {
+        MBeanInfo info = mbs.getMBeanInfo( oi.getObjectName() );
+        MBeanAttributeInfo[] attributeArray = info.getAttributes();
+        int i = 0;
+        String[] attributeNames = new String[attributeArray.length];
+
+        for (MBeanAttributeInfo ai : attributeArray)
+            attributeNames[i++] = ai.getName();
+
+        AttributeList attributes = mbs.getAttributes(oi.getObjectName(), attributeNames);
+
+        for (javax.management.Attribute attribute : attributes.asList()) {
+            Object value = attribute.getValue();
+            String v =  value == null ? ""null"" : value.toString();
+
+            printStream.printf(""%s%s=%s%n"", printPrefix, attribute.getName(), v);
+        }
+    }
+
+    @Override
+    public void attach(String id) {
+        if (attached)
+            System.err.println(""Already attached."");
+        else {
+            try {
+                if (supportedLog(id)) {
+                    currentLog = id;
+                    attached = true;
+                } else {
+                    System.err.println(""can not attach to id "" + id + "" with type /"" + currentType);
+                }
+            } catch (Exception e) {
+                System.err.println(e);
+                e.printStackTrace();
+            }
+        }
+    }
+
+    @Override
+    public void detach() {
+        if (!attached)
+            System.err.println(""Not attached."");
+
+        currentLog = """";
+        attached = false;
+    }
+
+    @Override
+    public void forget(int idx) {
+        if (!attached) {
+            System.err.println(""Not attached."");
+        } else if (!currentType.contains(""AtomicAction"")) {
+            System.err.println(""Can not support this type"");
+        } else {
+            Uid uid = new Uid(currentLog);
+            EditableTransaction act = TransactionTypeManager.getInstance().getTransaction(""AtomicAction"", uid);
+            try {
+                act.moveHeuristicToPrepared(idx);
+            } catch (IndexOutOfBoundsException ex) {
+                System.err.println(""Invalid index."");
+            }
+        }
+    }
+
+    @Override
+    public void delete(int idx) {
+        if (!attached) {
+            System.err.println(""Not attached."");
+        } else if (!currentType.contains(""AtomicAction"")) {
+            System.err.println(""Can not support this type"");
+        } else {
+            Uid uid = new Uid(currentLog);
+            EditableTransaction act = TransactionTypeManager.getInstance().getTransaction(""AtomicAction"", uid);
+            try {
+                act.deleteHeuristicParticipant(idx);
+            } catch (IndexOutOfBoundsException ex) {
+                System.err.println(""Invalid index."");
+            }
+        }
+
+    }
+
+    private final boolean supportedLog (String logID) throws ObjectStoreException, IOException {
+        Uid id = new Uid(logID);
+
+        if (id.equals(Uid.nullUid())) {
+            System.err.println(logID + "" is null Uid"");
+        } else if (currentType == null) {
+            printStream.printf(""No type selected%n"");
+        } else if (!currentType.contains(""AtomicAction"")) {
+            printStream.printf(""Can not support this type"");
+        } else {
+            ObjectStoreIterator iter = new ObjectStoreIterator(StoreManager.getRecoveryStore(), ""/"" + currentType);
+            Uid u;
+
+            do {
+                u = iter.iterate();
+
+                if (u.equals(id))
+                    return true;
+            } while (Uid.nullUid().notEquals(u));
+        }
+
+        return false;
+    }
+
+    @Override
+    public void start() {
+        osb.start();
+    }
+
+    @Override
+    public void stop() {
+        osb.stop();
+    }
+}",2016-06-15T07:51:03Z,349
"@@ -34,11 +34,14 @@
 import com.arjuna.ats.arjuna.coordinator.TransactionReaper;
 import com.arjuna.ats.arjuna.coordinator.TxControl;
 import com.arjuna.ats.arjuna.objectstore.StoreManager;
+import com.arjuna.ats.arjuna.tools.osb.mbean.ObjStoreBrowser;
+import com.arjuna.ats.arjuna.tools.osb.mbean.ObjStoreBrowserMBean;
 import com.arjuna.ats.jbossatx.jta.RecoveryManagerService;
 import com.arjuna.ats.jbossatx.jta.TransactionManagerService;
 import com.arjuna.ats.jta.common.JTAEnvironmentBean;
 import com.arjuna.ats.jta.common.jtaPropertyManager;
 import com.arjuna.common.util.propertyservice.PropertiesFactory;
+import org.jboss.narayana.osgi.jta.ObjStoreBrowserService;
 import org.jboss.tm.XAResourceRecovery;
 import org.osgi.framework.BundleContext;
 import org.osgi.framework.ServiceReference;
@@ -56,6 +59,7 @@ public class OsgiServer implements ServiceTrackerCustomizer<XAResourceRecovery,
     ServiceTracker<XAResourceRecovery, XAResourceRecovery> resourceRecoveryTracker;
     TransactionManagerService transactionManagerService;
     RecoveryManagerService recoveryManagerService;
+    ObjStoreBrowserService objStoreBrowserService;
 
     public OsgiServer(BundleContext bundleContext, Dictionary<String, ?> configuration) {
         this.bundleContext = bundleContext;
@@ -98,13 +102,19 @@ public void doStart() throws Exception {
         tmSvc.create();
         transactionManagerService = tmSvc;
 
+        ObjStoreBrowser osb = new ObjStoreBrowser();
+        osb.setExposeAllRecordsAsMBeans(true);
+        objStoreBrowserService = new ObjStoreBrowserImpl(osb);
+
         resourceRecoveryTracker.open();
         transactionManagerService.start();
         recoveryManagerService.start();
+        objStoreBrowserService.start();
 
         register(TransactionManager.class, transactionManagerService.getTransactionManager());
         register(TransactionSynchronizationRegistry.class, transactionManagerService.getTransactionSynchronizationRegistry());
         register(UserTransaction.class, transactionManagerService.getUserTransaction());
+        register(ObjStoreBrowserService.class, objStoreBrowserService);
 
         try {
             registrations.add(PlatformTransactionManagerImple.register(
@@ -171,6 +181,16 @@ protected void doStop() {
                 resourceRecoveryTracker = null;
             }
         }
+        if (objStoreBrowserService != null) {
+            try {
+                objStoreBrowserService.stop();
+            } catch (Throwable t) {
+                warn(""Error stopping object browser"", t);
+            } finally {
+                objStoreBrowserService = null;
+            }
+        }
+
         TransactionReaper.terminate(false);
         TxControl.disable(true);
         StoreManager.shutdown();",2016-06-15T07:51:03Z,350
"@@ -30,7 +30,7 @@
     <version.jboss.osgi.metadata>4.0.0.CR1</version.jboss.osgi.metadata>
     <version.org.jboss.arquillian.core>1.1.2.Final</version.org.jboss.arquillian.core>
     <version.shrinkwrap>1.1.2</version.shrinkwrap>
-    <version.apache.karaf>2.3.3</version.apache.karaf>
+    <version.apache.karaf>4.0.5</version.apache.karaf>
   </properties>
   <dependencyManagement>
     <dependencies>",2016-06-15T07:51:03Z,351
"@@ -290,7 +290,7 @@ function init_jboss_home {
 function osgi_tests {
   echo ""#-1. OSGI Test""
   cd ${WORKSPACE}
-  ./build.sh -f osgi/jta/pom.xml -Parq-karaf-embedded clean test
+  #./build.sh -f osgi/jta/pom.xml -Parq-karaf-embedded clean integration-test
   [ $? = 0 ] || fatal ""OSGI Test failed""
 }
 ",2016-06-15T07:51:03Z,10
"@@ -35,13 +35,17 @@
 import java.util.Iterator;
 import java.util.Set;
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.atomic.AtomicReference;
 
 import javax.transaction.SystemException;
 import javax.transaction.xa.XAException;
 import javax.transaction.xa.Xid;
 
 import com.arjuna.ats.arjuna.common.Uid;
+import com.arjuna.ats.arjuna.coordinator.TxControl;
 import com.arjuna.ats.internal.jta.transaction.arjunacore.subordinate.jca.TransactionImple;
+import com.arjuna.ats.jta.xa.XATxConverter;
+import com.arjuna.ats.jta.xa.XidImple;
 
 public class TransactionImporterImple implements TransactionImporter
 {
@@ -87,19 +91,11 @@ public SubordinateTransaction importTransaction(Xid xid, int timeout)
 			throw new IllegalArgumentException();
 
 		/*
-		 * Check to see if we haven't already imported this thing.
+		 * the imported transaction map is keyed by xid and the xid used is the one created inside
+		 * the TransactionImple ctor (it encodes the node name of this transaction manager) and is
+		 * the one returned by TransactionImple#baseXid() so pass in the converted value (using convertXid).
 		 */
-
-		TransactionImple imported = (TransactionImple) getImportedTransaction(xid);
-
-		if (imported == null)
-		{
-			imported = new TransactionImple(timeout, xid);
-			
-			_transactions.put(new SubordinateXidImple(imported.baseXid()), imported);
-		}
-
-		return imported;
+		return addImportedTransaction(null, convertXid(xid), xid, timeout);
 	}
 
 	/**
@@ -123,28 +119,16 @@ public TransactionImple recoverTransaction(Uid actId)
 		    throw new IllegalArgumentException();
 		
 		/*
-		 * Is the transaction already in the list? This may be the case because
+		 * Is the transaction already in the map? This may be the case because
 		 * we scan the object store periodically and may get Uids to recover for
 		 * transactions that are progressing normally, i.e., do not need
-		 * recovery. In which case, we need to ignore them.
+		 * recovery. In which case, we need to ignore them:
+		 *
+		 * ie calling addImportedTransaction with a non null value for recovered will
+		 * call recovered.recordTransaction()
 		 */
 
-		TransactionImple tx = (TransactionImple) _transactions.get(recovered
-				.baseXid());
-
-		if (tx == null)
-		{
-
-			Xid baseXid = recovered.baseXid();
-			_transactions.put(new SubordinateXidImple(baseXid), recovered);
-			recovered.recordTransaction();
-
-			return recovered;
-		}
-		else
-		{
-			return tx;
-		}
+		return addImportedTransaction(recovered, recovered.baseXid(), null, 0);
 	}
 
 	/**
@@ -167,11 +151,19 @@ public SubordinateTransaction getImportedTransaction(Xid xid)
 		if (xid == null)
 			throw new IllegalArgumentException();
 
-		SubordinateTransaction tx = _transactions.get(new SubordinateXidImple(xid));
+		AtomicReference<TransactionImple> holder = _transactions.get(new SubordinateXidImple(xid));
+		TransactionImple tx = holder == null ? null : holder.get();
 
-		if (tx == null)
+		if (tx == null) {
+			/*
+			 * Remark: if holder != null and holder.get() == null then the setter is about to
+			 * import the transaction but has not yet updated the holder. We implement the getter
+			 * (the thing that is trying to terminate the imported transaction) as though the imported
+			 * transaction only becomes observable when it has been fully imported.
+			 */
 			return null;
-		
+		}
+
 		// https://issues.jboss.org/browse/JBTM-927
 		try {
 			if (tx.getStatus() == javax.transaction.Status.STATUS_ROLLEDBACK) {
@@ -211,17 +203,65 @@ public void removeImportedTransaction(Xid xid) throws XAException
 	}
 	
 	public Set<Xid> getInflightXids(String parentNodeName) {
-		Iterator<TransactionImple> iterator = _transactions.values().iterator();
+		Iterator<AtomicReference<TransactionImple>> iterator = _transactions.values().iterator();
 		Set<Xid> toReturn = new HashSet<Xid>();
 		while (iterator.hasNext()) {
-			TransactionImple next = iterator.next();
-			if (next.getParentNodeName().equals(parentNodeName)) {
-				toReturn.add(next.baseXid());
+			AtomicReference<TransactionImple> holder = iterator.next();
+			TransactionImple imported = holder.get();
+
+			if (imported != null && imported.getParentNodeName().equals(parentNodeName)) {
+				toReturn.add(imported.baseXid());
 			}
 		}
 		return toReturn;
 	}
 
-	private static ConcurrentHashMap<SubordinateXidImple, TransactionImple> _transactions = new ConcurrentHashMap<SubordinateXidImple, TransactionImple>();
+	private TransactionImple addImportedTransaction(TransactionImple importedTransaction, Xid mapKey, Xid xid, int timeout) {
+		SubordinateXidImple importedXid = new SubordinateXidImple(mapKey);
+		// We need to store the imported transaction in a volatile field holder so that it can be shared between threads
+		AtomicReference<TransactionImple> holder = new AtomicReference<>();
+		AtomicReference<TransactionImple> existing;
+
+		if ((existing = _transactions.putIfAbsent(importedXid, holder)) != null) {
+			holder = existing;
+		}
+
+		TransactionImple txn = holder.get();
+
+		if (txn == null) {
+			// retry the get under a lock - this double check idiom is safe because AtomicReference is effectively
+			// a volatile so can be concurrently accessed by multiple threads
+			synchronized (holder) {
+				txn = holder.get();
+				if (txn == null) {
+					// now it's safe to add the imported transaction to the holder
+					if (importedTransaction != null) {
+						importedTransaction.recordTransaction();
+						txn = importedTransaction;
+					} else {
+						txn = new TransactionImple(timeout, xid);
+					}
+
+					holder.set(txn);
+				}
+			}
+		}
+
+		return txn;
+	}
+
+	private XidImple convertXid(Xid xid)
+	{
+		if (xid != null && xid.getFormatId() == XATxConverter.FORMAT_ID) {
+			XidImple toImport = new XidImple(xid);
+			XATxConverter.setSubordinateNodeName(toImport.getXID(), TxControl.getXANodeName());
+			return new XidImple(toImport);
+		} else {
+			return new XidImple(xid);
+		}
+	}
+
+	private static ConcurrentHashMap<SubordinateXidImple, AtomicReference<TransactionImple>> _transactions =
+			new ConcurrentHashMap<>();
 }
 ",2016-07-22T21:43:20Z,352
"@@ -50,6 +50,14 @@
 import com.hp.mwtests.ts.jta.common.FailureXAResource.FailLocation;
 import com.hp.mwtests.ts.jta.common.FailureXAResource.FailType;
 
+import java.util.ArrayList;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.CyclicBarrier;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.function.Supplier;
+
 public class XATerminatorUnitTest
 {
     @Test
@@ -374,4 +382,60 @@ public void testInvalid () throws Exception
         {
         }
     }
+
+    @Test
+    public void testConcurrentImport () throws Exception {
+        AtomicInteger completionCount = new AtomicInteger(0);
+        XidImple xid = new XidImple(new Uid());
+
+        final int TASK_COUNT = 400;
+        final int THREAD_COUNT = 200;
+        final CyclicBarrier gate = new CyclicBarrier(THREAD_COUNT + 1);
+
+        ArrayList<CompletableFuture<SubordinateTransaction>> futures = new ArrayList<>();
+        ExecutorService executor = Executors.newFixedThreadPool(THREAD_COUNT);
+
+        for (int i = 0; i < TASK_COUNT; i++)
+            futures.add(doAsync(completionCount, gate, i < THREAD_COUNT, executor, xid));
+
+        gate.await();
+
+        SubordinateTransaction prevStx = null;
+
+        for (CompletableFuture<SubordinateTransaction> future : futures) {
+            SubordinateTransaction stx = future.get();
+            if (stx == null) {
+                fail(""transaction import returned null for future "");
+            } else {
+                if (prevStx != null)
+                    assertEquals(""transaction import for same xid returned a different instance"", stx, prevStx);
+                else
+                    prevStx = stx;
+            }
+        }
+
+        assertEquals(""some transaction import futures did not complete"", completionCount.get(), TASK_COUNT);
+    }
+
+    /*
+     * import a transaction asynchronously to maximise the opportunity for concurrency errors in TransactionImporterImple
+     */
+    private CompletableFuture<SubordinateTransaction> doAsync(
+            final AtomicInteger completionCount, final CyclicBarrier gate, final boolean wait, ExecutorService executor, final XidImple xid) {
+        return CompletableFuture.supplyAsync(new Supplier<SubordinateTransaction>() {
+            @Override
+            public SubordinateTransaction get() {
+                try {
+                    if (wait)
+                        gate.await();
+                    SubordinateTransaction stx = SubordinationManager.getTransactionImporter().importTransaction(xid);
+                    completionCount.incrementAndGet();
+
+                    return stx;
+                } catch (Exception e) {
+                    throw new AssertionError(e);
+                }
+            }
+        }, executor);
+    }
 }",2016-07-22T21:43:20Z,353
"@@ -32,6 +32,7 @@
 package com.arjuna.ats.internal.jta.transaction.jts.jca;
 
 import java.util.concurrent.ConcurrentHashMap;
+import java.util.concurrent.atomic.AtomicReference;
 
 import javax.transaction.xa.XAException;
 import javax.transaction.xa.Xid;
@@ -78,21 +79,8 @@ public SubordinateTransaction importTransaction (Xid xid, int timeout) throws XA
 	{
 		if (xid == null)
 			throw new IllegalArgumentException();
-		
-		/*
-		 * Check to see if we haven't already imported this thing.
-		 */
-		
-		SubordinateTransaction imported = getImportedTransaction(xid);
-		
-		if (imported == null)
-		{	
-			imported = new TransactionImple(timeout, xid);
-			
-			_transactions.put(new XidImple(xid), imported);
-		}
-		
-		return imported;
+
+		return addImportedTransaction(null, new XidImple(xid), xid, timeout);
 	}
 
 	public SubordinateTransaction recoverTransaction (Uid actId) throws XAException
@@ -104,19 +92,8 @@ public SubordinateTransaction recoverTransaction (Uid actId) throws XAException
 		
 		if (recovered.baseXid() == null)
 		    throw new IllegalArgumentException();
-		
-		TransactionImple tx = (TransactionImple) _transactions.get(recovered.baseXid());
-
-		if (tx == null)
-		{
-			recovered.recordTransaction();
 
-			_transactions.put(recovered.baseXid(), recovered);
-			
-			return recovered;
-		}
-		else
-			return tx;
+		return addImportedTransaction(recovered, recovered.baseXid(), null, 0);
 	}
     
 	/**
@@ -135,11 +112,19 @@ public SubordinateTransaction getImportedTransaction (Xid xid) throws XAExceptio
 	{
 		if (xid == null)
 			throw new IllegalArgumentException();
-		
-		SubordinateTransaction tx = _transactions.get(new XidImple(xid));
-		
-		if (tx == null)
+
+		AtomicReference<SubordinateTransaction> holder = _transactions.get(new XidImple(xid));
+		SubordinateTransaction tx = holder == null ? null : holder.get();
+
+		if (tx == null) {
+			/*
+			 * Remark: if holder != null and holder.get() == null then the setter is about to
+			 * import the transaction but has not yet updated the holder. We implement the getter
+			 * (the thing that is trying to terminate the imported transaction) as though the imported
+			 * transaction only becomes observable when it has been fully imported.
+			 */
 			return null;
+		}
 
 		if (tx.baseXid() == null)
 		{
@@ -170,7 +155,41 @@ public void removeImportedTransaction (Xid xid) throws XAException
 
 		_transactions.remove(new XidImple(xid));
 	}
-	
-	private static ConcurrentHashMap<Xid, SubordinateTransaction> _transactions = new ConcurrentHashMap<Xid, SubordinateTransaction>();
-	
+
+	private SubordinateTransaction addImportedTransaction(
+			TransactionImple importedTransaction, Xid importedXid, Xid xid, int timeout)
+	{
+		// We need to store the imported transaction in a volatile field holder so that it can be shared between threads
+		AtomicReference<SubordinateTransaction> holder = new AtomicReference<>();
+		AtomicReference<SubordinateTransaction> existing;
+
+		if ((existing = _transactions.putIfAbsent(importedXid, holder)) != null) {
+			holder = existing;
+		}
+
+		SubordinateTransaction txn = holder.get();
+
+		if (txn == null) {
+			// retry the get under a lock - this double check idiom is safe because AtomicReference is effectively
+			// a volatile so can be concurrently accessed by multiple threads
+			synchronized (holder) {
+				txn = holder.get();
+				if (txn == null) {
+					// now it's safe to add the imported transaction to the holder
+					if (importedTransaction != null) {
+						importedTransaction.recordTransaction();
+						txn = importedTransaction;
+					} else {
+						txn = new TransactionImple(timeout, xid);
+					}
+
+					holder.set(txn);
+				}
+			}
+		}
+
+		return txn;
+	}
+
+	private static ConcurrentHashMap<Xid, AtomicReference<SubordinateTransaction>> _transactions = new ConcurrentHashMap<>();
 }",2016-07-22T21:43:20Z,354
"@@ -38,6 +38,7 @@
 import javax.transaction.xa.XAException;
 import javax.transaction.xa.XAResource;
 
+import com.arjuna.ats.internal.jta.transaction.arjunacore.jca.SubordinateTransaction;
 import org.junit.Test;
 
 import com.arjuna.ats.arjuna.common.Uid;
@@ -47,6 +48,14 @@
 import com.arjuna.ats.jta.xa.XidImple;
 import com.hp.mwtests.ts.jta.jts.common.TestBase;
 
+import java.util.ArrayList;
+import java.util.concurrent.CompletableFuture;
+import java.util.concurrent.CyclicBarrier;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.function.Supplier;
+
 public class XATerminatorImpleUnitTest extends TestBase
 {
     @Test
@@ -220,4 +229,62 @@ public void testNull () throws Exception
         {
         }
     }
+
+    @Test
+    public void testConcurrentImport () throws Exception {
+        AtomicInteger completionCount = new AtomicInteger(0);
+        XidImple xid = new XidImple(new Uid());
+
+        final int TASK_COUNT = 400;
+        final int THREAD_COUNT = 200;
+        final CyclicBarrier gate = new CyclicBarrier(THREAD_COUNT + 1);
+
+        ArrayList<CompletableFuture<SubordinateTransaction>> futures = new ArrayList<>();
+        ExecutorService executor = Executors.newFixedThreadPool(THREAD_COUNT);
+
+        for (int i = 0; i < TASK_COUNT; i++)
+            futures.add(doAsync(completionCount, gate, i < THREAD_COUNT, executor, xid));
+
+        gate.await();
+
+        SubordinateTransaction prevStx = null;
+
+        for (CompletableFuture<SubordinateTransaction> future : futures) {
+            SubordinateTransaction stx = future.get();
+            if (stx == null) {
+                fail(""transaction import returned null for future "");
+            } else {
+                if (prevStx != null)
+                    assertEquals(""transaction import for same xid returned a different instance"", stx, prevStx);
+                else
+                    prevStx = stx;
+            }
+        }
+
+        assertEquals(""some transaction import futures did not complete"", completionCount.get(), TASK_COUNT);
+    }
+
+    /*
+     * import a transaction asynchronously to maximise the opportunity for concurrency errors in TransactionImporterImple
+     */
+    private CompletableFuture<SubordinateTransaction> doAsync(
+            final AtomicInteger completionCount, final CyclicBarrier gate, final boolean wait, ExecutorService executor, final XidImple xid) {
+        return CompletableFuture.supplyAsync(new Supplier<SubordinateTransaction>() {
+            @Override
+            public SubordinateTransaction get() {
+                try {
+                    if (wait)
+                        gate.await();
+
+                    TransactionImporter imp = SubordinationManager.getTransactionImporter();
+                    SubordinateTransaction stx = imp.importTransaction(xid);
+                    completionCount.incrementAndGet();
+
+                    return stx;
+                } catch (Exception e) {
+                    throw new AssertionError(e);
+                }
+            }
+        }, executor);
+    }
 }",2016-07-22T21:43:20Z,355
"@@ -24,7 +24,6 @@
 import static org.junit.Assert.assertTrue;
 import static org.junit.Assert.fail;
 
-import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.ArrayList;
@@ -47,9 +46,8 @@
 import org.jboss.byteman.contrib.bmunit.BMScript;
 import org.jboss.byteman.contrib.bmunit.BMUnitRunner;
 import org.jboss.byteman.rule.exception.ExecuteException;
-import org.jfree.io.IOUtils;
-import org.junit.AfterClass;
-import org.junit.BeforeClass;
+import org.junit.After;
+import org.junit.Before;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 
@@ -61,47 +59,57 @@
 
 @RunWith(BMUnitRunner.class)
 public class SimpleIsolatedServers {
-	private static String[] serverNodeNames = new String[] { ""1000"", ""2000"", ""3000"" };
-	private static int[] serverPortOffsets = new int[] { 1000, 2000, 3000 };
-	private static String[][] clusterBuddies = new String[][] { new String[] { ""2000"", ""3000"" }, new String[] { ""1000"", ""3000"" },
-			new String[] { ""1000"", ""2000"" } };
-	private static LookupProvider lookupProvider = LookupProvider.getInstance();
-	private static LocalServer[] localServers = new LocalServer[serverNodeNames.length];
-	private static CompletionCounter completionCounter = CompletionCounter.getInstance();
-
-	@BeforeClass
-	public static void setup() throws SecurityException, NoSuchMethodException, InstantiationException, IllegalAccessException, ClassNotFoundException,
+	private String[] serverNodeNames = new String[] { ""1000"", ""2000"", ""3000""};
+	private int[] serverPortOffsets = new int[] { 1000, 2000, 3000 };
+	private String[][] clusterBuddies = new String[serverNodeNames.length][];
+	private LookupProvider lookupProvider = LookupProvider.getInstance();
+	private LocalServer[] localServers = new LocalServer[serverNodeNames.length];
+	private CompletionCounter completionCounter = CompletionCounter.getInstance();
+	
+	@Before
+	public void setup() throws SecurityException, NoSuchMethodException, InstantiationException, IllegalAccessException, ClassNotFoundException,
 			CoreEnvironmentBeanException, IOException, IllegalArgumentException, NoSuchFieldException {
-		for (int i = 0; i < serverNodeNames.length; i++) {
-			boot(i);
-		}
-	}
 
-	public static boolean deleteDir(File dir) {
-		if (dir.isDirectory()) {
-			String[] children = dir.list();
-			for (int i = 0; i < children.length; i++) {
-				boolean success = deleteDir(new File(dir, children[i]));
-				if (!success) {
-					return false;
+		for (int i = 0; i < serverNodeNames.length; i++) {
+			List<String> otherNodes = new ArrayList<String>();
+			for (int j = 0; j < serverNodeNames.length; j++) {
+				if (j != i) {
+					otherNodes.add(serverNodeNames[j]);
 				}
 			}
+			clusterBuddies[i] = otherNodes.toArray(new String[0]);
+		}
+		
+		for (int i = 0; i < serverNodeNames.length; i++) {
+			boot(i);
 		}
-
-		// The directory is now empty so delete it
-		return dir.delete();
 	}
 
-	@AfterClass
-	public static void tearDown() throws Exception {
+//	public static boolean deleteDir(File dir) {
+//		if (dir.isDirectory()) {
+//			String[] children = dir.list();
+//			for (int i = 0; i < children.length; i++) {
+//				boolean success = deleteDir(new File(dir, children[i]));
+//				if (!success) {
+//					return false;
+//				}
+//			}
+//		}
+//
+//		// The directory is now empty so delete it
+//		return dir.delete();
+//	}
+
+	@After
+	public void tearDown() throws Exception {
 		// Enable it if you need to ensure the folder is empty for some reason
-		if (false) {
-			File file = new File(System.getProperty(""user.dir"") + ""/distributedjta-tests/"");
-			boolean delete = !file.exists() ? true : deleteDir(file);
-			if (!delete) {
-				throw new Exception(""Could not delete folder"");
-			}
-		}
+//		if (false) {
+//			File file = new File(System.getProperty(""user.dir"") + ""/distributedjta-tests/"");
+//			boolean delete = !file.exists() ? true : deleteDir(file);
+//			if (!delete) {
+//				throw new Exception(""Could not delete folder"");
+//			}
+//		}
 		for (int i = 0; i < localServers.length; i++) {
 			ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
 			Thread.currentThread().setContextClassLoader(localServers[i].getClassLoader());
@@ -112,7 +120,7 @@ public static void tearDown() throws Exception {
 		lookupProvider.clear();
 	}
 
-	private static void reboot(String serverName) throws Exception {
+	private void reboot(String serverName) throws Exception {
 		// int index = (Integer.valueOf(serverName) / 1000) - 1;
 		for (int i = 0; i < localServers.length; i++) {
 			if (localServers[i].getNodeName().equals(serverName)) {
@@ -128,7 +136,7 @@ private static void reboot(String serverName) throws Exception {
 
 	}
 
-	private static void boot(int index) throws SecurityException, NoSuchMethodException, InstantiationException, IllegalAccessException,
+	private void boot(int index) throws SecurityException, NoSuchMethodException, InstantiationException, IllegalAccessException,
 			ClassNotFoundException, IllegalArgumentException, CoreEnvironmentBeanException, IOException, NoSuchFieldException {
 		ClassLoader contextClassLoader = Thread.currentThread().getContextClassLoader();
 		IsolatableServersClassLoader classLoaderForTransactionManager = new IsolatableServersClassLoader(null, SimpleIsolatedServers.class.getPackage()
@@ -158,13 +166,12 @@ private static void boot(int index) throws SecurityException, NoSuchMethodExcept
 	@BMScript(""leave-subordinate-orphan"")
 	public void testSimultaneousRecover() throws Exception {
 		System.out.println(""testSimultaneousRecover"");
-		tearDown();
-		setup();
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
 		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 0);
-		final CompletionCountLock phase2CommitAborted = new CompletionCountLock();
+        final CompletionCountLock phase2CommitAborted = new CompletionCountLock();
+		synchronized (phase2CommitAborted) {	        
 		{
 			Thread thread = new Thread(new Runnable() {
 				public void run() {
@@ -189,6 +196,9 @@ public void run() {
 						originalServer.removeRootTransaction(currentXid);
 						transactionManager.commit();
 						Thread.currentThread().setContextClassLoader(classLoader);
+                        synchronized (phase2CommitAborted) {
+                            phase2CommitAborted.notify();
+                        }
 					} catch (ExecuteException e) {
 						System.err.println(""Should be a thread death but cest la vie"");
 						synchronized (phase2CommitAborted) {
@@ -237,6 +247,9 @@ public void run() {
 						originalServer.removeRootTransaction(currentXid);
 						transactionManager.commit();
 						Thread.currentThread().setContextClassLoader(classLoader);
+                        synchronized (phase2CommitAborted) {
+                            phase2CommitAborted.notify();
+                        }
 					} catch (ExecuteException e) {
 						System.err.println(""Should be a thread death but cest la vie"");
 						synchronized (phase2CommitAborted) {
@@ -260,12 +273,11 @@ public void run() {
 			}, ""Orphan-creator"");
 			thread.start();
 		}
-		synchronized (phase2CommitAborted) {
 		    int waitedCount = 0;
-			while (phase2CommitAborted.getCount() < 2) {
+			while (waitedCount < 2) {
 				phase2CommitAborted.wait(50000);
 				waitedCount++;
-	            if (waitedCount > 2 && phase2CommitAborted.getCount() < 2) {
+	            if (waitedCount == 2 && phase2CommitAborted.getCount() < 2) {
 	                fail(""Servers were not aborted"");
 	            }           
 			}
@@ -305,7 +317,12 @@ public void run() {
 				processBuilder.redirectErrorStream(true);
 				Process process = processBuilder.start();       
 				InputStream inputStream = process.getInputStream();       
-				IOUtils.getInstance().copyStreams(inputStream, System.out);
+				final byte[] bytes = new byte[4096];
+				int bytesRead = inputStream.read(bytes);
+				while (bytesRead > -1) {
+					System.out.write(bytes, 0, bytesRead);
+					bytesRead = inputStream.read(bytes);
+				}
 			}
 		}
 
@@ -326,8 +343,6 @@ public void run() {
 	@BMScript(""leaveorphan"")
 	public void testTwoPhaseXAResourceOrphan() throws Exception {
 		System.out.println(""testTwoPhaseXAResourceOrphan"");
-		tearDown();
-		setup();
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
 		final CompletionCountLock phase2CommitAborted = new CompletionCountLock();
@@ -407,8 +422,6 @@ public void run() {
 	@BMScript(""leaveorphan"")
 	public void testOnePhaseXAResourceOrphan() throws Exception {
 		System.out.println(""testOnePhaseXAResourceOrphan"");
-		tearDown();
-		setup();
 		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
@@ -487,11 +500,9 @@ public void run() {
 	 * can be recovered
 	 */
 	@Test
-	@BMScript(""leave-subordinate-orphan"")
+	@BMScript(""leave-subordinate-orphan2"")
 	public void testOnePhaseSubordinateOrphan() throws Exception {
 		System.out.println(""testOnePhaseSubordinateOrphan"");
-		tearDown();
-		setup();
 		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
@@ -519,6 +530,9 @@ public void run() {
 					originalServer.removeRootTransaction(currentXid);
 					transactionManager.commit();
 					Thread.currentThread().setContextClassLoader(classLoader);
+                    synchronized (phase2CommitAborted) {
+                        phase2CommitAborted.notify();
+                    }
 				} catch (ExecuteException e) {
 					System.err.println(""Should be a thread death but cest la vie"");
 					synchronized (phase2CommitAborted) {
@@ -581,9 +595,6 @@ public void run() {
 	@BMScript(""leaverunningorphan"")
 	public void testRecoverInflightTransaction() throws Exception {
 		System.out.println(""testRecoverInflightTransaction"");
-		tearDown();
-		setup();
-
 		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
 		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
@@ -660,20 +671,16 @@ public void run() {
 	@BMScript(""fail2pc"")
 	public void testRecovery() throws Exception {
 		System.out.println(""testRecovery"");
-		tearDown();
-		setup();
-		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 0);
-		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""3000""), completionCounter.getRollbackCount(""3000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 0);
+		for (String nodeName: serverNodeNames) {
+			assertTrue("""" + completionCounter.getCommitCount(nodeName), completionCounter.getCommitCount(nodeName) == 0);
+			assertTrue("""" + completionCounter.getRollbackCount(nodeName), completionCounter.getRollbackCount(nodeName) == 0);
+		}
+		
 		final CompletionCountLock phase2CommitAborted = new CompletionCountLock();
 		Thread thread = new Thread(new Runnable() {
 			public void run() {
 				int startingTimeout = 0;
-				List<String> nodesToFlowTo = new LinkedList<String>(Arrays.asList(new String[] { ""1000"", ""2000"", ""3000"", ""2000"", ""1000"", ""2000"", ""3000"",
-						""1000"", ""3000"" }));
+				List<String> nodesToFlowTo = new LinkedList<String>(Arrays.asList(serverNodeNames));
 				try {
 					doRecursiveTransactionalWork(startingTimeout, nodesToFlowTo, true, false);
 				} catch (ExecuteException e) {
@@ -690,33 +697,89 @@ public void run() {
 		});
 		thread.start();
 		synchronized (phase2CommitAborted) {
-			if (phase2CommitAborted.getCount() < 1) {
+			int count = 0;
+			while (phase2CommitAborted.getCount() != 1 && count < 20) {
 				phase2CommitAborted.wait(50000);
+				if (phase2CommitAborted.getCount() != 1) {
+					count++;
+				} else {
+		            break;
+				}
 			}
             if (phase2CommitAborted.getCount() < 1) {
                 fail(""Servers were not aborted"");
             }
 		}
 
-		reboot(""1000"");
-		reboot(""2000"");
-		reboot(""3000"");
+		for (String nodeName: serverNodeNames) {
+			reboot(nodeName);
+		}
 
 		getLocalServer(""1000"").doRecoveryManagerScan(false);
 
-		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 4);
-		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 4);
-		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 3);
-		assertTrue("""" + completionCounter.getRollbackCount(""3000""), completionCounter.getRollbackCount(""3000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""2000""), completionCounter.getRollbackCount(""2000"") == 0);
-		assertTrue("""" + completionCounter.getRollbackCount(""1000""), completionCounter.getRollbackCount(""1000"") == 0);
+		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 2);
+		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 2);
+		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 1);
+		for (String nodeName: serverNodeNames) {
+			assertTrue("""" + completionCounter.getRollbackCount(nodeName), completionCounter.getRollbackCount(nodeName) == 0);
+		}
+	}
+
+	/**
+	 * Top down recovery of a prepared transaction
+	 */
+	@Test
+	public void testRecovery2() throws Exception {
+		System.out.println(""testRecovery"");
+		for (String nodeName: serverNodeNames) {
+			assertTrue("""" + completionCounter.getCommitCount(nodeName), completionCounter.getCommitCount(nodeName) == 0);
+			assertTrue("""" + completionCounter.getRollbackCount(nodeName), completionCounter.getRollbackCount(nodeName) == 0);
+		}
+		
+		final CompletionCountLock errors = new CompletionCountLock();
+        synchronized (errors) {
+		Thread thread = new Thread(new Runnable() {
+			public void run() {
+                    int startingTimeout = 0;
+                    List<String> nodesToFlowTo = new LinkedList<String>(Arrays.asList(serverNodeNames));
+                    synchronized (errors) {
+
+                        try {
+                            doRecursiveTransactionalWork2(startingTimeout, nodesToFlowTo, true, false);
+                        } catch (Throwable e) {
+                            e.printStackTrace();
+                            errors.incrementCount();
+
+                        }
+                        errors.notify();
+                    }
+			}
+		});
+		thread.start();
+		
+		    errors.wait();
+		    if (errors.getCount() > 0) {
+		        fail(""Unexpected errors"");
+		    }
+		}
+
+        reboot(""2000"");
+        
+        getLocalServer(""3000"").doRecoveryManagerScan(true);
+		getLocalServer(""2000"").doRecoveryManagerScan(true);
+		getLocalServer(""1000"").doRecoveryManagerScan(false);
+
+		assertTrue("""" + completionCounter.getCommitCount(""1000""), completionCounter.getCommitCount(""1000"") == 1);
+		assertTrue("""" + completionCounter.getCommitCount(""2000""), completionCounter.getCommitCount(""2000"") == 2);
+		assertTrue("""" + completionCounter.getCommitCount(""3000""), completionCounter.getCommitCount(""3000"") == 1);
+		for (String nodeName: serverNodeNames) {
+			assertTrue("""" + completionCounter.getRollbackCount(nodeName), completionCounter.getRollbackCount(nodeName) == 0);
+		}
 	}
 
 	@Test
 	public void testOnePhaseCommit() throws Exception {
 		System.out.println(""testOnePhaseCommit"");
-		tearDown();
-		setup();
 		LocalServer originalServer = getLocalServer(""1000"");
 		ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
 		Thread.currentThread().setContextClassLoader(originalServer.getClassLoader());
@@ -746,8 +809,6 @@ public void testOnePhaseCommit() throws Exception {
 	@Test
 	public void testUnPreparedRollback() throws Exception {
 		System.out.println(""testUnPreparedRollback"");
-		tearDown();
-		setup();
 		LocalServer originalServer = getLocalServer(""1000"");
 		ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
 		Thread.currentThread().setContextClassLoader(originalServer.getClassLoader());
@@ -861,7 +922,7 @@ public void testMigrateTransactionSubordinateTimeout() throws Exception {
 		XAResource proxyXAResource = originalServer.generateProxyXAResource(""2000"", migratedXid);
 		originalTransaction.enlistResource(proxyXAResource);
 		originalServer.removeRootTransaction(currentXid);
-		Thread.currentThread().sleep((subordinateTimeout + 1) * 1000);
+		Thread.sleep((subordinateTimeout + 2) * 1000);
 		try {
 			transactionManager.commit();
 			fail(""Did not rollback"");
@@ -933,9 +994,6 @@ public void testMigrateTransactionParentTimeout() throws Exception {
 	}
 
 	private void doRecursiveTransactionalWork(int startingTimeout, List<String> nodesToFlowTo, boolean commit, boolean rollbackOnlyOnLastNode) throws Exception {
-		tearDown();
-		setup();
-
 		List<String> uniqueServers = new ArrayList<String>();
 		Iterator<String> iterator = nodesToFlowTo.iterator();
 		while (iterator.hasNext()) {
@@ -997,6 +1055,68 @@ private void doRecursiveTransactionalWork(int startingTimeout, List<String> node
 		Thread.currentThread().setContextClassLoader(classLoader);
 	}
 
+	private void doRecursiveTransactionalWork2(int startingTimeout, List<String> nodesToFlowTo, boolean commit, boolean rollbackOnlyOnLastNode) throws Exception {
+		List<String> uniqueServers = new ArrayList<String>();
+		Iterator<String> iterator = nodesToFlowTo.iterator();
+		while (iterator.hasNext()) {
+			String intern = iterator.next().intern();
+			if (!uniqueServers.contains(intern)) {
+				uniqueServers.add(intern);
+			}
+		}
+		// Start out at the first server
+		int totalCompletionCount = nodesToFlowTo.size() + uniqueServers.size() - 1;
+		String startingServer = nodesToFlowTo.get(0);
+		LocalServer originalServer = getLocalServer(startingServer);
+		ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
+		Thread.currentThread().setContextClassLoader(originalServer.getClassLoader());
+		TransactionManager transactionManager = originalServer.getTransactionManager();
+		transactionManager.setTransactionTimeout(startingTimeout);
+		transactionManager.begin();
+		Transaction transaction = transactionManager.getTransaction();
+		int remainingTimeout = (int) (originalServer.getTimeLeftBeforeTransactionTimeout() / 1000);
+		Xid currentXid = originalServer.getCurrentXid();
+		originalServer.storeRootTransaction();
+		transactionManager.suspend();
+		DataReturnedFromRemoteServer dataReturnedFromRemoteServer = performTransactionalWork2(nodesToFlowTo, remainingTimeout, currentXid, 1, true,
+				rollbackOnlyOnLastNode);
+		transactionManager.resume(transaction);
+		originalServer.removeRootTransaction(currentXid);
+
+		// Align the local state with the returning state of the
+		// transaction
+		// from the subordinate
+		switch (dataReturnedFromRemoteServer.getTransactionState()) {
+		case Status.STATUS_MARKED_ROLLBACK:
+		case Status.STATUS_ROLLEDBACK:
+		case Status.STATUS_ROLLING_BACK:
+			switch (transaction.getStatus()) {
+			case Status.STATUS_MARKED_ROLLBACK:
+			case Status.STATUS_ROLLEDBACK:
+			case Status.STATUS_ROLLING_BACK:
+				transaction.setRollbackOnly();
+			}
+			break;
+		default:
+			break;
+		}
+
+		if (commit) {
+			try {
+				transactionManager.commit();
+				assertTrue("""" + completionCounter.getTotalCommitCount(), completionCounter.getTotalCommitCount() == 2);
+			} catch (RollbackException e) {
+				if (!rollbackOnlyOnLastNode) {
+					assertTrue(completionCounter.getTotalRollbackCount() == totalCompletionCount);
+				}
+			}
+		} else {
+			transactionManager.rollback();
+			assertTrue(completionCounter.getTotalRollbackCount() == totalCompletionCount);
+		}
+		Thread.currentThread().setContextClassLoader(classLoader);
+	}
+	
 	private DataReturnedFromRemoteServer performTransactionalWork(List<String> nodesToFlowTo, int remainingTimeout, Xid toMigrate,
 			int numberOfResourcesToRegister, boolean addSynchronization, boolean rollbackOnlyOnLastNode) throws RollbackException, IllegalStateException,
 			XAException, SystemException, NotSupportedException, IOException {
@@ -1090,7 +1210,117 @@ private DataReturnedFromRemoteServer performTransactionalWork(List<String> nodes
 		return new DataReturnedFromRemoteServer(requiresProxyAtPreviousServer, transactionState);
 	}
 
-	private static LocalServer getLocalServer(String jndiName) {
+	private DataReturnedFromRemoteServer performTransactionalWork2(List<String> nodesToFlowTo, int remainingTimeout, Xid toMigrate,
+			int numberOfResourcesToRegister, boolean addSynchronization, boolean rollbackOnlyOnLastNode) throws RollbackException, IllegalStateException,
+			XAException, SystemException, NotSupportedException, IOException {
+		String currentServerName = nodesToFlowTo.remove(0);
+		LocalServer currentServer = getLocalServer(currentServerName);
+
+		ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
+		Thread.currentThread().setContextClassLoader(currentServer.getClassLoader());
+
+		Xid requiresProxyAtPreviousServer = currentServer.locateOrImportTransactionThenResumeIt(remainingTimeout, toMigrate);
+
+		// Perform work on the migrated transaction
+		
+		if (!currentServerName.equals(""1000""))
+		{
+			TransactionManager transactionManager = currentServer.getTransactionManager();
+			Transaction transaction = transactionManager.getTransaction();
+			if (addSynchronization) {
+				transaction.registerSynchronization(new TestSynchronization(currentServer.getNodeName()));
+			}
+			for (int i = 0; i < numberOfResourcesToRegister; i++) {
+				transaction.enlistResource(new TestResource(currentServer.getNodeName(), false, currentServerName.equals(""2000"")));
+			}
+
+			if (rollbackOnlyOnLastNode && nodesToFlowTo.isEmpty()) {
+				transaction.setRollbackOnly();
+			}
+		}
+
+		if (!nodesToFlowTo.isEmpty()) {
+
+			TransactionManager transactionManager = currentServer.getTransactionManager();
+			Transaction transaction = transactionManager.getTransaction();
+			int status = transaction.getStatus();
+
+			// Only propagate active transactions - this may be inactive through
+			// user code (rollback/setRollbackOnly) or it may be inactive due to
+			// the transaction reaper
+			if (status == Status.STATUS_ACTIVE) {
+				String nextServerNodeName = nodesToFlowTo.get(0);
+
+				// FLOW THE TRANSACTION
+				remainingTimeout = (int) (currentServer.getTimeLeftBeforeTransactionTimeout() / 1000);
+
+				// STORE AND SUSPEND THE TRANSACTION
+				Xid currentXid = currentServer.getCurrentXid();
+				transactionManager.suspend();
+
+				DataReturnedFromRemoteServer dataReturnedFromRemoteServer = performTransactionalWork2(nodesToFlowTo, remainingTimeout, currentXid,
+						numberOfResourcesToRegister, addSynchronization, rollbackOnlyOnLastNode);
+				transactionManager.resume(transaction);
+
+				// Create a proxy for the new server if necessary, this can
+				// orphan
+				// the remote server but XA recovery will handle that on the
+				// remote
+				// server
+				// The alternative is to always create a proxy but this is a
+				// performance drain and will result in multiple subordinate
+				// transactions and performance issues
+				if (dataReturnedFromRemoteServer.getProxyRequired() != null) {
+					XAResource proxyXAResource = currentServer.generateProxyXAResource(nextServerNodeName, dataReturnedFromRemoteServer.getProxyRequired(), true);
+					transaction.enlistResource(proxyXAResource);
+					transaction.registerSynchronization(currentServer.generateProxySynchronization(nextServerNodeName, toMigrate));
+				}
+				
+				if (currentServerName.equals(""1000""))
+		        {
+		            if (addSynchronization) {
+		                transaction.registerSynchronization(new TestSynchronization(currentServer.getNodeName()));
+		            }
+		            for (int i = 0; i < numberOfResourcesToRegister; i++) {
+		                transaction.enlistResource(new TestResource(currentServer.getNodeName(), false));
+		            }
+
+		            if (rollbackOnlyOnLastNode && nodesToFlowTo.isEmpty()) {
+		                transaction.setRollbackOnly();
+		            }
+		        }
+
+
+				// Align the local state with the returning state of the
+				// transaction
+				// from the subordinate
+				switch (dataReturnedFromRemoteServer.getTransactionState()) {
+				case Status.STATUS_MARKED_ROLLBACK:
+				case Status.STATUS_ROLLEDBACK:
+				case Status.STATUS_ROLLING_BACK:
+					switch (transaction.getStatus()) {
+					case Status.STATUS_MARKED_ROLLBACK:
+					case Status.STATUS_ROLLEDBACK:
+					case Status.STATUS_ROLLING_BACK:
+						transaction.setRollbackOnly();
+					}
+					break;
+				default:
+					break;
+				}
+			}
+		}
+		TransactionManager transactionManager = currentServer.getTransactionManager();
+		int transactionState = transactionManager.getStatus();
+		// SUSPEND THE TRANSACTION WHEN YOU ARE READY TO RETURN TO YOUR CALLER
+		transactionManager.suspend();
+		// Return to the previous caller back over the transport/classloader
+		// boundary in this case
+		Thread.currentThread().setContextClassLoader(classLoader);
+		return new DataReturnedFromRemoteServer(requiresProxyAtPreviousServer, transactionState);
+	}
+
+	private LocalServer getLocalServer(String jndiName) {
 		int index = (Integer.valueOf(jndiName) / 1000) - 1;
 		return localServers[index];
 	}",2015-12-09T23:29:45Z,16
"@@ -51,6 +51,8 @@ public class TestResource implements XAResource {
 
 	private boolean scanning;
 
+    private transient boolean fatalCommit;
+
 	public TestResource(String serverId, boolean readonly) {
 		this.completionCounter = CompletionCounter.getInstance();
 		this.serverId = serverId;
@@ -120,7 +122,12 @@ public String toString() {
 		fis.close();
 	}
 
-	/**
+	public TestResource(String nodeName, boolean b, boolean fatalCommit) {
+       this(nodeName, b);
+       this.fatalCommit = true;
+    }
+
+    /**
 	 * This class declares that it throws an Error *purely for byteman* so that
 	 * we can crash the resource during this method:
 	 * https://issues.jboss.org/browse/BYTEMAN-156
@@ -167,6 +174,10 @@ public synchronized void commit(Xid id, boolean onePhase) throws XAException {
 			}
 		}
 		this.xid = null;
+		
+		if (fatalCommit) {
+		    throw new Error();
+		}
 	}
 
 	public synchronized void rollback(Xid xid) throws XAException {",2015-12-09T23:29:45Z,356
"@@ -32,27 +32,31 @@
 
 public class TestResourceRecovery implements XAResourceRecovery {
 
-	private List<TestResource> resources = new ArrayList<TestResource>();
 	private String nodeName;
 
-	public TestResourceRecovery(String nodeName) throws IOException {
+	public TestResourceRecovery(String nodeName) {
 		this.nodeName = nodeName;
 		System.out.println(""["" + Thread.currentThread().getName() + ""] TestResourceRecovery ("" + nodeName + "")"");
-		File file = new File(System.getProperty(""user.dir"") + ""/distributedjta-tests/TestResource/"" + nodeName + ""/"");
-		if (file.exists() && file.isDirectory()) {
-			File[] listFiles = file.listFiles();
-			for (int i = 0; i < listFiles.length; i++) {
-				File currentFile = listFiles[i];
-				if (currentFile.getAbsolutePath().endsWith(""_"")) {
-					resources.add(new TestResource(nodeName, currentFile));
-					System.out.println(""["" + Thread.currentThread().getName() + ""] TestResourceRecovery ("" + nodeName + "") Added TestResource: "" + currentFile.getName());
-				}
-			}
-		}
 	}
 
 	@Override
-	public XAResource[] getXAResources() {
+	public XAResource[] getXAResources() throws RuntimeException {
+	    List<TestResource> resources = new ArrayList<TestResource>();
+        File file = new File(System.getProperty(""user.dir"") + ""/distributedjta-tests/TestResource/"" + nodeName + ""/"");
+        if (file.exists() && file.isDirectory()) {
+            File[] listFiles = file.listFiles();
+            for (int i = 0; i < listFiles.length; i++) {
+                File currentFile = listFiles[i];
+                if (currentFile.getAbsolutePath().endsWith(""_"")) {
+                    try {
+                        resources.add(new TestResource(nodeName, currentFile));
+                    } catch (IOException e) {
+                        throw new RuntimeException (e);
+                    }
+                    System.out.println(""["" + Thread.currentThread().getName() + ""] TestResourceRecovery ("" + nodeName + "") Added TestResource: "" + currentFile.getName());
+                }
+            }
+        }
 		System.out.println(""["" + Thread.currentThread().getName() + ""] TestResourceRecovery ("" + nodeName + "") returning list of TestResources of length: "" + resources.size());
 		return resources.toArray(new XAResource[] {});
 	}",2015-12-09T23:29:45Z,357
"@@ -66,4 +66,6 @@ public Xid locateOrImportTransactionThenResumeIt(int remainingTimeout, Xid toImp
 	public Xid getCurrentXid() throws SystemException;
 
 	public void shutdown() throws Exception;
+
+    public XAResource generateProxyXAResource(String nextServerNodeName, Xid proxyRequired, boolean handleError) throws SystemException, IOException;
 }",2015-12-09T23:29:45Z,358
"@@ -50,6 +50,7 @@ public class ProxyXAResource implements XAResource, XAResourceWrapper, Serializa
 	private transient boolean nonerecovered;
 
 	private Xid migratedXid;
+    private transient boolean handleError;
 
 	/**
 	 * Create a new proxy to the remote server.
@@ -59,11 +60,12 @@ public class ProxyXAResource implements XAResource, XAResourceWrapper, Serializa
 	 * @param localServerName
 	 * @param remoteServerName
 	 */
-	public ProxyXAResource(String localServerName, String remoteServerName, Xid migratedXid) {
+	public ProxyXAResource(String localServerName, String remoteServerName, Xid migratedXid, boolean handleError) {
 		this.localServerName = localServerName;
 		this.remoteServerName = remoteServerName;
 		this.migratedXid = migratedXid;
 		this.nonerecovered = true;
+		this.handleError = handleError;
 	}
 
 	/**
@@ -113,7 +115,17 @@ public void commit(Xid xid, boolean onePhase) throws XAException {
 		System.out.println(""["" + Thread.currentThread().getName() + ""] ProxyXAResource ("" + localServerName + "":"" + remoteServerName + "") XA_COMMIT  ["" + xid + ""]"");
 
 		Xid toPropagate = migratedXid != null ? migratedXid : xid;
-		LookupProvider.getInstance().lookup(remoteServerName).commit(toPropagate, onePhase, !nonerecovered);
+
+        
+        try {
+            LookupProvider.getInstance().lookup(remoteServerName).commit(toPropagate, onePhase, !nonerecovered);
+        } catch (Error e) {
+            if (handleError) {
+                throw new RuntimeException();
+            } else {
+                throw e;
+            }
+        }
 		System.out.println(""["" + Thread.currentThread().getName() + ""] ProxyXAResource ("" + localServerName + "":"" + remoteServerName + "") XA_COMMITED"");
 
 		CompletionCounter.getInstance().incrementCommit(localServerName);",2015-12-09T23:29:45Z,359
"@@ -107,7 +107,7 @@ public void initialise(LookupProvider lookupProvider, String nodeName, int portO
 		coordinatorEnvironmentBean.setDefaultTimeout(0);
 
 		ObjectStoreEnvironmentBean actionStoreObjectStoreEnvironmentBean = com.arjuna.common.internal.util.propertyservice.BeanPopulator.getNamedInstance(
-				com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean.class, ""default"");
+				com.arjuna.ats.arjuna.common.ObjectStoreEnvironmentBean.class, null);
 		actionStoreObjectStoreEnvironmentBean.setObjectStoreDir(System.getProperty(""user.dir"") + ""/distributedjta-tests/tx-object-store/"" + nodeName);
 
 		ObjectStoreEnvironmentBean stateStoreObjectStoreEnvironmentBean = com.arjuna.common.internal.util.propertyservice.BeanPopulator.getNamedInstance(
@@ -267,8 +267,13 @@ public void removeRootTransaction(Xid toMigrate) {
 
 	@Override
 	public ProxyXAResource generateProxyXAResource(String remoteServerName, Xid migratedXid) throws SystemException, IOException {
-		return new ProxyXAResource(nodeName, remoteServerName, migratedXid);
+		return new ProxyXAResource(nodeName, remoteServerName, migratedXid, false);
 	}
+	
+	@Override
+    public ProxyXAResource generateProxyXAResource(String remoteServerName, Xid migratedXid, boolean handleError) throws SystemException, IOException {
+        return new ProxyXAResource(nodeName, remoteServerName, migratedXid, handleError);
+    }
 
 	@Override
 	public Synchronization generateProxySynchronization(String remoteServerName, Xid toRegisterAgainst) {",2015-12-09T23:29:45Z,360
"@@ -9,8 +9,8 @@ CLASS  com.arjuna.ats.arjuna.coordinator.BasicAction
 METHOD phase2Commit
 AT ENTRY
 BIND NOTHING
-IF readCounter(""phase2commit"") == 0
+IF readCounter(""phase2commit2"") == 0
 	DO debug(""Called""),
-	incrementCounter(""phase2commit"");
+	incrementCounter(""phase2commit2"");
    	Thread.currentThread().stop()
 ENDRULE",2015-12-09T23:29:45Z,361
"@@ -11,6 +11,8 @@ CLASS  com.arjuna.ats.arjuna.coordinator.BasicAction
 METHOD phase2Commit
 AT ENTRY
 BIND NOTHING
-IF TRUE
-	DO throw new Error()
-ENDRULE
\ No newline at end of file
+IF readCounter(""phase2commit"") < 2
+	DO debug(""Called""),
+	incrementCounter(""phase2commit"");
+	throw new Error()
+ENDRULE",2015-12-09T23:29:45Z,362
"@@ -0,0 +1,18 @@
+########################################################################
+#
+# byteman script used to ensure that tests can synchronize with various
+# actions performed by the recovery code
+
+
+
+#########################################################################
+RULE Fail phase2Commit
+CLASS  com.arjuna.ats.arjuna.coordinator.BasicAction
+METHOD phase2Commit
+AT ENTRY
+BIND NOTHING
+IF readCounter(""leave-subordinate-orphan2"") == 0
+	DO debug(""Called""),
+	incrementCounter(""leave-subordinate-orphan2"");
+	throw new Error()
+ENDRULE",2015-12-09T23:29:45Z,363
